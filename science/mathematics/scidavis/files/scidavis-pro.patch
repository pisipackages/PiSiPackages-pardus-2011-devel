--- scidavis-0.2.4.org/scidavis/scidavis.pro	2009-10-06 23:24:55.000000000 +0800
+++ scidavis-0.2.4/scidavis/scidavis.pro	2010-03-14 11:53:33.744272042 +0800
@@ -30,23 +30,23 @@
 }
 
 ### 64 Linux only suffix
-linux-g++-64: libsuff = 64 
+#linux-g++-64: libsuff = 64 
 
 ### where to install
 unix: INSTALLBASE = /usr           # this is what is called "prefix" when using GNU autotools
 win32: INSTALLBASE = c:/scidavis
 unix: target.path = "$$INSTALLBASE/bin"               # where to install the binary on Linux/MacOS X
 win32: target.path = "$$INSTALLBASE"                  # where to install the exe on Windows
-unix: documentation.path = "$$INSTALLBASE/share/doc/scidavis"      # where to install the documentation files on Linux/MacOS X
+unix: documentation.path = "$$SCIDOCDIR"      # where to install the documentation files on Linux/MacOS X
 win32: documentation.path = "$$INSTALLBASE"                        # ... on Winodws
 ### Usually, the manual will be expected in the "manual" subfolder of "documentation.path" (see above).
 ### You can override this, uncomment and adjust the path behind the '=' in the next line.
-# manual.path = $$INSTALLBASE/share/doc/scidavis/manual
+# manual.path = $$SCIDOCDIR/manual
 ### Enables choosing of help folder at runtime, instead of relying on the above path only.
 ### The downside is that the help folder will be remembered as a configuration option, so a binary
 ### package cannot easily update the path for its users.
 ### Dynamic selection of the manual path was the only available option up until SciDAVis 0.2.3.
-DEFINES += DYNAMIC_MANUAL_PATH
+#DEFINES += DYNAMIC_MANUAL_PATH
 ### Important: translationfiles.path will be the directory where scidavis expects
 ### the translation .qm files at runtime. Therefore you need to set it corretly even if 
 ### you do not use this project file to generate the translation files.
@@ -87,32 +87,32 @@
 ### are compiled against Qt4), dynamically against everything else.
 #############################################################################
 
-unix:INCLUDEPATH  += ../3rdparty/qwtplot3d/include
-unix:LIBS         += ../3rdparty/qwtplot3d/lib/libqwtplot3d.a
+#unix:INCLUDEPATH  += ../3rdparty/qwtplot3d/include
+#unix:LIBS         += ../3rdparty/qwtplot3d/lib/libqwtplot3d.a
 
-unix:INCLUDEPATH  += ../3rdparty/qwt/src
-unix:LIBS         += ../3rdparty/qwt/lib/libqwt.a
+#unix:INCLUDEPATH  += ../3rdparty/qwt/src
+#unix:LIBS         += ../3rdparty/qwt/lib/libqwt.a
 
-unix:LIBS         += -L/usr/lib$${libsuff}
-unix:LIBS         += -lgsl -lgslcblas -lz
-unix:LIBS         += -lmuparser
+#unix:LIBS         += -L/usr/lib$${libsuff}
+#unix:LIBS         += -lgsl -lgslcblas -lz
+#unix:LIBS         += -lmuparser
 unix:INCLUDEPATH  += /usr/include/muParser
 
 #############################################################################
 ### Link everything dynamically
 #############################################################################
 
-#unix:INCLUDEPATH  += /usr/include/qwt5
+unix:INCLUDEPATH  += /usr/include/qwt
 #unix:LIBS         += -L/usr/lib$${libsuff}
 ## dynamically link against Qwt(3D) installed system-wide
 ## WARNING: make sure they are compiled against >= Qt4.2
 ## Mixing Qt 4.2 and Qt >= 4.3 compiled stuff may also 
 ## cause problems.
-#unix:INCLUDEPATH  += /usr/include/qwtplot3d
-#unix:LIBS         += -lqwtplot3d
-#unix:LIBS         += -lqwt
+unix:INCLUDEPATH  += /usr/include/qwtplot3d
+unix:LIBS         += -lqwtplot3d
+unix:LIBS         += -lqwt
 ##dynamically link against GSL and zlib installed system-wide
-#unix:LIBS         += -lgsl -lgslcblas -lz -lmuparser
+unix:LIBS         += -lgsl -lgslcblas -lz -lmuparser
 
 #############################################################################
 ### Default settings for Windows
