diff -uNBwp plugins/fm/FMPlugin.cpp.orig plugins/fm/FMPlugin.cpp
--- plugins/fm/FMPlugin.cpp.orig	2011-02-02 08:17:37.302000157 +0100
+++ plugins/fm/FMPlugin.cpp	2011-02-02 08:21:50.984000002 +0100
@@ -218,7 +218,6 @@ void FMPlugin::goToFavorite() {
 
 void FMPlugin::addToFavorites() {
 	QString path = model_.filePath(tree_->rootIndex());
-	qDebug() << path;
 	if ( !favorites_.contains(path) ) {
 		favorites_.append(path);
 		initFavoritesMenu();
diff -uNBwp plugins/sketches/syntax/SyntaxEditor.cpp.orig plugins/sketches/syntax/SyntaxEditor.cpp
--- plugins/sketches/syntax/SyntaxEditor.cpp.orig	2011-02-02 08:22:53.402000393 +0100
+++ plugins/sketches/syntax/SyntaxEditor.cpp	2011-02-02 08:26:47.405000002 +0100
@@ -1,6 +1,5 @@
 #include "SyntaxEditor.h"
 
-#include <QDebug>
 #include <QDir>
 #include <QFile>
 #include <QMap>
@@ -68,7 +67,6 @@ void SyntaxEditor::readStyles() {
 	QString path(QDir::homePath() + "/.config/juff/hlschemes/");
 	QDir dir(path);
 	QStringList list = dir.entryList(QStringList() << "*.xml", QDir::Files);
-	qDebug() << list;
 	foreach (QString file, list) {
 		readStyle(dir.absoluteFilePath(file));
 	}
@@ -106,13 +104,10 @@ void parseScheme(const QDomElement& schE
 			Style style;
 			QString name = styleEl.attribute("name", "");
 			if ( !name.isEmpty() ) {
-//				qDebug() << name;
 				style.color = stringToColor(styleEl.attribute("color", defColorStr));
 				style.bgColor = stringToColor(styleEl.attribute("bgColor", defBgColorStr));
 				style.bold = stringToBool(styleEl.attribute("bold", defBoldStr));
 				style.italic = stringToBool(styleEl.attribute("italic", defItalicStr));
-				
-//				qDebug() << style.color;
 				scheme.styleMap[name] = style;
 			}
 		}
@@ -163,7 +158,6 @@ void SyntaxEditor::readStyle(const QStri
 
 				if ( !scheme.name.isEmpty() ) {
 					int_->schemes_[scheme.name] = scheme;
-					qDebug() << "Added scheme" << scheme.name;
 				}
 //				if ( schEl.hasAttribute("curLineColor") && schEl.hasAttribute("name") ) {
 //					QColor curLineColor = stringToColor(schEl.attribute("curLineColor"));
diff -uNBwp include/Log.h.orig include/Log.h
--- include/Log.h.orig	2011-02-03 10:45:16.615999962 +0100
+++ include/Log.h	2011-02-03 10:49:20.791000018 +0100
@@ -74,6 +74,10 @@ private:
 	int line_;
 };
 
+#if defined(JUFF_DEBUG) || defined(JUFF_FULL_DEBUG)
 #define LOGGER Logger l(__FUNCTION__, __FILE__, __LINE__)
+#else
+#define LOGGER
+#endif //JUFF_DEBUG or JUFF_FULL_DEBUG
 
 #endif	//	__JUFF_LOG_H__
diff -uNBwp src/app/SearchEngine.cpp.orig src/app/SearchEngine.cpp
--- src/app/SearchEngine.cpp.orig	2011-02-02 08:32:40.155002127 +0100
+++ src/app/SearchEngine.cpp	2011-02-02 08:38:04.868000001 +0100
@@ -1,5 +1,3 @@
-#include <QDebug>
-
 /*
 JuffEd - An advanced text editor
 Copyright 2007-2010 Mikhail Murzin
@@ -55,7 +53,6 @@ void SearchEngine::setCurDoc(Juff::Docum
 
 void SearchEngine::find() {
 	if ( curDoc_ == NULL || curDoc_->isNull() ) {
-		qDebug("No document specified for SearchEngine");
 		return;
 	}
 	
@@ -89,7 +86,6 @@ void SearchEngine::find() {
 
 void SearchEngine::findNext() {
 	if ( curDoc_ == NULL || curDoc_->isNull() ) {
-		qDebug("No document specified for SearchEngine");
 		return;
 	}
 	
@@ -115,7 +111,6 @@ void SearchEngine::findNext() {
 
 void SearchEngine::findPrev() {
 	if ( curDoc_ == NULL || curDoc_->isNull() ) {
-		qDebug("No document specified for SearchEngine");
 		return;
 	}
 	
@@ -141,7 +136,6 @@ void SearchEngine::findPrev() {
 
 void SearchEngine::replace() {
 	if ( curDoc_ == NULL || curDoc_->isNull() ) {
-		qDebug("No document specified for SearchEngine");
 		return;
 	}
 	
@@ -180,7 +174,7 @@ void SearchEngine::onSearchParamsChanged
 	curDoc_->setSearchResults(results);
 	
 	if ( results == NULL ) {
-		qDebug("Error: SearchResults can't be NULL, probably it's an error in getSearchResults() method");
+		Log::warning("Error: SearchResults can't be NULL, probably it's an error in getSearchResults() method");
 		return;
 	}
 	
diff -uNBwp src/lib/Log.cpp.orig src/lib/Log.cpp
--- src/lib/Log.cpp.orig	2011-02-02 08:16:23.596000008 +0100
+++ src/lib/Log.cpp	2011-02-02 08:30:41.963000002 +0100
@@ -37,6 +37,7 @@ namespace Log {
 	static bool logFileErrorShowed = false;
 #endif
 
+#if defined(JUFF_FULL_DEBUG) || defined(JUFF_DEBUG)
 	void printToLog(int n, bool canBeSkipped) {
 		printToLog(QString::number(n), canBeSkipped);
 	}
@@ -93,6 +94,21 @@ namespace Log {
 		debug(QString("%1,%2,%3,%4").arg(r.left()).arg(r.top()).arg(r.width()).arg(r.height()), canBeSkipped);
 	}
     
+#else //defined(JUFF_FULL_DEBUG) || defined(JUFF_DEBUG)
+    void printToLog(int, bool ) {
+    }
+    void printToLog(const QString&, bool) {
+    }
+    void debug(const QString&, bool) {
+    }
+    void debug(const char*, bool)  {
+    }
+    void debug(int, bool) {
+    }
+    void debug(const QRect&, bool) {
+    }
+#endif //defined(JUFF_FULL_DEBUG) || defined(JUFF_DEBUG)
+
 	void warning(const QString& str, bool canBeSkipped) {
 #ifdef Q_OS_WIN
 		printToLog(str, canBeSkipped);
diff -uNBwp src/app/PluginManager.cpp.orig src/app/PluginManager.cpp
--- src/app/PluginManager.cpp.orig	2011-02-03 15:20:32.310000009 +0100
+++ src/app/PluginManager.cpp	2011-02-03 15:21:33.436000008 +0100
@@ -94,7 +94,7 @@ Juff::ToolBarList PluginManager::toolbar
 #include "EditorSettings.h"
 
 void PluginManager::loadPlugin(const QString& path, SettingsDlg* dlg) {
-	Log::warning(path);
+	Log::debug(path);
 	QPluginLoader loader(path);
 	if ( !loader.load() ) {
 		Log::warning(QString("Plugin '%1' was NOT loaded: %2").arg(path).arg(loader.errorString()));
