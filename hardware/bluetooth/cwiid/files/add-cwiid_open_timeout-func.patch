Index: libcwiid/connect.c
===================================================================
--- libcwiid/connect.c (revision bd4c9bdfca9e847cf6c0bc77ce98f90785eff251)
+++ libcwiid/connect.c (revision 6ef71eb8f766fd32ab75fb01d8896aeb66491e25)
@@ -16,4 +16,7 @@
  *
  *  ChangeLog:
+ *  2009-06-13 L. Donnie Smith <cwiid@abstrakraft.org>
+ *  * add cwiid_open_timeout function, call it with default from cwiid_open
+ *
  *  2007-06-14 L. Donnie Smith <cwiid@abstrakraft.org>
  *  * added sleep after cwiid_find_wiimote call
@@ -62,5 +65,11 @@
 static int wiimote_id = 0;
 
+/* TODO: Turn this onto a macro on next major so version */
 cwiid_wiimote_t *cwiid_open(bdaddr_t *bdaddr, int flags)
+{
+	return cwiid_open_timeout(bdaddr, flags, 5);
+}
+
+cwiid_wiimote_t *cwiid_open_timeout(bdaddr_t *bdaddr, int flags, int timeout)
 {
 	struct wiimote *wiimote = NULL;
@@ -97,5 +106,5 @@
 	/* If BDADDR_ANY is given, find available wiimote */
 	if (bacmp(bdaddr, BDADDR_ANY) == 0) {
-		if (cwiid_find_wiimote(bdaddr, 5)) {
+		if (cwiid_find_wiimote(bdaddr, timeout)) {
 			goto ERR_HND;
 		}
Index: libcwiid/cwiid.h
===================================================================
--- libcwiid/cwiid.h (revision 75b193ce57fc8f218a44861cc542236f89ac9628)
+++ libcwiid/cwiid.h (revision 6ef71eb8f766fd32ab75fb01d8896aeb66491e25)
@@ -310,4 +310,5 @@
 #define cwiid_disconnect cwiid_close
 cwiid_wiimote_t *cwiid_open(bdaddr_t *bdaddr, int flags);
+cwiid_wiimote_t *cwiid_open_timeout(bdaddr_t *bdaddr, int flags, int timeout);
 int cwiid_close(cwiid_wiimote_t *wiimote);
 
