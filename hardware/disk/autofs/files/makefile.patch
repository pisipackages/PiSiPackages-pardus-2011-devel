Index: Makefile.conf.in
===================================================================
--- Makefile.conf.in.orig
+++ Makefile.conf.in
@@ -95,3 +95,5 @@ mandir = @mandir@
 # Location for init.d files
 initdir = @initdir@
 
+# Use the compiler determined by configure
+CC := @CC@
Index: Makefile.rules
===================================================================
--- Makefile.rules.orig
+++ Makefile.rules
@@ -16,44 +16,32 @@ INSTALLROOT = $(DESTDIR)
 AUTOFS_LIB = ../lib/autofs.a
 
 # Compilers, linkers and flags
-# The STRIP defined here *must not* remove any dynamic-loading symbols
-
 ifdef DMALLOCLIB
 DEBUG=1
 endif
 
 ifdef DEBUG
 CFLAGS    ?= -g -Wall -DDEBUG
-LDFLAGS   = -g
-STRIP     = :
 else
-ifdef DONTSTRIP
 CFLAGS    ?= -O2 -g
-LDFLAGS   = -g
-STRIP     = :
-else
-CFLAGS    ?= -O2 -Wall
-LDFLAGS   = -s
-STRIP     = strip --strip-debug
-endif
 endif
+AUTOFS_LDFLAGS = -g
+
+PTHREAD_LIBS = -lpthread
 
-CC        = gcc
-CXX       = g++
 CXXFLAGS  = $(CFLAGS)
 LD        = ld
 SOLDFLAGS = -shared
 
 CFLAGS += -D_REENTRANT -D_FILE_OFFSET_BITS=64
-LDFLAGS += -lpthread
 
 ifdef TIRPCLIB
 CFLAGS += -I/usr/include/tirpc
-LDFLAGS += $(TIRPCLIB)
+AUTOFS_LIB += $(TIRPCLIB)
 endif
 
 ifdef DMALLOCLIB
-LDFLAGS += $(DMALLOCLIB)
+AUTOFS_LIB += $(DMALLOCLIB)
 endif
 
 # Standard rules
@@ -67,5 +55,4 @@ endif
 	$(CC) $(CFLAGS) -S $<
 
 .c.so:
-	$(CC) $(SOLDFLAGS) $(CFLAGS) -o $*.so $< $(AUTOFS_LIB) $(DMALLOCLIB) $(LIBNSL)
-	$(STRIP) $*.so
+	$(CC) $(LDFLAGS) $(SOLDFLAGS) $(CFLAGS) $< $(AUTOFS_LIB) $(DMALLOCLIB) $(LIBNSL) $(PTHREAD_LIBS) -o $*.so
Index: daemon/Makefile
===================================================================
--- daemon/Makefile.orig
+++ daemon/Makefile
@@ -2,8 +2,8 @@
 # Makefile for autofs
 #
 
--include ../Makefile.conf
 include ../Makefile.rules
+-include ../Makefile.conf
 
 SRCS = automount.c indirect.c direct.c spawn.c module.c mount.c \
 	lookup.c state.c flag.c
@@ -20,7 +20,7 @@ CFLAGS += -DAUTOFS_FIFO_DIR=\"$(autofsfi
 CFLAGS += -DAUTOFS_FLAG_DIR=\"$(autofsflagdir)\"
 CFLAGS += -DVERSION_STRING=\"$(version)\"
 LDFLAGS += -rdynamic
-LIBS = -ldl
+LIBS = -ldl -lpthread
 
 ifeq ($(LDAP), 1)
     CFLAGS += $(XML_FLAGS)
@@ -30,8 +30,7 @@ endif
 all: automount
 
 automount: $(OBJS) $(AUTOFS_LIB)
-	$(CC) $(LDFLAGS) $(DAEMON_LDFLAGS) -o automount $(OBJS) $(AUTOFS_LIB) $(LIBS)
-	$(STRIP) automount
+	$(CC) $(AUTOFS_LDFLAGS) $(DAEMON_LDFLAGS) $(LDFLAGS) $(OBJS) $(AUTOFS_LIB) $(LIBS) -o automount
 
 clean:
 	rm -f *.o *.s *~ automount
Index: lib/Makefile
===================================================================
--- lib/Makefile.orig
+++ lib/Makefile
@@ -41,14 +41,12 @@ mount_clnt.c: mount.h
 
 mount_clnt.o: mount_clnt.c
 	$(CC) $(CFLAGS) -o mount_clnt.o -c mount_clnt.c
-	$(STRIP) mount_clnt.o
 
 mount_xdr.c: mount.h
 	$(RPCGEN) -c -o mount_xdr.c mount.x
 
 mount_xdr.o: mount_xdr.c
 	$(CC) $(CFLAGS) -Wno-unused-variable -o mount_xdr.o -c mount_xdr.c
-	$(STRIP) mount_xdr.o
 
 master_tok.c: master_tok.l
 	$(LEX) -o$@ -Pmaster_ $?
Index: modules/Makefile
===================================================================
--- modules/Makefile.orig
+++ modules/Makefile
@@ -85,9 +85,8 @@ endif
 # Ad hoc compilation rules for modules which need auxilliary libraries
 #
 lookup_hesiod.so: lookup_hesiod.c
-	$(CC) $(SOLDFLAGS) $(CFLAGS) $(HESIOD_FLAGS) -o lookup_hesiod.so \
-		lookup_hesiod.c $(AUTOFS_LIB) $(LIBHESIOD) $(LIBRESOLV)
-	$(STRIP) lookup_hesiod.so
+	$(CC) $(SOLDFLAGS) $(CFLAGS) $(HESIOD_FLAGS) \
+		lookup_hesiod.c $(AUTOFS_LIB) $(LIBHESIOD) $(LIBRESOLV) -lpthread -o lookup_hesiod.so
 
 cyrus-sasl.o: cyrus-sasl.c
 	$(CC) $(CFLAGS) $(LDAP_FLAGS) -c $<
@@ -96,13 +95,10 @@ cyrus-sasl-extern.o: cyrus-sasl-extern.c
 	$(CC) $(CFLAGS) $(LDAP_FLAGS) -c $<
 
 lookup_ldap.so: lookup_ldap.c dclist.o $(SASL_OBJ)
-	$(CC) $(SOLDFLAGS) $(CFLAGS) $(LDAP_FLAGS) -o lookup_ldap.so \
+	$(CC) $(LDFLAGS) $(SOLDFLAGS) $(CFLAGS) $(LDAP_FLAGS) \
 		lookup_ldap.c dclist.o $(SASL_OBJ) \
-		$(AUTOFS_LIB) $(LIBLDAP) $(LIBRESOLV)
-	$(STRIP) lookup_ldap.so
+		$(AUTOFS_LIB) $(LIBLDAP) $(LIBRESOLV) -lpthread -o lookup_ldap.so
 
 mount_nfs.so: mount_nfs.c replicated.o
-	$(CC) $(SOLDFLAGS) $(CFLAGS) -o mount_nfs.so \
-		mount_nfs.c replicated.o $(AUTOFS_LIB) $(LIBNSL)
-	$(STRIP) mount_nfs.so
-
+	$(CC) $(LDFLAGS) $(SOLDFLAGS) $(CFLAGS) \
+		mount_nfs.c replicated.o $(AUTOFS_LIB) $(LIBNSL) -lpthread -o mount_nfs.so
Index: include/automount.h
===================================================================
--- include/automount.h.orig
+++ include/automount.h
@@ -333,8 +333,6 @@ int ncat_path(char *buf, size_t len,
 
 /* Core automount definitions */
 
-#define MNT_DETACH	0x00000002	/* Just detach from the tree */
-
 struct startup_cond {
 	pthread_mutex_t mutex;
 	pthread_cond_t  cond;
Index: configure
===================================================================
--- configure.orig
+++ configure
@@ -2226,7 +2226,7 @@ if test "${with_flagdir+set}" = set; the
 	then
 		:
 	else
-		filagdir="${withval}"
+		flagdir="${withval}"
 	fi
 
 fi
Index: configure.in
===================================================================
--- configure.in.orig
+++ configure.in
@@ -105,7 +105,7 @@ AC_ARG_WITH(flagdir,
 	then
 		:
 	else
-		filagdir="${withval}"
+		flagdir="${withval}"
 	fi
 )
 AC_MSG_CHECKING([for autofs flag file directory])
