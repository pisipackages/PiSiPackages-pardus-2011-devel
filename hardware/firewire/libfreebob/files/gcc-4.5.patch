--- a/src/libfreebobavc/avc_extended_plug_info.cpp	(revision 1823)
+++ b/src/libfreebobavc/avc_extended_plug_info.cpp	(revision 1824)
@@ -128,7 +128,7 @@
     return true;
 }
 
-ExtendedPlugInfoPlugNameSpecificData::ExtendedPlugInfoPlugNameSpecificData*
+ExtendedPlugInfoPlugNameSpecificData*
 ExtendedPlugInfoPlugNameSpecificData::clone() const
 {
     return new ExtendedPlugInfoPlugNameSpecificData( *this );
@@ -164,7 +164,7 @@
     return true;
 }
 
-ExtendedPlugInfoPlugNumberOfChannelsSpecificData::ExtendedPlugInfoPlugNumberOfChannelsSpecificData*
+ExtendedPlugInfoPlugNumberOfChannelsSpecificData*
 ExtendedPlugInfoPlugNumberOfChannelsSpecificData::clone() const
 {
     return new ExtendedPlugInfoPlugNumberOfChannelsSpecificData( *this );
@@ -237,7 +237,7 @@
     return true;
 }
 
-ExtendedPlugInfoPlugChannelPositionSpecificData::ExtendedPlugInfoPlugChannelPositionSpecificData*
+ExtendedPlugInfoPlugChannelPositionSpecificData*
 ExtendedPlugInfoPlugChannelPositionSpecificData::clone() const
 {
     return new ExtendedPlugInfoPlugChannelPositionSpecificData( *this );
@@ -295,7 +295,7 @@
     return true;
 }
 
-ExtendedPlugInfoPlugChannelNameSpecificData::ExtendedPlugInfoPlugChannelNameSpecificData*
+ExtendedPlugInfoPlugChannelNameSpecificData*
 ExtendedPlugInfoPlugChannelNameSpecificData::clone() const
 {
     return new ExtendedPlugInfoPlugChannelNameSpecificData( *this );
@@ -342,7 +342,7 @@
     return m_plugAddress->deserialize( de );
 }
 
-ExtendedPlugInfoPlugInputSpecificData::ExtendedPlugInfoPlugInputSpecificData*
+ExtendedPlugInfoPlugInputSpecificData*
 ExtendedPlugInfoPlugInputSpecificData::clone() const
 {
     return new ExtendedPlugInfoPlugInputSpecificData( *this );
@@ -418,7 +418,7 @@
     return true;
 }
 
-ExtendedPlugInfoPlugOutputSpecificData::ExtendedPlugInfoPlugOutputSpecificData*
+ExtendedPlugInfoPlugOutputSpecificData*
 ExtendedPlugInfoPlugOutputSpecificData::clone() const
 {
     return new ExtendedPlugInfoPlugOutputSpecificData( *this );
@@ -480,7 +480,7 @@
     return true;
 }
 
-ExtendedPlugInfoClusterInfoSpecificData::ExtendedPlugInfoClusterInfoSpecificData*
+ExtendedPlugInfoClusterInfoSpecificData*
 ExtendedPlugInfoClusterInfoSpecificData::clone() const
 {
     return new ExtendedPlugInfoClusterInfoSpecificData( *this );
