.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "IRQBALANCE" 1 "Dec 2006" "Linux" "irqbalance"
.SH NAME
irqbalance \- distribute hardware interrupts across processors on a multiprocessor system
.SH "SYNOPSIS"

.nf
\fBirqbalance\fR 
.fi

.SH "DESCRIPTION"

.PP
The purpose of \fBirqbalance\fR is distribute hardware interrupts across processors on a multiprocessor system in order to increase performance\&.

.SH "OPTIONS"

.TP
.B --oneshot
Causes irqbalance to be run once, after which the daemon exits
.TP

.B --debug
Causes irqbalance to run in the foreground and extra debug information to be printed

.SH "ENVIRONMENT VARIABLES"
.TP
.B IRQBALANCE_ONESHOT
Same as --oneshot

.TP
.B IRQBALANCE_DEBUG
Same as --debug

.TP
.B IRQBALANCE_BANNED_CPUS
Provides a mask of cpus which irqbalance should ignore and never assign interrupts to

.SH "NOTES"
The purpose of irqbalance is to distribute interrupts accross cpus in an smp
system such that cache-domain affinity is maximized for each irq.  In other
words, irqbalance tries to assign irqs to cpu cores such that each irq stands a
greater chance of having its interrupt handler be in cache when the irq is
asserted to the cpu.  This raises a few interesting cases in which the behavior
of irqbalance may be non-intuitive.  Most notably, cases in which a system has
only one cache domain.  Nominally these systems are only single cpu
environments, but can also be found in multi-core environments in which the
cores share an L2 cache.  In these situations irqbalance will exit immediately,
since there is no work that irqbalance can do which will improve interrupt
handling performance.  This is normal and not cause for concern.  For more
information regarding irqbalance, please visit http://irqbalance.org/
