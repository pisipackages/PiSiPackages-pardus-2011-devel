diff -urN PyX-0.9.orig/pyx/siteconfig.py PyX-0.9/pyx/siteconfig.py
--- PyX-0.9.orig/pyx/siteconfig.py	2006-09-23 18:35:45.000000000 -0700
+++ PyX-0.9/pyx/siteconfig.py	2006-09-23 18:36:28.000000000 -0700
@@ -1,35 +1,3 @@
-# -*- coding: ISO-8859-1 -*-
-#
-#
-# Copyright (C) 2004-2005 André Wobst <wobsta@users.sourceforge.net>
-#
-# This file is part of PyX (http://pyx.sourceforge.net/).
-#
-# PyX is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# PyX is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with PyX; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
-
-# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
-# This file configures PyX search paths relative to the current
-# position, e.g. for local usage. When installing PyX via distutils
-# the contents of this file is not copied to the PyX installation.
-# Instead the correct information about the paths from the installation
-# process are used.
-# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
-
-import os
-
-lfsdir = os.path.join(os.path.dirname(__file__), "lfs")
-sharedir = os.path.join(os.path.dirname(__file__), "..", "contrib")
-pyxrcdir = os.path.join(os.path.dirname(__file__), "..")
-
+lfsdir = "/usr/share/pyx"
+sharedir = "/usr/share/pyx"
+pyxrcdir = "/etc/pyxrc"
diff -urN PyX-0.9.orig/setup.py PyX-0.9/setup.py
--- PyX-0.9.orig/setup.py	2006-09-23 18:35:45.000000000 -0700
+++ PyX-0.9/setup.py	2006-09-23 18:37:02.000000000 -0700
@@ -77,84 +77,6 @@
 # we put the global pyxrc into the share directory as well.
 adddatafiles("pyxrcdir", os.name != "nt" and "/etc" or "share/pyx", ["pyxrc"])
 
-################################################################################
-# extend install commands to overwrite siteconfig.py during build and install
-#
-
-
-class pyx_build_py(build_py):
-
-    def build_module(self, module, module_file, package):
-        if package == "pyx" and module == "siteconfig":
-            # generate path information as the original build_module does it
-            outfile = self.get_module_outfile(self.build_lib, [package], module)
-            outdir = os.path.dirname(outfile)
-            self.mkpath(outdir)
-
-            if log:
-                log.info("creating proper %s" % outfile)
-
-            # create the additional relative path parts to be inserted into the
-            # os.path.join methods in the original siteconfig.py
-            indir = os.path.dirname(module_file)
-            addjoinstring = ", ".join(["'..'" for d in outdir.split(os.path.sep)] +
-                                      ["'%s'" % d for d in indir.split(os.path.sep)])
-
-            # write a modifed version of siteconfig.py
-            fin = open(module_file, "r")
-            fout = open(outfile, "w")
-            for line in fin.readlines():
-                fout.write(line.replace("os.path.join(os.path.dirname(__file__), ",
-                                        "os.path.join(os.path.dirname(__file__), %s, " % addjoinstring))
-            fin.close()
-            fout.close()
-        else:
-            return build_py.build_module(self, module, module_file, package)
-
-
-class pyx_install_data(install_data):
-
-    def run(self):
-        self.siteconfiglines = []
-        for dir, files in self.data_files:
-            # append siteconfiglines by "<siteconfigname> = <dir>"
-
-            # get the install directory
-            # (the following four lines are copied from within the install_data.run loop)
-            dir = convert_path(dir)
-            if not os.path.isabs(dir):
-                dir = os.path.join(self.install_dir, dir)
-            elif self.root:
-                dir = change_root(self.root, dir)
-
-            self.siteconfiglines.append("%s = '%s'\n" % (siteconfignames[files], dir))
-
-        install_data.run(self)
-
-
-class pyx_install_lib(install_lib):
-
-    def run(self):
-        # siteconfig.py depends on install_data:
-        self.run_command('install_data')
-        install_lib.run(self)
-
-    def install(self):
-        # first we perform the tree_copy
-        result = install_lib.install(self)
-
-        # siteconfiglines have been created by install_data
-        siteconfiglines = self.distribution.command_obj["install_data"].siteconfiglines
-
-        # such that we can easily overwrite siteconfig.py
-        outfile = os.path.join(self.install_dir, "pyx", "siteconfig.py")
-        if log:
-            log.info("creating proper %s" % outfile)
-        f = open(outfile, "w")
-        f.writelines(siteconfiglines)
-        f.close()
-
-        return result
 
 ################################################################################
 # additional package metadata (only available in Python 2.3 and above)
@@ -193,7 +115,4 @@
       packages=["pyx", "pyx/graph", "pyx/graph/axis", "pyx/font", "pyx/pykpathsea"],
       ext_modules=ext_modules,
       data_files=data_files,
-      cmdclass = {"build_py": pyx_build_py,
-                  "install_data": pyx_install_data,
-                  "install_lib": pyx_install_lib},
       **addargs)
