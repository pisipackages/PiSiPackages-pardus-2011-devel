diff -r 6be9e31d01b4 -r fca718600ca0 .hgtags
--- a/.hgtags	Fri Mar 18 11:37:42 2011 +0000
+++ b/.hgtags	Wed Apr 13 21:17:37 2011 -0700
@@ -55,8 +55,4 @@
 138f593553b66c9f815e8f57870c19d6347f7702 UPDATE_PACKAGING_R12
 138f593553b66c9f815e8f57870c19d6347f7702 UPDATE_PACKAGING_R13
 138f593553b66c9f815e8f57870c19d6347f7702 UPDATE_PACKAGING_R11_1_MU
-821cf4ad060ea3120b33940a0aaff3ccb7edcba2 FIREFOX_4_0rc2_RELEASE
-821cf4ad060ea3120b33940a0aaff3ccb7edcba2 FIREFOX_4_0rc2_BUILD1
-821cf4ad060ea3120b33940a0aaff3ccb7edcba2 FIREFOX_4_0rc2_RELEASE
-821cf4ad060ea3120b33940a0aaff3ccb7edcba2 FIREFOX_4_0rc2_RELEASE
-821cf4ad060ea3120b33940a0aaff3ccb7edcba2 FIREFOX_4_0rc2_BUILD2
+e56ecd8b3a68c158025207c5fd081d043e28f5ce GECKO_2_0_BASE
diff -r 6be9e31d01b4 -r fca718600ca0 accessible/tests/mochitest/tree/test_combobox.xul
--- a/accessible/tests/mochitest/tree/test_combobox.xul	Fri Mar 18 11:37:42 2011 +0000
+++ b/accessible/tests/mochitest/tree/test_combobox.xul	Wed Apr 13 21:17:37 2011 -0700
@@ -6,7 +6,7 @@
 <window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
         title="Accessible XUL menulist and textbox @autocomplete hierarchy tests">
 
-  <script type="application/javascript" 
+  <script type="application/javascript"
           src="chrome://mochikit/content/MochiKit/packed.js" />
   <script type="application/javascript"
           src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js" />
@@ -33,15 +33,18 @@
             role: ROLE_COMBOBOX_LIST,
             children: [
               {
-                role: ROLE_COMBOBOX_OPTION
+                role: ROLE_COMBOBOX_OPTION,
+                children: []
               },
               {
-                role: ROLE_COMBOBOX_OPTION
+                role: ROLE_COMBOBOX_OPTION,
+                children: []
               }
             ]
           }
         ]
       };
+
       testAccessibleTree("menulist", accTree);
 
       //////////////////////////////////////////////////////////////////////////
@@ -52,7 +55,9 @@
         children: [
           {
             role: ROLE_ENTRY,
-            children: [ ] // no text leaf accessible for text node
+            children: [
+              // no text leaf accessible for text node
+            ]
           },
           {
             role: ROLE_COMBOBOX_LIST, // context menu
@@ -60,15 +65,18 @@
           },
           {
             role: ROLE_PUSHBUTTON, // dropmarker
+            children: []
           },
           {
             role: ROLE_COMBOBOX_LIST, // option list
             children: [
               {
-                role: ROLE_COMBOBOX_OPTION
+                role: ROLE_COMBOBOX_OPTION,
+                children: []
               },
               {
-                role: ROLE_COMBOBOX_OPTION
+                role: ROLE_COMBOBOX_OPTION,
+                children: []
               }
             ]
           }
@@ -84,49 +92,144 @@
       // textbox@type=autocomplete #1 (history)
 
       accTree = {
+        // textbox
         role: ROLE_AUTOCOMPLETE,
         children: [
           {
+            // html:input
             role: ROLE_ENTRY,
             children: [
               {
+                // #text
                 role: ROLE_TEXT_LEAF,
-                name: "http://mochi.test:8888/redirect-a11y.html"
+                name: "http://mochi.test:8888/redirect-a11y.html",
+                children: []
               }
             ]
           },
           {
+            // xul:menupopup
             role: ROLE_COMBOBOX_LIST, // context menu popup
-            children: [ ]
+            children: []
           }
         ]
       };
+
+      // XPFE and Toolkit autocomplete widgets differ.
+      var ac1h = document.getElementById("autocomplete");
+      if ("clearResults" in ac1h) {
+        SimpleTest.ok(true, "Testing (Old) XPFE autocomplete widget. (ac1h)");
+
+        // Popup is always created.
+        accTree.children.push(
+          {
+            // xul:panel
+            role: ROLE_COMBOBOX_LIST,
+            children: [
+              {
+                // xul:tree
+                role: ROLE_TABLE,
+                children: [
+                  {
+                    // xul:treecols
+                    role: ROLE_LIST,
+                    children: [
+                      {
+                        // xul:treecol
+                        role: ROLE_COLUMNHEADER,
+                        children: []
+                      }
+                    ]
+                  }
+                ]
+              }
+            ]
+          }
+          );
+      } else {
+        SimpleTest.ok(true, "Testing (New) Toolkit autocomplete widget. (ac1h)");
+
+        // Popup is lazily created, so not present in this case.
+      }
+
       testAccessibleTree("autocomplete", accTree);
 
       //////////////////////////////////////////////////////////////////////////
       // textbox@type=autocomplete #2 (child menupoup)
 
       accTree = {
+        // textbox
         role: ROLE_AUTOCOMPLETE,
         children: [
           {
+            // menupopup
             role: ROLE_COMBOBOX_LIST, // autocomplete menu popup
             children: [
               {
-                role: ROLE_COMBOBOX_OPTION
+                // menuitem
+                role: ROLE_COMBOBOX_OPTION,
+                children: []
               }
             ]
           },
           {
+            // html:input
             role: ROLE_ENTRY,
-            children: [ ] // no text leaf accessible for text node
+            children: [
+              // no text leaf accessible for text node
+            ]
           },
           {
+            // xul:menupopup
             role: ROLE_COMBOBOX_LIST, // context menu popup
-            children: [ ]
+            children: []
           }
         ]
       };
+
+      // XPFE and Toolkit autocomplete widgets differ.
+      var ac2cmp = document.getElementById("autocomplete2");
+      if ("clearResults" in ac2cmp) {
+        SimpleTest.ok(true, "Testing (Old) XPFE autocomplete widget. (ac2mp)");
+
+        // Toolkit has the menupopup first ...
+        var mp = accTree.children.splice(0, 1);
+
+        // Popup is always created.
+        accTree.children.push(
+          {
+            // xul:panel
+            role: ROLE_COMBOBOX_LIST,
+            children: [
+              {
+                // xul:tree
+                role: ROLE_TABLE,
+                children: [
+                  {
+                    // xul:treecols
+                    role: ROLE_LIST,
+                    children: [
+                      {
+                        // xul:treecol
+                        role: ROLE_COLUMNHEADER,
+                        children: []
+                      }
+                    ]
+                  }
+                ]
+              }
+            ]
+          }
+          );
+
+        // ... whereas XPFE has it last.
+        accTree.children.push(mp[0]);
+      } else {
+        SimpleTest.ok(true, "Testing (New) Toolkit autocomplete widget. (ac2mp)");
+
+        // Popup is lazily created, so not present in this case.
+      }
+
       testAccessibleTree("autocomplete2", accTree);
 
       SimpleTest.finish()
@@ -184,4 +287,3 @@
   </hbox>
 
 </window>
-
diff -r 6be9e31d01b4 -r fca718600ca0 accessible/tests/mochitest/tree/test_tabbrowser.xul
--- a/accessible/tests/mochitest/tree/test_tabbrowser.xul	Fri Mar 18 11:37:42 2011 +0000
+++ b/accessible/tests/mochitest/tree/test_tabbrowser.xul	Wed Apr 13 21:17:37 2011 -0700
@@ -14,7 +14,7 @@
 <window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
         title="Accessible XUL tabbrowser hierarchy tests">
 
-  <script type="application/javascript" 
+  <script type="application/javascript"
           src="chrome://mochikit/content/MochiKit/packed.js" />
   <script type="application/javascript"
           src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js" />
@@ -36,8 +36,7 @@
     var handleDroppedLink = null;
     var XULBrowserWindow = {
       isBusy: false,
-      setOverLink: function (link, b) {
-      }
+      setOverLink: function (link, b) {}
     };
     var gFindBar = {
       hidden: true
@@ -53,60 +52,159 @@
                                               aRequest,
                                               aStateFlags,
                                               aStatus)
-       {
-        if (aStateFlags & Ci.nsIWebProgressListener.STATE_STOP)
-          testAccTree();
-       }
+        {
+          if (aStateFlags & Ci.nsIWebProgressListener.STATE_STOP) {
+            tabBrowser.removeProgressListener(progressListener);
+
+            SimpleTest.executeSoon(testAccTree);
+          }
+        }
       };
-
       tabBrowser.addProgressListener(progressListener,
                                      Ci.nsIWebProgress.NOTIFY_STATE_WINDOW);
 
+      // Test XUL and HTML documents.
       tabBrowser.loadTabs(["about:", "about:mozilla"], false, true);
     }
 
     function testAccTree()
     {
+      var tabBrowser = document.getElementById("tabbrowser");
+
+      ////////////////////
+      // Tab bar
+      ////////////////////
       var tabsAccTree = {
+        // xul:tabs
         role: ROLE_PAGETABLIST,
         children: [
+          // Children depend on application (UI): see below.
+        ]
+      };
+
+      // SeaMonkey and Firefox tabbrowser UIs differ.
+      if ("restoreTab" in tabBrowser) {
+        SimpleTest.ok(true, "Testing SeaMonkey tabbrowser UI.");
+
+        tabsAccTree.children.splice(0, 0,
           {
+            // xul:toolbarbutton ("Open a new tab")
+            role: ROLE_PUSHBUTTON,
+            children: []
+          },
+          {
+            // xul:tab ("about:")
             role: ROLE_PAGETAB,
+            children: []
+          },
+          {
+            // tab ("about:mozilla")
+            role: ROLE_PAGETAB,
+            children: []
+          },
+          {
+            // xul:toolbarbutton ("List all tabs")
+            role: ROLE_PUSHBUTTON,
             children: [
               {
-                role: ROLE_PUSHBUTTON
+                // xul:menupopup
+                role: ROLE_MENUPOPUP,
+                children: []
               }
             ]
           },
           {
+            // xul:toolbarbutton ("Close current tab")
+            role: ROLE_PUSHBUTTON,
+            children: []
+          }
+          );
+      } else {
+        SimpleTest.ok(true, "Testing Firefox tabbrowser UI.");
+
+        // NB: The (3) buttons are not visible, unless manually hovered,
+        //     probably due to size reduction in this test.
+        tabsAccTree.children.splice(0, 0,
+          {
+            // xul:tab ("about:")
             role: ROLE_PAGETAB,
             children: [
               {
-                role: ROLE_PUSHBUTTON
+                // xul:toolbarbutton ("Close Tab")
+                role: ROLE_PUSHBUTTON,
+                children: []
               }
             ]
           },
           {
-            role: ROLE_PUSHBUTTON
+            // tab ("about:mozilla")
+            role: ROLE_PAGETAB,
+            children: [
+              {
+                // xul:toolbarbutton ("Close Tab")
+                role: ROLE_PUSHBUTTON,
+                children: []
+              }
+            ]
+          },
+          {
+            // xul:toolbarbutton ("Open a new tab")
+            role: ROLE_PUSHBUTTON,
+            children: []
           }
-        ]
-      };
-      testAccessibleTree(getNode("tabbrowser").tabContainer, tabsAccTree);
+          // "List all tabs" dropdown
+          // XXX: This child(?) is not present in this test.
+          //      I'm not sure why (though probably expected).
+          );
+      }
 
+      testAccessibleTree(tabBrowser.tabContainer, tabsAccTree);
+
+      ////////////////////
+      // Tab contents
+      ////////////////////
       var tabboxAccTree = {
+        // xul:tabpanels
         role: ROLE_PANE,
         children: [
           {
-            role: ROLE_PROPERTYPAGE
+            // xul:notificationbox
+            role: ROLE_PROPERTYPAGE,
+            children: [
+              {
+                // xul:browser
+                role: ROLE_INTERNAL_FRAME,
+                children: [
+                  {
+                    // #document ("about:")
+                    role: ROLE_DOCUMENT
+                    // children: [ ... ] // Ignore document content.
+                  }
+                ]
+              }
+            ]
           },
           {
-            role: ROLE_PROPERTYPAGE
+            // notificationbox
+            role: ROLE_PROPERTYPAGE,
+            children: [
+              {
+                // browser
+                role: ROLE_INTERNAL_FRAME,
+                children: [
+                  {
+                    // #document ("about:mozilla")
+                    role: ROLE_DOCUMENT
+                    // children: [ ... ] // Ignore document content.
+                  }
+                ]
+              }
+            ]
           }
         ]
       };
 
-      testAccessibleTree(getNode("tabbrowser").mTabBox.tabpanels,
-                         tabboxAccTree);
+      testAccessibleTree(tabBrowser.mTabBox.tabpanels, tabboxAccTree);
 
       SimpleTest.finish()
     }
@@ -158,4 +256,3 @@
   </vbox>
 
 </window>
-
diff -r 6be9e31d01b4 -r fca718600ca0 accessible/tests/mochitest/tree/test_txtctrl.xul
--- a/accessible/tests/mochitest/tree/test_txtctrl.xul	Fri Mar 18 11:37:42 2011 +0000
+++ b/accessible/tests/mochitest/tree/test_txtctrl.xul	Wed Apr 13 21:17:37 2011 -0700
@@ -6,7 +6,7 @@
 <window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
         title="Accessible XUL textbox and textarea hierarchy tests">
 
-  <script type="application/javascript" 
+  <script type="application/javascript"
           src="chrome://mochikit/content/MochiKit/packed.js" />
   <script type="application/javascript"
           src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js" />
@@ -23,7 +23,9 @@
 
     function doTest()
     {
+      ////////////////////
       // textbox
+      ////////////////////
       var accTree = {
         role: ROLE_ENTRY,
         children: [
@@ -33,6 +35,8 @@
           }
         ]
       };
+
+      // default textbox
       testAccessibleTree("txc1", accTree);
 
       // number textbox
@@ -44,7 +48,9 @@
       // timed textbox
       testAccessibleTree("txc4", accTree);
 
+      ////////////////////
       // password textbox
+      ////////////////////
       accTree = {
         role: ROLE_PASSWORD_TEXT,
         children: [
@@ -57,7 +63,9 @@
 
       testAccessibleTree("txc5", accTree);
 
+      ////////////////////
       // multiline textbox
+      ////////////////////
       accTree = {
         role: ROLE_ENTRY,
         children: [
@@ -74,29 +82,96 @@
 
       testAccessibleTree("txc6", accTree);
 
+      ////////////////////
       // autocomplete textbox
+      ////////////////////
       accTree = {
+        // textbox
         role: ROLE_AUTOCOMPLETE,
         children: [
           {
+            // html:input
             role: ROLE_ENTRY,
             children: [
               {
+                // #text
                 role: ROLE_TEXT_LEAF,
                 children: []
               }
             ]
           },
           {
+            // xul:menupopup
             role: ROLE_COMBOBOX_LIST,
             children: []
           }
         ]
       };
 
-      testAccessibleTree("txc7", accTree);
+      // XPFE and Toolkit autocomplete widgets differ.
+      var txc7 = document.getElementById("txc7");
+      if ("clearResults" in txc7) {
+        SimpleTest.ok(true, "Testing (Old) XPFE autocomplete widget.");
 
-      SimpleTest.finish();
+        // Popup is always created. (See code below.)
+
+        accTree.children.push(
+          {
+            // xul:panel
+            role: ROLE_COMBOBOX_LIST,
+            children: [
+              {
+                // xul:tree
+                role: ROLE_TABLE,
+                children: [
+                  {
+                    // xul:treecols
+                    role: ROLE_LIST,
+                    children: [
+                      {
+                        // xul:treecol
+                        role: ROLE_COLUMNHEADER,
+                        children: []
+                      }
+                    ]
+                  }
+                ]
+              }
+            ]
+          }
+          );
+      } else {
+        SimpleTest.ok(true, "Testing (New) Toolkit autocomplete widget.");
+
+        // Dumb access to trigger popup lazy creation. (See code below.)
+        txc7.popup;
+
+        accTree.children.push(
+          {
+            role: ROLE_LIST,
+            children: [
+              {
+                role: ROLE_LIST,
+                children: [
+                  {
+                    role: ROLE_COLUMNHEADER,
+                    children: []
+                  }
+                ]
+              }
+            ]
+          }
+          );
+      }
+
+      // Delay txc7 test a bit, to let Toolkit popup lazy creation complete.
+      function test_txc7() {
+        testAccessibleTree("txc7", accTree);
+  
+        SimpleTest.finish();
+      }
+      // SimpleTest.executeSoon() doesn't help here: use setTimeout() with a little delay.
+      setTimeout(test_txc7, 25);
     }
 
     SimpleTest.waitForExplicitFinish();
@@ -130,4 +205,3 @@
   </hbox>
 
 </window>
-
diff -r 6be9e31d01b4 -r fca718600ca0 browser/base/content/browser-places.js
--- a/browser/base/content/browser-places.js	Fri Mar 18 11:37:42 2011 +0000
+++ b/browser/base/content/browser-places.js	Wed Apr 13 21:17:37 2011 -0700
@@ -171,6 +171,9 @@
       _anchorElement: aAnchorElement,
       _position: aPosition,
       observe: function (aSubject, aTopic, aData) {
+        //XXX We just caused localstore.rdf to be re-applied (bug 640158)
+        retrieveToolbarIconsizesFromTheme();
+
         this._self._overlayLoading = false;
         this._self._overlayLoaded = true;
         this._self._doShowEditBookmarkPanel(this._itemId, this._anchorElement,
diff -r 6be9e31d01b4 -r fca718600ca0 browser/base/content/tabview/tabitems.js
--- a/browser/base/content/tabview/tabitems.js	Fri Mar 18 11:37:42 2011 +0000
+++ b/browser/base/content/tabview/tabitems.js	Wed Apr 13 21:17:37 2011 -0700
@@ -855,7 +855,9 @@
       if (tab.ownerDocument.defaultView != gWindow || tab.pinned)
         return;
 
-      self.unlink(tab);
+      // XXX bug #635975 - don't unlink the tab if the dom window is closing.
+      if (!UI.isDOMWindowClosing)
+        self.unlink(tab);
     }
     for (let name in this._eventListeners) {
       AllTabs.register(name, this._eventListeners[name]);
diff -r 6be9e31d01b4 -r fca718600ca0 browser/branding/unofficial/branding.nsi
--- a/browser/branding/unofficial/branding.nsi	Fri Mar 18 11:37:42 2011 +0000
+++ b/browser/branding/unofficial/branding.nsi	Wed Apr 13 21:17:37 2011 -0700
@@ -40,7 +40,7 @@
 
 # BrandFullNameInternal is used for some registry and file system values
 # instead of BrandFullName and typically should not be modified.
-!define BrandFullNameInternal "Mozilla Developer Preview"
+!define BrandFullNameInternal "Tumucumaque"
 !define CompanyName           "mozilla.org"
 !define URLInfoAbout          "http://www.mozilla.org"
 !define URLUpdateInfo         "http://www.mozilla.org/projects/firefox"
diff -r 6be9e31d01b4 -r fca718600ca0 browser/branding/unofficial/configure.sh
--- a/browser/branding/unofficial/configure.sh	Fri Mar 18 11:37:42 2011 +0000
+++ b/browser/branding/unofficial/configure.sh	Wed Apr 13 21:17:37 2011 -0700
@@ -1,1 +1,1 @@
-MOZ_APP_DISPLAYNAME=MozillaDeveloperPreview
+MOZ_APP_DISPLAYNAME=Tumucumaque
diff -r 6be9e31d01b4 -r fca718600ca0 browser/branding/unofficial/locales/en-US/brand.dtd
--- a/browser/branding/unofficial/locales/en-US/brand.dtd	Fri Mar 18 11:37:42 2011 +0000
+++ b/browser/branding/unofficial/locales/en-US/brand.dtd	Wed Apr 13 21:17:37 2011 -0700
@@ -1,4 +1,4 @@
-<!ENTITY  brandShortName        "Mozilla Developer Preview">
-<!ENTITY  brandFullName         "Mozilla Developer Preview">
+<!ENTITY  brandShortName        "Tumucumaque">
+<!ENTITY  brandFullName         "Tumucumaque">
 <!ENTITY  vendorShortName       "mozilla.org">
 <!ENTITY  trademarkInfo.part1   " ">
diff -r 6be9e31d01b4 -r fca718600ca0 browser/branding/unofficial/locales/en-US/brand.properties
--- a/browser/branding/unofficial/locales/en-US/brand.properties	Fri Mar 18 11:37:42 2011 +0000
+++ b/browser/branding/unofficial/locales/en-US/brand.properties	Wed Apr 13 21:17:37 2011 -0700
@@ -1,3 +1,3 @@
-brandShortName=Mozilla Developer Preview
-brandFullName=Mozilla Developer Preview
+brandShortName=Tumucumaque
+brandFullName=Tumucumaque
 vendorShortName=mozilla.org
diff -r 6be9e31d01b4 -r fca718600ca0 browser/config/version.txt
--- a/browser/config/version.txt	Fri Mar 18 11:37:42 2011 +0000
+++ b/browser/config/version.txt	Wed Apr 13 21:17:37 2011 -0700
@@ -1,1 +1,1 @@
-4.0
+4.0.1
diff -r 6be9e31d01b4 -r fca718600ca0 browser/confvars.sh
--- a/browser/confvars.sh	Fri Mar 18 11:37:42 2011 +0000
+++ b/browser/confvars.sh	Wed Apr 13 21:17:37 2011 -0700
@@ -50,5 +50,5 @@
 MOZ_APP_VERSION=$FIREFOX_VERSION
 MOZ_EXTENSIONS_DEFAULT=" gnomevfs"
 # MOZ_APP_DISPLAYNAME will be set by branding/configure.sh
-MOZ_BRANDING_DIRECTORY=browser/branding/nightly
+MOZ_BRANDING_DIRECTORY=browser/branding/unofficial
 MOZ_OFFICIAL_BRANDING_DIRECTORY=other-licenses/branding/firefox
diff -r 6be9e31d01b4 -r fca718600ca0 browser/installer/package-manifest.in
--- a/browser/installer/package-manifest.in	Fri Mar 18 11:37:42 2011 +0000
+++ b/browser/installer/package-manifest.in	Wed Apr 13 21:17:37 2011 -0700
@@ -585,4 +585,6 @@
 ; [OS/2]
 #ifdef XP_OS2
 @BINPATH@/MozSounds.cmd
+@BINPATH@/*.xqs
+@BINPATH@/components/*.xqs
 #endif
diff -r 6be9e31d01b4 -r fca718600ca0 browser/themes/gnomestripe/browser/browser.css
--- a/browser/themes/gnomestripe/browser/browser.css	Fri Mar 18 11:37:42 2011 +0000
+++ b/browser/themes/gnomestripe/browser/browser.css	Wed Apr 13 21:17:37 2011 -0700
@@ -1389,6 +1389,7 @@
 #TabsToolbar[tabsontop=true]:not(:-moz-lwtheme) {
   -moz-appearance: menubar;
   color: -moz-menubartext;
+  box-shadow: 0 -1px 0 rgba(0,0,0,.1) inset;
 }
 
 #TabsToolbar[tabsontop=true]:not(:-moz-lwtheme):-moz-system-metric(menubar-drag) {
diff -r 6be9e31d01b4 -r fca718600ca0 build/pgo/server-locations.txt
--- a/build/pgo/server-locations.txt	Fri Mar 18 11:37:42 2011 +0000
+++ b/build/pgo/server-locations.txt	Wed Apr 13 21:17:37 2011 -0700
@@ -123,6 +123,10 @@
 https://requestclientcert.example.com:443         privileged,clientauth=request
 https://requireclientcert.example.com:443         privileged,clientauth=require
 
+# This is here so that we don't load the default live bookmark over
+# the network in every test suite.
+http://fxfeeds.mozilla.com:80
+
 #
 # These are subdomains of <ält.example.org>.
 #
diff -r 6be9e31d01b4 -r fca718600ca0 config/milestone.txt
--- a/config/milestone.txt	Fri Mar 18 11:37:42 2011 +0000
+++ b/config/milestone.txt	Wed Apr 13 21:17:37 2011 -0700
@@ -10,4 +10,4 @@
 # hardcoded milestones in the tree from these two files.
 #--------------------------------------------------------
 
-2.0
+2.0.1
diff -r 6be9e31d01b4 -r fca718600ca0 configure.in
--- a/configure.in	Fri Mar 18 11:37:42 2011 +0000
+++ b/configure.in	Wed Apr 13 21:17:37 2011 -0700
@@ -2738,6 +2738,7 @@
     RC=rc.exe
     RCFLAGS='-n'
     MOZ_USER_DIR="Mozilla"
+    ZIP="$ZIP -X"
 
     if test "$MOZTOOLS"; then
         MOZ_TOOLS_DIR=`echo $MOZTOOLS | sed -e 's|\\\\|/|g'`
@@ -9012,6 +9013,10 @@
   AC_DEFINE_UNQUOTED(MOZ_APP_COMPONENT_INCLUDE, "$MOZ_APP_COMPONENT_INCLUDE")
 fi
 
+if test "$MOZ_APP_COMPONENT_MODULES"; then
+  AC_DEFINE_UNQUOTED(MOZ_APP_COMPONENT_MODULES, $MOZ_APP_COMPONENT_MODULES)
+fi
+
 dnl ========================================================
 dnl =
 dnl = Maintainer debug option (no --enable equivalent)
diff -r 6be9e31d01b4 -r fca718600ca0 content/base/public/nsDOMFile.h
--- a/content/base/public/nsDOMFile.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/base/public/nsDOMFile.h	Wed Apr 13 21:17:37 2011 -0700
@@ -57,6 +57,7 @@
 class nsIClassInfo;
 
 class nsDOMFile : public nsIDOMFile,
+                  public nsIDOMBlob_MOZILLA_2_0_BRANCH,
                   public nsIXHRSendable,
                   public nsICharsetDetectionObserver
 {
@@ -64,6 +65,7 @@
   NS_DECL_ISUPPORTS
   NS_DECL_NSIDOMBLOB
   NS_DECL_NSIDOMFILE
+  NS_DECL_NSIDOMBLOB_MOZILLA_2_0_BRANCH
   NS_DECL_NSIXHRSENDABLE
 
   nsDOMFile(nsIFile *aFile, const nsAString& aContentType)
@@ -149,8 +151,9 @@
   NS_IMETHOD GetSize(PRUint64*);
   NS_IMETHOD GetInternalStream(nsIInputStream**);
   NS_IMETHOD GetMozFullPathInternal(nsAString&);
-  NS_IMETHOD Slice(PRUint64 aStart, PRUint64 aLength,
-                   const nsAString& aContentType, nsIDOMBlob **aBlob);
+  NS_IMETHOD MozSlice(PRInt64 aStart, PRInt64 aEnd,
+                      const nsAString& aContentType, PRUint8 optional_argc,
+                      nsIDOMBlob **aBlob);
 
 protected:
   friend class DataOwnerAdapter; // Needs to see DataOwner
diff -r 6be9e31d01b4 -r fca718600ca0 content/base/public/nsIDOMFile.idl
--- a/content/base/public/nsIDOMFile.idl	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/base/public/nsIDOMFile.idl	Wed Apr 13 21:17:37 2011 -0700
@@ -49,9 +49,9 @@
   readonly attribute unsigned long long size;
   readonly attribute DOMString type;
 
-  nsIDOMBlob slice(in unsigned long long start,
-                   in unsigned long long length,
-                   [optional] in DOMString contentType);
+  [noscript] nsIDOMBlob slice(in unsigned long long start,
+                              in unsigned long long length,
+                              [optional] in DOMString contentType);
 
   [noscript] readonly attribute nsIInputStream internalStream;
   // The caller is responsible for releasing the internalUrl from the
@@ -59,6 +59,14 @@
   [noscript] DOMString getInternalUrl(in nsIPrincipal principal);
 };
 
+[scriptable, uuid(cb5b4191-a555-4e57-b8d2-88091184b59f)]
+interface nsIDOMBlob_MOZILLA_2_0_BRANCH : nsISupports
+{
+  [optional_argc] nsIDOMBlob mozSlice(in long long start,
+                                      [optional] in long long end,
+                                      [optional] in DOMString contentType);
+};
+
 [scriptable, uuid(ae1405b0-e411-481e-9606-b29ec7982687)]
 interface nsIDOMFile : nsIDOMBlob
 {
diff -r 6be9e31d01b4 -r fca718600ca0 content/base/src/nsDOMFile.cpp
--- a/content/base/src/nsDOMFile.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/base/src/nsDOMFile.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -146,6 +146,7 @@
 NS_INTERFACE_MAP_BEGIN(nsDOMFile)
   NS_INTERFACE_MAP_ENTRY_AMBIGUOUS(nsISupports, nsIDOMFile)
   NS_INTERFACE_MAP_ENTRY(nsIDOMBlob)
+  NS_INTERFACE_MAP_ENTRY(nsIDOMBlob_MOZILLA_2_0_BRANCH)
   NS_INTERFACE_MAP_ENTRY_CONDITIONAL(nsIDOMFile, mIsFullFile)
   NS_INTERFACE_MAP_ENTRY(nsIXHRSendable)
   NS_INTERFACE_MAP_ENTRY(nsICharsetDetectionObserver)
@@ -252,17 +253,40 @@
   return NS_OK;
 }
 
-// Makes sure that aStart and aStart + aLength is less then or equal to aSize
+// Makes sure that aStart and aEnd is less then or equal to aSize and greater
+// than 0
 void
-ClampToSize(PRUint64 aSize, PRUint64& aStart, PRUint64& aLength)
+ParseSize(PRInt64 aSize, PRInt64& aStart, PRInt64& aEnd)
 {
-  if (aStart > aSize) {
-    aStart = aLength = 0;
+  CheckedInt64 newStartOffset = aStart;
+  if (aStart < -aSize) {
+    newStartOffset = 0;
   }
-  CheckedUint64 endOffset = aStart;
-  endOffset += aLength;
-  if (!endOffset.valid() || endOffset.value() > aSize) {
-    aLength = aSize - aStart;
+  else if (aStart < 0) {
+    newStartOffset += aSize;
+  }
+  else if (aStart > aSize) {
+    newStartOffset = aSize;
+  }
+
+  CheckedInt64 newEndOffset = aEnd;
+  if (aEnd < -aSize) {
+    newEndOffset = 0;
+  }
+  else if (aEnd < 0) {
+    newEndOffset += aSize;
+  }
+  else if (aEnd > aSize) {
+    newEndOffset = aSize;
+  }
+
+  if (!newStartOffset.valid() || !newEndOffset.valid() ||
+      newStartOffset.value() >= newEndOffset.value()) {
+    aStart = aEnd = 0;
+  }
+  else {
+    aStart = newStartOffset.value();
+    aEnd = newEndOffset.value();
   }
 }
 
@@ -270,16 +294,29 @@
 nsDOMFile::Slice(PRUint64 aStart, PRUint64 aLength,
                  const nsAString& aContentType, nsIDOMBlob **aBlob)
 {
+  return MozSlice(aStart, aStart + aLength, aContentType, 2, aBlob);
+}
+
+NS_IMETHODIMP
+nsDOMFile::MozSlice(PRInt64 aStart, PRInt64 aEnd,
+                    const nsAString& aContentType, PRUint8 optional_argc,
+                    nsIDOMBlob **aBlob)
+{
   *aBlob = nsnull;
 
   // Truncate aLength and aStart so that we stay within this file.
   PRUint64 thisLength;
   nsresult rv = GetSize(&thisLength);
   NS_ENSURE_SUCCESS(rv, rv);
-  ClampToSize(thisLength, aStart, aLength);
+
+  if (!optional_argc) {
+    aEnd = (PRInt64)thisLength;
+  }
+
+  ParseSize((PRInt64)thisLength, aStart, aEnd);
   
   // Create the new file
-  NS_ADDREF(*aBlob = new nsDOMFile(this, aStart, aLength, aContentType));
+  NS_ADDREF(*aBlob = new nsDOMFile(this, aStart, aEnd - aStart, aContentType));
   
   return NS_OK;
 }
@@ -634,16 +671,22 @@
 }
 
 NS_IMETHODIMP
-nsDOMMemoryFile::Slice(PRUint64 aStart, PRUint64 aLength,
-                       const nsAString& aContentType, nsIDOMBlob **aBlob)
+nsDOMMemoryFile::MozSlice(PRInt64 aStart, PRInt64 aEnd,
+                          const nsAString& aContentType, PRUint8 optional_argc,
+                          nsIDOMBlob **aBlob)
 {
   *aBlob = nsnull;
 
+  if (!optional_argc) {
+    aEnd = (PRInt64)mLength;
+  }
+
   // Truncate aLength and aStart so that we stay within this file.
-  ClampToSize(mLength, aStart, aLength);
+  ParseSize((PRInt64)mLength, aStart, aEnd);
 
   // Create the new file
-  NS_ADDREF(*aBlob = new nsDOMMemoryFile(this, aStart, aLength, aContentType));
+  NS_ADDREF(*aBlob = new nsDOMMemoryFile(this, aStart, aEnd - aStart,
+                                         aContentType));
   
   return NS_OK;
 }
diff -r 6be9e31d01b4 -r fca718600ca0 content/base/src/nsXMLHttpRequest.cpp
--- a/content/base/src/nsXMLHttpRequest.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/base/src/nsXMLHttpRequest.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -705,39 +705,39 @@
     return nsnull;
   }
 
-  if (!mTable.Put(key, entry)) {
-    // Failed, clean up the new entry.
-    delete entry;
-
-    NS_WARNING("Failed to add entry to the access control cache!");
-    return nsnull;
-  }
-
-  PR_INSERT_LINK(entry, &mList);
-
-  NS_ASSERTION(mTable.Count() <= ACCESS_CONTROL_CACHE_SIZE + 1,
+  NS_ASSERTION(mTable.Count() <= ACCESS_CONTROL_CACHE_SIZE,
                "Something is borked, too many entries in the cache!");
 
   // Now enforce the max count.
-  if (mTable.Count() > ACCESS_CONTROL_CACHE_SIZE) {
+  if (mTable.Count() == ACCESS_CONTROL_CACHE_SIZE) {
     // Try to kick out all the expired entries.
     PRTime now = PR_Now();
     mTable.Enumerate(RemoveExpiredEntries, &now);
 
     // If that didn't remove anything then kick out the least recently used
     // entry.
-    if (mTable.Count() > ACCESS_CONTROL_CACHE_SIZE) {
+    if (mTable.Count() == ACCESS_CONTROL_CACHE_SIZE) {
       CacheEntry* lruEntry = static_cast<CacheEntry*>(PR_LIST_TAIL(&mList));
       PR_REMOVE_LINK(lruEntry);
 
       // This will delete 'lruEntry'.
       mTable.Remove(lruEntry->mKey);
 
-      NS_ASSERTION(mTable.Count() == ACCESS_CONTROL_CACHE_SIZE,
+      NS_ASSERTION(mTable.Count() == ACCESS_CONTROL_CACHE_SIZE - 1,
                    "Somehow tried to remove an entry that was never added!");
     }
   }
   
+  if (!mTable.Put(key, entry)) {
+    // Failed, clean up the new entry.
+    delete entry;
+
+    NS_WARNING("Failed to add entry to the access control cache!");
+    return nsnull;
+  }
+
+  PR_INSERT_LINK(entry, &mList);
+
   return entry;
 }
 
@@ -776,7 +776,7 @@
   aValue->PurgeExpired(*now);
   
   if (aValue->mHeaders.IsEmpty() &&
-      aValue->mHeaders.IsEmpty()) {
+      aValue->mMethods.IsEmpty()) {
     // Expired, remove from the list as well as the hash table.
     PR_REMOVE_LINK(aValue);
     return PL_DHASH_REMOVE;
diff -r 6be9e31d01b4 -r fca718600ca0 content/base/test/file_bug428847-1.xhtml
--- a/content/base/test/file_bug428847-1.xhtml	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/base/test/file_bug428847-1.xhtml	Wed Apr 13 21:17:37 2011 -0700
@@ -1,4 +1,4 @@
-<?xml-stylesheet type="text/xsl" href="http://www.mozilla.com/whatever.xsl"?>
+<?xml-stylesheet type="text/xsl" href="http://example.com/whatever.xsl"?>
 <html xmlns="http://www.w3.org/1999/xhtml">
 <body id='body' onload="if (document.getElementById('body')) parent.iframe1Loaded = true;"/>
 </html>
diff -r 6be9e31d01b4 -r fca718600ca0 content/base/test/test_bug428847.html
--- a/content/base/test/test_bug428847.html	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/base/test/test_bug428847.html	Wed Apr 13 21:17:37 2011 -0700
@@ -17,8 +17,8 @@
 
 function runtests()
 {
-  //is(iframe1Loaded, true,
-  //   "Iframe with cross-origin xslt stylesheet failed to load");
+  todo(iframe1Loaded, true,
+       "Iframe with cross-origin xslt stylesheet failed to load");
   is(iframe2Loaded, false,
      "Iframe with invalid xslt stylesheet URI didn't fail to load");
 
diff -r 6be9e31d01b4 -r fca718600ca0 content/base/test/test_fileapi_slice.html
--- a/content/base/test/test_fileapi_slice.html	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/base/test/test_fileapi_slice.html	Wed Apr 13 21:17:37 2011 -0700
@@ -69,104 +69,83 @@
 
 
 // Test that basic properties work
-function testBasics(file, size, type) {
-  is(file.type, type, "[B0] mozGetAsFile type");
-  is(file.size, size, "[B0] file is correct size");
-  ok(file instanceof File, "[B0] file is a File");
-  ok(file instanceof Blob, "[B0] file is also a Blob");
+function testFile(file, size, type, contents, fileType) {
+  is(file.type, type, fileType + " file is correct type");
+  is(file.size, size, fileType + " file is correct size");
+  ok(file instanceof File, fileType + " file is a File");
+  ok(file instanceof Blob, fileType + " file is also a Blob");
   
-  var slice = file.slice(0, size);
-  is(slice.type, "", "[B1] full-size type");
-  is(slice.size, size, "[B1] full-size size");
-  ok(slice instanceof Blob, "[B1] slice is a Blob");
-  ok(!(slice instanceof File), "[B1] slice is not a File");
+  var slice = file.mozSlice(0, size);
+  ok(slice instanceof Blob, fileType + " fullsize slice is a Blob");
+  ok(!(slice instanceof File), fileType + " fullsize slice is not a File");
   
-  slice = file.slice(0, 1234);
-  is(slice.type, "", "[B2] sized type");
-  is(slice.size, 1234, "[B2] sized size");
-  ok(slice instanceof Blob, "[B2] slice is a Blob");
-  ok(!(slice instanceof File), "[B2] slice is not a File");
+  slice = file.mozSlice(0, 1234);
+  ok(slice instanceof Blob, fileType + " sized slice is a Blob");
+  ok(!(slice instanceof File), fileType + " sized slice is not a File");
   
-  slice = file.slice(size-500, 1000);
-  is(slice.type, "", "[B3] end-sized type");
-  is(slice.size, 500, "[B3] end-sized size");
+  slice = file.mozSlice(0, size, "foo/bar");
+  is(slice.type, "foo/bar", fileType + " fullsize slice foo/bar type");
+
+  slice = file.mozSlice(0, 5432, "foo/bar");
+  is(slice.type, "foo/bar", fileType + " sized slice foo/bar type");
   
-  slice = file.slice(size+500, 1000);
-  is(slice.type, "", "[B4] sized type");
-  is(slice.size, 0, "[B4] sized size");
+  is(slice.mozSlice(0, 10).type, "", fileType + " slice-slice type");
+  is(slice.mozSlice(0, 10).size, 10, fileType + " slice-slice size");
+  is(slice.mozSlice(0, 10, "hello/world").type, "hello/world", fileType + " slice-slice hello/world type");
+  is(slice.mozSlice(0, 10, "hello/world").size, 10, fileType + " slice-slice hello/world size");
 
-  slice = file.slice(0, 0);
-  is(slice.type, "", "[B5] sized type");
-  is(slice.size, 0, "[B5] sized size");
+  var indexes = [[0, size, size],
+                 [0, 1234, 1234],
+                 [size-500, size, 500],
+                 [size-500, size+500, 500],
+                 [size+500, size+1500, 0],
+                 [0, 0, 0],
+                 [1000, 1000, 0],
+                 [size, size, 0],
+                 [0, undefined, size],
+                 [100, undefined, size-100],
+                 [-100, undefined, 100],
+                 [100, -100, size-200],
+                 [-size-100, undefined, size],
+                 [-2*size-100, 500, 500],
+                 [0, -size-100, 0],
+                 [100, -size-100, 0],
+                 [50, -size+100, 50],
+                 [0, 33000, 33000],
+                 [1000, 34000, 33000],
+                ];
+  
+  for (var i = 0; i < indexes.length; ++i) {
+    var sliceContents;
+    var testName;
+    if (indexes[i][1] == undefined) {
+      slice = file.mozSlice(indexes[i][0]);
+      sliceContents = contents.slice(indexes[i][0]);
+      testName = fileType + " slice(" + indexes[i][0] + ")";
+    }
+    else {
+      slice = file.mozSlice(indexes[i][0], indexes[i][1]);
+      sliceContents = contents.slice(indexes[i][0], indexes[i][1]);
+      testName = fileType + " slice(" + indexes[i][0] + ", " + indexes[i][1] + ")";
+    }
+    is(slice.type, "", testName + " type");
+    is(slice.size, indexes[i][2], testName + " size");
+    is(sliceContents.length, indexes[i][2], testName + " data size");
+    checkFileContents(slice, sliceContents, testName);
+  }
 
-  slice = file.slice(1000, 0);
-  is(slice.type, "", "[B6] sized type");
-  is(slice.size, 0, "[B6] sized size");
+  // Slice of slice
+  var slice = file.mozSlice(0, 40000);
+  checkFileContents(slice.mozSlice(5000, 42000), contents.slice(5000, 40000), "file slice slice");
   
-  slice = file.slice(0, size, "foo/bar");
-  is(slice.type, "foo/bar", "[B7] full-size foo/bar type");
-  is(slice.size, size, "[B7] full-size foo/bar size");
-
-  slice = file.slice(0, 5432, "foo/bar");
-  is(slice.type, "foo/bar", "[B8] sized foo/bar type");
-  is(slice.size, 5432, "[B8] sized foo/bar size");
-  
-  is(slice.slice(0, 10).type, "", "[B9] slice-slice type");
-  is(slice.slice(0, 10).size, 10, "[B9] slice-slice size");
-  is(slice.slice(0, 10, "hello/world").type, "hello/world", "[B9] slice-slice hello/world type");
-  is(slice.slice(0, 10, "hello/world").size, 10, "[B9] slice-slice hello/world type");
+  // ...of slice of slice
+  slice = slice.mozSlice(5000, 42000).mozSlice(400, 700);
+  gc();
+  checkFileContents(slice, contents.slice(5400, 5700), "file slice slice slice");
 }
 
-testBasics(memFile, size, "image/png");
-testBasics(fileFile, size, "");
-
-
-// Test reading various slices
-
-// Full file
-testFile(memFile, fileData, "mem file");
-testFile(fileFile, fileData, "file file");
-
-// Simple slice
-testFile(memFile.slice(0, 33000), fileData.substr(0, 33000), "mem file slice");
-testFile(fileFile.slice(0, 33000), fileData.substr(0, 33000), "file file slice");
-
-// Simple slice not starting at beginning
-testFile(memFile.slice(1000, 33000), fileData.substr(1000, 33000), "mem file slice starting at non-zero");
-testFile(fileFile.slice(1000, 33000), fileData.substr(1000, 33000), "file file slice starting at non-zero");
-
-// Slice of slice
-var memSlice = memFile.slice(0, 40000);
-var fileSlice = fileFile.slice(0, 40000);
-testFile(memSlice.slice(5000, 37000), fileData.substr(5000, 35000), "mem file slice slice");
-testFile(fileSlice.slice(5000, 37000), fileData.substr(5000, 35000), "file file slice slice");
-
-// ...of slice of slice
-memSlice = memSlice.slice(5000, 37000).slice(400, 300);
-fileSlice = fileSlice.slice(5000, 37000).slice(400, 300);
-gc();
-testFile(memSlice, fileData.substr(5400, 300), "mem file slice slice slice");
-testFile(fileSlice, fileData.substr(5400, 300), "file file slice slice slice");
-
-// empty slice
-testFile(memFile.slice(4711, 0), "", "mem file empty slice (1)");
-testFile(fileFile.slice(4711, 0), "", "file file empty slice (1)");
-testFile(memFile.slice(0, 0), "", "mem file empty slice (2)");
-testFile(fileFile.slice(0, 0), "", "file file empty slice (2)");
-
-// slice at end
-testFile(memFile.slice(size-1000, 1000), fileData.substr(size-1000, 1000), "mem file slice at end");
-testFile(fileFile.slice(size-1000, 1000), fileData.substr(size-1000, 1000), "file file slice at end");
-
-// slice across end
-testFile(memFile.slice(size-500, 1000), fileData.substr(size-500, 500), "mem file slice across end");
-testFile(fileFile.slice(size-500, 1000), fileData.substr(size-500, 500), "file file slice across end");
-
-// slice past end
-testFile(memFile.slice(size, 1000), "", "mem file slice past end (1)");
-testFile(fileFile.slice(size, 1000), "", "file file slice past end (1)");
-testFile(memFile.slice(size + 1000, 1000), "", "mem file slice past end (2)");
-testFile(fileFile.slice(size + 1000, 1000), "", "file file slice past end (2)");
+testFile(memFile, size, "image/png", fileData, "memFile");
+testFile(fileFile, size, "", fileData, "fileFile");
 
 
 // Try loading directly from slice into an image
@@ -202,7 +181,7 @@
 var imgfile = createFileWithData(testBinaryData + fileData + testBinaryData);
 is(imgfile.size, size + testBinaryData.length * 2, "correct file size (middle)");
 var img = new Image;
-img.src = URL.createObjectURL(imgfile.slice(testBinaryData.length, size));
+img.src = URL.createObjectURL(imgfile.mozSlice(testBinaryData.length, testBinaryData.length + size));
 img.onload = imageLoadHandler;
 expectedTestCount++;
 
@@ -210,7 +189,7 @@
 var imgfile = createFileWithData(fileData + testBinaryData);
 is(imgfile.size, size + testBinaryData.length, "correct file size (start)");
 var img = new Image;
-img.src = URL.createObjectURL(imgfile.slice(0, size));
+img.src = URL.createObjectURL(imgfile.mozSlice(0, size));
 img.onload = imageLoadHandler;
 expectedTestCount++;
 
@@ -218,7 +197,7 @@
 var imgfile = createFileWithData(testBinaryData + fileData);
 is(imgfile.size, size + testBinaryData.length, "correct file size (end)");
 var img = new Image;
-img.src = URL.createObjectURL(imgfile.slice(testBinaryData.length, size));
+img.src = URL.createObjectURL(imgfile.mozSlice(testBinaryData.length, testBinaryData.length + size));
 img.onload = imageLoadHandler;
 expectedTestCount++;
 
@@ -226,13 +205,15 @@
 var imgfile = createFileWithData(testBinaryData + fileData);
 is(imgfile.size, size + testBinaryData.length, "correct file size (past end)");
 var img = new Image;
-img.src = URL.createObjectURL(imgfile.slice(testBinaryData.length, size + 1000));
+img.src = URL.createObjectURL(imgfile.mozSlice(testBinaryData.length, testBinaryData.length + size + 1000));
 img.onload = imageLoadHandler;
 expectedTestCount++;
 
 
 // Utility functions
-function testFile(file, contents, test) {
+function checkFileContents(file, contents, test) {
+  SimpleTest.requestLongerTimeout(2);
+
   // Load file using FileReader
   var r = new FileReader();
   r.onload = getFileReaderLoadHandler(contents, contents.length, "FileReader.readAsBinaryString of " + test);
diff -r 6be9e31d01b4 -r fca718600ca0 content/html/content/src/nsHTMLSelectElement.cpp
--- a/content/html/content/src/nsHTMLSelectElement.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/html/content/src/nsHTMLSelectElement.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -1270,7 +1270,7 @@
 NS_IMPL_BOOL_ATTR(nsHTMLSelectElement, Multiple, multiple)
 NS_IMPL_STRING_ATTR(nsHTMLSelectElement, Name, name)
 NS_IMPL_BOOL_ATTR(nsHTMLSelectElement, Required, required)
-NS_IMPL_POSITIVE_INT_ATTR_DEFAULT_VALUE(nsHTMLSelectElement, Size, size, 0)
+NS_IMPL_NON_NEGATIVE_INT_ATTR_DEFAULT_VALUE(nsHTMLSelectElement, Size, size, 0)
 NS_IMPL_INT_ATTR(nsHTMLSelectElement, TabIndex, tabindex)
 
 NS_IMETHODIMP
diff -r 6be9e31d01b4 -r fca718600ca0 content/html/content/test/test_bug551846.html
--- a/content/html/content/test/test_bug551846.html	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/html/content/test/test_bug551846.html	Wed Apr 13 21:17:37 2011 -0700
@@ -37,8 +37,10 @@
     "The content attribute should containt the previously set value");
 
   element.setAttribute('size', 0);
-  is(element.size, defaultValue,
-    "The reflecting IDL attribute should return the default value when content attribute value is invalid");
+  is(element.size, 0,
+    "0 should be considered as a valid value");
+  is(element.getAttribute('size'), 0,
+    "The content attribute should containt the previously set value");
 
   element.setAttribute('size', 2147483647); /* PR_INT32_MAX */
   is(element.size, 2147483647,
@@ -92,7 +94,7 @@
   } catch(e) {
     caught = true;
   }
-  ok(!caught, "Setting a valid size shouldn't throw an exception");
+  ok(!caught, "Setting a positive size shouldn't throw an exception");
 
   caught = false;
   try {
@@ -100,7 +102,7 @@
   } catch(e) {
     caught = true;
   }
-  ok(caught, "Setting an invalid size from the IDL should throw an exception");
+  ok(!caught, "Setting a size to 0 from the IDL shouldn't throw an exception");
 
   caught = false;
   try {
diff -r 6be9e31d01b4 -r fca718600ca0 content/media/nsBuiltinDecoder.h
--- a/content/media/nsBuiltinDecoder.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/media/nsBuiltinDecoder.h	Wed Apr 13 21:17:37 2011 -0700
@@ -442,7 +442,10 @@
   // Constructs the time ranges representing what segments of the media
   // are buffered and playable.
   virtual nsresult GetBuffered(nsTimeRanges* aBuffered) {
-    return mDecoderStateMachine->GetBuffered(aBuffered);
+    if (mDecoderStateMachine) {
+      return mDecoderStateMachine->GetBuffered(aBuffered);
+    }
+    return NS_ERROR_FAILURE;
   }
 
   virtual void NotifyDataArrived(const char* aBuffer, PRUint32 aLength, PRUint32 aOffset) {
diff -r 6be9e31d01b4 -r fca718600ca0 content/media/wave/nsWaveDecoder.cpp
--- a/content/media/wave/nsWaveDecoder.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/media/wave/nsWaveDecoder.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -1746,5 +1746,8 @@
 nsWaveDecoder::GetBuffered(nsTimeRanges* aBuffered)
 {
   NS_ASSERTION(NS_IsMainThread(), "Only call on main thread");
-  return mPlaybackStateMachine->GetBuffered(aBuffered);
+  if (mPlaybackStateMachine) {
+    return mPlaybackStateMachine->GetBuffered(aBuffered);
+  }
+  return NS_ERROR_FAILURE;
 }
diff -r 6be9e31d01b4 -r fca718600ca0 content/smil/nsSMILAnimationController.cpp
--- a/content/smil/nsSMILAnimationController.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/smil/nsSMILAnimationController.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -151,11 +151,7 @@
 
   if (wasPaused && !mPauseState && mChildContainerTable.Count()) {
     Sample(); // Run the first sample manually
-    if (mAnimationElementTable.Count()) {
-      StartSampling(GetRefreshDriverForDoc(mDocument));
-    } else {
-      mDeferredStartSampling = PR_TRUE;
-    }
+    MaybeStartSampling(GetRefreshDriverForDoc(mDocument));
   }
 }
 
@@ -299,8 +295,8 @@
 nsSMILAnimationController::NotifyRefreshDriverCreated(
     nsRefreshDriver* aRefreshDriver)
 {
-  if (!mPauseState && !mDeferredStartSampling) {
-    StartSampling(aRefreshDriver);
+  if (!mPauseState) {
+    MaybeStartSampling(aRefreshDriver);
   }
 }
 
@@ -346,6 +342,22 @@
   }
 }
 
+void
+nsSMILAnimationController::MaybeStartSampling(nsRefreshDriver* aRefreshDriver)
+{
+  if (mDeferredStartSampling) {
+    // We've received earlier 'MaybeStartSampling' calls, and we're
+    // deferring until we get a registered animation.
+    return;
+  }
+
+  if (mAnimationElementTable.Count()) {
+    StartSampling(aRefreshDriver);
+  } else {
+    mDeferredStartSampling = PR_TRUE;
+  }
+}
+
 //----------------------------------------------------------------------
 // Sample-related methods and callbacks
 
@@ -820,15 +832,11 @@
 nsSMILAnimationController::AddChild(nsSMILTimeContainer& aChild)
 {
   TimeContainerPtrKey* key = mChildContainerTable.PutEntry(&aChild);
-  NS_ENSURE_TRUE(key,NS_ERROR_OUT_OF_MEMORY);
+  NS_ENSURE_TRUE(key, NS_ERROR_OUT_OF_MEMORY);
 
   if (!mPauseState && mChildContainerTable.Count() == 1) {
     Sample(); // Run the first sample manually
-    if (mAnimationElementTable.Count()) {
-      StartSampling(GetRefreshDriverForDoc(mDocument));
-    } else {
-      mDeferredStartSampling = PR_TRUE;
-    }
+    MaybeStartSampling(GetRefreshDriverForDoc(mDocument));
   }
 
   return NS_OK;
diff -r 6be9e31d01b4 -r fca718600ca0 content/smil/nsSMILAnimationController.h
--- a/content/smil/nsSMILAnimationController.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/smil/nsSMILAnimationController.h	Wed Apr 13 21:17:37 2011 -0700
@@ -162,6 +162,9 @@
   void StartSampling(nsRefreshDriver* aRefreshDriver);
   void StopSampling(nsRefreshDriver* aRefreshDriver);
 
+  // Wrapper for StartSampling that defers if no animations are registered.
+  void MaybeStartSampling(nsRefreshDriver* aRefreshDriver);
+
   // Sample-related callbacks and implementation helpers
   virtual void DoSample();
   void DoSample(PRBool aSkipUnchangedContainers);
diff -r 6be9e31d01b4 -r fca718600ca0 content/svg/content/src/DOMSVGAnimatedLengthList.cpp
--- a/content/svg/content/src/DOMSVGAnimatedLengthList.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/svg/content/src/DOMSVGAnimatedLengthList.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -122,7 +122,13 @@
   // able to access "items" at indexes that are out of bounds (read/write to
   // bad memory)!!
 
+  nsRefPtr<DOMSVGAnimatedLengthList> kungFuDeathGrip;
   if (mBaseVal) {
+    if (!aNewValue.Length()) {
+      // InternalListLengthWillChange might clear last reference to |this|.
+      // Retain a temporary reference to keep from dying before returning.
+      kungFuDeathGrip = this;
+    }
     mBaseVal->InternalListLengthWillChange(aNewValue.Length());
   }
 
diff -r 6be9e31d01b4 -r fca718600ca0 content/svg/content/src/DOMSVGAnimatedNumberList.cpp
--- a/content/svg/content/src/DOMSVGAnimatedNumberList.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/svg/content/src/DOMSVGAnimatedNumberList.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -121,7 +121,13 @@
   // able to access "items" at indexes that are out of bounds (read/write to
   // bad memory)!!
 
+  nsRefPtr<DOMSVGAnimatedNumberList> kungFuDeathGrip;
   if (mBaseVal) {
+    if (!aNewValue.Length()) {
+      // InternalListLengthWillChange might clear last reference to |this|.
+      // Retain a temporary reference to keep from dying before returning.
+      kungFuDeathGrip = this;
+    }
     mBaseVal->InternalListLengthWillChange(aNewValue.Length());
   }
 
diff -r 6be9e31d01b4 -r fca718600ca0 content/svg/content/src/DOMSVGLengthList.cpp
--- a/content/svg/content/src/DOMSVGLengthList.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/svg/content/src/DOMSVGLengthList.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -103,6 +103,13 @@
     aNewLength = DOMSVGLength::MaxListIndex();
   }
 
+  nsRefPtr<DOMSVGLengthList> kungFuDeathGrip;
+  if (oldLength && !aNewLength) {
+    // RemovingFromList() might clear last reference to |this|.
+    // Retain a temporary reference to keep from dying before returning.
+    kungFuDeathGrip = this;
+  }
+
   // If our length will decrease, notify the items that will be removed:
   for (PRUint32 i = aNewLength; i < oldLength; ++i) {
     if (mItems[i]) {
@@ -393,7 +400,9 @@
 {
   NS_ABORT_IF_FALSE(!IsAnimValList(), "call from baseVal to animVal");
 
-  DOMSVGLengthList* animVal = mAList->mAnimVal;
+  // This needs to be a strong reference; otherwise, the RemovingFromList call
+  // below might drop the last reference to animVal before we're done with it.
+  nsRefPtr<DOMSVGLengthList> animVal = mAList->mAnimVal;
 
   if (!animVal || mAList->IsAnimating()) {
     // No animVal list wrapper, or animVal not a clone of baseVal
diff -r 6be9e31d01b4 -r fca718600ca0 content/svg/content/src/DOMSVGNumberList.cpp
--- a/content/svg/content/src/DOMSVGNumberList.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/svg/content/src/DOMSVGNumberList.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -103,6 +103,13 @@
     aNewLength = DOMSVGNumber::MaxListIndex();
   }
 
+  nsRefPtr<DOMSVGNumberList> kungFuDeathGrip;
+  if (oldLength && !aNewLength) {
+    // RemovingFromList() might clear last reference to |this|.
+    // Retain a temporary reference to keep from dying before returning.
+    kungFuDeathGrip = this;
+  }
+
   // If our length will decrease, notify the items that will be removed:
   for (PRUint32 i = aNewLength; i < oldLength; ++i) {
     if (mItems[i]) {
@@ -393,7 +400,9 @@
 {
   NS_ABORT_IF_FALSE(!IsAnimValList(), "call from baseVal to animVal");
 
-  DOMSVGNumberList* animVal = mAList->mAnimVal;
+  // This needs to be a strong reference; otherwise, the RemovingFromList call
+  // below might drop the last reference to animVal before we're done with it.
+  nsRefPtr<DOMSVGNumberList> animVal = mAList->mAnimVal;
 
   if (!animVal || mAList->IsAnimating()) {
     // No animVal list wrapper, or animVal not a clone of baseVal
diff -r 6be9e31d01b4 -r fca718600ca0 content/svg/content/src/DOMSVGPathSegList.cpp
--- a/content/svg/content/src/DOMSVGPathSegList.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/svg/content/src/DOMSVGPathSegList.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -140,6 +140,13 @@
 
   PRUint32 newSegType;
 
+  nsRefPtr<DOMSVGPathSegList> kungFuDeathGrip;
+  if (length && aNewValue.IsEmpty()) {
+    // RemovingFromList() might clear last reference to |this|.
+    // Retain a temporary reference to keep from dying before returning.
+    kungFuDeathGrip = this;
+  }
+
   while (index < length && dataIndex < dataLength) {
     newSegType = SVGPathSegUtils::DecodeType(aNewValue.mData[dataIndex]);
     if (ItemAt(index) && ItemAt(index)->Type() != newSegType) {
@@ -540,7 +547,9 @@
     return;
   }
 
-  DOMSVGPathSegList *animVal =
+  // This needs to be a strong reference; otherwise, the RemovingFromList call
+  // below might drop the last reference to animVal before we're done with it.
+  nsRefPtr<DOMSVGPathSegList> animVal =
     GetDOMWrapperIfExists(InternalAList().GetAnimValKey());
   if (!animVal) {
     // No animVal list wrapper
diff -r 6be9e31d01b4 -r fca718600ca0 content/svg/content/src/DOMSVGPointList.cpp
--- a/content/svg/content/src/DOMSVGPointList.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/svg/content/src/DOMSVGPointList.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -132,6 +132,13 @@
     newLength = DOMSVGPoint::MaxListIndex();
   }
 
+  nsRefPtr<DOMSVGPointList> kungFuDeathGrip;
+  if (oldLength && !newLength) {
+    // RemovingFromList() might clear last reference to |this|.
+    // Retain a temporary reference to keep from dying before returning.
+    kungFuDeathGrip = this;
+  }
+
   // If our length will decrease, notify the items that will be removed:
   for (PRUint32 i = newLength; i < oldLength; ++i) {
     if (mItems[i]) {
@@ -455,7 +462,9 @@
     return;
   }
 
-  DOMSVGPointList *animVal =
+  // This needs to be a strong reference; otherwise, the RemovingFromList call
+  // below might drop the last reference to animVal before we're done with it.
+  nsRefPtr<DOMSVGPointList> animVal =
     GetDOMWrapperIfExists(InternalAList().GetAnimValKey());
   if (!animVal) {
     // No animVal list wrapper
diff -r 6be9e31d01b4 -r fca718600ca0 content/xslt/src/xpath/txMozillaXPathTreeWalker.cpp
--- a/content/xslt/src/xpath/txMozillaXPathTreeWalker.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/xslt/src/xpath/txMozillaXPathTreeWalker.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -614,15 +614,17 @@
 /* static */
 nsresult
 txXPathNodeUtils::getXSLTId(const txXPathNode& aNode,
+                            const txXPathNode& aBase,
                             nsAString& aResult)
 {
+    PRUword nodeid = ((PRUword)aNode.mNode) - ((PRUword)aBase.mNode);
     if (!aNode.isAttribute()) {
-        CopyASCIItoUTF16(nsPrintfCString(kFmtSize, gPrintfFmt, aNode.mNode),
+        CopyASCIItoUTF16(nsPrintfCString(kFmtSize, gPrintfFmt, nodeid),
                          aResult);
     }
     else {
         CopyASCIItoUTF16(nsPrintfCString(kFmtSizeAttr, gPrintfFmtAttr,
-                                         aNode.mNode, aNode.mIndex), aResult);
+                                         nodeid, aNode.mIndex), aResult);
     }
 
     return NS_OK;
diff -r 6be9e31d01b4 -r fca718600ca0 content/xslt/src/xpath/txXPathTreeWalker.h
--- a/content/xslt/src/xpath/txXPathTreeWalker.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/xslt/src/xpath/txXPathTreeWalker.h	Wed Apr 13 21:17:37 2011 -0700
@@ -130,7 +130,8 @@
     static txXPathNode* getDocument(const txXPathNode& aNode);
     static txXPathNode* getOwnerDocument(const txXPathNode& aNode);
     static PRInt32 getUniqueIdentifier(const txXPathNode& aNode);
-    static nsresult getXSLTId(const txXPathNode& aNode, nsAString& aResult);
+    static nsresult getXSLTId(const txXPathNode& aNode,
+                              const txXPathNode& aBase, nsAString& aResult);
     static void release(txXPathNode* aNode);
     static void getBaseURI(const txXPathNode& aNode, nsAString& aURI);
     static PRIntn comparePosition(const txXPathNode& aNode,
diff -r 6be9e31d01b4 -r fca718600ca0 content/xslt/src/xslt/txGenerateIdFunctionCall.cpp
--- a/content/xslt/src/xslt/txGenerateIdFunctionCall.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/xslt/src/xslt/txGenerateIdFunctionCall.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -40,6 +40,7 @@
 #include "txNodeSet.h"
 #include "txXPathTreeWalker.h"
 #include "txXSLTFunctions.h"
+#include "txExecutionState.h"
 
 /*
   Implementation of XSLT 1.0 extension function: generate-id
@@ -68,6 +69,14 @@
     if (!requireParams(0, 1, aContext))
         return NS_ERROR_XPATH_BAD_ARGUMENT_COUNT;
 
+    txExecutionState* es = 
+        static_cast<txExecutionState*>(aContext->getPrivateContext());
+    if (!es) {
+        NS_ERROR(
+            "called xslt extension function \"current\" with wrong context");
+        return NS_ERROR_UNEXPECTED;
+    }
+
     nsresult rv = NS_OK;
     if (mParams.IsEmpty()) {
         StringResult* strRes;
@@ -75,6 +84,7 @@
         NS_ENSURE_SUCCESS(rv, rv);
 
         txXPathNodeUtils::getXSLTId(aContext->getContextNode(),
+                                    es->getSourceDocument(),
                                     strRes->mValue);
 
         *aResult = strRes;
@@ -97,7 +107,8 @@
     rv = aContext->recycler()->getStringResult(&strRes);
     NS_ENSURE_SUCCESS(rv, rv);
 
-    txXPathNodeUtils::getXSLTId(nodes->get(0), strRes->mValue);
+    txXPathNodeUtils::getXSLTId(nodes->get(0), es->getSourceDocument(),
+                                strRes->mValue);
 
     *aResult = strRes;
  
diff -r 6be9e31d01b4 -r fca718600ca0 content/xul/content/src/nsXULElement.cpp
--- a/content/xul/content/src/nsXULElement.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/content/xul/content/src/nsXULElement.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -1341,7 +1341,8 @@
         NS_ENSURE_SUCCESS(rv, rv);
     }
 
-    nsAutoRemovableScriptBlocker scriptBlocker;
+    nsIDocument* doc = GetCurrentDoc();
+    mozAutoDocUpdate updateBatch(doc, UPDATE_CONTENT_MODEL, aNotify);
 
     PRBool isId = PR_FALSE;
     if (aName == nsGkAtoms::id && aNameSpaceID == kNameSpaceID_None) {
@@ -1361,9 +1362,6 @@
     nsAutoString oldValue;
     GetAttr(aNameSpaceID, aName, oldValue);
 
-    nsIDocument* doc = GetCurrentDoc();
-    mozAutoDocUpdate updateBatch(doc, UPDATE_CONTENT_MODEL, aNotify);
-
     // When notifying, make sure to keep track of states whose value
     // depends solely on the value of an attribute.
     nsEventStates stateMask;
diff -r 6be9e31d01b4 -r fca718600ca0 dom/base/nsDOMClassInfo.cpp
--- a/dom/base/nsDOMClassInfo.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/dom/base/nsDOMClassInfo.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -3843,10 +3843,12 @@
 
   DOM_CLASSINFO_MAP_BEGIN(Blob, nsIDOMBlob)
     DOM_CLASSINFO_MAP_ENTRY(nsIDOMBlob)
+    DOM_CLASSINFO_MAP_ENTRY(nsIDOMBlob_MOZILLA_2_0_BRANCH)
   DOM_CLASSINFO_MAP_END
 
   DOM_CLASSINFO_MAP_BEGIN(File, nsIDOMFile)
     DOM_CLASSINFO_MAP_ENTRY(nsIDOMBlob)
+    DOM_CLASSINFO_MAP_ENTRY(nsIDOMBlob_MOZILLA_2_0_BRANCH)
     DOM_CLASSINFO_MAP_ENTRY(nsIDOMFile)
   DOM_CLASSINFO_MAP_END
 
diff -r 6be9e31d01b4 -r fca718600ca0 dom/indexedDB/IDBObjectStore.cpp
--- a/dom/indexedDB/IDBObjectStore.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/dom/indexedDB/IDBObjectStore.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -737,18 +737,21 @@
                                aObjectDataId);
     NS_ENSURE_SUCCESS(rv, rv);
 
-    NS_NAMED_LITERAL_CSTRING(objectDataKey, "object_data_key");
-
-    if (aObjectStoreKey.IsInt()) {
-      rv = stmt->BindInt64ByName(objectDataKey, aObjectStoreKey.IntValue());
+    if (!updateInfo.info.autoIncrement) {
+      NS_NAMED_LITERAL_CSTRING(objectDataKey, "object_data_key");
+
+      if (aObjectStoreKey.IsInt()) {
+        rv = stmt->BindInt64ByName(objectDataKey, aObjectStoreKey.IntValue());
+      }
+      else if (aObjectStoreKey.IsString()) {
+        rv = stmt->BindStringByName(objectDataKey,
+                                    aObjectStoreKey.StringValue());
+      }
+      else {
+        NS_NOTREACHED("Unknown key type!");
+      }
+      NS_ENSURE_SUCCESS(rv, rv);
     }
-    else if (aObjectStoreKey.IsString()) {
-      rv = stmt->BindStringByName(objectDataKey, aObjectStoreKey.StringValue());
-    }
-    else {
-      NS_NOTREACHED("Unknown key type!");
-    }
-    NS_ENSURE_SUCCESS(rv, rv);
 
     NS_NAMED_LITERAL_CSTRING(value, "value");
 
diff -r 6be9e31d01b4 -r fca718600ca0 dom/indexedDB/IDBTransaction.cpp
--- a/dom/indexedDB/IDBTransaction.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/dom/indexedDB/IDBTransaction.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -479,27 +479,27 @@
       if (aOverwrite) {
         return GetCachedStatement(
           "INSERT OR REPLACE INTO ai_unique_index_data "
-            "(index_id, ai_object_data_id, id, value) "
-          "VALUES (:index_id, :object_data_id, :object_data_key, :value)"
+            "(index_id, ai_object_data_id, value) "
+          "VALUES (:index_id, :object_data_id, :value)"
         );
       }
       return GetCachedStatement(
         "INSERT INTO ai_unique_index_data "
-          "(index_id, aI_object_data_id, id, value) "
-        "VALUES (:index_id, :object_data_id, :object_data_key, :value)"
+          "(index_id, aI_object_data_id, value) "
+        "VALUES (:index_id, :object_data_id, :value)"
       );
     }
     if (aOverwrite) {
       return GetCachedStatement(
         "INSERT OR REPLACE INTO ai_index_data "
-          "(index_id, ai_object_data_id, id, value) "
-        "VALUES (:index_id, :object_data_id, :object_data_key, :value)"
+          "(index_id, ai_object_data_id, value) "
+        "VALUES (:index_id, :object_data_id, :value)"
       );
     }
     return GetCachedStatement(
       "INSERT INTO ai_index_data "
-        "(index_id, ai_object_data_id, id, value) "
-      "VALUES (:index_id, :object_data_id, :object_data_key, :value)"
+        "(index_id, ai_object_data_id, value) "
+      "VALUES (:index_id, :object_data_id, :value)"
     );
   }
   if (aUnique) {
diff -r 6be9e31d01b4 -r fca718600ca0 dom/indexedDB/test/Makefile.in
--- a/dom/indexedDB/test/Makefile.in	Fri Mar 18 11:37:42 2011 +0000
+++ b/dom/indexedDB/test/Makefile.in	Wed Apr 13 21:17:37 2011 -0700
@@ -53,6 +53,7 @@
   helpers.js \
   leaving_page_iframe.html \
   test_add_twice_failure.html \
+  test_autoIncrement_indexes.html \
   test_bad_keypath.html \
   test_bfcache.html \
   test_clear.html \
diff -r 6be9e31d01b4 -r fca718600ca0 dom/indexedDB/test/test_autoIncrement_indexes.html
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/dom/indexedDB/test/test_autoIncrement_indexes.html	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,71 @@
+<!--
+  Any copyright is dedicated to the Public Domain.
+  http://creativecommons.org/publicdomain/zero/1.0/
+-->
+<html>
+<head>
+  <title>Indexed Database Property Test</title>
+
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css"/>
+
+  <script type="text/javascript;version=1.7">
+    function testSteps()
+    {
+      let request = mozIndexedDB.open(window.location.pathname);
+      request.onerror = errorHandler;
+      request.onsuccess = grabEventAndContinueHandler;
+      let event = yield;
+
+      let db = request.result;
+      db.onerror = errorHandler;
+
+      db.setVersion("1").onsuccess = grabEventAndContinueHandler;
+      let event = yield;
+
+      let objectStore = db.createObjectStore("foo", { keyPath: "id",
+                                                      autoIncrement: true });
+      objectStore.createIndex("first","first");
+      objectStore.createIndex("second","second");
+      objectStore.createIndex("third","third");
+
+      let data = { first: "foo", second: "foo", third: "foo" };
+
+      objectStore.add(data).onsuccess = grabEventAndContinueHandler;
+      event = yield;
+
+      let key = event.target.result;
+      ok(key, "Added entry");
+
+      let objectStore = db.transaction("foo").objectStore("foo");
+      let first = objectStore.index("first");
+      let second = objectStore.index("second");
+      let third = objectStore.index("third");
+
+      first.get("foo").onsuccess = grabEventAndContinueHandler;
+      event = yield;
+
+      is (event.target.result.id, key, "Entry in first");
+
+      second.get("foo").onsuccess = grabEventAndContinueHandler;
+      event = yield;
+
+      is (event.target.result.id, key, "Entry in second");
+
+      third.get("foo").onsuccess = grabEventAndContinueHandler;
+      event = yield;
+
+      is (event.target.result.id, key, "Entry in third");
+
+      finishTest();
+      yield;
+    }
+  </script>
+  <script type="text/javascript;version=1.7" src="helpers.js"></script>
+
+</head>
+
+<body onload="runTest();"></body>
+
+</html>
diff -r 6be9e31d01b4 -r fca718600ca0 dom/plugins/PluginModuleChild.cpp
--- a/dom/plugins/PluginModuleChild.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/dom/plugins/PluginModuleChild.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -186,9 +186,9 @@
 
     mPluginFilename = aPluginFilename.c_str();
     nsCOMPtr<nsILocalFile> pluginFile;
-    NS_NewNativeLocalFile(mPluginFilename,
-                          PR_TRUE,
-                          getter_AddRefs(pluginFile));
+    NS_NewLocalFile(NS_ConvertUTF8toUTF16(mPluginFilename),
+                    PR_TRUE,
+                    getter_AddRefs(pluginFile));
 
     PRBool exists;
     pluginFile->Exists(&exists);
diff -r 6be9e31d01b4 -r fca718600ca0 dom/plugins/PluginModuleChild.h
--- a/dom/plugins/PluginModuleChild.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/dom/plugins/PluginModuleChild.h	Wed Apr 13 21:17:37 2011 -0700
@@ -161,6 +161,7 @@
     PluginModuleChild();
     virtual ~PluginModuleChild();
 
+    // aPluginFilename is UTF8, not native-charset!
     bool Init(const std::string& aPluginFilename,
               base::ProcessHandle aParentProcessHandle,
               MessageLoop* aIOLoop,
@@ -282,7 +283,7 @@
 #endif
 
     PRLibrary* mLibrary;
-    nsCString mPluginFilename;
+    nsCString mPluginFilename; // UTF8
     nsCString mUserAgent;
     int mQuirks;
 
diff -r 6be9e31d01b4 -r fca718600ca0 dom/plugins/PluginModuleParent.h
--- a/dom/plugins/PluginModuleParent.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/dom/plugins/PluginModuleParent.h	Wed Apr 13 21:17:37 2011 -0700
@@ -106,6 +106,7 @@
     DeallocPPluginInstance(PPluginInstanceParent* aActor);
 
 public:
+    // aFilePath is UTF8, not native!
     PluginModuleParent(const char* aFilePath);
     virtual ~PluginModuleParent();
 
diff -r 6be9e31d01b4 -r fca718600ca0 editor/libeditor/html/tests/test_bug607584.xul
--- a/editor/libeditor/html/tests/test_bug607584.xul	Fri Mar 18 11:37:42 2011 +0000
+++ b/editor/libeditor/html/tests/test_bug607584.xul	Wed Apr 13 21:17:37 2011 -0700
@@ -100,14 +100,14 @@
       mEditor: null
   };
 
-  var progress;
+  var progress, progressListener;
 
   function runTest() {
     var newEditorElement = document.getElementById("editor");
     newEditorElement.makeEditable("html", true);
     var docShell = newEditorElement.boxObject.QueryInterface(Components.interfaces.nsIEditorBoxObject).docShell;
     progress = docShell.QueryInterface(Components.interfaces.nsIInterfaceRequestor).getInterface(Components.interfaces.nsIWebProgress);
-    var progressListener = new EditorContentListener(newEditorElement);
+    progressListener = new EditorContentListener(newEditorElement);
     progress.addProgressListener(progressListener, Components.interfaces.nsIWebProgress.NOTIFY_ALL);
     newEditorElement.setAttribute("src", "data:text/html,");
   }
diff -r 6be9e31d01b4 -r fca718600ca0 editor/libeditor/html/tests/test_bug616590.xul
--- a/editor/libeditor/html/tests/test_bug616590.xul	Fri Mar 18 11:37:42 2011 +0000
+++ b/editor/libeditor/html/tests/test_bug616590.xul	Wed Apr 13 21:17:37 2011 -0700
@@ -90,14 +90,14 @@
     mEditor: null
   };
 
-  var progress;
+  var progress, progressListener;
 
   function runTest() {
     var editorElement = document.getElementById("editor");
     editorElement.makeEditable("htmlmail", true);
     var docShell = editorElement.boxObject.QueryInterface(Components.interfaces.nsIEditorBoxObject).docShell;
     progress = docShell.QueryInterface(Components.interfaces.nsIInterfaceRequestor).getInterface(Components.interfaces.nsIWebProgress);
-    var progressListener = new EditorContentListener(editorElement);
+    progressListener = new EditorContentListener(editorElement);
     progress.addProgressListener(progressListener, Components.interfaces.nsIWebProgress.NOTIFY_ALL);
     editorElement.setAttribute("src", "data:text/html,");
   }
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/Makefile.in
--- a/gfx/angle/Makefile.in	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/angle/Makefile.in	Wed Apr 13 21:17:37 2011 -0700
@@ -77,7 +77,7 @@
         ShaderLang.cpp \
         SymbolTable.cpp \
 	VariableInfo.cpp \
-	debug.cpp \
+	compilerdebug.cpp \
 	ossource_nspr.cpp \
 	util.cpp \
 	ValidateLimitations.cpp \
@@ -106,6 +106,7 @@
 ##	OutputHLSL.cpp \
 ##	TranslatorHLSL.cpp \
 ##	UnfoldSelect.cpp \
+##	SearchSymbol.cpp \
 ##	$(NULL)
 
 CSRCS   = \
@@ -124,6 +125,20 @@
 EXTRA_DSO_LDOPTS = $(MOZ_COMPONENT_LIBS)
 endif
 
+# ANGLE only on Win32 for now, the solution isn't set up
+# for 64-bit yet. This is handled by MOZ_ANGLE which the configure script
+# leaves undefined in the 64-bit case.
+ifdef MOZ_ANGLE
+
+# libEGL depends on (links against!) libGLESv2!
+DIRS = src/libGLESv2 src/libEGL
+
+libs::
+	expand "$(MOZ_D3DX9_CAB)" -F:$(MOZ_D3DX9_DLL) "$(DIST)/bin"
+	expand "$(MOZ_D3DCOMPILER_CAB)" -F:$(MOZ_D3DCOMPILER_DLL) "$(DIST)/bin"
+
+endif
+
 include $(topsrcdir)/config/rules.mk
 
 # We have to filter out -pedantic, because of
@@ -131,65 +146,3 @@
 # upstream at some point.
 CXXFLAGS := $(filter-out -pedantic,$(CXXFLAGS))
 CFLAGS := $(filter-out -pedantic,$(CFLAGS))
-
-# ANGLE only on Win32 for now, the solution isn't set up
-# for 64-bit yet. This is handled by MOZ_ANGLE which the configure script
-# leaves undefined in the 64-bit case.
-ifdef MOZ_ANGLE
-ifdef MOZ_DEBUG
-ANGLE_DIR = Debug
-else
-ANGLE_DIR = Release
-endif
-
-ifdef MOZ_DIRECTX_SDK_PATH
-# export is needed for INCLUDE and LIB because devenv //useenv will read these env vars
-export INCLUDE := $(INCLUDE);$(MOZ_DIRECTX_SDK_PATH)\include
-export LIB := $(LIB);$(MOZ_DIRECTX_SDK_PATH)\lib\$(MOZ_DIRECTX_SDK_CPU_SUFFIX)
-endif
-
-ANGLE_DEP_PATTERNS = \
-	src/common/*.cpp src/common/*.h \
-	src/compiler/*.cpp src/compiler/*.h \
-	src/compiler/preprocessor/*.cpp src/compiler/preprocessor/*.h \
-	src/libEGL/*.cpp src/libEGL/*.h \
-	src/libGLESv2/*.cpp src/libGLESv2/*.h \
-	$(NULL)
-
-ANGLE_DEPS = $(filter-out Gen_glslang.cpp Gen_glslang_tab.cpp glslang_tab.h,$(wildcard $(ANGLE_DEP_PATTERNS)))
-
-libs:: libGLESv2.dll libEGL.dll
-	$(INSTALL) $(IFLAGS2) libGLESv2.dll libEGL.dll $(MOZ_D3DX9_DLL) $(MOZ_D3DCOMPILER_DLL) $(DIST)/bin
-
-# we don't want this to attempt to parallel-build these dlls;
-# building one will build both.
-libGLESv2.dll: libEGL.dll
-
-libEGL.dll: $(GLOBAL_DEPS) $(ANGLE_DEPS)
-	@(echo "=== Building ANGLE via devenv.exe ===" \
-	&& rm -rf angle-build && mkdir angle-build \
-	&& cp -r $(srcdir)/src $(srcdir)/include angle-build \
-	&& cd angle-build/src \
-	&& echo "Upgrading solution..." \
-	&& devenv angle.sln //upgrade \
-	&& echo "Tweaking project files to use ASLR and DEP..." \
-	&& ( find . -name '*proj' | xargs \
-	     perl -i.bak -p \
-	          -e 'BEGIN{undef $/;} s/<RandomizedBaseAddress>([^<^>])*<\/RandomizedBaseAddress>/<RandomizedBaseAddress>true<\/RandomizedBaseAddress>/sgmi;' \
-	          -e 'BEGIN{undef $/;} s/<DataExecutionPrevention>([^<^>])*<\/DataExecutionPrevention>/<DataExecutionPrevention>true<\/DataExecutionPrevention>/sgmi;' \
-		  -e 's/RandomizedBaseAddress\=\"0\"/RandomizedBaseAddress\=\"1\"/g;' \
-		  -e 's/DataExecutionPrevention\=\"0\"/DataExecutionPrevention\=\"1\"/g;' \
-	   ) \
-	&& echo "Building solution, target $(ANGLE_DIR)|Win32..." \
-	&& ( devenv angle.sln //useenv //build "$(ANGLE_DIR)|Win32" //out ../../angle-build-log.txt \
-	       || (cat ../../angle-build-log.txt && exit 1) \
-	   ) \
-	&& echo "Copying dlls..." \
-	&& cp $(ANGLE_DIR)/*.dll ../.. \
-	&& cd ../.. \
-	&& echo "Extracting dlls from cab file..." \
-	&& expand "$(MOZ_D3DX9_CAB)" . -F:$(MOZ_D3DX9_DLL) \
-	&& expand "$(MOZ_D3DCOMPILER_CAB)" . -F:$(MOZ_D3DCOMPILER_DLL) \
-	)
-
-endif
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/build_angle.gyp
--- a/gfx/angle/src/build_angle.gyp	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/angle/src/build_angle.gyp	Wed Apr 13 21:17:37 2011 -0700
@@ -21,8 +21,8 @@
         'compiler/Common.h',
         'compiler/Compiler.cpp',
         'compiler/ConstantUnion.h',
-        'compiler/debug.cpp',
-        'compiler/debug.h',
+        'compiler/compilerdebug.cpp',
+        'compiler/compilerdebug.h',
         'compiler/glslang.h',
         'compiler/glslang_lex.cpp',
         'compiler/glslang_tab.cpp',
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/common/version.h
--- a/gfx/angle/src/common/version.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/angle/src/common/version.h	Wed Apr 13 21:17:37 2011 -0700
@@ -1,7 +1,7 @@
 #define MAJOR_VERSION 0
 #define MINOR_VERSION 0
 #define BUILD_VERSION 0
-#define BUILD_REVISION 541
+#define BUILD_REVISION 611
 
 #define STRINGIFY(x) #x
 #define MACRO_STRINGIFY(x) STRINGIFY(x)
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/compiler/OutputGLSL.cpp
--- a/gfx/angle/src/compiler/OutputGLSL.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/angle/src/compiler/OutputGLSL.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -5,7 +5,7 @@
 //
 
 #include "compiler/OutputGLSL.h"
-#include "compiler/debug.h"
+#include "compiler/compilerdebug.h"
 
 namespace
 {
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/compiler/OutputHLSL.cpp
--- a/gfx/angle/src/compiler/OutputHLSL.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/angle/src/compiler/OutputHLSL.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -6,7 +6,7 @@
 
 #include "compiler/OutputHLSL.h"
 
-#include "compiler/debug.h"
+#include "compiler/compilerdebug.h"
 #include "compiler/InfoSink.h"
 #include "compiler/UnfoldSelect.h"
 #include "compiler/SearchSymbol.h"
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/compiler/Types.h
--- a/gfx/angle/src/compiler/Types.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/angle/src/compiler/Types.h	Wed Apr 13 21:17:37 2011 -0700
@@ -9,7 +9,7 @@
 
 #include "compiler/BaseTypes.h"
 #include "compiler/Common.h"
-#include "compiler/debug.h"
+#include "compiler/compilerdebug.h"
 
 //
 // Need to have association of line numbers to types in a list for building structs.
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/compiler/compilerdebug.cpp
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/gfx/angle/src/compiler/compilerdebug.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,36 @@
+//
+// Copyright (c) 2002-2010 The ANGLE Project Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+//
+
+// compilerdebug.cpp: Debugging utilities.
+
+#include "compiler/compilerdebug.h"
+
+#include <stdarg.h>
+#include <stdio.h>
+
+#include "compiler/ParseHelper.h"
+
+static const int kTraceBufferLen = 1024;
+
+#ifdef TRACE_ENABLED
+extern "C" {
+void Trace(const char *format, ...) {
+    if (!format) return;
+
+    TParseContext* parseContext = GetGlobalParseContext();
+    if (parseContext) {
+        char buf[kTraceBufferLen];
+        va_list args;
+        va_start(args, format);
+        vsnprintf(buf, kTraceBufferLen, format, args);
+        va_end(args);
+
+        parseContext->infoSink.debug << buf;
+    }
+}
+}  // extern "C"
+#endif  // TRACE_ENABLED
+
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/compiler/compilerdebug.h
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/gfx/angle/src/compiler/compilerdebug.h	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,53 @@
+//
+// Copyright (c) 2002-2010 The ANGLE Project Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+//
+
+// compilerdebug.h: Debugging utilities.
+
+#ifndef COMPILER_DEBUG_H_
+#define COMPILER_DEBUG_H_
+
+#include <assert.h>
+
+#ifdef _DEBUG
+#define TRACE_ENABLED  // define to enable debug message tracing
+#endif  // _DEBUG
+
+// Outputs text to the debug log
+#ifdef TRACE_ENABLED
+
+#ifdef  __cplusplus
+extern "C" {
+#endif  // __cplusplus
+void Trace(const char* format, ...);
+#ifdef  __cplusplus
+}
+#endif  // __cplusplus
+
+#else   // TRACE_ENABLED
+
+#define Trace(...) ((void)0)
+
+#endif  // TRACE_ENABLED
+
+// A macro asserting a condition and outputting failures to the debug log
+#define ASSERT(expression) do { \
+    if(!(expression)) \
+        Trace("Assert failed: %s(%d): "#expression"\n", __FUNCTION__, __LINE__); \
+    assert(expression); \
+} while(0)
+
+#define UNIMPLEMENTED() do { \
+    Trace("Unimplemented invoked: %s(%d)\n", __FUNCTION__, __LINE__); \
+    assert(false); \
+} while(0)
+
+#define UNREACHABLE() do { \
+    Trace("Unreachable reached: %s(%d)\n", __FUNCTION__, __LINE__); \
+    assert(false); \
+} while(0)
+
+#endif   // COMPILER_DEBUG_H_
+
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/compiler/debug.cpp
--- a/gfx/angle/src/compiler/debug.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,36 +0,0 @@
-//
-// Copyright (c) 2002-2010 The ANGLE Project Authors. All rights reserved.
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-//
-
-// debug.cpp: Debugging utilities.
-
-#include "compiler/debug.h"
-
-#include <stdarg.h>
-#include <stdio.h>
-
-#include "compiler/ParseHelper.h"
-
-static const int kTraceBufferLen = 1024;
-
-#ifdef TRACE_ENABLED
-extern "C" {
-void Trace(const char *format, ...) {
-    if (!format) return;
-
-    TParseContext* parseContext = GetGlobalParseContext();
-    if (parseContext) {
-        char buf[kTraceBufferLen];
-        va_list args;
-        va_start(args, format);
-        vsnprintf(buf, kTraceBufferLen, format, args);
-        va_end(args);
-
-        parseContext->infoSink.debug << buf;
-    }
-}
-}  // extern "C"
-#endif  // TRACE_ENABLED
-
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/compiler/debug.h
--- a/gfx/angle/src/compiler/debug.h	Fri Mar 18 11:37:42 2011 +0000
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,53 +0,0 @@
-//
-// Copyright (c) 2002-2010 The ANGLE Project Authors. All rights reserved.
-// Use of this source code is governed by a BSD-style license that can be
-// found in the LICENSE file.
-//
-
-// debug.h: Debugging utilities.
-
-#ifndef COMPILER_DEBUG_H_
-#define COMPILER_DEBUG_H_
-
-#include <assert.h>
-
-#ifdef _DEBUG
-#define TRACE_ENABLED  // define to enable debug message tracing
-#endif  // _DEBUG
-
-// Outputs text to the debug log
-#ifdef TRACE_ENABLED
-
-#ifdef  __cplusplus
-extern "C" {
-#endif  // __cplusplus
-void Trace(const char* format, ...);
-#ifdef  __cplusplus
-}
-#endif  // __cplusplus
-
-#else   // TRACE_ENABLED
-
-#define Trace(...) ((void)0)
-
-#endif  // TRACE_ENABLED
-
-// A macro asserting a condition and outputting failures to the debug log
-#define ASSERT(expression) do { \
-    if(!(expression)) \
-        Trace("Assert failed: %s(%d): "#expression"\n", __FUNCTION__, __LINE__); \
-    assert(expression); \
-} while(0)
-
-#define UNIMPLEMENTED() do { \
-    Trace("Unimplemented invoked: %s(%d)\n", __FUNCTION__, __LINE__); \
-    assert(false); \
-} while(0)
-
-#define UNREACHABLE() do { \
-    Trace("Unreachable reached: %s(%d)\n", __FUNCTION__, __LINE__); \
-    assert(false); \
-} while(0)
-
-#endif   // COMPILER_DEBUG_H_
-
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/compiler/osinclude.h
--- a/gfx/angle/src/compiler/osinclude.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/angle/src/compiler/osinclude.h	Wed Apr 13 21:17:37 2011 -0700
@@ -37,7 +37,7 @@
 #endif  // ANGLE_USE_NSPR
 
 
-#include "compiler/debug.h"
+#include "compiler/compilerdebug.h"
 
 //
 // Thread Local Storage Operations
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/compiler/preprocessor/atom.c
--- a/gfx/angle/src/compiler/preprocessor/atom.c	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/angle/src/compiler/preprocessor/atom.c	Wed Apr 13 21:17:37 2011 -0700
@@ -50,7 +50,7 @@
 #include <stdio.h>
 #include <string.h>
 
-#include "compiler/debug.h"
+#include "compiler/compilerdebug.h"
 #include "compiler/preprocessor/slglobals.h"
 
 #undef malloc
@@ -182,12 +182,13 @@
     char *str;
 
     len = (int) strlen(s);
-    if (stable->nextFree + len + 1 >= stable->size) {
+    while (stable->nextFree + len + 1 >= stable->size) {
         assert(stable->size < 1000000);
         str = (char *) malloc(stable->size*2);
         memcpy(str, stable->strings, stable->size);
         free(stable->strings);
         stable->strings = str;
+        stable->size = stable->size*2;
     }
     loc = stable->nextFree;
     strcpy(&stable->strings[loc], s);
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/compiler/preprocessor/tokens.c
--- a/gfx/angle/src/compiler/preprocessor/tokens.c	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/angle/src/compiler/preprocessor/tokens.c	Wed Apr 13 21:17:37 2011 -0700
@@ -50,7 +50,7 @@
 #include <string.h>
 #include <ctype.h>
 
-#include "compiler/debug.h"
+#include "compiler/compilerdebug.h"
 #include "compiler/preprocessor/slglobals.h"
 #include "compiler/util.h"
 
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/libEGL/Makefile.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/gfx/angle/src/libEGL/Makefile.in	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,140 @@
+# 
+# ***** BEGIN LICENSE BLOCK *****
+# Version: MPL 1.1/GPL 2.0/LGPL 2.1
+#
+# The contents of this file are subject to the Mozilla Public License Version
+# 1.1 (the "License"); you may not use this file except in compliance with
+# the License. You may obtain a copy of the License at
+# http://www.mozilla.org/MPL/
+#
+# Software distributed under the License is distributed on an "AS IS" basis,
+# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+# for the specific language governing rights and limitations under the
+# License.
+#
+# The Original Code is gecko.
+#
+# The Initial Developer of the Original Code is Mozilla Foundation.
+# Portions created by the Initial Developer are Copyright (C) 2011
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#
+# Alternatively, the contents of this file may be used under the terms of
+# either of the GNU General Public License Version 2 or later (the "GPL"),
+# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+# in which case the provisions of the GPL or the LGPL are applicable instead
+# of those above. If you wish to allow use of your version of this file only
+# under the terms of either the GPL or the LGPL, and not to allow others to
+# use your version of this file under the terms of the MPL, indicate your
+# decision by deleting the provisions above and replace them with the notice
+# and other provisions required by the GPL or the LGPL. If you do not delete
+# the provisions above, a recipient may use your version of this file under
+# the terms of any one of the MPL, the GPL or the LGPL.
+#
+# ***** END LICENSE BLOCK *****
+
+DEPTH    = ../../../..
+topsrcdir  = @top_srcdir@
+srcdir    = @srcdir@
+VPATH    = @srcdir@
+
+include $(DEPTH)/config/autoconf.mk
+
+MODULE = libegl
+# On Windows, we don't automatically get "lib" prepended, but we need it.
+LIBRARY_NAME = libEGL
+MODULE_NAME = libegl
+FORCE_SHARED_LIB=1
+
+# ANGLE uses the STL, so we can't use our derpy STL wrappers.
+STL_FLAGS=
+
+# ANGLE uses exceptions internally, so we need to have exception handling
+# support
+ENABLE_CXX_EXCEPTIONS=1
+
+# Since we're building off in our own world, we don't want to have
+# mozilla-config.h and -DMOZILLA_CLIENT automatically included and defined, so
+# we just overwrite OS_COMPILE_C(XX)FLAGS.
+OS_COMPILE_CFLAGS = $(OS_CPPFLAGS)
+OS_COMPILE_CXXFLAGS = $(OS_CPPFLAGS)
+
+LOCAL_INCLUDES += -I$(srcdir)/../../include -I$(srcdir)/.. -I"$(DXSDK_DIR)/include"
+
+VPATH += $(srcdir)/.. \
+  $(srcdir)/../compiler \
+  $(srcdir)/../compiler/preprocessor \
+  $(srcdir)/../common \
+  $(NULL)
+
+# Translator/compiler first
+
+CPPSRCS = \
+  Compiler.cpp \
+  InfoSink.cpp \
+  Initialize.cpp \
+  InitializeDll.cpp \
+  Intermediate.cpp \
+  intermOut.cpp \
+  IntermTraverse.cpp \
+  MozAngleLink.cpp \
+  parseConst.cpp \
+  ParseHelper.cpp \
+  PoolAlloc.cpp \
+  QualifierAlive.cpp \
+  RemoveTree.cpp \
+  ShaderLang.cpp \
+  SymbolTable.cpp \
+  VariableInfo.cpp \
+  compilerdebug.cpp \
+  ossource_win.cpp \
+  util.cpp \
+  ValidateLimitations.cpp \
+  $(NULL)
+
+# flex/yacc generated files
+CPPSRCS += \
+  glslang_lex.cpp \
+  glslang_tab.cpp \
+  $(NULL)
+
+# HLSL translator backend
+CPPSRCS += \
+  CodeGenHLSL.cpp \
+  OutputHLSL.cpp \
+  TranslatorHLSL.cpp \
+  UnfoldSelect.cpp \
+  SearchSymbol.cpp \
+  $(NULL)
+
+CSRCS   = \
+  atom.c \
+  cpp.c \
+  cppstruct.c \
+  memory.c \
+  scanner.c \
+  symbols.c \
+  tokens.c \
+  $(NULL)
+
+DEFINES += -DANGLE_BUILD -DNOMINMAX -DLIBEGL_EXPORTS -D_CRT_SECURE_NO_DEPRECATE
+
+ifndef MOZ_DEBUG
+DEFINES += -D_SECURE_SCL=0
+endif
+
+CPPSRCS += \
+  debug.cpp \
+  Config.cpp \
+  Display.cpp \
+  libEGL.cpp \
+  main.cpp \
+  Surface.cpp \
+  $(NULL)
+
+DEFFILE = $(srcdir)/libEGL.def
+
+include $(topsrcdir)/config/rules.mk
+
+EXTRA_DSO_LDOPTS = "$(MOZ_DIRECTX_SDK_PATH)/lib/x86/d3d9.lib" "$(MOZ_DIRECTX_SDK_PATH)/lib/x86/dxguid.lib" $(DIST)/lib/libGLESv2.lib
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/libGLESv2/Makefile.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/gfx/angle/src/libGLESv2/Makefile.in	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,152 @@
+# 
+# ***** BEGIN LICENSE BLOCK *****
+# Version: MPL 1.1/GPL 2.0/LGPL 2.1
+#
+# The contents of this file are subject to the Mozilla Public License Version
+# 1.1 (the "License"); you may not use this file except in compliance with
+# the License. You may obtain a copy of the License at
+# http://www.mozilla.org/MPL/
+#
+# Software distributed under the License is distributed on an "AS IS" basis,
+# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+# for the specific language governing rights and limitations under the
+# License.
+#
+# The Original Code is gecko.
+#
+# The Initial Developer of the Original Code is Mozilla Foundation.
+# Portions created by the Initial Developer are Copyright (C) 2011
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#
+# Alternatively, the contents of this file may be used under the terms of
+# either of the GNU General Public License Version 2 or later (the "GPL"),
+# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+# in which case the provisions of the GPL or the LGPL are applicable instead
+# of those above. If you wish to allow use of your version of this file only
+# under the terms of either the GPL or the LGPL, and not to allow others to
+# use your version of this file under the terms of the MPL, indicate your
+# decision by deleting the provisions above and replace them with the notice
+# and other provisions required by the GPL or the LGPL. If you do not delete
+# the provisions above, a recipient may use your version of this file under
+# the terms of any one of the MPL, the GPL or the LGPL.
+#
+# ***** END LICENSE BLOCK *****
+
+DEPTH		= ../../../..
+topsrcdir	= @top_srcdir@
+srcdir		= @srcdir@
+VPATH		= @srcdir@
+
+include $(DEPTH)/config/autoconf.mk
+
+MODULE = libglesv2
+# On Windows, we don't automatically get "lib" prepended, but we need it.
+LIBRARY_NAME = libGLESv2
+MODULE_NAME = libglesv2
+FORCE_SHARED_LIB=1
+
+# ANGLE uses the STL, so we can't use our derpy STL wrappers.
+STL_FLAGS=
+
+# ANGLE uses exceptions internally, so we need to have exception handling
+# support
+ENABLE_CXX_EXCEPTIONS=1
+
+# Since we're building off in our own world, we don't want to have
+# mozilla-config.h and -DMOZILLA_CLIENT automatically included and defined, so
+# we just overwrite OS_COMPILE_C(XX)FLAGS.
+OS_COMPILE_CFLAGS = $(OS_CPPFLAGS)
+OS_COMPILE_CXXFLAGS = $(OS_CPPFLAGS)
+
+LOCAL_INCLUDES = -I$(srcdir)/../../include -I$(srcdir)/.. -I"$(DXSDK_DIR)/include"
+
+VPATH += $(srcdir)/..
+VPATH += $(srcdir)/../compiler
+VPATH += $(srcdir)/../compiler/preprocessor
+VPATH += $(srcdir)/../common
+VPATH += $(srcdir)/geometry
+
+# Translator/compiler first
+
+CPPSRCS = \
+	Compiler.cpp \
+        InfoSink.cpp \
+        Initialize.cpp \
+        InitializeDll.cpp \
+        Intermediate.cpp \
+        intermOut.cpp \
+        IntermTraverse.cpp \
+        MozAngleLink.cpp \
+        parseConst.cpp \
+        ParseHelper.cpp \
+        PoolAlloc.cpp \
+        QualifierAlive.cpp \
+        RemoveTree.cpp \
+        ShaderLang.cpp \
+        SymbolTable.cpp \
+        VariableInfo.cpp \
+        compilerdebug.cpp \
+        ossource_win.cpp \
+        util.cpp \
+        ValidateLimitations.cpp \
+	$(NULL)
+
+# flex/yacc generated files
+CPPSRCS += \
+	glslang_lex.cpp \
+	glslang_tab.cpp \
+	$(NULL)
+
+# HLSL translator backend
+CPPSRCS += \
+	CodeGenHLSL.cpp \
+	OutputHLSL.cpp \
+	TranslatorHLSL.cpp \
+	UnfoldSelect.cpp \
+	SearchSymbol.cpp \
+	$(NULL)
+
+CSRCS   = \
+        atom.c \
+        cpp.c \
+        cppstruct.c \
+        memory.c \
+        scanner.c \
+        symbols.c \
+        tokens.c \
+	$(NULL)
+
+DEFINES += -DANGLE_BUILD -DNOMINMAX -DLIBGLESV2_EXPORTS -D_CRT_SECURE_NO_DEPRECATE
+
+ifndef MOZ_DEBUG
+DEFINES += -D_SECURE_SCL=0
+endif
+
+CPPSRCS	+= \
+	debug.cpp \
+	IndexDataManager.cpp \
+	VertexDataManager.cpp \
+	Blit.cpp \
+	Buffer.cpp \
+	Context.cpp \
+	Fence.cpp \
+	Framebuffer.cpp \
+	libGLESv2.cpp \
+	main.cpp \
+	Program.cpp \
+	RefCountObject.cpp \
+	Renderbuffer.cpp \
+	ResourceManager.cpp \
+	Shader.cpp \
+	Texture.cpp \
+	utilities.cpp \
+	$(NULL)
+
+DEFFILE = $(srcdir)/libGLESv2.def
+
+
+include $(topsrcdir)/config/rules.mk
+
+EXTRA_DSO_LDOPTS = "$(MOZ_DIRECTX_SDK_PATH)/lib/x86/d3d9.lib" "$(MOZ_DIRECTX_SDK_PATH)/lib/x86/d3dx9.lib"
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/libGLESv2/Program.cpp
--- a/gfx/angle/src/libGLESv2/Program.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/angle/src/libGLESv2/Program.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -2732,7 +2732,12 @@
     {
         if (!mUniforms[uniformIndex]->name.empty() && mUniforms[uniformIndex]->name.substr(0, 3) != "dx_")
         {
-            maxLength = std::max((int)(undecorate(mUniforms[uniformIndex]->name).length() + 1), maxLength);
+            int length = (int)(undecorate(mUniforms[uniformIndex]->name).length() + 1);
+            if (mUniforms[uniformIndex]->arraySize != 1)
+            {
+                length += 3;  // Counting in "[0]".
+            }
+            maxLength = std::max(length, maxLength);
         }
     }
 
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/angle/src/libGLESv2/Texture.cpp
--- a/gfx/angle/src/libGLESv2/Texture.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/angle/src/libGLESv2/Texture.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -1318,9 +1318,6 @@
         mHeight = height << level;
         mImageArray[0].format = internalFormat;
         mType = type;
-
-        if (mColorbufferProxy.get())
-            mColorbufferProxy->setStorage(new TextureColorbufferProxy(this, GL_TEXTURE_2D));
     }
 
     return !textureOkay;
@@ -1355,15 +1352,11 @@
         {
             Image *img = &mImageArray[level];
 
-            RECT sourceRect;
-            sourceRect.left = xoffset;
-            sourceRect.top = yoffset;
-            sourceRect.right = xoffset + width;
-            sourceRect.bottom = yoffset + height;
+            RECT sourceRect = transformPixelRect(xoffset, yoffset, width, height, img->height);;
 
             POINT destPoint;
-            destPoint.x = xoffset;
-            destPoint.y = yoffset;
+            destPoint.x = sourceRect.left;
+            destPoint.y = sourceRect.top;
 
             result = getDevice()->UpdateSurface(img->surface, &sourceRect, destLevel, &destPoint);
             ASSERT(SUCCEEDED(result));
@@ -1893,15 +1886,11 @@
         {
             Image *img = &mImageArray[face][level];
 
-            RECT sourceRect;
-            sourceRect.left = xoffset;
-            sourceRect.top = yoffset;
-            sourceRect.right = xoffset + width;
-            sourceRect.bottom = yoffset + height;
+            RECT sourceRect = transformPixelRect(xoffset, yoffset, width, height, img->height);;
 
             POINT destPoint;
-            destPoint.x = xoffset;
-            destPoint.y = yoffset;
+            destPoint.x = sourceRect.left;
+            destPoint.y = sourceRect.top;
 
             HRESULT result = getDevice()->UpdateSurface(img->surface, &sourceRect, destLevel, &destPoint);
             ASSERT(SUCCEEDED(result));
@@ -2218,12 +2207,6 @@
         mImageArray[0][0].height = width << level;
 
         mImageArray[0][0].format = internalFormat;
-
-        for (int i = 0; i < 6; i++)
-        {
-            if (mFaceProxies[i].get())
-                mFaceProxies[i]->setStorage(new TextureColorbufferProxy(this, GL_TEXTURE_CUBE_MAP_POSITIVE_X + i));
-        }
     }
 
     return !textureOkay;
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/harfbuzz/src/hb-ot-layout.cc
--- a/gfx/harfbuzz/src/hb-ot-layout.cc	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/harfbuzz/src/hb-ot-layout.cc	Wed Apr 13 21:17:37 2011 -0700
@@ -33,6 +33,7 @@
 #include "hb-ot-layout-gdef-private.hh"
 #include "hb-ot-layout-gsub-private.hh"
 #include "hb-ot-layout-gpos-private.hh"
+#include "hb-ot-shape-private.hh"
 
 
 #include <stdlib.h>
@@ -476,8 +477,46 @@
 }
 
 void
-hb_ot_layout_position_finish (hb_buffer_t  *buffer)
+hb_ot_layout_position_finish (hb_face_t *face, hb_buffer_t *buffer)
 {
+  /* force diacritics to have zero width */
+  unsigned int count = buffer->len;
+  if (hb_ot_layout_has_glyph_classes (face)) {
+    const GDEF& gdef = _get_gdef (face);
+    if (buffer->props.direction == HB_DIRECTION_RTL) {
+      for (unsigned int i = 1; i < count; i++) {
+        if (gdef.get_glyph_class (buffer->info[i].codepoint) == GDEF::MarkGlyph) {
+          buffer->pos[i].x_advance = 0;
+        }
+      }
+    } else {
+      for (unsigned int i = 1; i < count; i++) {
+        if (gdef.get_glyph_class (buffer->info[i].codepoint) == GDEF::MarkGlyph) {
+          hb_glyph_position_t& pos = buffer->pos[i];
+          pos.x_offset -= pos.x_advance;
+          pos.x_advance = 0;
+        }
+      }
+    }
+  } else {
+    /* no GDEF classes available, so use General Category as a fallback */
+    if (buffer->props.direction == HB_DIRECTION_RTL) {
+      for (unsigned int i = 1; i < count; i++) {
+        if (buffer->info[i].general_category() == HB_CATEGORY_NON_SPACING_MARK) {
+          buffer->pos[i].x_advance = 0;
+        }
+      }
+    } else {
+      for (unsigned int i = 1; i < count; i++) {
+        if (buffer->info[i].general_category() == HB_CATEGORY_NON_SPACING_MARK) {
+          hb_glyph_position_t& pos = buffer->pos[i];
+          pos.x_offset -= pos.x_advance;
+          pos.x_advance = 0;
+        }
+      }
+    }
+  }
+
   GPOS::position_finish (buffer);
 }
 
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/harfbuzz/src/hb-ot-layout.h
--- a/gfx/harfbuzz/src/hb-ot-layout.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/harfbuzz/src/hb-ot-layout.h	Wed Apr 13 21:17:37 2011 -0700
@@ -188,7 +188,7 @@
 
 /* Should be called after all the position_lookup's are done */
 void
-hb_ot_layout_position_finish (hb_buffer_t  *buffer);
+hb_ot_layout_position_finish (hb_face_t *face, hb_buffer_t *buffer);
 
 
 HB_END_DECLS
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/harfbuzz/src/hb-ot-shape.cc
--- a/gfx/harfbuzz/src/hb-ot-shape.cc	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/harfbuzz/src/hb-ot-shape.cc	Wed Apr 13 21:17:37 2011 -0700
@@ -121,7 +121,7 @@
 
   c->plan->map.position (c->font, c->face, c->buffer);
 
-  hb_ot_layout_position_finish (c->buffer);
+  hb_ot_layout_position_finish (c->face, c->buffer);
 
   c->applied_position_complex = TRUE;
   return;
@@ -260,9 +260,26 @@
 }
 
 static void
-hb_position_complex_fallback (hb_ot_shape_context_t *c HB_UNUSED)
+hb_position_complex_fallback (hb_ot_shape_context_t *c)
 {
-  /* TODO Mark pos */
+  unsigned int count = c->buffer->len;
+  if (c->buffer->props.direction == HB_DIRECTION_RTL) {
+    for (unsigned int i = 1; i < count; i++) {
+      unsigned int gen_cat = c->buffer->info[i].general_category();
+      if ((1<<gen_cat) & ((1<<HB_CATEGORY_NON_SPACING_MARK)|(1<<HB_CATEGORY_ENCLOSING_MARK)|(1<<HB_CATEGORY_FORMAT))) {
+        c->buffer->pos[i].x_advance = 0;
+      }
+    }
+  } else {
+    for (unsigned int i = 1; i < count; i++) {
+      unsigned int gen_cat = c->buffer->info[i].general_category();
+      if ((1<<gen_cat) & ((1<<HB_CATEGORY_NON_SPACING_MARK)|(1<<HB_CATEGORY_ENCLOSING_MARK)|(1<<HB_CATEGORY_FORMAT))) {
+        hb_glyph_position_t& pos = c->buffer->pos[i];
+        pos.x_offset = -pos.x_advance;
+        pos.x_advance = 0;
+      }
+    }
+  }
 }
 
 static void
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/layers/ImageLayers.h
--- a/gfx/layers/ImageLayers.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/layers/ImageLayers.h	Wed Apr 13 21:17:37 2011 -0700
@@ -367,7 +367,9 @@
    * when async plugin rendering is complete.
    */
   typedef void (*UpdateSurfaceCallback)(ImageContainer* aContainer, void* aInstanceOwner);
-  virtual void SetCallback(UpdateSurfaceCallback aCallback, void* aInstanceOwner) =0;
+  virtual void SetUpdateCallback(UpdateSurfaceCallback aCallback, void* aInstanceOwner) = 0;
+  typedef void (*DestroyCallback)(void* aInstanceOwner);
+  virtual void SetDestroyCallback(DestroyCallback aCallback) = 0;
 
 protected:
   MacIOSurfaceImage(void* aImplData) : Image(aImplData, MAC_IO_SURFACE) {}
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/layers/d3d10/ReadbackManagerD3D10.cpp
--- a/gfx/layers/d3d10/ReadbackManagerD3D10.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/layers/d3d10/ReadbackManagerD3D10.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -139,8 +139,8 @@
   : mRefCnt(0)
 {
   ::InitializeCriticalSection(&mTaskMutex);
-  mShutdownEvent = ::CreateEventA(NULL, FALSE, FALSE, "ReadbackShutdownEvent");
-  mTaskSemaphore = ::CreateSemaphoreA(NULL, 0, 1000000, "ReadbackTaskSemaphore");
+  mShutdownEvent = ::CreateEventA(NULL, FALSE, FALSE, NULL);
+  mTaskSemaphore = ::CreateSemaphoreA(NULL, 0, 1000000, NULL);
   mTaskThread = ::CreateThread(NULL, 0, StartTaskThread, this, 0, 0);
 }
 
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/layers/ipc/ShadowLayerParent.cpp
--- a/gfx/layers/ipc/ShadowLayerParent.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/layers/ipc/ShadowLayerParent.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -99,6 +99,10 @@
     // let IPDL-generated code automatically clean up Shmems and so
     // forth; our channel is disconnected anyway
     break;
+
+  case FailedConstructor:
+    NS_RUNTIMEABORT("FailedConstructor isn't possible in PLayers");
+    return;                     // unreached
   }
 
   mLayer = NULL;
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/layers/opengl/MacIOSurfaceImageOGL.h
--- a/gfx/layers/opengl/MacIOSurfaceImageOGL.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/layers/opengl/MacIOSurfaceImageOGL.h	Wed Apr 13 21:17:37 2011 -0700
@@ -50,8 +50,10 @@
 
 public:
   MacIOSurfaceImageOGL(LayerManagerOGL *aManager);
+  virtual ~MacIOSurfaceImageOGL();
 
-  void SetCallback(UpdateSurfaceCallback aCallback, void* aObjectFrame);
+  void SetUpdateCallback(UpdateSurfaceCallback aCallback, void* aPluginInstanceOwner);
+  void SetDestroyCallback(DestroyCallback aCallback);
   void Update(ImageContainer* aContainer);
 
   void SetData(const Data &aData);
@@ -59,8 +61,9 @@
   GLTexture mTexture;
   gfxIntSize mSize;
   nsAutoPtr<nsIOSurface> mIOSurface;
-  void* mObjectFrame;
-  UpdateSurfaceCallback mCallback;
+  void* mPluginInstanceOwner;
+  UpdateSurfaceCallback mUpdateCallback;
+  DestroyCallback mDestroyCallback;
 };
 
 } /* layers */
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/layers/opengl/MacIOSurfaceImageOGL.mm
--- a/gfx/layers/opengl/MacIOSurfaceImageOGL.mm	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/layers/opengl/MacIOSurfaceImageOGL.mm	Wed Apr 13 21:17:37 2011 -0700
@@ -46,7 +46,8 @@
 namespace layers {
 
 MacIOSurfaceImageOGL::MacIOSurfaceImageOGL(LayerManagerOGL *aManager)
-  : MacIOSurfaceImage(nsnull), mSize(0, 0)
+  : MacIOSurfaceImage(nsnull), mSize(0, 0), mPluginInstanceOwner(nsnull),
+    mUpdateCallback(nsnull), mDestroyCallback(nsnull)
 {
   NS_ASSERTION(NS_IsMainThread(), "Should be on main thread to create a cairo image");
 
@@ -65,6 +66,13 @@
   }
 }
 
+MacIOSurfaceImageOGL::~MacIOSurfaceImageOGL()
+{
+  if (mDestroyCallback) {
+    mDestroyCallback(mPluginInstanceOwner);
+  }
+}
+
 void
 MacIOSurfaceImageOGL::SetData(const MacIOSurfaceImage::Data &aData)
 {
@@ -88,19 +96,25 @@
 }
 
 void
-MacIOSurfaceImageOGL::SetCallback(UpdateSurfaceCallback aCallback, void* aObjectFrame)
+MacIOSurfaceImageOGL::SetUpdateCallback(UpdateSurfaceCallback aCallback, void* aPluginInstanceOwner)
 {
-  mCallback = aCallback;
-  mObjectFrame = aObjectFrame;
+  mUpdateCallback = aCallback;
+  mPluginInstanceOwner = aPluginInstanceOwner;
+}
+
+void
+MacIOSurfaceImageOGL::SetDestroyCallback(DestroyCallback aCallback)
+{
+  mDestroyCallback = aCallback;
 }
 
 void 
 MacIOSurfaceImageOGL::Update(ImageContainer* aContainer)
 {
-  if (mCallback) {
-    mCallback(aContainer, mObjectFrame);
+  if (mUpdateCallback) {
+    mUpdateCallback(aContainer, mPluginInstanceOwner);
   }
 }
 
 } /* layers */
-} /* mozilla */
\ No newline at end of file
+} /* mozilla */
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/thebes/gfxDWriteFontList.cpp
--- a/gfx/thebes/gfxDWriteFontList.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/thebes/gfxDWriteFontList.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -1004,7 +1004,7 @@
 
     for (i = 0, rv = ERROR_SUCCESS; rv != ERROR_NO_MORE_ITEMS; i++) {
         aliasName[0] = 0;
-        lenAlias = sizeof(aliasName);
+        lenAlias = NS_ARRAY_LENGTH(aliasName);
         actualName[0] = 0;
         lenActual = sizeof(actualName);
         rv = RegEnumValueW(hKey, i, aliasName, &lenAlias, NULL, &valueType, 
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/thebes/gfxGDIFontList.cpp
--- a/gfx/thebes/gfxGDIFontList.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/thebes/gfxGDIFontList.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -626,7 +626,7 @@
 
     for (i = 0, rv = ERROR_SUCCESS; rv != ERROR_NO_MORE_ITEMS; i++) {
         aliasName[0] = 0;
-        lenAlias = sizeof(aliasName);
+        lenAlias = NS_ARRAY_LENGTH(aliasName);
         actualName[0] = 0;
         lenActual = sizeof(actualName);
         rv = RegEnumValueW(hKey, i, aliasName, &lenAlias, NULL, &valueType, 
diff -r 6be9e31d01b4 -r fca718600ca0 gfx/thebes/gfxOS2Fonts.cpp
--- a/gfx/thebes/gfxOS2Fonts.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/gfx/thebes/gfxOS2Fonts.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -162,7 +162,13 @@
     // together with internal/external leading (see below)
     mMetrics->emHeight = NS_floor(GetStyle()->size + 0.5);
 
-    FT_Face face = cairo_ft_scaled_font_lock_face(CairoScaledFont());
+    cairo_scaled_font_t* scaledFont = CairoScaledFont();
+    if (!scaledFont) {
+        FillMetricsDefaults(mMetrics);
+        return *mMetrics;
+    }
+
+    FT_Face face = cairo_ft_scaled_font_lock_face(scaledFont);
     if (!face) {
         // Abort here already, otherwise we crash in the following
         // this can happen if the font-size requested is zero.
@@ -173,7 +179,7 @@
         // Also abort, if the charmap isn't loaded; then the char
         // lookups won't work. This happens for fonts without Unicode
         // charmap.
-        cairo_ft_scaled_font_unlock_face(CairoScaledFont());
+        cairo_ft_scaled_font_unlock_face(scaledFont);
         FillMetricsDefaults(mMetrics);
         return *mMetrics;
     }
@@ -305,7 +311,7 @@
            mMetrics->maxAscent, mMetrics->maxDescent, mMetrics->maxAdvance
           );
 #endif
-    cairo_ft_scaled_font_unlock_face(CairoScaledFont());
+    cairo_ft_scaled_font_unlock_face(scaledFont);
     return *mMetrics;
 }
 
@@ -391,6 +397,25 @@
         // finally find a matching font
         FcResult fcRes;
         FcPattern *fcMatch = FcFontMatch(NULL, fcPattern, &fcRes);
+
+        // Most code that depends on FcFontMatch() assumes it won't fail,
+        // then crashes when it does.  For now, at least, substitute the
+        // default serif font when it fails to avoid those crashes.
+        if (!fcMatch) {
+//#ifdef DEBUG
+            printf("Could not match font for:\n"
+                   "  family=%s, weight=%d, slant=%d, size=%f\n",
+                   NS_LossyConvertUTF16toASCII(GetName()).get(),
+                   GetStyle()->weight, GetStyle()->style, GetStyle()->size);
+//#endif
+            // FcPatternAddString() will free the existing FC_FAMILY string
+            FcPatternAddString(fcPattern, FC_FAMILY, (FcChar8*)"SERIF");
+            fcMatch = FcFontMatch(NULL, fcPattern, &fcRes);
+//#ifdef DEBUG
+            printf("Attempt to substitute default SERIF font %s\n",
+                   fcMatch ? "succeeded" : "failed");
+//#endif
+        }
         FcPatternDestroy(fcPattern);
 
         if (fcMatch) {
@@ -408,13 +433,6 @@
             mFontFace = cairo_ft_font_face_create_for_pattern(fcMatch);
 
             FcPatternDestroy(fcMatch);
-        } else {
-#ifdef DEBUG
-            printf("Could not match font for:\n"
-                   "  family=%s, weight=%d, slant=%d, size=%f\n",
-                   NS_LossyConvertUTF16toASCII(GetName()).get(),
-                   GetStyle()->weight, GetStyle()->style, GetStyle()->size);
-#endif
         }
     }
 
@@ -448,8 +466,13 @@
     } else {
         cairo_matrix_init_scale(&fontMatrix, size, size);
     }
+
+    cairo_font_face_t * face = CairoFontFace();
+    if (!face)
+        return nsnull;
+
     cairo_font_options_t *fontOptions = cairo_font_options_create();
-    mScaledFont = cairo_scaled_font_create(CairoFontFace(), &fontMatrix,
+    mScaledFont = cairo_scaled_font_create(face, &fontMatrix,
                                            &identityMatrix, fontOptions);
     cairo_font_options_destroy(fontOptions);
 
@@ -479,7 +502,7 @@
 
     // this implicitely ensures that mScaledFont is created if NULL
     cairo_scaled_font_t *scaledFont = CairoScaledFont();
-    if (cairo_scaled_font_status(scaledFont) != CAIRO_STATUS_SUCCESS) {
+    if (!scaledFont || cairo_scaled_font_status(scaledFont) != CAIRO_STATUS_SUCCESS) {
         // Don't cairo_set_scaled_font as that would propagate the error to
         // the cairo_t, precluding any further drawing.
         return PR_FALSE;
diff -r 6be9e31d01b4 -r fca718600ca0 ipc/glue/ProtocolUtils.h
--- a/ipc/glue/ProtocolUtils.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/ipc/glue/ProtocolUtils.h	Wed Apr 13 21:17:37 2011 -0700
@@ -95,6 +95,7 @@
 {
 public:
     enum ActorDestroyReason {
+        FailedConstructor,
         Deletion,
         AncestorDeletion,
         NormalShutdown,
diff -r 6be9e31d01b4 -r fca718600ca0 ipc/ipdl/ipdl/lower.py
--- a/ipc/ipdl/ipdl/lower.py	Fri Mar 18 11:37:42 2011 +0000
+++ b/ipc/ipdl/ipdl/lower.py	Wed Apr 13 21:17:37 2011 -0700
@@ -117,8 +117,10 @@
 def _actorIdType():
     return Type('int32')
 
-def _actorId(actor):
-    return ExprSelect(actor, '->', 'mId')
+def _actorId(actor=None):
+    if actor is not None:
+        return ExprSelect(actor, '->', 'mId')
+    return ExprVar('mId')
 
 def _actorHId(actorhandle):
     return ExprSelect(actorhandle, '.', 'mId')
@@ -441,6 +443,7 @@
     AncestorDeletion = ExprVar('AncestorDeletion')
     NormalShutdown = ExprVar('NormalShutdown')
     AbnormalShutdown = ExprVar('AbnormalShutdown')
+    FailedConstructor = ExprVar('FailedConstructor')
 
 ##-----------------------------------------------------------------------------
 ## Intermediate representation (IR) nodes used during lowering
@@ -2960,13 +2963,24 @@
             destroysubtreevar.name,
             params=[ Decl(_DestroyReason.Type(), whyvar.name) ]))
 
+        if ptype.isManaged():
+            destroysubtree.addstmt(
+                Whitespace('// Unregister from our manager.\n', indent=1))
+            destroysubtree.addstmts(self.unregisterActor())
+            destroysubtree.addstmt(Whitespace.NL)
+
         if ptype.isManager():
             # only declare this for managers to avoid unused var warnings
             destroysubtree.addstmts([
                 StmtDecl(
                     Decl(_DestroyReason.Type(), subtreewhyvar.name),
                     init=ExprConditional(
-                        ExprBinary(_DestroyReason.Deletion, '==', whyvar),
+                        ExprBinary(
+                            ExprBinary(whyvar, '==',
+                                       _DestroyReason.Deletion),
+                            '||',
+                            ExprBinary(whyvar, '==',
+                                       _DestroyReason.FailedConstructor)),
                         _DestroyReason.AncestorDeletion, whyvar)),
                 Whitespace.NL
             ])
@@ -2991,10 +3005,15 @@
                 foreachdestroy,
             ])
             destroysubtree.addstmt(block)
-        # finally, destroy "us"
-        destroysubtree.addstmt(StmtExpr(
-            ExprCall(_destroyMethod(), args=[ whyvar ])))
-        
+
+        if len(ptype.manages):
+            destroysubtree.addstmt(Whitespace.NL)
+        destroysubtree.addstmts([ Whitespace('// Finally, destroy "us".\n',
+                                             indent=1),
+                                  StmtExpr(ExprCall(_destroyMethod(),
+                                                    args=[ whyvar ]))
+                                ])
+
         self.cls.addstmts([ destroysubtree, Whitespace.NL ])
 
         ## DeallocSubtree()
@@ -4161,14 +4180,11 @@
 
     def failCtorIf(self, md, cond):
         actorvar = md.actorDecl().var()
+        type = md.decl.type.constructedType()
         failif = StmtIf(cond)
-        failif.addifstmts(
-            self.unregisterActor(actorvar)
-            + [ StmtExpr(self.callRemoveActor(
-                    actorvar,
-                    ipdltype=md.decl.type.constructedType())),
-                StmtReturn(ExprLiteral.NULL),
-            ])
+        failif.addifstmts(self.destroyActor(md, actorvar,
+                                            why=_DestroyReason.FailedConstructor)
+                          + [ StmtReturn(ExprLiteral.NULL) ])
         return [ failif ]
 
     def genHelperCtor(self, md):
@@ -4239,17 +4255,24 @@
 
         return method
 
+    def destroyActor(self, md, actorexpr, why=_DestroyReason.Deletion):
+        if md.decl.type.isCtor():
+            destroyedType = md.decl.type.constructedType()
+        else:
+            destroyedType = self.protocol.decl.type
+        return ([ StmtExpr(self.callActorDestroy(actorexpr, why)),
+                  StmtExpr(self.callDeallocSubtree(md, actorexpr)),
+                  StmtExpr(self.callRemoveActor(
+                      actorexpr,
+                      manager=self.protocol.managerVar(actorexpr),
+                      ipdltype=destroyedType))
+                ])
+
     def dtorPrologue(self, actorexpr):
         return [ self.failIfNullActor(actorexpr), Whitespace.NL ]
 
     def dtorEpilogue(self, md, actorexpr):
-        return (self.unregisterActor(actorexpr)
-                + [ StmtExpr(self.callActorDestroy(actorexpr)),
-                    StmtExpr(self.callDeallocSubtree(md, actorexpr)),
-                    StmtExpr(self.callRemoveActor(
-                        actorexpr,
-                        manager=self.protocol.managerVar(actorexpr)))
-                  ])
+        return self.destroyActor(md, actorexpr)
 
     def genAsyncSendMethod(self, md):
         method = MethodDefn(self.makeSendMethodDecl(md))
@@ -4370,7 +4393,7 @@
         failif.addifstmt(StmtReturn(retOnNull))
         return failif
 
-    def unregisterActor(self, actorexpr):
+    def unregisterActor(self, actorexpr=None):
         return [ StmtExpr(ExprCall(self.protocol.unregisterMethod(actorexpr),
                                    args=[ _actorId(actorexpr) ])),
                  StmtExpr(ExprAssn(_actorId(actorexpr), _FREED_ACTOR_ID)) ]
diff -r 6be9e31d01b4 -r fca718600ca0 ipc/ipdl/test/cxx/Makefile.in
--- a/ipc/ipdl/test/cxx/Makefile.in	Fri Mar 18 11:37:42 2011 +0000
+++ b/ipc/ipdl/test/cxx/Makefile.in	Wed Apr 13 21:17:37 2011 -0700
@@ -62,6 +62,7 @@
   TestCrashCleanup \
   TestDataStructures \
   TestDesc \
+  TestFailedCtor \
   TestHangs \
   TestJSON \
   TestLatency \
diff -r 6be9e31d01b4 -r fca718600ca0 ipc/ipdl/test/cxx/PTestFailedCtor.ipdl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ipc/ipdl/test/cxx/PTestFailedCtor.ipdl	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,19 @@
+include protocol PTestFailedCtorSub;
+
+namespace mozilla {
+namespace _ipdltest {
+
+rpc protocol PTestFailedCtor {
+    manages PTestFailedCtorSub; 
+child:
+    rpc PTestFailedCtorSub();
+    __delete__();
+
+state CONSTRUCT:
+    call PTestFailedCtorSub goto DEAD;
+state DEAD:
+    send __delete__;
+};
+
+}
+}
diff -r 6be9e31d01b4 -r fca718600ca0 ipc/ipdl/test/cxx/PTestFailedCtorSub.ipdl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ipc/ipdl/test/cxx/PTestFailedCtorSub.ipdl	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,18 @@
+include protocol PTestFailedCtor;
+include protocol PTestFailedCtorSubsub;
+
+namespace mozilla {
+namespace _ipdltest {
+
+rpc protocol PTestFailedCtorSub {
+    manager PTestFailedCtor;
+    manages PTestFailedCtorSubsub;
+
+parent:
+    async PTestFailedCtorSubsub();
+    sync Sync();
+    __delete__();
+};
+
+}
+}
diff -r 6be9e31d01b4 -r fca718600ca0 ipc/ipdl/test/cxx/PTestFailedCtorSubsub.ipdl
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ipc/ipdl/test/cxx/PTestFailedCtorSubsub.ipdl	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,15 @@
+
+include protocol PTestFailedCtorSub;
+
+namespace mozilla {
+namespace _ipdltest {
+
+rpc protocol PTestFailedCtorSubsub {
+    manager PTestFailedCtorSub;
+
+parent:
+     __delete__();
+};
+
+}
+}
diff -r 6be9e31d01b4 -r fca718600ca0 ipc/ipdl/test/cxx/TestFailedCtor.cpp
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ipc/ipdl/test/cxx/TestFailedCtor.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,136 @@
+#include "TestFailedCtor.h"
+
+#include "IPDLUnitTests.h"      // fail etc.
+
+namespace mozilla {
+namespace _ipdltest {
+
+//-----------------------------------------------------------------------------
+// parent
+void
+TestFailedCtorParent::Main()
+{
+    PTestFailedCtorSubParent* p = CallPTestFailedCtorSubConstructor();
+    if (p)
+        fail("expected ctor to fail");
+
+    Close();
+}
+
+PTestFailedCtorSubParent*
+TestFailedCtorParent::AllocPTestFailedCtorSub()
+{
+    return new TestFailedCtorSubParent();
+}
+bool
+TestFailedCtorParent::DeallocPTestFailedCtorSub(PTestFailedCtorSubParent* actor)
+{
+    delete actor;
+    return true;
+}
+
+PTestFailedCtorSubsubParent*
+TestFailedCtorSubParent::AllocPTestFailedCtorSubsub()
+{
+    TestFailedCtorSubsub* a = new TestFailedCtorSubsub();
+    if (!mOne) {
+        return mOne = a;
+    } else if (!mTwo) {
+        return mTwo = a;
+    } else if (!mThree) {
+        return mThree = a;
+    } else {
+        fail("unexpected Alloc()");
+        return nsnull;
+    }
+}
+bool
+TestFailedCtorSubParent::DeallocPTestFailedCtorSubsub(PTestFailedCtorSubsubParent* actor)
+{
+    static_cast<TestFailedCtorSubsub*>(actor)->mDealloced = true;
+    return true;
+}
+
+void
+TestFailedCtorSubParent::ActorDestroy(ActorDestroyReason why)
+{
+
+    if (mOne->mWhy != Deletion)
+        fail("Subsub one got wrong ActorDestroyReason");
+    if (mTwo->mWhy != AncestorDeletion)
+        fail("Subsub two got wrong ActorDestroyReason");
+    if (mThree->mWhy != AncestorDeletion)
+        fail("Subsub three got wrong ActorDestroyReason");
+
+    if (FailedConstructor != why)
+        fail("unexpected destruction!");
+}
+
+TestFailedCtorSubParent::~TestFailedCtorSubParent()
+{
+    if (!(mOne->mDealloced && mTwo->mDealloced && mThree->mDealloced))
+        fail("Not all subsubs were Dealloc'd");
+    delete mOne;
+    delete mTwo;
+    delete mThree;
+}
+
+
+//-----------------------------------------------------------------------------
+// child
+
+PTestFailedCtorSubChild*
+TestFailedCtorChild::AllocPTestFailedCtorSub()
+{
+    return new TestFailedCtorSubChild();
+}
+
+bool
+TestFailedCtorChild::AnswerPTestFailedCtorSubConstructor(PTestFailedCtorSubChild* actor)
+{
+    PTestFailedCtorSubsubChild* c1 = actor->SendPTestFailedCtorSubsubConstructor();
+    PTestFailedCtorSubsubChild::Send__delete__(c1);
+
+    if (!actor->SendPTestFailedCtorSubsubConstructor() ||
+        !actor->SendPTestFailedCtorSubsubConstructor() ||
+        !actor->SendSync())
+        fail("setting up test");
+
+    // This causes our process to die
+    return false;
+}
+
+bool
+TestFailedCtorChild::DeallocPTestFailedCtorSub(PTestFailedCtorSubChild* actor)
+{
+    delete actor;
+    return true;
+}
+
+void
+TestFailedCtorChild::ProcessingError(Result what)
+{
+    _exit(0);
+}
+
+PTestFailedCtorSubsubChild*
+TestFailedCtorSubChild::AllocPTestFailedCtorSubsub()
+{
+    return new TestFailedCtorSubsub();
+}
+
+bool
+TestFailedCtorSubChild::DeallocPTestFailedCtorSubsub(PTestFailedCtorSubsubChild* actor)
+{
+    delete actor;
+    return true;
+}
+
+void
+TestFailedCtorSubChild::ActorDestroy(ActorDestroyReason why)
+{
+}
+
+
+} // namespace _ipdltest
+} // namespace mozilla
diff -r 6be9e31d01b4 -r fca718600ca0 ipc/ipdl/test/cxx/TestFailedCtor.h
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/ipc/ipdl/test/cxx/TestFailedCtor.h	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,145 @@
+#ifndef mozilla_ipdltest_TestFailedCtor_h
+#define mozilla_ipdltest_TestFailedCtor_h
+
+#include "mozilla/_ipdltest/IPDLUnitTests.h"
+
+#include "mozilla/_ipdltest/PTestFailedCtorParent.h"
+#include "mozilla/_ipdltest/PTestFailedCtorChild.h"
+
+#include "mozilla/_ipdltest/PTestFailedCtorSubParent.h"
+#include "mozilla/_ipdltest/PTestFailedCtorSubChild.h"
+
+#include "mozilla/_ipdltest/PTestFailedCtorSubsubParent.h"
+#include "mozilla/_ipdltest/PTestFailedCtorSubsubChild.h"
+
+namespace mozilla {
+namespace _ipdltest {
+
+//-----------------------------------------------------------------------------
+// Top-level
+//
+class TestFailedCtorParent :
+    public PTestFailedCtorParent
+{
+public:
+    TestFailedCtorParent() { }
+    virtual ~TestFailedCtorParent() { }
+
+    void Main();
+
+protected:
+    NS_OVERRIDE
+    virtual PTestFailedCtorSubParent* AllocPTestFailedCtorSub();
+    NS_OVERRIDE
+    virtual bool DeallocPTestFailedCtorSub(PTestFailedCtorSubParent* actor);
+
+    NS_OVERRIDE
+    virtual void ActorDestroy(ActorDestroyReason why)
+    {
+        if (AbnormalShutdown != why)
+            fail("unexpected destruction!");  
+        passed("ok");
+        QuitParent();
+    }
+};
+
+
+class TestFailedCtorChild :
+    public PTestFailedCtorChild
+{
+public:
+    TestFailedCtorChild() { }
+    virtual ~TestFailedCtorChild() { }
+
+protected:
+    NS_OVERRIDE
+    virtual PTestFailedCtorSubChild* AllocPTestFailedCtorSub();
+
+    NS_OVERRIDE
+    virtual bool AnswerPTestFailedCtorSubConstructor(PTestFailedCtorSubChild* actor);
+
+    NS_OVERRIDE
+    virtual bool DeallocPTestFailedCtorSub(PTestFailedCtorSubChild* actor);
+
+    NS_OVERRIDE
+    virtual void ProcessingError(Result what);
+
+    NS_OVERRIDE
+    virtual void ActorDestroy(ActorDestroyReason why)
+    {
+        fail("should have _exit()ed");
+    }
+};
+
+
+//-----------------------------------------------------------------------------
+// First descendent
+//
+class TestFailedCtorSubsub;
+
+class TestFailedCtorSubParent :
+    public PTestFailedCtorSubParent
+{
+public:
+    TestFailedCtorSubParent() : mOne(NULL), mTwo(NULL), mThree(NULL) { }
+    virtual ~TestFailedCtorSubParent();
+
+protected:
+    NS_OVERRIDE
+    virtual PTestFailedCtorSubsubParent* AllocPTestFailedCtorSubsub();
+
+    NS_OVERRIDE
+    virtual bool DeallocPTestFailedCtorSubsub(PTestFailedCtorSubsubParent* actor);
+    NS_OVERRIDE
+    virtual bool RecvSync() { return true; }
+
+    NS_OVERRIDE
+    virtual void ActorDestroy(ActorDestroyReason why);
+
+    TestFailedCtorSubsub* mOne;
+    TestFailedCtorSubsub* mTwo;
+    TestFailedCtorSubsub* mThree;
+};
+
+
+class TestFailedCtorSubChild :
+    public PTestFailedCtorSubChild
+{
+public:
+    TestFailedCtorSubChild() { }
+    virtual ~TestFailedCtorSubChild() { }
+
+protected:
+    NS_OVERRIDE
+    virtual PTestFailedCtorSubsubChild* AllocPTestFailedCtorSubsub();
+    NS_OVERRIDE
+    virtual bool DeallocPTestFailedCtorSubsub(PTestFailedCtorSubsubChild* actor);
+
+    NS_OVERRIDE
+    virtual void ActorDestroy(ActorDestroyReason why);
+};
+
+
+//-----------------------------------------------------------------------------
+// Grand-descendent
+//
+class TestFailedCtorSubsub :
+        public PTestFailedCtorSubsubParent,
+        public PTestFailedCtorSubsubChild
+{
+public:
+    TestFailedCtorSubsub() : mWhy(ActorDestroyReason(-1)), mDealloced(false) {}
+    virtual ~TestFailedCtorSubsub() {}
+
+    NS_OVERRIDE
+    virtual void ActorDestroy(ActorDestroyReason why) { mWhy = why; }
+
+    ActorDestroyReason mWhy;
+    bool mDealloced;
+};
+
+
+}
+}
+
+#endif // ifndef mozilla_ipdltest_TestFailedCtor_h
diff -r 6be9e31d01b4 -r fca718600ca0 ipc/ipdl/test/cxx/ipdl.mk
--- a/ipc/ipdl/test/cxx/ipdl.mk	Fri Mar 18 11:37:42 2011 +0000
+++ b/ipc/ipdl/test/cxx/ipdl.mk	Wed Apr 13 21:17:37 2011 -0700
@@ -6,6 +6,9 @@
   PTestDesc.ipdl				\
   PTestDescSub.ipdl				\
   PTestDescSubsub.ipdl				\
+  PTestFailedCtor.ipdl				\
+  PTestFailedCtorSub.ipdl			\
+  PTestFailedCtorSubsub.ipdl			\
   PTestHandle.ipdl				\
   PTestHangs.ipdl				\
   PTestJSON.ipdl				\
diff -r 6be9e31d01b4 -r fca718600ca0 js/jsd/jsd_val.c
--- a/js/jsd/jsd_val.c	Fri Mar 18 11:37:42 2011 +0000
+++ b/js/jsd/jsd_val.c	Wed Apr 13 21:17:37 2011 -0700
@@ -240,6 +240,7 @@
 
     JS_RestoreExceptionState(cx, exceptionState);
     JS_LeaveCrossCompartmentCall(call);
+    call = NULL;
 
     if(string) {
         stringval = STRING_TO_JSVAL(string);
diff -r 6be9e31d01b4 -r fca718600ca0 js/src/config/milestone.txt
--- a/js/src/config/milestone.txt	Fri Mar 18 11:37:42 2011 +0000
+++ b/js/src/config/milestone.txt	Wed Apr 13 21:17:37 2011 -0700
@@ -10,4 +10,4 @@
 # hardcoded milestones in the tree from these two files.
 #--------------------------------------------------------
 
-2.0
+2.0.1
diff -r 6be9e31d01b4 -r fca718600ca0 js/src/jit-test/tests/basic/typed-array-getprop-out-of-range.js
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/js/src/jit-test/tests/basic/typed-array-getprop-out-of-range.js	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,11 @@
+var r = Object.prototype[0] = /a/;
+
+function test()
+{
+  for (var i = 0, sz = RUNLOOP; i < sz; i++)
+  {
+    var ta = new Int8Array();
+    assertEq(ta[0], r);
+  }
+}
+test();
diff -r 6be9e31d01b4 -r fca718600ca0 js/src/jit-test/tests/pic/bug645184.js
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/js/src/jit-test/tests/pic/bug645184.js	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,8 @@
+var obj = new Object();
+var passed = true;
+for (var i = 0; i < 100; i++) {
+if (obj['-1'] == null)
+    obj['-1'] = new Array();
+    assertEq(obj['-1'] == null, false);
+    obj = new Object();
+}
diff -r 6be9e31d01b4 -r fca718600ca0 js/src/jsexn.cpp
--- a/js/src/jsexn.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/js/src/jsexn.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -296,6 +296,8 @@
     stackDepth = 0;
     valueCount = 0;
     for (fp = js_GetTopStackFrame(cx); fp; fp = fp->prev()) {
+        if (fp->scopeChain().compartment() != cx->compartment)
+            break;
         if (fp->isFunctionFrame() && !fp->isEvalFrame()) {
             Value v = NullValue();
             if (checkAccess &&
@@ -337,6 +339,8 @@
     values = GetStackTraceValueBuffer(priv);
     elem = priv->stackElems;
     for (fp = js_GetTopStackFrame(cx); fp != fpstop; fp = fp->prev()) {
+        if (fp->scopeChain().compartment() != cx->compartment)
+            break;
         if (!fp->isFunctionFrame() || fp->isEvalFrame()) {
             elem->funName = NULL;
             elem->argc = 0;
diff -r 6be9e31d01b4 -r fca718600ca0 js/src/jsfun.cpp
--- a/js/src/jsfun.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/js/src/jsfun.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -148,8 +148,13 @@
         JSObject *argsobj = fp->maybeArgsObj();
         if (arg < fp->numActualArgs()) {
             if (argsobj) {
-                if (argsobj->getArgsElement(arg).isMagic(JS_ARGS_HOLE))
+                const Value &v = argsobj->getArgsElement(arg);
+                if (v.isMagic(JS_ARGS_HOLE))
                     return argsobj->getProperty(cx, id, vp);
+                if (fp->functionScript()->strictModeCode) {
+                    *vp = v;
+                    return true;
+                }
             }
             *vp = fp->canonicalActualArg(arg);
         } else {
diff -r 6be9e31d01b4 -r fca718600ca0 js/src/jstracer.cpp
--- a/js/src/jstracer.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/js/src/jstracer.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -14439,15 +14439,9 @@
     /* priv_ins will load the TypedArray* */
     LIns* priv_ins = w.ldpObjPrivate(obj_ins);
 
-    /* for out-of-range, do the same thing that the interpreter does, which is return undefined */
-    if ((jsuint) idx >= tarray->length) {
-        CHECK_STATUS_A(guard(false,
-                             w.ltui(idx_ins, w.ldiConstTypedArrayLength(priv_ins)),
-                             BRANCH_EXIT,
-                             /* abortIfAlwaysExits = */true));
-        v_ins = w.immiUndefined();
-        return ARECORD_CONTINUE;
-    }
+    /* Abort if out-of-range. */
+    if ((jsuint) idx >= tarray->length)
+        RETURN_STOP_A("out-of-range index on typed array");
 
     /*
      * Ensure idx < length
diff -r 6be9e31d01b4 -r fca718600ca0 js/src/jstypedarray.cpp
--- a/js/src/jstypedarray.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/js/src/jstypedarray.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -1105,7 +1105,8 @@
         uint32 length = end - begin;
 
         JS_ASSERT(begin < UINT32_MAX / sizeof(NativeType));
-        uint32 byteOffset = begin * sizeof(NativeType);
+        JS_ASSERT(UINT32_MAX - begin * sizeof(NativeType) >= tarray->byteOffset);
+        uint32 byteOffset = tarray->byteOffset + begin * sizeof(NativeType);
 
         return createTypedArray(cx, bufobj, byteOffset, length);
     }
diff -r 6be9e31d01b4 -r fca718600ca0 js/src/methodjit/PolyIC.cpp
--- a/js/src/methodjit/PolyIC.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/js/src/methodjit/PolyIC.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -560,6 +560,7 @@
              * populate the slot to satisfy the method invariant (in case we
              * hit an early return below).
              */
+            id = js_CheckForStringIndex(id);
             const Shape *shape =
                 obj->putProperty(cx, id, getter, clasp->setProperty,
                                  SHAPE_INVALID_SLOT, JSPROP_ENUMERATE, flags, 0);
@@ -2268,12 +2269,7 @@
         LoadFromTypedArray(masm, tarray, addr, typeReg, objReg);
     }
 
-    Jump done1 = masm.jump();
-
-    outOfBounds.linkTo(masm.label(), &masm);
-    masm.loadValueAsComponents(UndefinedValue(), typeReg, objReg);
-
-    Jump done2 = masm.jump();
+    Jump done = masm.jump();
 
     PICLinker buffer(masm, *this);
     if (!buffer.init(cx))
@@ -2283,8 +2279,8 @@
         return disable(cx, "code memory is out of range");
 
     buffer.link(claspGuard, slowPathStart);
-    buffer.link(done1, fastPathRejoin);
-    buffer.link(done2, fastPathRejoin);
+    buffer.link(outOfBounds, slowPathStart);
+    buffer.link(done, fastPathRejoin);
 
     CodeLocationLabel cs = buffer.finalizeCodeAddendum();
     JaegerSpew(JSpew_PICs, "generated getelem typed array stub at %p\n", cs.executableAddress());
diff -r 6be9e31d01b4 -r fca718600ca0 js/src/tests/ecma/Date/jstests.list
--- a/js/src/tests/ecma/Date/jstests.list	Fri Mar 18 11:37:42 2011 +0000
+++ b/js/src/tests/ecma/Date/jstests.list	Wed Apr 13 21:17:37 2011 -0700
@@ -127,7 +127,7 @@
 script 15.9.5.31-1.js
 script 15.9.5.32-1.js
 script 15.9.5.33-1.js
-random-if(xulRuntime.OS=="Linux") script 15.9.5.34-1.js
+random script 15.9.5.34-1.js
 script 15.9.5.35-1.js
 script 15.9.5.36-1.js
 script 15.9.5.36-2.js
diff -r 6be9e31d01b4 -r fca718600ca0 js/src/tests/ecma_5/Function/strict-arguments.js
--- a/js/src/tests/ecma_5/Function/strict-arguments.js	Fri Mar 18 11:37:42 2011 +0000
+++ b/js/src/tests/ecma_5/Function/strict-arguments.js	Wed Apr 13 21:17:37 2011 -0700
@@ -79,6 +79,39 @@
 
 assertEq(assignParameterGetElement(42), 17);
 
+function assignArgSub(x, y)
+{
+  arguments[0] = 3;
+  return arguments[0];
+}
+
+assertEq(assignArgSub(1), 3);
+
+function assignArgSubParamUse(x, y)
+{
+  arguments[0] = 3;
+  assertEq(x, 3);
+  return arguments[0];
+}
+
+assertEq(assignArgSubParamUse(1), 3);
+
+function assignArgumentsElement(x, y)
+{
+  arguments[0] = 3;
+  return arguments[Math.random() ? "0" : 0]; // nix arguments[const] optimizations
+}
+
+assertEq(assignArgumentsElement(1), 3);
+
+function assignArgumentsElementParamUse(x, y)
+{
+  arguments[0] = 3;
+  assertEq(x, 3);
+  return arguments[Math.random() ? "0" : 0]; // nix arguments[const] optimizations
+}
+
+assertEq(assignArgumentsElementParamUse(1), 3);
 
 /********************
  * STRICT ARGUMENTS *
@@ -224,6 +257,44 @@
 
 assertEq(strictAssignParameterGetElement(42), 42);
 
+function strictAssignArgSub(x, y)
+{
+  "use strict";
+  arguments[0] = 3;
+  return arguments[0];
+}
+
+assertEq(strictAssignArgSub(1), 3);
+
+function strictAssignArgSubParamUse(x, y)
+{
+  "use strict";
+  arguments[0] = 3;
+  assertEq(x, 1);
+  return arguments[0];
+}
+
+assertEq(strictAssignArgSubParamUse(1), 3);
+
+function strictAssignArgumentsElement(x, y)
+{
+  "use strict";
+  arguments[0] = 3;
+  return arguments[Math.random() ? "0" : 0]; // nix arguments[const] optimizations
+}
+
+assertEq(strictAssignArgumentsElement(1), 3);
+
+function strictAssignArgumentsElementParamUse(x, y)
+{
+  "use strict";
+  arguments[0] = 3;
+  assertEq(x, 1);
+  return arguments[Math.random() ? "0" : 0]; // nix arguments[const] optimizations
+}
+
+assertEq(strictAssignArgumentsElementParamUse(1), 3);
+
 function strictNestedAssignShadowVar(p)
 {
   "use strict";
diff -r 6be9e31d01b4 -r fca718600ca0 js/src/tests/js1_8_5/extensions/jstests.list
--- a/js/src/tests/js1_8_5/extensions/jstests.list	Fri Mar 18 11:37:42 2011 +0000
+++ b/js/src/tests/js1_8_5/extensions/jstests.list	Wed Apr 13 21:17:37 2011 -0700
@@ -1,6 +1,7 @@
 url-prefix ../../jsreftest.html?test=js1_8_5/extensions/
 script typedarray.js
 script typedarray-prototype.js
+script typedarray-subarray-of-subarray.js
 skip-if(!xulRuntime.shell) script worker-error.js  # these tests sometimes hang in browser, bug 559954, bug 562333
 skip-if(!xulRuntime.shell) script worker-error-propagation.js
 skip-if(!xulRuntime.shell) script worker-fib.js
diff -r 6be9e31d01b4 -r fca718600ca0 js/src/tests/js1_8_5/extensions/typedarray-subarray-of-subarray.js
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/js/src/tests/js1_8_5/extensions/typedarray-subarray-of-subarray.js	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,33 @@
+// Any copyright is dedicated to the Public Domain.
+// http://creativecommons.org/licenses/publicdomain/
+
+//-----------------------------------------------------------------------------
+var BUGNUMBER = 637643;
+var summary =
+  "new Int8Array([1, 2, 3]).subarray(1).subarray(1)[0] === 3";
+
+print(BUGNUMBER + ": " + summary);
+
+/**************
+ * BEGIN TEST *
+ **************/
+
+var ta = new Int8Array([1, 2, 3]);
+assertEq(ta.length, 3);
+assertEq(ta[0], 1);
+assertEq(ta[1], 2);
+assertEq(ta[2], 3);
+
+var sa1 = ta.subarray(1);
+assertEq(sa1.length, 2);
+assertEq(sa1[0], 2);
+assertEq(sa1[1], 3);
+
+var sa2 = sa1.subarray(1);
+assertEq(sa2.length, 1);
+assertEq(sa2[0], 3);
+
+if (typeof reportCompare === "function")
+  reportCompare(true, true);
+
+print("All tests passed!");
diff -r 6be9e31d01b4 -r fca718600ca0 layout/base/crashtests/640272-ref.html
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/layout/base/crashtests/640272-ref.html	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,14 @@
+<!DOCTYPE HTML>
+<html><head>
+    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
+    <title>Testcase for bug 640272</title>
+<style>
+#waBackButton {
+	border: 1px solid blue;
+}
+</style>
+</head>
+<body>
+      <a href="index.html" id="waBackButton">Indietro</a>
+</body>
+</html>
diff -r 6be9e31d01b4 -r fca718600ca0 layout/base/crashtests/640272.html
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/layout/base/crashtests/640272.html	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,15 @@
+<!DOCTYPE HTML>
+<html><head>
+    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
+    <title>Testcase for bug 640272</title>
+<style>
+#waBackButton {
+	border: 1px solid blue;
+	-moz-border-image: url(640272-empty.html) 0 10 0 15;
+}
+</style>
+</head>
+<body>
+      <a href="index.html" id="waBackButton">Indietro</a>
+</body>
+</html>
diff -r 6be9e31d01b4 -r fca718600ca0 layout/base/crashtests/crashtests.list
--- a/layout/base/crashtests/crashtests.list	Fri Mar 18 11:37:42 2011 +0000
+++ b/layout/base/crashtests/crashtests.list	Wed Apr 13 21:17:37 2011 -0700
@@ -326,3 +326,4 @@
 load 629035-1.html
 load 629908-1.html
 load 635329.html
+== 640272.html 640272-ref.html
diff -r 6be9e31d01b4 -r fca718600ca0 layout/base/nsCSSRendering.cpp
--- a/layout/base/nsCSSRendering.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/layout/base/nsCSSRendering.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -2732,6 +2732,9 @@
                 const nsStyleBorder& aStyleBorder,
                 const nsRect&        aDirtyRect)
 {
+  NS_PRECONDITION(aStyleBorder.IsBorderImageLoaded(),
+                  "drawing border image that isn't successfully loaded");
+
   if (aDirtyRect.IsEmpty())
     return;
 
@@ -2745,23 +2748,13 @@
 
   imgIRequest *req = aStyleBorder.GetBorderImage();
 
-#ifdef DEBUG
-  {
-    PRUint32 status = imgIRequest::STATUS_ERROR;
-    if (req)
-      req->GetImageStatus(&status);
-
-    NS_ASSERTION(req && (status & imgIRequest::STATUS_LOAD_COMPLETE),
-                 "no image to draw");
-  }
-#endif
-
   // Get the actual image, and determine where the split points are.
   // Note that mBorderImageSplit is in image pixels, not necessarily
   // CSS pixels.
 
   nsCOMPtr<imgIContainer> imgContainer;
   req->GetImage(getter_AddRefs(imgContainer));
+  NS_ASSERTION(imgContainer, "no image to draw");
 
   nsIntSize imageSize;
   if (NS_FAILED(imgContainer->GetWidth(&imageSize.width))) {
diff -r 6be9e31d01b4 -r fca718600ca0 layout/base/nsRefreshDriver.cpp
--- a/layout/base/nsRefreshDriver.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/layout/base/nsRefreshDriver.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -262,7 +262,7 @@
       // Don't just loop while we have things in mBeforePaintTargets,
       // the whole point is that event handlers should readd the
       // target as needed.
-      nsTArray<nsIDocument*> targets;
+      nsTArray< nsCOMPtr<nsIDocument> > targets;
       targets.SwapElements(mBeforePaintTargets);
       for (PRUint32 i = 0; i < targets.Length(); ++i) {
         targets[i]->BeforePaintEventFiring();
diff -r 6be9e31d01b4 -r fca718600ca0 layout/base/nsRefreshDriver.h
--- a/layout/base/nsRefreshDriver.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/layout/base/nsRefreshDriver.h	Wed Apr 13 21:17:37 2011 -0700
@@ -234,7 +234,7 @@
   nsAutoTArray<nsIPresShell*, 16> mStyleFlushObservers;
   nsAutoTArray<nsIPresShell*, 16> mLayoutFlushObservers;
   // nsTArray on purpose, because we want to be able to swap.
-  nsTArray<nsIDocument*> mBeforePaintTargets;
+  nsTArray< nsCOMPtr<nsIDocument> > mBeforePaintTargets;
   // nsTArray on purpose, because we want to be able to swap.
   nsTArray<nsIDocument*> mAnimationFrameListenerDocs;
 };
diff -r 6be9e31d01b4 -r fca718600ca0 layout/base/tests/chrome/test_leaf_layers_partition_browser_window.xul
--- a/layout/base/tests/chrome/test_leaf_layers_partition_browser_window.xul	Fri Mar 18 11:37:42 2011 +0000
+++ b/layout/base/tests/chrome/test_leaf_layers_partition_browser_window.xul	Wed Apr 13 21:17:37 2011 -0700
@@ -17,6 +17,15 @@
   <![CDATA[
     SimpleTest.waitForExplicitFinish();
 
+    // Bug 640889 - the test doesn't like seeing the WinXP resizer.
+    var version = Components.classes["@mozilla.org/system-info;1"]
+                            .getService(Components.interfaces.nsIPropertyBag2)
+                            .getProperty("version");
+    if (navigator.platform.indexOf("Win") == 0 && parseFloat(version) < 6.0) {
+      todo(false, "Bug 640889 - the test doesn't like seeing the WinXP resizer.");
+      SimpleTest.finish();
+    } else {
+
     // Run the test in a separate window so we get a clean browser window.
     window.open("data:text/html,<html style='overflow:scroll'><script>opener.doTest(window);</script>",
                 "", "scrollbars=yes,toolbar,menubar,width=500,height=500");
@@ -46,6 +55,7 @@
 
       SimpleTest.executeSoon(nextStep);
     }
+    }
   ]]>
   </script>
 </window>
diff -r 6be9e31d01b4 -r fca718600ca0 layout/generic/nsObjectFrame.cpp
--- a/layout/generic/nsObjectFrame.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/layout/generic/nsObjectFrame.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -405,6 +405,9 @@
   {
     mObjectFrame = aOwner;
   }
+  nsObjectFrame* GetOwner() {
+    return mObjectFrame;
+  }
 
   PRUint32 GetLastEventloopNestingLevel() const {
     return mLastEventloopNestingLevel; 
@@ -535,6 +538,7 @@
   PRInt32                                   mInCGPaintLevel;
   nsIOSurface                              *mIOSurface;
   nsCARenderer                              mCARenderer;
+  CGColorSpaceRef                           mColorProfile;
   static nsCOMPtr<nsITimer>                *sCATimer;
   static nsTArray<nsPluginInstanceOwner*>  *sCARefreshListeners;
   PRBool                                    mSentInitialTopLevelWindowEvent;
@@ -1972,9 +1976,18 @@
   }
 }
 
-static void DrawPlugin(ImageContainer* aContainer, void* aObjectFrame)
-{
-  static_cast<nsObjectFrame*>(aObjectFrame)->UpdateImageLayer(aContainer, gfxRect(0,0,0,0));
+static void DrawPlugin(ImageContainer* aContainer, void* aPluginInstanceOwner)
+{
+  nsObjectFrame* frame = static_cast<nsPluginInstanceOwner*>(aPluginInstanceOwner)->GetOwner();
+  if (frame) {
+    frame->UpdateImageLayer(aContainer, gfxRect(0,0,0,0));
+  }
+}
+
+static void OnDestroyImage(void* aPluginInstanceOwner)
+{
+  nsPluginInstanceOwner* owner = static_cast<nsPluginInstanceOwner*>(aPluginInstanceOwner);
+  NS_IF_RELEASE(owner);
 }
 
 void
@@ -1997,12 +2010,16 @@
   nsCOMPtr<nsIPluginInstance_MOZILLA_2_0_BRANCH> inst = do_QueryInterface(mInstance);
   if (inst) {
     nsRefPtr<Image> image;
+    // Every call to nsIPluginInstance_MOZILLA_2_0_BRANCH::GetImage() creates
+    // a new image.  See nsIPluginInstance.idl.
     inst->GetImage(aContainer, getter_AddRefs(image));
     if (image) {
 #ifdef XP_MACOSX
       if (image->GetFormat() == Image::MAC_IO_SURFACE && mObjectFrame) {
         MacIOSurfaceImage *oglImage = static_cast<MacIOSurfaceImage*>(image.get());
-        oglImage->SetCallback(&DrawPlugin, mObjectFrame);
+        NS_ADDREF_THIS();
+        oglImage->SetUpdateCallback(&DrawPlugin, this);
+        oglImage->SetDestroyCallback(&OnDestroyImage);
       }
 #endif
       aContainer->SetCurrentImage(image);
@@ -3165,6 +3182,7 @@
   mInCGPaintLevel = 0;
   mSentInitialTopLevelWindowEvent = PR_FALSE;
   mIOSurface = nsnull;
+  mColorProfile = nsnull;
   mPluginPortChanged = PR_FALSE;
 #endif
   mContentFocused = PR_FALSE;
@@ -4361,8 +4379,8 @@
     return;
 
   if (!mIOSurface || 
-     (mIOSurface->GetWidth() != (size_t)aWidth || 
-      mIOSurface->GetHeight() != (size_t)aHeight)) {
+      (mIOSurface->GetWidth() != (size_t)aWidth || 
+       mIOSurface->GetHeight() != (size_t)aHeight)) {
     if (mIOSurface) {
       delete mIOSurface;
     }
@@ -4383,6 +4401,10 @@
     }
   }
 
+  if (!mColorProfile) {
+    mColorProfile = CreateSystemColorSpace();
+  }
+
   if (mCARenderer.isInit() == false) {
     void *caLayer = NULL;
     mInstance->GetValueFromPlugin(NPPVpluginCoreAnimationLayer, &caLayer);
@@ -4400,8 +4422,8 @@
 
   CGImageRef caImage = NULL;
   nsresult rt = mCARenderer.Render(aWidth, aHeight, &caImage);
-  if (rt == NS_OK && mIOSurface) {
-    nsCARenderer::DrawSurfaceToCGContext(aCGContext, mIOSurface, CreateSystemColorSpace(),
+  if (rt == NS_OK && mIOSurface && mColorProfile) {
+    nsCARenderer::DrawSurfaceToCGContext(aCGContext, mIOSurface, mColorProfile,
                                          0, 0, aWidth, aHeight);
   } else if (rt == NS_OK && caImage != NULL) {
     // Significant speed up by resetting the scaling
@@ -5733,6 +5755,8 @@
   RemoveFromCARefreshTimer(this);
   if (mIOSurface)
     delete mIOSurface;
+  if (mColorProfile)
+    ::CGColorSpaceRelease(mColorProfile);  
 #endif
 
   // unregister context menu listener
@@ -5795,6 +5819,19 @@
   // Drop image reference because the child may destroy the surface after we return.
   nsRefPtr<ImageContainer> container = mObjectFrame->GetImageContainer();
   if (container) {
+#ifdef XP_MACOSX
+    nsRefPtr<Image> image = container->GetCurrentImage();
+    if (image && (image->GetFormat() == Image::MAC_IO_SURFACE) && mObjectFrame) {
+      // Undo what we did to the current image in SetCurrentImage().
+      MacIOSurfaceImage *oglImage = static_cast<MacIOSurfaceImage*>(image.get());
+      oglImage->SetUpdateCallback(nsnull, nsnull);
+      oglImage->SetDestroyCallback(nsnull);
+      // If we have a current image here, its destructor hasn't yet been
+      // called, so OnDestroyImage() can't yet have been called.  So we need
+      // to do ourselves what OnDestroyImage() would have done.
+      NS_RELEASE_THIS();
+    }
+#endif
     container->SetCurrentImage(nsnull);
   }
 
diff -r 6be9e31d01b4 -r fca718600ca0 layout/reftests/backgrounds/delay-image-response.sjs
--- a/layout/reftests/backgrounds/delay-image-response.sjs	Fri Mar 18 11:37:42 2011 +0000
+++ b/layout/reftests/backgrounds/delay-image-response.sjs	Wed Apr 13 21:17:37 2011 -0700
@@ -25,6 +25,12 @@
    0x49,  0x45,  0x4E,  0x44,  0xAE,  0x42,  0x60,  0x82,
   ];
 
+/**
+ * The timer is needed when a delay is set. We need it to be out of the method
+ * so it is not eaten alive by the GC.
+ */
+var timer;
+
 function handleRequest(request, response) {
   var query = {};
   request.queryString.split('&').forEach(function (val) {
@@ -40,16 +46,20 @@
     stream.writeByteArray(IMAGE_DATA, IMAGE_DATA.length);
   }
 
-  if ("delay" in query) {
-    response.processAsync();
-    const nsITimer = Components.interfaces.nsITimer;
+  // If there is no delay, we write the image and leave.
+  if (!("delay" in query)) {
+    imageWrite();
+    return;
+  }
 
-    var timer = Components.classes["@mozilla.org/timer;1"].createInstance(nsITimer);
-    timer.initWithCallback(function() {
-      imageWrite();
-      response.finish();
-    }, query["delay"], nsITimer.TYPE_ONE_SHOT);
-  } else {
+  // If there is a delay, we create a timer which, when it fires, will write
+  // image and leave.
+  response.processAsync();
+  const nsITimer = Components.interfaces.nsITimer;
+
+  timer = Components.classes["@mozilla.org/timer;1"].createInstance(nsITimer);
+  timer.initWithCallback(function() {
     imageWrite();
-  }
+    response.finish();
+  }, query["delay"], nsITimer.TYPE_ONE_SHOT);
 }
diff -r 6be9e31d01b4 -r fca718600ca0 layout/reftests/bugs/635639-1-ref.html
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/layout/reftests/bugs/635639-1-ref.html	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,16 @@
+<html>
+<head>
+<style type="text/css">
+@font-face {
+  font-family: dvsm;
+  src: url(../fonts/DejaVuSansMono.woff);
+}
+body {
+  font-family: dvsm;
+}
+</style>
+</head>
+<body>
+<p>foo <span style="color:white">xyzzy</span> bar</p>
+</body>
+</html>
diff -r 6be9e31d01b4 -r fca718600ca0 layout/reftests/bugs/635639-1.html
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/layout/reftests/bugs/635639-1.html	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,16 @@
+<html>
+<head>
+<style type="text/css">
+@font-face {
+  font-family: dvsm;
+  src: url(../fonts/DejaVuSansMono.woff);
+}
+body {
+  font-family: dvsm;
+}
+</style>
+</head>
+<body>
+<p>foo <span style="color:white">x&#x301;y&#x302;z&#x303;z&#x304;y</span> bar</p>
+</body>
+</html>
diff -r 6be9e31d01b4 -r fca718600ca0 layout/reftests/bugs/635639-2-ref.html
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/layout/reftests/bugs/635639-2-ref.html	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,16 @@
+<html>
+<head>
+<style type="text/css">
+@font-face {
+  font-family: dvsm;
+  src: url(../fonts/DejaVuSansMono.woff);
+}
+body {
+  font-family: dvsm;
+}
+</style>
+</head>
+<body>
+<p>foo <span style="color:white">&#x628;&#x633;&#x645; &#x671;&#x644;&#x644;&#x647;</span> bar</p>
+</body>
+</html>
diff -r 6be9e31d01b4 -r fca718600ca0 layout/reftests/bugs/635639-2.html
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/layout/reftests/bugs/635639-2.html	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,16 @@
+<html>
+<head>
+<style type="text/css">
+@font-face {
+  font-family: dvsm;
+  src: url(../fonts/DejaVuSansMono.woff);
+}
+body {
+  font-family: dvsm;
+}
+</style>
+</head>
+<body>
+<p>foo <span style="color:white">&#x628;&#x650;&#x633;&#x652;&#x645;&#x650; &#x671;&#x644;&#x644;&#x647;&#x650;</span> bar</p>
+</body>
+</html>
diff -r 6be9e31d01b4 -r fca718600ca0 layout/reftests/bugs/reftest.list
--- a/layout/reftests/bugs/reftest.list	Fri Mar 18 11:37:42 2011 +0000
+++ b/layout/reftests/bugs/reftest.list	Wed Apr 13 21:17:37 2011 -0700
@@ -1618,3 +1618,6 @@
 == 632781-normalsize.html 632781-ref.html
 == 634232-1.html 634232-1-ref.html
 == 635302-1.html 635302-1-ref.html
+HTTP(..) == 635639-1.html 635639-1-ref.html
+HTTP(..) == 635639-2.html 635639-2-ref.html
+
diff -r 6be9e31d01b4 -r fca718600ca0 layout/style/nsStyleStructInlines.h
--- a/layout/style/nsStyleStructInlines.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/layout/style/nsStyleStructInlines.h	Wed Apr 13 21:17:37 2011 -0700
@@ -68,7 +68,8 @@
   PRUint32 status;
   return mBorderImage &&
          NS_SUCCEEDED(mBorderImage->GetImageStatus(&status)) &&
-         (status & imgIRequest::STATUS_LOAD_COMPLETE);
+         (status & imgIRequest::STATUS_LOAD_COMPLETE) &&
+         !(status & imgIRequest::STATUS_ERROR);
 }
 
 inline void
diff -r 6be9e31d01b4 -r fca718600ca0 modules/libjar/nsJAR.cpp
--- a/modules/libjar/nsJAR.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/modules/libjar/nsJAR.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -171,6 +171,7 @@
   if (mLock) return NS_ERROR_FAILURE; // Already open!
 
   mZipFile = zipFile;
+  mOuterZipEntry.Truncate();
 
   mLock = PR_NewLock();
   NS_ENSURE_TRUE(mLock, NS_ERROR_OUT_OF_MEMORY);
@@ -237,7 +238,6 @@
   mManifestData.Reset();
   mGlobalStatus = JAR_MANIFEST_NOT_PARSED;
   mTotalItemsInManifest = 0;
-  mOuterZipEntry.Truncate(0);
 
 #ifdef MOZ_OMNIJAR
   if (mZip == mozilla::OmnijarReader()) {
@@ -1290,31 +1290,28 @@
     mZipCacheFlushes++;
 #endif
 
-  // Clear the cache pointer in case we gave out this oldest guy while
-  // his Release call was being made. Otherwise we could nest on ReleaseZip
-  // when the second owner calls Release and we are still here in this lock.
-  oldest->SetZipReaderCache(nsnull);
-
   // remove from hashtable
   nsCAutoString uri;
   rv = oldest->GetJarPath(uri);
   if (NS_FAILED(rv))
     return rv;
 
-  if (zip->mOuterZipEntry.IsEmpty()) {
+  if (oldest->mOuterZipEntry.IsEmpty()) {
     uri.Insert(NS_LITERAL_CSTRING("file:"), 0);
   } else {
     uri.Insert(NS_LITERAL_CSTRING("jar:"), 0);
     uri.AppendLiteral("!/");
-    uri.Append(zip->mOuterZipEntry);
+    uri.Append(oldest->mOuterZipEntry);
   }
 
   nsCStringKey key(uri);
-#ifdef DEBUG
-  PRBool removed =
-#endif
-    mZips.Remove(&key);   // Releases
+  nsRefPtr<nsJAR> removed;
+  mZips.Remove(&key, (nsISupports **)removed.StartAssignment());
   NS_ASSERTION(removed, "botched");
+  NS_ASSERTION(oldest == removed, "removed wrong entry");
+
+  if (removed)
+    removed->SetZipReaderCache(nsnull);
 
   return NS_OK;
 }
diff -r 6be9e31d01b4 -r fca718600ca0 modules/libjar/test/unit/data/test_bug637286.zip
Binary file modules/libjar/test/unit/data/test_bug637286.zip has changed
diff -r 6be9e31d01b4 -r fca718600ca0 modules/libjar/test/unit/test_bug637286.js
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/modules/libjar/test/unit/test_bug637286.js	Wed Apr 13 21:17:37 2011 -0700
@@ -0,0 +1,60 @@
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the "License"); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is mozilla.org code.
+ *
+ * The Initial Developer of the Original Code is
+ * Mozilla Foundation.
+ * Portions created by the Initial Developer are Copyright (C) 2011
+ * the Initial Developer. All Rights Reserved.
+ * 
+ * Contributor(s):
+ *  Michael Wu <mwu@mozilla.com>
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the "GPL"), or
+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+const Cc = Components.classes;
+const Ci = Components.interfaces;
+
+// Check that the zip cache can expire entries from nested jars
+var ios = Cc["@mozilla.org/network/io-service;1"].
+          getService(Ci.nsIIOService);
+
+function open_inner_zip(base, idx) {
+    var spec = "jar:" + base + "inner" + idx + ".zip!/foo";
+    var channel = ios.newChannel(spec, null, null);
+    var stream = channel.open();
+}
+
+function run_test() {
+  var file = do_get_file("data/test_bug637286.zip");
+  var outerJarBase = "jar:" + ios.newFileURI(file).spec + "!/";
+
+  for (var i = 0; i < 40; i++) {
+    open_inner_zip(outerJarBase, i);
+    gc();
+  }
+}
+
diff -r 6be9e31d01b4 -r fca718600ca0 modules/libpref/src/init/all.js
--- a/modules/libpref/src/init/all.js	Fri Mar 18 11:37:42 2011 +0000
+++ b/modules/libpref/src/init/all.js	Wed Apr 13 21:17:37 2011 -0700
@@ -1357,6 +1357,7 @@
 // Linux plugins using Xt instead of Xembed don't work out-of-process yet.
 pref("dom.ipc.plugins.enabled.libvlcplugin.so", false);
 pref("dom.ipc.plugins.enabled.nppdf.so", false);
+pref("dom.ipc.plugins.enabled.602plugin.so", false);
 #endif
 #endif
 #endif
diff -r 6be9e31d01b4 -r fca718600ca0 modules/plugin/base/src/nsPluginDirServiceProvider.cpp
--- a/modules/plugin/base/src/nsPluginDirServiceProvider.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/modules/plugin/base/src/nsPluginDirServiceProvider.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -470,7 +470,7 @@
                       nsIWindowsRegKey::ACCESS_READ);
     if (NS_FAILED(rv)) {
       rv = regKey->Open(nsIWindowsRegKey::ROOT_KEY_LOCAL_MACHINE,
-                        NS_LITERAL_STRING("software\\Adobe\\Adobe Reader"),
+                        NS_LITERAL_STRING("software\\Adobe\\Adobe Acrobat"),
                         nsIWindowsRegKey::ACCESS_READ);
       if (NS_FAILED(rv)) {
         return NS_ERROR_FAILURE;
diff -r 6be9e31d01b4 -r fca718600ca0 modules/plugin/base/src/nsPluginHost.cpp
--- a/modules/plugin/base/src/nsPluginHost.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/modules/plugin/base/src/nsPluginHost.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -194,8 +194,9 @@
 // 0.12 force refresh due to quicktime pdf claim fix, bug 611197
 // 0.13 add architecture and list of invalid plugins, bug 616271
 // 0.14 force refresh due to locale comparison fix, bug 611296
+// 0.15 force refresh due to bug in reading Java plist MIME data, bug 638171
 // The current plugin registry version (and the maximum version we know how to read)
-static const char *kPluginRegistryVersion = "0.14";
+static const char *kPluginRegistryVersion = "0.15";
 // The minimum registry version we know how to read
 static const char *kMinimumRegistryVersion = "0.9";
 
@@ -454,13 +455,17 @@
 
 PRBool nsPluginHost::IsRunningPlugin(nsPluginTag * plugin)
 {
-  if (!plugin)
+  if (!plugin || !plugin->mEntryPoint) {
     return PR_FALSE;
-
-  for (int i = 0; i < plugin->mVariants; i++) {
-    nsNPAPIPluginInstance *instance = FindInstance(plugin->mMimeTypeArray[i]);
-    if (instance && instance->IsRunning())
+  }
+
+  for (PRUint32 i = 0; i < mInstances.Length(); i++) {
+    nsNPAPIPluginInstance *instance = mInstances[i].get();
+    if (instance &&
+        instance->GetPlugin() == plugin->mEntryPoint &&
+        instance->IsRunning()) {
       return PR_TRUE;
+    }
   }
 
   return PR_FALSE;
diff -r 6be9e31d01b4 -r fca718600ca0 modules/plugin/base/src/nsPluginTags.cpp
--- a/modules/plugin/base/src/nsPluginTags.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/modules/plugin/base/src/nsPluginTags.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -126,6 +126,8 @@
 mLastModifiedTime(0),
 mFlags(NS_PLUGIN_FLAG_ENABLED)
 {
+  PRInt32 javaSentinelVariant = -1;
+
   if (aPluginInfo->fMimeTypeArray) {
     mMimeTypeArray = new char*[mVariants];
     for (int i = 0; i < mVariants; i++) {
@@ -136,11 +138,11 @@
 
       if (mIsJavaPlugin) {
         if (strcmp(currentMIMEType, "application/x-java-vm-npruntime") == 0) {
-          // Stop processing here, any mimetypes after the magic "I'm a
-          // NPRuntime enabled Java plugin" mimetype will be ignored.
+          // This "magic MIME type" should not be exposed, but is just a signal
+          // to the browser that this is new-style java.
+          // Remove it and its associated MIME description from our arrays.
           mIsNPRuntimeEnabledJavaPlugin = PR_TRUE;
-          mVariants = i;
-          break;
+          javaSentinelVariant = i;
         }
       }
 
@@ -192,6 +194,8 @@
       mExtensionsArray[i] = new_str(aPluginInfo->fExtensionArray[i]);
   }
   
+  RemoveJavaSentinel(javaSentinelVariant);
+
   EnsureMembersAreUTF8();
 }
 
@@ -223,6 +227,8 @@
 mLastModifiedTime(aLastModifiedTime),
 mFlags(0) // Caller will read in our flags from cache
 {
+  PRInt32 javaSentinelVariant = -1;
+
   if (aVariants) {
     mMimeTypeArray        = new char*[mVariants];
     mExtensionsArray      = new char*[mVariants];
@@ -231,12 +237,7 @@
       if (mIsJavaPlugin && aMimeTypes[i] &&
           strcmp(aMimeTypes[i], "application/x-java-vm-npruntime") == 0) {
         mIsNPRuntimeEnabledJavaPlugin = PR_TRUE;
-        
-        // Stop processing here, any mimetypes after the magic "I'm a
-        // NPRuntime enabled Java plugin" mimetype will be ignored.
-        mVariants = i;
-        
-        break;
+        javaSentinelVariant = i;
       }
       
       mMimeTypeArray[i]        = new_str(aMimeTypes[i]);
@@ -246,7 +247,9 @@
         mIsJavaPlugin = PR_TRUE;
     }
   }
-  
+
+  RemoveJavaSentinel(javaSentinelVariant);
+
   if (!aArgsAreUTF8)
     EnsureMembersAreUTF8();
 }
@@ -583,3 +586,33 @@
     RegisterWithCategoryManager(PR_FALSE, nsPluginTag::ePluginUnregister);
   }
 }
+
+void
+nsPluginTag::RemoveJavaSentinel(PRInt32 sentinelIndex)
+{
+  if (sentinelIndex == -1)
+    return;
+
+  delete[] mMimeTypeArray[sentinelIndex];
+  mMimeDescriptionArray.RemoveElementAt(sentinelIndex);
+  if (mExtensionsArray)
+    delete[] mExtensionsArray[sentinelIndex];
+
+  // Move the subsequent entries in the arrays.
+  if (mVariants > sentinelIndex + 1) {
+    memmove(mMimeTypeArray + sentinelIndex,
+            mMimeTypeArray + sentinelIndex + 1,
+            (mVariants - sentinelIndex - 1) * sizeof(mMimeTypeArray[0]));
+
+    if (mExtensionsArray) {
+      memmove(mExtensionsArray + sentinelIndex,
+              mExtensionsArray + sentinelIndex + 1,
+              (mVariants - sentinelIndex - 1) * sizeof(mExtensionsArray[0]));
+    }
+  }
+  --mVariants;
+
+  mMimeTypeArray[mVariants] = NULL;
+  if (mExtensionsArray)
+    mExtensionsArray[mVariants] = NULL;
+}
diff -r 6be9e31d01b4 -r fca718600ca0 modules/plugin/base/src/nsPluginTags.h
--- a/modules/plugin/base/src/nsPluginTags.h	Fri Mar 18 11:37:42 2011 +0000
+++ b/modules/plugin/base/src/nsPluginTags.h	Wed Apr 13 21:17:37 2011 -0700
@@ -100,6 +100,11 @@
   PRBool IsEnabled();
   void RegisterWithCategoryManager(PRBool aOverrideInternalTypes,
                                    nsRegisterType aType = ePluginRegister);
+
+  // Remove the MIME/description/extension entry associated with the magic Java sentinel
+  // which informs us that the Java plugin is NPAPI-enabled. If sentinelIndex is -1, no
+  // action will be performed.
+  void RemoveJavaSentinel(PRInt32 sentinelIndex);
   
   nsRefPtr<nsPluginTag> mNext;
   nsPluginHost *mPluginHost;
diff -r 6be9e31d01b4 -r fca718600ca0 modules/plugin/test/mochitest/test_pluginstream_seek_close.html
--- a/modules/plugin/test/mochitest/test_pluginstream_seek_close.html	Fri Mar 18 11:37:42 2011 +0000
+++ b/modules/plugin/test/mochitest/test_pluginstream_seek_close.html	Wed Apr 13 21:17:37 2011 -0700
@@ -1,44 +1,44 @@
-<body>
-<head>
-  <title>NPAPI Seekable NPStream Test</title>
-  <script type="text/javascript" 
-          src="/MochiKit/packed.js"></script>
-  <script type="text/javascript" 
-          src="/tests/SimpleTest/SimpleTest.js"></script>
-  <link rel="stylesheet" type="text/css" 
-        href="/tests/SimpleTest/test.css" />
-</head>
-<body>
-  <p id="display"></p>
-
-  <iframe id="testframe" name="testframe" onload="frameLoaded()"></iframe>
-
-  <!--
-   - Tests a seekable stream.  Calls NPN_RequestRead with the specified
-   - range, and verifies that an NPP_Write call is made with the correct 
-   - parameters, including the buffer data for the byte range.  Once all 
-   - calls to NPP_Write have finished, the plugin calls NPN_DestroyStream 
-   - and then displays the entire stream's content in a browser frame via 
-   - NPN_GetURL.
-   -->
-  <embed src="neverending.sjs" streammode="seek" closestream
-         frame="testframe" streamchunksize="1024" range="100,100"
-         id="embedtest" style="width: 400px; height: 100px;"
-         type="application/x-test"></embed>
-
-  <script class="testbody" type="application/javascript">
-  SimpleTest.waitForExplicitFinish();
-
-  var testframe = document.getElementById('testframe');
-
-  function frameLoaded() {
-    var content = testframe.contentDocument.body.innerHTML;
-    if (!content.length)
-      return;
-
-    ok(true, "We didn't crash");
-    SimpleTest.finish();
-  }
-  </script>
-</body>
-</html>
+<body>
+<head>
+  <title>NPAPI Seekable NPStream Test</title>
+  <script type="text/javascript" 
+          src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" 
+          src="/tests/SimpleTest/SimpleTest.js"></script>
+  <link rel="stylesheet" type="text/css" 
+        href="/tests/SimpleTest/test.css" />
+<script type="application/javascript>
+  function frameLoaded() {
+    var testframe = document.getElementById('testframe');
+    var content = testframe.contentDocument.body.innerHTML;
+    if (!content.length)
+      return;
+
+    ok(true, "We didn't crash");
+    SimpleTest.finish();
+  }
+</script>
+</head>
+<body>
+  <p id="display"></p>
+
+  <iframe id="testframe" name="testframe" onload="frameLoaded()"></iframe>
+
+  <!--
+   - Tests a seekable stream.  Calls NPN_RequestRead with the specified
+   - range, and verifies that an NPP_Write call is made with the correct 
+   - parameters, including the buffer data for the byte range.  Once all 
+   - calls to NPP_Write have finished, the plugin calls NPN_DestroyStream 
+   - and then displays the entire stream's content in a browser frame via 
+   - NPN_GetURL.
+   -->
+  <embed src="neverending.sjs" streammode="seek" closestream
+         frame="testframe" streamchunksize="1024" range="100,100"
+         id="embedtest" style="width: 400px; height: 100px;"
+         type="application/x-test"></embed>
+
+  <script class="testbody" type="application/javascript">
+    SimpleTest.waitForExplicitFinish();
+  </script>
+</body>
+</html>
diff -r 6be9e31d01b4 -r fca718600ca0 netwerk/cache/nsCacheService.cpp
--- a/netwerk/cache/nsCacheService.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/netwerk/cache/nsCacheService.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -1849,6 +1849,7 @@
         if (mDiskDevice) {
             // Bypass the cache if Content-Length says the entry will be too big
             if (predictedDataSize != -1 &&
+                entry->StoragePolicy() != nsICache::STORE_ON_DISK_AS_FILE &&
                 mDiskDevice->EntryIsTooBig(predictedDataSize)) {
                 nsresult rv = nsCacheService::DoomEntry(entry);
                 NS_ASSERTION(NS_SUCCEEDED(rv),"DoomEntry() failed.");
diff -r 6be9e31d01b4 -r fca718600ca0 netwerk/cache/nsDiskCacheDevice.cpp
--- a/netwerk/cache/nsDiskCacheDevice.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/netwerk/cache/nsDiskCacheDevice.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -784,8 +784,10 @@
     PRUint32  newSizeK =  ((newSize + 0x3FF) >> 10);
 
     // If the new size is larger than max. file size or larger than
-    // 1/8 the cache capacity (which is in KiB's), doom the entry and abort
-    if (EntryIsTooBig(newSize)) {
+    // 1/8 the cache capacity (which is in KiB's), and the entry has
+    // not been marked for file storage, doom the entry and abort.
+    if (EntryIsTooBig(newSize) &&
+        entry->StoragePolicy() != nsICache::STORE_ON_DISK_AS_FILE) {
 #ifdef DEBUG
         nsresult rv =
 #endif
diff -r 6be9e31d01b4 -r fca718600ca0 netwerk/streamconv/converters/nsDirIndexParser.cpp
--- a/netwerk/streamconv/converters/nsDirIndexParser.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/netwerk/streamconv/converters/nsDirIndexParser.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -179,8 +179,6 @@
   // Parse a "200" format line, and remember the fields and their
   // ordering in mFormat. Multiple 200 lines stomp on each other.
 
-  delete[] mFormat;
-
   // Lets find out how many elements we have.
   // easier to do this then realloc
   const char* pos = aFormatStr;
@@ -203,6 +201,7 @@
 
   } while (*pos);
 
+  delete[] mFormat;
   mFormat = new int[num+1];
   // Prevent NULL Deref - Bug 443299 
   if (mFormat == nsnull)
diff -r 6be9e31d01b4 -r fca718600ca0 parser/html/nsHtml5TreeOperation.cpp
--- a/parser/html/nsHtml5TreeOperation.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/parser/html/nsHtml5TreeOperation.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -260,9 +260,10 @@
 
   NS_ASSERTION(!nsContentUtils::IsSafeToRunScript(),
                "Someone forgot to block scripts");
-  nsContentUtils::AddScriptRunner(
-    new nsDocElementCreatedNotificationRunner(doc));
-
+  if (aNode->IsElement()) {
+    nsContentUtils::AddScriptRunner(
+        new nsDocElementCreatedNotificationRunner(doc));
+  }
   return rv;
 }
 
diff -r 6be9e31d01b4 -r fca718600ca0 security/manager/ssl/src/nsNSSCallbacks.cpp
--- a/security/manager/ssl/src/nsNSSCallbacks.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/security/manager/ssl/src/nsNSSCallbacks.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -1012,8 +1012,11 @@
   nsNSSShutDownPreventionLock locker;
 
   CERTCertificate *serverCert = SSL_PeerCertificate(fd);
+  CERTCertificateCleaner serverCertCleaner(serverCert);
+
   if (serverCert && 
       serverCert->serialNumber.data &&
+      serverCert->issuerName &&
       !strcmp(serverCert->issuerName, 
         "CN=UTN-USERFirst-Hardware,OU=http://www.usertrust.com,O=The USERTRUST Network,L=Salt Lake City,ST=UT,C=US")) {
 
@@ -1056,8 +1059,6 @@
   // We want to remember the CA certs in the temp db, so that the application can find the
   // complete chain at any time it might need it.
   // But we keep only those CA certs in the temp db, that we didn't already know.
-  
-  CERTCertificateCleaner serverCertCleaner(serverCert);
 
   if (serverCert) {
     nsNSSSocketInfo* infoObject = (nsNSSSocketInfo*) fd->higher->secret;
diff -r 6be9e31d01b4 -r fca718600ca0 toolkit/library/Makefile.in
--- a/toolkit/library/Makefile.in	Fri Mar 18 11:37:42 2011 +0000
+++ b/toolkit/library/Makefile.in	Wed Apr 13 21:17:37 2011 -0700
@@ -207,7 +207,10 @@
 endif
 
 ifdef MOZ_ENABLE_DBUS
-EXTRA_DSO_LDOPTS += $(MOZ_DBUS_LIBS) $(MOZ_DBUS_GLIB_LIBS)
+EXTRA_DSO_LDOPTS += $(MOZ_DBUS_LIBS)
+ifdef MOZ_PLATFORM_MAEMO
+EXTRA_DSO_LDOPTS += $(MOZ_DBUS_GLIB_LIBS)
+endif
 endif
 
 ifeq (gtk2,$(MOZ_WIDGET_TOOLKIT))
diff -r 6be9e31d01b4 -r fca718600ca0 toolkit/library/nsStaticXULComponents.cpp
--- a/toolkit/library/nsStaticXULComponents.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/toolkit/library/nsStaticXULComponents.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -235,10 +235,13 @@
 
 #define SERVICES_CRYPTO_MODULE MODULE(nsServicesCryptoModule)
 
+#ifndef MOZ_APP_COMPONENT_MODULES
 #if defined(MOZ_APP_COMPONENT_INCLUDE)
 #include MOZ_APP_COMPONENT_INCLUDE
+#define MOZ_APP_COMPONENT_MODULES APP_COMPONENT_MODULES
 #else
-#define APP_COMPONENT_MODULES
+#define MOZ_APP_COMPONENT_MODULES
+#endif
 #endif
 
 #define XUL_MODULES                          \
@@ -291,7 +294,7 @@
     JSCTYPES_MODULE                          \
     MODULE(jsperf)                           \
     SERVICES_CRYPTO_MODULE                   \
-    APP_COMPONENT_MODULES                    \
+    MOZ_APP_COMPONENT_MODULES                \
     /* end of list */
 
 #define MODULE(_name) \
diff -r 6be9e31d01b4 -r fca718600ca0 toolkit/mozapps/installer/os2/strip.cmd
--- a/toolkit/mozapps/installer/os2/strip.cmd	Fri Mar 18 11:37:42 2011 +0000
+++ b/toolkit/mozapps/installer/os2/strip.cmd	Wed Apr 13 21:17:37 2011 -0700
@@ -1,2 +1,6 @@
 @rem compress binaries for optimum performance without disturbing chkdll32
-lxlite /ydd /yxd /d %1
+@rem yes to: abort if in use, delete debug & extra data, leave non-resident names;
+@rem align no-bounday/page-shift; no backup; use stdio; discard existing exe/dll settings;
+@rem normal priority; packing: LZ, medium run lth, medium fixup; recursive search;
+@rem unpack before pack; pack files; leave stub, remove debug & extra data;
+lxlite *.exe *.dll /yua /ydd /yxd /ynl /anp /b- /cs+ /d /i- /ml1 /mr2 /mf2 /r+ /u+ /x- /zs:0 /zx /zd
diff -r 6be9e31d01b4 -r fca718600ca0 toolkit/mozapps/installer/packager.mk
--- a/toolkit/mozapps/installer/packager.mk	Fri Mar 18 11:37:42 2011 +0000
+++ b/toolkit/mozapps/installer/packager.mk	Wed Apr 13 21:17:37 2011 -0700
@@ -450,8 +450,6 @@
 endif
 ifeq ($(OS_ARCH),OS2)
 STRIP		= $(MOZILLA_DIR)/toolkit/mozapps/installer/os2/strip.cmd
-STRIP_FLAGS	=
-PLATFORM_EXCLUDE_LIST = ! -name "*.ico" ! -name "$(MOZ_PKG_APPNAME).exe"
 endif
 
 ifneq (,$(filter WINNT WINCE OS2,$(OS_ARCH)))
@@ -552,31 +550,37 @@
 endif
 endif
 ifndef PKG_SKIP_STRIP
-	@echo "Stripping package directory..."
-	@cd $(DIST)/$(STAGEPATH)$(MOZ_PKG_DIR); find . ! -type d \
-			! -name "*.js" \
-			! -name "*.xpt" \
-			! -name "*.gif" \
-			! -name "*.jpg" \
-			! -name "*.png" \
-			! -name "*.xpm" \
-			! -name "*.txt" \
-			! -name "*.rdf" \
-			! -name "*.sh" \
-			! -name "*.properties" \
-			! -name "*.dtd" \
-			! -name "*.html" \
-			! -name "*.xul" \
-			! -name "*.css" \
-			! -name "*.xml" \
-			! -name "*.jar" \
-			! -name "*.dat" \
-			! -name "*.tbl" \
-			! -name "*.src" \
-			! -name "*.reg" \
-			$(PLATFORM_EXCLUDE_LIST) \
-			-exec $(STRIP) $(STRIP_FLAGS) {} >/dev/null 2>&1 \;
-	$(SIGN_NSS)
+  ifeq ($(OS_ARCH),OS2)
+		@echo "Stripping package directory..."
+		@cd $(DIST)/$(STAGEPATH)$(MOZ_PKG_DIR) && $(STRIP)
+		$(SIGN_NSS)
+  else
+		@echo "Stripping package directory..."
+		@cd $(DIST)/$(STAGEPATH)$(MOZ_PKG_DIR); find . ! -type d \
+				! -name "*.js" \
+				! -name "*.xpt" \
+				! -name "*.gif" \
+				! -name "*.jpg" \
+				! -name "*.png" \
+				! -name "*.xpm" \
+				! -name "*.txt" \
+				! -name "*.rdf" \
+				! -name "*.sh" \
+				! -name "*.properties" \
+				! -name "*.dtd" \
+				! -name "*.html" \
+				! -name "*.xul" \
+				! -name "*.css" \
+				! -name "*.xml" \
+				! -name "*.jar" \
+				! -name "*.dat" \
+				! -name "*.tbl" \
+				! -name "*.src" \
+				! -name "*.reg" \
+				$(PLATFORM_EXCLUDE_LIST) \
+				-exec $(STRIP) $(STRIP_FLAGS) {} >/dev/null 2>&1 \;
+		$(SIGN_NSS)
+  endif
 else
 ifdef UNIVERSAL_BINARY
 # universal binaries will have had their .chk files removed prior to the unify
diff -r 6be9e31d01b4 -r fca718600ca0 toolkit/mozapps/update/updater/updater.cpp
--- a/toolkit/mozapps/update/updater/updater.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/toolkit/mozapps/update/updater/updater.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -1719,7 +1719,7 @@
                  sizeof(callbackBackupPath)/sizeof(callbackBackupPath[0]),
                  NS_T("%s" CALLBACK_BACKUP_EXT), argv[callbackIndex]);
     NS_tremove(callbackBackupPath);
-    CopyFileW(argv[callbackIndex], callbackBackupPath, FALSE);
+    CopyFileW(argv[callbackIndex], callbackBackupPath, false);
 
     // Since the process may be signaled as exited by WaitForSingleObject before
     // the release of the executable image try to lock the main executable file
@@ -1734,7 +1734,7 @@
                                  FILE_SHARE_READ | FILE_SHARE_WRITE,
 #else
                                  DELETE | GENERIC_WRITE,
-                                 0, // no sharing!
+                                 FILE_SHARE_DELETE, // allows delete and rename
 #endif
                                  NULL, OPEN_EXISTING, 0, NULL);
       if (callbackFile != INVALID_HANDLE_VALUE)
@@ -1760,7 +1760,7 @@
 
 #if defined(XP_WIN) && !defined(WINCE)
   // The directory to move files that are in use to on Windows. This directory
-  // will be deleted after the update is finished or on on OS reboot using
+  // will be deleted after the update is finished or on OS reboot using
   // MoveFileEx if it contains files that are in use.
   if (NS_taccess(DELETE_DIR, F_OK)) {
     NS_tmkdir(DELETE_DIR, 0755);
@@ -1779,9 +1779,40 @@
 #ifdef XP_WIN
   if (argc > callbackIndex) {
     CloseHandle(callbackFile);
-    // CopyFile will preserve the case of the destination file if it already
-    // exists.
-    if (CopyFileW(callbackBackupPath, argv[callbackIndex], FALSE) != 0) {
+
+    if (gSucceeded) {
+      // Rename the callback file to get it out of the way and rename
+      // the updated callback file to the callback file's original name.
+      int rv = WRITE_ERROR;
+      NS_tchar callbackPath[MAXPATHLEN];
+      // GetLongPathNameW will return the case sensitive file name which is
+      // needed to rename the updated callback file back to the original name.
+      DWORD len = GetLongPathNameW(argv[callbackIndex], callbackPath, MAXPATHLEN);
+      if (len != 0 && len <= MAXPATHLEN) {
+        // Move the original callback file out of the way.
+        rv = backup_create(callbackPath);
+        if (rv == OK) {
+          rv = rename_file(callbackBackupPath, callbackPath);
+          // If the rename operation succeeded the call to backup_finish will
+          // remove the back up of the original callback file. If it failed the
+          // call to backup_finish will restore the back up of the original
+          // callback file and try to copy the updated callback file over the
+          // original using CopyFileW as a last resort.
+          backup_finish(callbackPath, rv);
+        }
+      }
+
+      if (rv != OK && !NS_taccess(callbackBackupPath, F_OK)) {
+        // CopyFile will preserve the case of the destination file if it already
+        // exists.
+        if (CopyFileW(callbackBackupPath, argv[callbackIndex], false)) {
+          NS_tremove(callbackBackupPath);
+        } else {
+          LOG(("NS_main: CopyFileW failed to rename: " LOG_S "... giving up\n",
+               callbackBackupPath));
+        }
+      }
+    } else {
       NS_tremove(callbackBackupPath);
     }
   }
@@ -1824,7 +1855,7 @@
       LaunchMacPostProcess(argv[callbackIndex]);
     }
 #endif /* XP_MACOSX */
-    LaunchCallbackApp(argv[3], argc - callbackIndex, argv + callbackIndex);
+    LaunchCallbackApp(argv[4], argc - callbackIndex, argv + callbackIndex);
   }
 
   return 0;
diff -r 6be9e31d01b4 -r fca718600ca0 toolkit/toolkit-makefiles.sh
--- a/toolkit/toolkit-makefiles.sh	Fri Mar 18 11:37:42 2011 +0000
+++ b/toolkit/toolkit-makefiles.sh	Wed Apr 13 21:17:37 2011 -0700
@@ -129,6 +129,8 @@
   gfx/thebes/Makefile
   gfx/qcms/Makefile
   gfx/angle/Makefile
+  gfx/angle/src/libGLESv2/Makefile
+  gfx/angle/src/libEGL/Makefile
 "
 
 MAKEFILES_htmlparser="
diff -r 6be9e31d01b4 -r fca718600ca0 toolkit/xre/nsX11ErrorHandler.cpp
--- a/toolkit/xre/nsX11ErrorHandler.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/toolkit/xre/nsX11ErrorHandler.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -55,23 +55,11 @@
 
 extern "C" {
 static int
-IgnoreError(Display *display, XErrorEvent *event) {
-  return 0; // This return value is ignored.
-}
-
-static int
 X11Error(Display *display, XErrorEvent *event) {
-  nsCAutoString notes;
-  char buffer[BUFSIZE];
-
   // Get an indication of how long ago the request that caused the error was
-  // made.  Do this before querying extensions etc below.
+  // made.
   unsigned long age = NextRequest(display) - event->serial;
 
-  // Ignore subsequent errors, which may get processed during the extension
-  // queries below for example.
-  XSetErrorHandler(IgnoreError);
-
   // Get a string to represent the request that caused the error.
   nsCAutoString message;
   if (event->request_code < 128) {
@@ -79,25 +67,49 @@
     message.AppendInt(event->request_code);
   } else {
     // Extension request
-    int nExts;
-    char** extNames = XListExtensions(display, &nExts);
-    if (extNames) {
-      for (int i = 0; i < nExts; ++i) {
-        int major_opcode, first_event, first_error;
-        if (XQueryExtension(display, extNames[i],
-                            &major_opcode, &first_event, &first_error)
-            && major_opcode == event->request_code) {
-          message.Append(extNames[i]);
-          message.Append('.');
-          message.AppendInt(event->minor_code);
-          break;
+
+    // man XSetErrorHandler says "the error handler should not call any
+    // functions (directly or indirectly) on the display that will generate
+    // protocol requests or that will look for input events" so we use another
+    // temporary Display to request extension information.  This assumes on
+    // the DISPLAY environment variable has been set and matches what was used
+    // to open |display|.
+    Display *tmpDisplay = XOpenDisplay(NULL);
+    if (tmpDisplay) {
+      int nExts;
+      char** extNames = XListExtensions(tmpDisplay, &nExts);
+      int first_error;
+      if (extNames) {
+        for (int i = 0; i < nExts; ++i) {
+          int major_opcode, first_event;
+          if (XQueryExtension(tmpDisplay, extNames[i],
+                              &major_opcode, &first_event, &first_error)
+              && major_opcode == event->request_code) {
+            message.Append(extNames[i]);
+            message.Append('.');
+            message.AppendInt(event->minor_code);
+            break;
+          }
         }
+
+        XFreeExtensionList(extNames);
       }
+      XCloseDisplay(tmpDisplay);
 
-      XFreeExtensionList(extNames);
+#ifdef MOZ_WIDGET_GTK2
+      // GDK2 calls XCloseDevice the devices that it opened on startup, but
+      // the XI protocol no longer ensures that the devices will still exist.
+      // If they have been removed, then a BadDevice error results.  Ignore
+      // this error.
+      if (message.EqualsLiteral("XInputExtension.4") &&
+          event->error_code == first_error + 0) {
+        return 0;
+      }
+#endif
     }
   }
 
+  char buffer[BUFSIZE];
   if (message.IsEmpty()) {
     buffer[0] = '\0';
   } else {
@@ -105,6 +117,7 @@
                           buffer, sizeof(buffer));
   }
 
+  nsCAutoString notes;
   if (buffer[0]) {
     notes.Append(buffer);
   } else {
diff -r 6be9e31d01b4 -r fca718600ca0 widget/src/cocoa/GfxInfo.mm
--- a/widget/src/cocoa/GfxInfo.mm	Fri Mar 18 11:37:42 2011 +0000
+++ b/widget/src/cocoa/GfxInfo.mm	Wed Apr 13 21:17:37 2011 -0700
@@ -200,8 +200,10 @@
   PRInt32 status = nsIGfxInfo::FEATURE_NO_INFO;
 
   // For now, we don't implement the downloaded blacklist.
-  if (aDriverInfo)
+  if (aDriverInfo) {
+    *aStatus = status;
     return NS_OK;
+  }
 
   // Many WebGL issues on 10.5, especially:
   //   * bug 631258: WebGL shader paints using textures belonging to other processes on Mac OS 10.5
diff -r 6be9e31d01b4 -r fca718600ca0 widget/src/cocoa/nsChildView.mm
--- a/widget/src/cocoa/nsChildView.mm	Fri Mar 18 11:37:42 2011 +0000
+++ b/widget/src/cocoa/nsChildView.mm	Wed Apr 13 21:17:37 2011 -0700
@@ -4135,12 +4135,12 @@
       printf("Asked to convert key event of unknown type to Cocoa plugin event!");
   }
   pluginEvent.data.key.modifierFlags = [cocoaEvent modifierFlags];
+  pluginEvent.data.key.keyCode = [cocoaEvent keyCode];
   // don't try to access character data for flags changed events, it will raise an exception
   if (nativeType != NSFlagsChanged) {
     pluginEvent.data.key.characters = (NPNSString*)[cocoaEvent characters];
     pluginEvent.data.key.charactersIgnoringModifiers = (NPNSString*)[cocoaEvent charactersIgnoringModifiers];
     pluginEvent.data.key.isARepeat = [cocoaEvent isARepeat];
-    pluginEvent.data.key.keyCode = [cocoaEvent keyCode];
   }
 }
 
@@ -5894,6 +5894,8 @@
   if ([currentEvent type] != NSLeftMouseDown)
     return YES;
 
+  nsAutoRetainCocoaObject kungFuDeathGrip(self);
+
   NSPoint eventLoc = nsCocoaUtils::ScreenLocationForEvent(currentEvent);
   eventLoc.y = nsCocoaUtils::FlippedScreenY(eventLoc.y);
   nsIntPoint widgetLoc(NSToIntRound(eventLoc.x), NSToIntRound(eventLoc.y));
@@ -5901,7 +5903,10 @@
 
   nsQueryContentEvent hitTest(PR_TRUE, NS_QUERY_DOM_WIDGET_HITTEST, mGeckoChild);
   hitTest.InitForQueryDOMWidgetHittest(widgetLoc);
+  // This might destroy our widget (and null out mGeckoChild).
   mGeckoChild->DispatchWindowEvent(hitTest);
+  if (!mGeckoChild)
+    return NO;
   if (hitTest.mSucceeded && !hitTest.mReply.mWidgetIsHit)
     return NO;
 
diff -r 6be9e31d01b4 -r fca718600ca0 widget/src/os2/nsWindow.cpp
--- a/widget/src/os2/nsWindow.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/widget/src/os2/nsWindow.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -1779,7 +1779,12 @@
 
     case WM_BUTTON1DOWN:
       WinSetCapture(HWND_DESKTOP, mWnd);
-      DispatchMouseEvent(NS_MOUSE_BUTTON_DOWN, mp1, mp2);
+      isDone = DispatchMouseEvent(NS_MOUSE_BUTTON_DOWN, mp1, mp2);
+      // If this msg is forwarded to a popup's owner, Moz will cause the
+      // popup to be rolled-up in error when the owner processes the msg.
+      if (mWindowType == eWindowType_popup) {
+        isDone = PR_TRUE;
+      }
       // there's no need to clear this on button-up
       sLastButton1Down.x = XFROMMP(mp1);
       sLastButton1Down.y = YFROMMP(mp1);
diff -r 6be9e31d01b4 -r fca718600ca0 widget/src/windows/GfxInfo.cpp
--- a/widget/src/windows/GfxInfo.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/widget/src/windows/GfxInfo.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -619,10 +619,30 @@
     0
 };
 
-// see bug 612007
-static const PRUint32 deviceFamilyNvidia6200TurboCache[] = {
-    0x0161, /* NV44 [GeForce 6200 TurboCache(TM)] */
+// Glitches whilst scrolling (see bugs 612007, 644787, 645872)
+static const PRUint32 deviceFamilyNvidiaBlockD3D9Layers[] = {
+    0x00f3, /* NV43 [GeForce 6200 (TM)] */
+    0x0146, /* NV43 [Geforce Go 6600TE/6200TE (TM)] */
+    0x014f, /* NV43 [GeForce 6200 (TM)] */
+    0x0161, /* NV44 [GeForce 6200 TurboCache (TM)] */
     0x0162, /* NV44 [GeForce 6200SE TurboCache (TM)] */
+    0x0163, /* NV44 [GeForce 6200 LE (TM)] */
+    0x0164, /* NV44 [GeForce Go 6200 (TM)] */
+    0x0167, /* NV43 [GeForce Go 6200/6400 (TM)] */
+    0x0168, /* NV43 [GeForce Go 6200/6400 (TM)] */
+    0x0169, /* NV44 [GeForce 6250 (TM)] */
+    0x0221, /* NV44A [GeForce 6200 (TM)] */
+    0x0222, /* NV44 [GeForce 6200 A-LE (TM)] */
+    0x0240, /* C51PV [GeForce 6150 (TM)] */
+    0x0241, /* C51 [GeForce 6150 LE (TM)] */
+    0x0242, /* C51G [GeForce 6100 (TM)] */
+    0x0244, /* C51 [Geforce Go 6150 (TM)] */
+    0x0245, /* C51 [Quadro NVS 210S/GeForce 6150LE (TM)] */
+    0x0247, /* C51 [GeForce Go 6100 (TM)] */
+    0x03d0, /* C61 [GeForce 6150SE nForce 430 (TM)] */
+    0x03d1, /* C61 [GeForce 6100 nForce 405 (TM)] */
+    0x03d2, /* C61 [GeForce 6100 nForce 400 (TM)] */
+    0x03d5, /* C61 [GeForce 6100 nForce 420 (TM)] */
     0
 };
 
@@ -647,9 +667,11 @@
     GfxDriverInfo::allFeatures, nsIGfxInfo::FEATURE_BLOCKED_DRIVER_VERSION,
     DRIVER_LESS_THAN, V(8,17,12,5721), "257.21" ),
 
-  // bug 612007: disable D3D9 layers on NVIDIA 6200 TurboCache series.
+  /* Disable D3D9 layers on NVIDIA 6100/6150/6200 series due to glitches
+   * whilst scrolling. See bugs: 612007, 644787 & 645872.
+   */
   GfxDriverInfo( DRIVER_OS_ALL,
-    vendorNVIDIA, (GfxDeviceFamily) deviceFamilyNvidia6200TurboCache,
+    vendorNVIDIA, (GfxDeviceFamily) deviceFamilyNvidiaBlockD3D9Layers,
     nsIGfxInfo::FEATURE_DIRECT3D_9_LAYERS, nsIGfxInfo::FEATURE_BLOCKED_DEVICE,
     DRIVER_LESS_THAN, allDriverVersions ),
 
diff -r 6be9e31d01b4 -r fca718600ca0 widget/src/windows/nsWindow.cpp
--- a/widget/src/windows/nsWindow.cpp	Fri Mar 18 11:37:42 2011 +0000
+++ b/widget/src/windows/nsWindow.cpp	Wed Apr 13 21:17:37 2011 -0700
@@ -4465,8 +4465,22 @@
     // via calls to ShowWindow.
     case WM_ACTIVATE:
       if (lParam != 0 && LOWORD(wParam) == WA_ACTIVE &&
-          IsWindow((HWND)lParam))
+          IsWindow((HWND)lParam)) {
+        // Check for Adobe Reader X sync activate message from their
+        // ime window and ignore. Fixes an annoying focus problem.
+        if ((InSendMessageEx(NULL)&(ISMEX_REPLIED|ISMEX_SEND)) == ISMEX_SEND) {
+          PRUnichar szClass[10];
+          HWND focusWnd = (HWND)lParam;
+          if (IsWindowVisible(focusWnd) &&
+              GetClassNameW(focusWnd, szClass,
+                            sizeof(szClass)/sizeof(PRUnichar)) &&
+              !wcscmp(szClass, L"Edit") &&
+              !IsOurProcessWindow(focusWnd)) {
+            return;
+          }
+        }
         handled = PR_TRUE;
+      }
     break;
     // Wheel events forwarded from the child.
     case WM_MOUSEWHEEL:
@@ -7758,7 +7772,7 @@
   return info.mOutHWND;
 }
 
-typedef DWORD (*GetProcessImageFileNameProc)(HANDLE, LPWSTR, DWORD);
+typedef DWORD (WINAPI *GetProcessImageFileNameProc)(HANDLE, LPWSTR, DWORD);
 
 // Determine whether the given HWND is the handle for the Elantech helper
 // window.  The helper window cannot be distinguished based on its
diff -r 6be9e31d01b4 -r fca718600ca0 xpfe/components/autocomplete/resources/content/autocomplete.css
--- a/xpfe/components/autocomplete/resources/content/autocomplete.css	Fri Mar 18 11:37:42 2011 +0000
+++ b/xpfe/components/autocomplete/resources/content/autocomplete.css	Wed Apr 13 21:17:37 2011 -0700
@@ -17,6 +17,14 @@
   -moz-user-focus: ignore;
 }
 
+.autocomplete-history-dropmarker {
+  display: none;
+}
+
+.autocomplete-history-dropmarker[enablehistory="true"] {
+  display: -moz-box;
+}
+
 /* The following rule is here to fix bug 96899 (and now 117952).  
    Somehow trees create a situation
    in which a popupset flows itself as if its popup child is directly within it
diff -r 6be9e31d01b4 -r fca718600ca0 xpfe/components/autocomplete/resources/content/autocomplete.xml
--- a/xpfe/components/autocomplete/resources/content/autocomplete.xml	Fri Mar 18 11:37:42 2011 +0000
+++ b/xpfe/components/autocomplete/resources/content/autocomplete.xml	Wed Apr 13 21:17:37 2011 -0700
@@ -29,7 +29,7 @@
       </xul:hbox>
 
       <xul:dropmarker class="autocomplete-history-dropmarker" allowevents="true"
-                      xbl:inherits="open,hidden=disablehistory" anonid="historydropmarker"/>
+                      xbl:inherits="open,enablehistory" anonid="historydropmarker"/>
 
       <xul:popupset>
         <xul:panel type="autocomplete" anonid="popup"
@@ -55,7 +55,6 @@
         this.ifSetAttribute("timeout", 50);
         this.ifSetAttribute("maxrows", 5);
         this.ifSetAttribute("showpopup", true);
-        this.ifSetAttribute("disablehistory", true);
         this.ifSetAttribute("disableKeyNavigation", true);
         
         // initialize the search sessions
@@ -1008,7 +1007,7 @@
             // Alt+Down falls through to history popup toggling code
               
             case KeyEvent.DOM_VK_F4:
-              if (!aEvent.ctrlKey && !aEvent.shiftKey && this.getAttribute("disablehistory") != "true") {
+              if (!aEvent.ctrlKey && !aEvent.shiftKey && this.getAttribute("enablehistory") == "true") {
                 var historyPopup = document.getAnonymousElementByAttribute(this, "anonid", "historydropmarker");
                 if (historyPopup)
                   historyPopup.showPopup();
@@ -1516,6 +1515,7 @@
      <property name="pageCount"
                onget="return this.tree.treeBoxObject.getPageLength();"/>
 
+     <field name="maxRows">0</field>
      <field name="mLastRows">0</field>
 
       <method name="initialize">
@@ -1523,6 +1523,7 @@
         this.showCommentColumn = this.textbox.showCommentColumn;
         this.tree.view = this.textbox.view;
         this.view = this.textbox.view;
+        this.maxRows = this.textbox.maxRows;
         ]]></body>
       </method>
 
@@ -1535,7 +1536,7 @@
           // detect the desired height of the tree
           var bx = this.tree.treeBoxObject;
           var view = this.view;
-          var rows = this.textbox ? this.textbox.maxRows : 6;
+          var rows = this.maxRows || 6;
           if (!view.rowCount || (rows && view.rowCount < rows))
             rows = view.rowCount;
           
@@ -1638,6 +1639,7 @@
             this.tree.view = aInput.controller;
             this.view = this.tree.view;
             this.showCommentColumn = aInput.showCommentColumn;
+            this.maxRows = aInput.maxRows;
             this.invalidate();
 
             var viewer = aElement
