diff -up TiMidity++-2.13.2/timidity/timidity.c.detect TiMidity++-2.13.2/timidity/timidity.c
--- TiMidity++-2.13.2/timidity/timidity.c.detect	2007-10-14 21:26:13.000000000 +0200
+++ TiMidity++-2.13.2/timidity/timidity.c	2007-10-14 21:26:41.000000000 +0200
@@ -5152,10 +5152,6 @@ MAIN_INTERFACE int timidity_post_load_co
 	char *output_id;
 
 	output_id = getenv("TIMIDITY_OUTPUT_ID");
-#ifdef TIMIDITY_OUTPUT_ID
-	if(output_id == NULL)
-	    output_id = TIMIDITY_OUTPUT_ID;
-#endif /* TIMIDITY_OUTPUT_ID */
 	if(output_id != NULL)
 	{
 	    for(i = 0; play_mode_list[i]; i++)
diff -up TiMidity++-2.13.2/timidity/esd_a.c.detect TiMidity++-2.13.2/timidity/esd_a.c
--- TiMidity++-2.13.2/timidity/esd_a.c.detect	2003-09-18 11:23:59.000000000 +0200
+++ TiMidity++-2.13.2/timidity/esd_a.c	2007-10-14 21:18:54.000000000 +0200
@@ -67,7 +67,7 @@ PlayMode dpm = {
     -1,
     {0}, /* default: get all the buffer fragments you can */
     "Enlightened sound daemon", 'e',
-    "/dev/dsp",
+    "esd",
     open_output,
     close_output,
     output_data,
@@ -93,7 +93,7 @@ static int try_open(void)
     /* Open the audio device */
     esdformat = (dpm.encoding & PE_16BIT) ? ESD_BITS16 : ESD_BITS8;
     esdformat |= (dpm.encoding & PE_MONO) ? ESD_MONO : ESD_STEREO;
-    return esd_play_stream_fallback(esdformat,dpm.rate,NULL,"timidity");
+    return esd_play_stream(esdformat,dpm.rate,NULL,"timidity");
 }
 
 
@@ -101,8 +101,7 @@ static int detect(void)
 {
     int fd;
 
-    /* FIXME: do we need to set this? */
-    /* setenv("ESD_NO_SPAWN", "1", 0); */
+    setenv("ESD_NO_SPAWN", "1", 0);
     fd = try_open();
     if (fd < 0)
 	return 0;
diff -up TiMidity++-2.13.2/timidity/output.c.detect TiMidity++-2.13.2/timidity/output.c
--- TiMidity++-2.13.2/timidity/output.c.detect	2004-05-14 03:32:34.000000000 +0200
+++ TiMidity++-2.13.2/timidity/output.c	2007-10-14 21:18:54.000000000 +0200
@@ -133,18 +133,6 @@ extern PlayMode gogo_play_mode;
 extern PlayMode modmidi_play_mode;
 
 PlayMode *play_mode_list[] = {
-#ifdef DEV_PLAY_MODE
-  DEV_PLAY_MODE,
-#endif
-
-#ifdef AU_ALSA
-  &alsa_play_mode,
-#endif /* AU_ALSA */
-
-#ifdef AU_HPUX_ALIB
-  &hpux_nplay_mode,
-#endif /* AU_HPUX_ALIB */
-
 #if defined(AU_ARTS)
   &arts_play_mode,
 #endif /* AU_ARTS */
@@ -153,6 +141,18 @@ PlayMode *play_mode_list[] = {
   &esd_play_mode,
 #endif /* AU_ESD */
 
+#ifdef AU_ALSA /* Try alsa (aka DEV_PLAY_MODE 2 on Linux) first */
+  &alsa_play_mode,
+#endif /* AU_ALSA */
+
+#ifdef DEV_PLAY_MODE /* OS dependent direct hardware access, OSS on Linux */
+  DEV_PLAY_MODE,
+#endif
+
+#ifdef AU_HPUX_ALIB
+  &hpux_nplay_mode,
+#endif /* AU_HPUX_ALIB */
+
 #if defined(AU_PORTAUDIO)
 #ifndef AU_PORTAUDIO_DLL
   &portaudio_play_mode,
