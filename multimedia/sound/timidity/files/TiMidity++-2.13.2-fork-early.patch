diff -up TiMidity++-2.13.2/interface/alsaseq_c.c~ TiMidity++-2.13.2/interface/alsaseq_c.c
--- TiMidity++-2.13.2/interface/alsaseq_c.c~	2004-07-10 07:07:00.000000000 +0200
+++ TiMidity++-2.13.2/interface/alsaseq_c.c	2009-06-03 14:11:16.000000000 +0200
@@ -390,23 +390,6 @@ static void ctl_pass_playing_list(int n,
 
 	play_mode->close_output();
 
-	if (ctl.flags & CTLF_DAEMONIZE)
-	{
-		int pid = fork();
-		FILE *pidf;
-		switch (pid)
-		{
-			case 0:			// child is the daemon
-				break;
-			case -1:		// error status return
-				exit(7);
-			default:		// no error, doing well
-				if ((pidf = fopen( "/var/run/timidity.pid", "w" )) != NULL )
-					fprintf( pidf, "%d\n", pid );
-				exit(0);
-		}
-	}
-
 	for (;;) {
 		server_reset();
 		doit(&alsactx);
diff -up TiMidity++-2.13.2/timidity/timidity.c~ TiMidity++-2.13.2/timidity/timidity.c
--- TiMidity++-2.13.2/timidity/timidity.c~	2009-06-03 13:40:24.000000000 +0200
+++ TiMidity++-2.13.2/timidity/timidity.c	2009-06-03 14:12:20.000000000 +0200
@@ -5192,6 +5192,29 @@ MAIN_INTERFACE int timidity_post_load_co
 {
     int i, cmderr = 0;
 
+    /* If we're going to fork for daemon mode, we need to fork now, as
+       certain output libraries (pulseaudio) become unhappy if initialized
+       before forking and then being used from the child. */
+    if (ctl->id_character == 'A' && (ctl->flags & CTLF_DAEMONIZE))
+    {
+	int pid = fork();
+	FILE *pidf;
+	switch (pid)
+	{
+	    case 0:		// child is the daemon
+		break;
+	    case -1:		// error status return
+		exit(7);
+	    default:		// no error, doing well
+		if ((pidf = fopen( "/var/run/timidity.pid", "w" )) != NULL )
+		{
+		    fprintf( pidf, "%d\n", pid );
+		    fclose( pidf );
+                }
+		exit(0);
+	}
+    }
+
     if(play_mode == &null_play_mode)
     {
 	char *output_id;
