diff -Nur mplayer-old/command.c mplayer/command.c
--- mplayer-old/command.c	2010-05-25 14:02:29.244292985 +0300
+++ mplayer/command.c	2010-05-25 14:04:31.311543833 +0300
@@ -998,8 +998,11 @@
             guiGetEvent(guiIEvent, (char *) MP_CMD_GUI_FULLSCREEN);
         else
 #endif
-        if (vo_config_count)
+        if (vo_config_count) {
             mpctx->video_out->control(VOCTRL_FULLSCREEN, 0);
+            vo_user_override |= VO_USER_OVERRIDE_FS;
+            vo_user_fs = vo_fs;
+        }
         return M_PROPERTY_OK;
     default:
         return m_property_flag(prop, action, arg, &vo_fs);
diff -Nur mplayer-old/libvo/video_out.c mplayer/libvo/video_out.c
--- mplayer-old/libvo/video_out.c	2010-05-25 14:02:29.135293119 +0300
+++ mplayer/libvo/video_out.c	2010-05-25 14:02:46.149668112 +0300
@@ -48,6 +48,10 @@
 
 int vo_config_count=0;
 
+int vo_user_override;
+int vo_user_fs;
+int vo_user_x;
+int vo_user_y;
 // requested resolution/bpp:  (-x -y -bpp options)
 int vo_dx=0;
 int vo_dy=0;
@@ -362,6 +366,14 @@
   vo_dheight = d_height;
   }
 
+  if (vo_user_override & VO_USER_OVERRIDE_FS) {
+    if (vo_user_fs) flags |= VOFLAG_FULLSCREEN;
+    else flags &= ~VOFLAG_FULLSCREEN;
+  }
+  if (vo_user_override & VO_USER_OVERRIDE_POS) {
+    vo_dx = vo_user_x;
+    vo_dy = vo_user_y;
+  }
   return vo->config(width, height, d_width, d_height, flags, title, format);
 }
 
diff -Nur mplayer-old/libvo/video_out.h mplayer/libvo/video_out.h
--- mplayer-old/libvo/video_out.h	2010-05-25 14:02:29.132293150 +0300
+++ mplayer/libvo/video_out.h	2010-05-25 14:02:46.150668143 +0300
@@ -35,6 +35,13 @@
 #define VO_EVENT_KEYPRESS 4
 #define VO_EVENT_REINIT 8
 
+#define VO_USER_OVERRIDE_FS  1
+#define VO_USER_OVERRIDE_POS 2
+extern int vo_user_override;
+extern int vo_user_fs;
+extern int vo_user_x;
+extern int vo_user_y;
+
 /* Obsolete: VOCTRL_QUERY_VAA 1 */
 /* does the device support the required format */
 #define VOCTRL_QUERY_FORMAT 2
