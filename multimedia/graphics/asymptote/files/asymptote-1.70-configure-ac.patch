Index: asymptote-1.70/configure.ac
===================================================================
--- asymptote-1.70.orig/configure.ac
+++ asymptote-1.70/configure.ac
@@ -79,10 +79,16 @@ if test "$GXX" = yes ; then
    fi
 fi
 
-AC_CHECK_HEADER(fftw3.h,
-   AC_CHECK_LIB([fftw3], fftw_execute,,
+AC_ARG_WITH([fftw],
+           [  --with-fftw             use fftw3],
+           [with_fftw=$withval],
+           [with_fftw="no"])
+if test "$with_fftw" = "yes"; then
+AC_CHECK_HEADER([fftw3.h],
+   AC_CHECK_LIB([fftw3], [fftw_execute],,
            AC_MSG_NOTICE([*** Could not find libfftw3: will compile without optional fast Fourier transforms. ***])),
      AC_MSG_NOTICE([*** Header file fftw3.h not found: will compile without optional fast Fourier transforms. ***]))
+fi
 
 GCVERSION=gc-7.1
 
@@ -119,7 +125,7 @@ if test "x$ac_cv_use_gc" != "xno" ; then
       fi
       CPPFLAGS_SAVE=$CPPFLAGS
       CPPFLAGS=$CPPFLAGS" $INCL"
-      AC_CHECK_HEADER(gc.h,
+      AC_CHECK_HEADER([gc/gc.h],
 	AC_CHECK_LIB([gc],[GC_malloc],[
 	  LIBS=$LIBS"-lgc "
 	  AC_MSG_NOTICE([enabling system $GCNAME])],[
@@ -186,7 +192,16 @@ AC_CHECK_LIB([ncurses], [setupterm], [AC
 AC_CHECK_LIB([m], [sqrt])
 AC_CHECK_LIB([z], [deflate])
 AC_CHECK_LIB([pthread], [pthread_create])
-AC_CHECK_LIB([sigsegv], [stackoverflow_install_handler])
+
+AC_ARG_WITH(sigsegv,
+           [  --with-sigsegv          use libsigsegv],
+           [with_sigsegv=$withval],
+           [with_sigsegv="no"])
+if test "$with_sigsegv" = "yes"; then
+AC_CHECK_HEADER([sigsegv.h],
+   AC_CHECK_LIB([sigsegv], [stackoverflow_install_handler]),
+   AC_MSG_NOTICE([*** Header file sigsegv.h not found ***]))
+fi
 
 AC_CHECK_LIB([readline], [rl_completion_matches],,
 AC_MSG_NOTICE(*** Could not find GNU readline 4.2 or later: will compile without readline support ***))
@@ -203,11 +218,17 @@ AC_COMPILE_IFELSE(AC_LANG_PROGRAM([#incl
 		   [Define if you have a working <rpc/rpc.h> header file])],
    AC_MSG_WARN([*** Broken rpc headers; XDR support disabled ***]))
 
-AC_CHECK_HEADER(gsl/gsl_sf.h,
+AC_ARG_WITH(gsl,
+           [  --with-gsl              use gsl libraries],
+           [with_gsl=$withval],
+           [with_gsl="no"])
+if test "$with_gsl" = "yes"; then
+AC_CHECK_HEADER([gsl/gsl_sf.h],
    AC_CHECK_LIB([gsl], gsl_sf_Si, [AC_DEFINE(HAVE_LIBGSL, 1,
    [Define to 1 if you have the 'gsl' library (-lgsl). ]) LIBS=$LIBS"-lgsl -lgslcblas "],
            AC_MSG_NOTICE([*** Could not find libgsl: will compile without optional special functions. ***]),[-lgslcblas]),
      AC_MSG_NOTICE([*** Header file gsl_sf.h not found: will compile without optional special functions. ***]))
+fi
 
 case "$OSTYPE" in
      cygwin) AC_CHECK_HEADER(GL/glut.h,
