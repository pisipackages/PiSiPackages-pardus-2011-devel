Index: qt-everywhere-opensource-src-4.7.2/bin/syncqt
===================================================================
--- qt-everywhere-opensource-src-4.7.2.orig/bin/syncqt	2011-02-22 12:02:48.000000000 +0000
+++ qt-everywhere-opensource-src-4.7.2/bin/syncqt	2011-03-02 18:09:27.967309602 +0000
@@ -310,17 +310,16 @@
 }
 
 ######################################################################
-# Syntax:  syncHeader(header, iheader, copy, timestamp)
+# Syntax:  syncHeader(header, iheader, copy)
 # Params:  header, string, filename to create "symlink" for
 #          iheader, string, destination name of symlink
 #          copy, forces header to be a copy of iheader
-#          timestamp, the requested modification time if copying
 #
 # Purpose: Syncronizes header to iheader
 # Returns: 1 if successful, else 0.
 ######################################################################
 sub syncHeader {
-    my ($header, $iheader, $copy, $ts) = @_;
+    my ($header, $iheader, $copy) = @_;
     $iheader =~ s=\\=/=g;
     $header =~ s=\\=/=g;
     return copyFile($iheader, $header) if($copy);
@@ -334,7 +333,6 @@
         open HEADER, ">$header" || die "Could not open $header for writing!\n";
         print HEADER "#include \"$iheader_out\"\n";
         close HEADER;
-        utime(time, $ts, $header) or die "$iheader, $header";
         return 1;
     }
     return 0;
@@ -475,7 +473,6 @@
             binmode O;
             print O $ifilecontents;
             close O;
-            utime time, (stat($ifile))[9], $file;
             return 1;
         } elsif ( $copy < 0 ) {
             my $ifile_dir = dirname($ifile);
@@ -485,7 +482,6 @@
             binmode O;
             print O $filecontents;
             close O;
-            utime time, (stat($file))[9], $ifile;
             return 1;
         }
     }
@@ -830,7 +826,6 @@
                             print "SYMBOL: $_\n";
                         }
                     } else {
-                        my $ts = (stat($iheader))[9];
                         #find out all the places it goes..
                         my @headers;
                         if ($public_header) {
@@ -869,18 +864,18 @@
 #                                  class =~ s,::,/,g;
 #                               }
                                 $class_lib_map_contents .= "QT_CLASS_LIB($full_class, $lib, $header_base)\n";
-                                $header_copies++ if(syncHeader("$out_basedir/include/$lib/$class", "$out_basedir/include/$lib/$header", 0, $ts));
+                                $header_copies++ if(syncHeader("$out_basedir/include/$lib/$class", "$out_basedir/include/$lib/$header", 0));
 
                                 # KDE-Compat headers for Phonon
                                 if ($lib eq "phonon") {
-                                    $header_copies++ if (syncHeader("$out_basedir/include/phonon_compat/Phonon/$class", "$out_basedir/include/$lib/$header", 0, $ts));
+                                    $header_copies++ if (syncHeader("$out_basedir/include/phonon_compat/Phonon/$class", "$out_basedir/include/$lib/$header", 0));
                                 }
                             }
                         } elsif ($create_private_headers) {
                             @headers = ( "$out_basedir/include/$lib/private/$header" );
                         }
                         foreach(@headers) { #sync them
-                            $header_copies++ if(syncHeader($_, $iheader, $copy_headers && !$shadow, $ts));
+                            $header_copies++ if(syncHeader($_, $iheader, $copy_headers && !$shadow));
                         }
 
                         if($public_header) {
