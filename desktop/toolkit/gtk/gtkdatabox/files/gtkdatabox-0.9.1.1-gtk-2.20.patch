diff -urN gtkdatabox-0.9.1.1.orig/gtk/gtkdatabox.c gtkdatabox-0.9.1.1/gtk/gtkdatabox.c
--- gtkdatabox-0.9.1.1.orig/gtk/gtkdatabox.c	2010-05-19 22:12:40.535625342 -0700
+++ gtkdatabox-0.9.1.1/gtk/gtkdatabox.c	2010-05-19 22:30:15.848690202 -0700
@@ -1104,7 +1104,7 @@
 
    widget->allocation = *allocation;
 
-   if (GTK_WIDGET_REALIZED (widget))
+   if (gtk_widget_get_realized (widget))
    {
       gdk_window_move_resize (widget->window,
 			      allocation->x, allocation->y,
@@ -1154,7 +1154,7 @@
    }
 
    gdk_draw_drawable (widget->window,
-		      widget->style->fg_gc[GTK_WIDGET_STATE (widget)],
+		      widget->style->fg_gc[gtk_widget_get_state (widget)],
 		      box->priv->backing_pixmap, 
                       event->area.x, event->area.y,
 		      event->area.x, event->area.y, 
@@ -1443,7 +1443,7 @@
    /* Copy a part of the backing_pixmap to the screen */
    if (pixmapCopyRect)
       gdk_draw_drawable (widget->window,
-			 widget->style->fg_gc[GTK_WIDGET_STATE (box)],
+			 widget->style->fg_gc[gtk_widget_get_state (box)],
 			 box->priv->backing_pixmap,
 			 pixmapCopyRect->x,
 			 pixmapCopyRect->y,
@@ -1771,7 +1771,7 @@
 static void
 gtk_databox_calculate_visible_limits (GtkDatabox * box)
 {
-   if (!GTK_WIDGET_VISIBLE (box))
+   if (!gtk_widget_get_visible (box))
       return;
 
    if (box->priv->scale_type_x == GTK_DATABOX_SCALE_LINEAR)
Binary files gtkdatabox-0.9.1.1.orig/gtk/.gtkdatabox.c.swp and gtkdatabox-0.9.1.1/gtk/.gtkdatabox.c.swp differ
diff -urN gtkdatabox-0.9.1.1.orig/gtk/gtkdatabox_ruler.c gtkdatabox-0.9.1.1/gtk/gtkdatabox_ruler.c
--- gtkdatabox-0.9.1.1.orig/gtk/gtkdatabox_ruler.c	2010-05-19 22:12:40.536624613 -0700
+++ gtkdatabox-0.9.1.1/gtk/gtkdatabox_ruler.c	2010-05-19 22:33:24.068636544 -0700
@@ -323,7 +323,7 @@
    }
    g_object_thaw_notify (G_OBJECT (ruler));
 
-   if (GTK_WIDGET_DRAWABLE (ruler))
+   if (gtk_widget_is_drawable (ruler))
       gtk_widget_queue_draw (GTK_WIDGET (ruler));
 }
 
@@ -354,7 +354,7 @@
    }
    g_object_thaw_notify (G_OBJECT (ruler));
 
-   if (GTK_WIDGET_DRAWABLE (ruler))
+   if (gtk_widget_is_drawable (ruler))
       gtk_widget_queue_draw (GTK_WIDGET (ruler));
 }
 
@@ -378,7 +378,7 @@
       /* g_object_notify (G_OBJECT (ruler), "scale-type"); */
    }
 
-   if (GTK_WIDGET_DRAWABLE (ruler))
+   if (gtk_widget_is_drawable (ruler))
       gtk_widget_queue_draw (GTK_WIDGET (ruler));
 }
 
@@ -414,7 +414,7 @@
       widget->requisition.width = widget->style->xthickness * 2 + RULER_SIZE;
    }
 
-   if (GTK_WIDGET_DRAWABLE (ruler))
+   if (gtk_widget_is_drawable (ruler))
       gtk_widget_queue_draw (GTK_WIDGET (ruler));
 }
 
@@ -529,7 +529,7 @@
       g_sprintf (format_string, "%%-%dg", ruler->priv->max_length - 1);
 
 
-   if (!GTK_WIDGET_DRAWABLE (ruler))
+   if (!gtk_widget_is_drawable (ruler))
       return;
 
    widget = GTK_WIDGET (ruler);
@@ -682,14 +682,14 @@
       if (ruler->priv->orientation == GTK_ORIENTATION_HORIZONTAL)
 	 gtk_paint_layout (widget->style,
 			   ruler->priv->backing_pixmap,
-			   GTK_WIDGET_STATE (widget),
+			   gtk_widget_get_state (widget),
 			   FALSE,
 			   NULL,
 			   widget, "ruler", pos + 2, ythickness - 1, layout);
       else
 	 gtk_paint_layout (widget->style,
 			   ruler->priv->backing_pixmap,
-			   GTK_WIDGET_STATE (widget),
+			   gtk_widget_get_state (widget),
 			   FALSE,
 			   NULL,
 			   widget,
@@ -761,7 +761,7 @@
    gint ythickness;
    gdouble increment;
 
-   if (GTK_WIDGET_DRAWABLE (ruler))
+   if (gtk_widget_is_drawable (ruler))
    {
       xthickness = widget->style->xthickness;
       ythickness = widget->style->ythickness;
@@ -893,7 +893,7 @@
 
    widget->allocation = *allocation;
 
-   if (GTK_WIDGET_REALIZED (widget))
+   if (gtk_widget_get_realized (widget))
    {
       gdk_window_move_resize (widget->window,
 			      allocation->x, allocation->y,
@@ -908,14 +908,14 @@
 {
    GtkDataboxRuler *ruler;
 
-   if (GTK_WIDGET_DRAWABLE (widget))
+   if (gtk_widget_is_drawable (widget))
    {
       ruler = GTK_DATABOX_RULER (widget);
 
       gtk_databox_ruler_draw_ticks (ruler);
 
       gdk_draw_drawable (widget->window,
-			 widget->style->fg_gc[GTK_WIDGET_STATE (ruler)],
+			 widget->style->fg_gc[gtk_widget_get_state (ruler)],
 			 ruler->priv->backing_pixmap,
 			 0, 0, 0, 0,
 			 widget->allocation.width, widget->allocation.height);
Binary files gtkdatabox-0.9.1.1.orig/gtk/.gtkdatabox_ruler.c.swp and gtkdatabox-0.9.1.1/gtk/.gtkdatabox_ruler.c.swp differ
