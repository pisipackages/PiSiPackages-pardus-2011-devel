Index: kfile/kfileplacesmodel.cpp
===================================================================
--- kfile/kfileplacesmodel.cpp.orig
+++ kfile/kfileplacesmodel.cpp
@@ -43,6 +43,7 @@
 #include <kicon.h>
 #include <kmimetype.h>
 #include <kdebug.h>
+#include <kprocess.h>
 
 #include <kbookmarkmanager.h>
 #include <kbookmark.h>
@@ -56,6 +57,7 @@
 #include <solid/opticaldrive.h>
 #include <solid/opticaldisc.h>
 #include <solid/predicate.h>
+#include <solid/block.h>
 
 class KFilePlacesModel::Private
 {
@@ -786,6 +788,54 @@ QAction *KFilePlacesModel::teardownActio
     return 0;
 }
 
+QAction *KFilePlacesModel::formatActionForIndex(const QModelIndex &index) const
+{
+    Solid::Device device = deviceForIndex(index);
+
+    if (device.is<Solid::StorageAccess>() && !device.as<Solid::StorageAccess>()->isAccessible() && QFile::exists("/usr/bin/quickformat")) {
+        Solid::StorageDrive *drive = device.as<Solid::StorageDrive>();
+
+        if (drive==0) {
+            drive = device.parent().as<Solid::StorageDrive>();
+        }
+
+        bool hotpluggable = false;
+        bool removable = false;
+
+        if (drive!=0) {
+            hotpluggable = drive->isHotpluggable();
+            removable = drive->isRemovable();
+        }
+
+        if (removable || hotpluggable) {
+            QString iconName("draw-eraser");
+            QString label = data(index, Qt::DisplayRole).toString().replace('&',"&&");
+            QString text = i18n("&Format '%1'", label);
+
+            return new QAction(KIcon(iconName), text, 0);
+        }
+        else
+        {
+            return 0;
+        }
+    }
+
+    return 0;
+}
+
+void KFilePlacesModel::requestFormat(const QModelIndex &index)
+{
+    Solid::Device device = deviceForIndex(index);
+
+    Solid::Block *drive = device.as<Solid::Block>();
+    kWarning() << "Request format called";
+    if (drive)
+    {
+       kWarning() << "running quickformat with " << drive->device();
+       KProcess::startDetached("/usr/bin/quickformat", QStringList() << drive->device());
+    }
+}
+
 QAction *KFilePlacesModel::ejectActionForIndex(const QModelIndex &index) const
 {
     Solid::Device device = deviceForIndex(index);
Index: kfile/kfileplacesmodel.h
===================================================================
--- kfile/kfileplacesmodel.h.orig
+++ kfile/kfileplacesmodel.h
@@ -63,8 +63,10 @@ public:
 
     QAction *teardownActionForIndex(const QModelIndex &index) const;
     QAction *ejectActionForIndex(const QModelIndex &index) const;
+    QAction *formatActionForIndex(const QModelIndex &index) const;
     void requestTeardown(const QModelIndex &index);
     void requestEject(const QModelIndex &index);
+    void requestFormat(const QModelIndex &index);
     void requestSetup(const QModelIndex &index);
 
     void addPlace(const QString &text, const KUrl &url, const QString &iconName = QString(), const QString &appName = QString());
Index: kfile/kfileplacesview.cpp
===================================================================
--- kfile/kfileplacesview.cpp.orig
+++ kfile/kfileplacesview.cpp
@@ -559,6 +559,7 @@ void KFilePlacesView::contextMenuEvent(Q
     QAction *hide = 0;
     QAction *emptyTrash = 0;
     QAction *eject = 0;
+    QAction *format = 0;
     QAction *teardown = 0;
     QAction *add = 0;
     QAction *mainSeparator = 0;
@@ -575,6 +576,12 @@ void KFilePlacesView::contextMenuEvent(Q
             mainSeparator = menu.addSeparator();
             edit = menu.addAction(KIcon("document-properties"), i18n("&Edit Entry '%1'...", label));
         } else {
+            format = placesModel->formatActionForIndex(index);
+            if (format!=0) {
+                format->setParent(&menu);
+                menu.addAction(format);
+            }
+
             eject = placesModel->ejectActionForIndex(index);
             if (eject!=0) {
                 eject->setParent(&menu);
@@ -677,6 +684,8 @@ void KFilePlacesView::contextMenuEvent(Q
         placesModel->requestTeardown(index);
     } else if (eject != 0 && result == eject) {
         placesModel->requestEject(index);
+    } else if (format != 0 && result == format) {
+        placesModel->requestFormat(index);
     } else if (add != 0 && result == add) {
         KUrl url = d->currentUrl;
         QString label;
