commit 4635a3b523ae66c193d736e90709cb81c60b657e
Author: Eike Hein <hein@kde.org>
Date:   Thu Jul 1 15:48:53 2010 +0200

    Adjust codebase for next dev cycle.

diff --git a/src/commit.h b/src/commit.h
index ab595b9..ec4c97b 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4056
+#define COMMIT 4057
 #endif
diff --git a/src/irc/inputfilter.cpp b/src/irc/inputfilter.cpp
index 58201ad..ec3ae8a 100644
--- a/src/irc/inputfilter.cpp
+++ b/src/irc/inputfilter.cpp
@@ -15,6 +15,7 @@
 #include "server.h"
 #include "replycodes.h"
 #include "application.h"
+#include "commit.h"
 #include "version.h"
 #include "query.h"
 #include "channel.h"
@@ -309,8 +310,9 @@ void InputFilter::parseClientCommand(const QString &prefix, const QString &comma
                     else
                     {
                         // Do not internationalize the below version string
-                        reply = QString("Konversation %1 (C) 2002-2010 by the Konversation team")
-                            .arg(QString(KONVI_VERSION));
+                        reply = QString("Konversation %1 Build %2 (C) 2002-2010 by the Konversation team")
+                            .arg(QString(KONVI_VERSION))
+                            .arg(QString::number(COMMIT));
 
                     }
                     server->ctcpReply(sourceNick,"VERSION "+reply);
diff --git a/src/main.cpp b/src/main.cpp
index 9d7b273..fb438f0 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -15,10 +15,13 @@
 
 #include "application.h"
 #include "version.h"
+#include "commit.h"
 
 #include <KCmdLineArgs>
 #include <KAboutData>
 
+#define HACKSTR(x) #x
+#define STRHACK(x) HACKSTR(x)
 
 /*
   Don't use i18n() here, use ki18n() instead!
@@ -30,7 +33,7 @@ int main(int argc, char* argv[])
     KAboutData aboutData("konversation",
         "",
         ki18n("Konversation"),
-        KONVI_VERSION,
+        KONVI_VERSION " #" STRHACK(COMMIT),
         ki18n("A user-friendly IRC client"),
         KAboutData::License_GPL,
         ki18n("(C) 2002-2010 by the Konversation team"),
diff --git a/src/version.h b/src/version.h
index e39b4e8..b5f6ac6 100644
--- a/src/version.h
+++ b/src/version.h
@@ -1,3 +1,3 @@
 #ifndef KONVI_VERSION
-#define KONVI_VERSION "1.3.1"
+#define KONVI_VERSION "1.3.1+"
 #endif

commit 7fb4ed0d72741b48ceee47627f04fc29d5d11710
Author: Martin Blumenstingl <darklight.xdarklight@googlemail.com>
Date:   Thu Jul 8 20:07:32 2010 +0200

    fix indentation

diff --git a/src/viewer/trayiconkstatusnotifieritem.cpp b/src/viewer/trayiconkstatusnotifieritem.cpp
index 006eb03..250c005 100644
--- a/src/viewer/trayiconkstatusnotifieritem.cpp
+++ b/src/viewer/trayiconkstatusnotifieritem.cpp
@@ -20,8 +20,8 @@ namespace Konversation
         m_notificationEnabled = false;
         
         updateAppearance();
-	
-	setToolTip("konversation", i18n("Konversation"), i18n("Konversation - IRC Client"));
+
+        setToolTip("konversation", i18n("Konversation"), i18n("Konversation - IRC Client"));
     }
 
     TrayIcon::~TrayIcon()

commit 8d426b0de8a59166d920b3025ae4b9e24cb87547
Author: Martin Blumenstingl <darklight.xdarklight@googlemail.com>
Date:   Thu Jul 8 20:08:23 2010 +0200

    remove an unused method declaration (it's not implemented anywhere)

diff --git a/src/viewer/trayicon.h b/src/viewer/trayicon.h
index 38bb956..de99b05 100644
--- a/src/viewer/trayicon.h
+++ b/src/viewer/trayicon.h
@@ -39,7 +39,6 @@ namespace Konversation
             explicit TrayIcon(QWidget* parent = 0);
             ~TrayIcon();
 
-            void setVisibility(bool visible);
             bool notificationEnabled() { return m_notificationEnabled; }
 
         public slots:

commit 0c3f2555b2a70f8ff41555565444fdf08df5be6f
Author: eli mackenzie <argonel@gmail.com>
Date:   Fri Jul 9 03:01:03 2010 -0400

    modify backlog nick parsing in viewer to compensate for am/pm in log timestamp

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 43a4004..912683e 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -871,8 +871,10 @@ void IRCView::appendBacklogMessage(const QString& firstColumn,const QString& raw
     QString backlogColor = Preferences::self()->color(Preferences::BacklogMessage).name();
     m_tabNotification = Konversation::tnfNone;
 
-    time = nick.section(' ', 0, 4);
-    nick = nick.section(' ', 5);
+    //The format in Chatwindow::logText is not configurable, so as long as nobody allows square brackets in a date/time format....
+    int eot = nick.indexOf(']', nick.indexOf(']')+1)+1;
+    time = nick.left(eot);
+    nick = nick.mid(eot+1);
 
     if(!nick.isEmpty() && !nick.startsWith('<') && !nick.startsWith('*'))
     {

commit e59707e5c2dd0291a0821ea866e52896fc07929a
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Fri Jul 9 22:10:41 2010 +0200

    KDE4_KUTILS_LIBS is always added to target_link_libraries for KEmoticons,
    no need to double add it for optional KDEIDLE

diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index c3feec6..632a747 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -260,8 +260,4 @@ if (QCA2_FOUND)
     target_link_libraries(konversation ${QCA2_LIBRARIES})
 endif (QCA2_FOUND)
 
-if (HAVE_KIDLETIME)
-    target_link_libraries(konversation ${KDE4_KUTILS_LIBS})
-endif (HAVE_KIDLETIME)
-
 install(TARGETS konversation ${INSTALL_TARGETS_DEFAULT_ARGS})

commit b988e2644e9e5ffd31ac4498b7b6394203a2379d
Author: eli mackenzie <argonel@gmail.com>
Date:   Fri Jul 9 22:28:05 2010 -0400

    protect against ] in the KDE date format for backlog parsing

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 912683e..86f8abf 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -872,7 +872,7 @@ void IRCView::appendBacklogMessage(const QString& firstColumn,const QString& raw
     m_tabNotification = Konversation::tnfNone;
 
     //The format in Chatwindow::logText is not configurable, so as long as nobody allows square brackets in a date/time format....
-    int eot = nick.indexOf(']', nick.indexOf(']')+1)+1;
+    int eot = nick.lastIndexOf(' ');
     time = nick.left(eot);
     nick = nick.mid(eot+1);
 

commit 7725f9034b0d2f0276ceff8e4ceac24ccdcf66a0
Author: Eike Hein <hein@kde.org>
Date:   Sat Jul 10 13:02:28 2010 +0200

    Add support for UnrealIRCd's 671 numeric.
    CCBUG:130588

diff --git a/ChangeLog b/ChangeLog
index 78d6085..d0baf51 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,7 @@
+Changes since 1.3.1:
+* Added support for UnrealIRCd's 671 numeric.
+
+
 Changes from 1.3 to 1.3.1:
 Konversation 1.3.1 is a maintenance release that improves program behavior
 and fixes defects, the most serious of which is a regression that unfortu-
diff --git a/src/irc/inputfilter.cpp b/src/irc/inputfilter.cpp
index ec3ae8a..00e3261 100644
--- a/src/irc/inputfilter.cpp
+++ b/src/irc/inputfilter.cpp
@@ -1464,6 +1464,15 @@ void InputFilter::parseServerCommand(const QString &prefix, const QString &comma
                 }
                 break;
             }
+            case RPL_WHOISSECURE:
+            {
+                if (plHas(2))
+                {
+                    if (getAutomaticRequest("WHOIS", parameterList.value(1)) == 0)
+                        server->appendMessageToFrontmost(i18n("Whois"), i18n("%1 is using a secure connection.", parameterList.value(1)));
+                }
+                break;
+            }
             // Sample WHO response
             //"/WHO #lounge"
             //[21:39] [352] #lounge jasmine bots.worldforge.org irc.worldforge.org jasmine H 0 jasmine
diff --git a/src/irc/replycodes.h b/src/irc/replycodes.h
index 9b8fd6c..bd4b63e 100644
--- a/src/irc/replycodes.h
+++ b/src/irc/replycodes.h
@@ -157,5 +157,7 @@
 #define ERR_UMODEUNKNOWNFLAG   501
 #define ERR_USERSDONTMATCH     502
 
+#define RPL_WHOISSECURE        671 // used by UnrealIRCd to denote SSL in WHOIS response
+
 #endif // REPLYCODES_H
 

commit 577520cab809663d934f1e59c118f531504394c8
Author: Eike Hein <hein@kde.org>
Date:   Sat Jul 10 13:04:30 2010 +0200

    Update

diff --git a/ChangeLog b/ChangeLog
index d0baf51..9ffc75c 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,4 +1,6 @@
 Changes since 1.3.1:
+* Fixed pipe symbols appearing in the date/time stamp and next to the nick-
+  name in backlog replay.
 * Added support for UnrealIRCd's 671 numeric.
 
 

commit c56d76ab1cd29d4ecbcb7cd824142c7916982257
Author: Eike Hein <hein@kde.org>
Date:   Sat Jul 10 13:16:24 2010 +0200

    Use the usual wording.

diff --git a/ChangeLog b/ChangeLog
index 9ffc75c..618931a 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,6 +1,6 @@
 Changes since 1.3.1:
-* Fixed pipe symbols appearing in the date/time stamp and next to the nick-
-  name in backlog replay.
+* Fixed a bug causing pipe symbols to appear in the date/time stamp and next
+  to the nickname in backlog replay.
 * Added support for UnrealIRCd's 671 numeric.
 
 

commit 57626e4239be665c8c9a6c7f862bb7743e87b809
Author: Eike Hein <hein@kde.org>
Date:   Sun Jul 11 14:26:06 2010 +0200

    Fix typo. Thanks to Josep for pointing it out!
    
    CCMAIL:txemaq@gmail.com

diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index 0bcd5ec..b4a70aa 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -687,7 +687,7 @@ void Server::sslError( const QList<KSslError>& errors )
         m_socket->ignoreSslErrors();
 
         // Show a warning in the chat window that the SSL certificate failed the authenticity check.
-        QString error = i18n("The SSL certificate for the the server %1 (port <numid>%2</numid>) failed the authenticity check.",
+        QString error = i18n("The SSL certificate for the server %1 (port <numid>%2</numid>) failed the authenticity check.",
                             getConnectionSettings().server().host(),
                             QString::number(getConnectionSettings().server().port()));
 

commit 631fa7e7264e843c1a202d0343e6ff965209256b
Author: Peter Simonsson <peter.simonsson@gmail.com>
Date:   Fri Jul 16 21:12:48 2010 +0200

    Ignore network up/down notifications for localhost connections.
    
    I'm sure I've missed something in this simple implementation, but it
    works for me<tm>
    
    BUG:241362

diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index b4a70aa..89c25c3 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -3966,7 +3966,8 @@ void Server::sendChannelNickChangedSignals()
 
 void Server::involuntaryQuit()
 {
-    if(m_connectionState == Konversation::SSConnected || m_connectionState == Konversation::SSConnecting)
+    if((m_connectionState == Konversation::SSConnected || m_connectionState == Konversation::SSConnecting) &&
+       (m_socket->peerAddress() != QHostAddress(QHostAddress::LocalHost) && m_socket->peerAddress() != QHostAddress(QHostAddress::LocalHostIPv6)))
     {
         quitServer();
         updateConnectionState(Konversation::SSInvoluntarilyDisconnected);

commit 6b7e7ddb5ea24d6654f99701c4823b18abe3ea70
Author: Peter Simonsson <peter.simonsson@gmail.com>
Date:   Fri Jul 16 21:59:23 2010 +0200

    Fix wolframalpha urls.
    BUG:240366

diff --git a/src/common.cpp b/src/common.cpp
index 5785f6f..a103c6e 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -27,7 +27,7 @@ namespace Konversation
 {
 
     static QRegExp colorRegExp("((\003([0-9]|0[0-9]|1[0-5])(,([0-9]|0[0-9]|1[0-5])|)|\017)|\x02|\x09|\x13|\x16|\x1f)");
-    static QRegExp urlPattern("((www\\.(?!\\.)|(fish|irc|amarok|(f|sf|ht)tp(|s))://)(\\.?[\\d\\w/,\\':~\\?=;#@\\-\\+\\%\\*\\{\\}\\!\\(\\)\\[\\]]|&)+)|"
+    static QRegExp urlPattern("((www\\.(?!\\.)|(fish|irc|amarok|(f|sf|ht)tp(|s))://)(\\.?[\\d\\w/,\\':~\\?=;#@\\-\\+\\%\\*\\{\\}\\!\\(\\)\\[\\]\\^]|&)+)|"
         "([-.\\d\\w]+@[-.\\d\\w]{2,}\\.[\\w]{2,})");
     static QRegExp tdlPattern("(.*)\\.(\\w+),$");
 

commit 25d7977dc226289fc8c1ba60de10ae649a81e286
Author: Peter Simonsson <peter.simonsson@gmail.com>
Date:   Fri Jul 16 22:07:48 2010 +0200

    Update changelog and commit number.

diff --git a/ChangeLog b/ChangeLog
index 618931a..c953701 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -2,7 +2,8 @@ Changes since 1.3.1:
 * Fixed a bug causing pipe symbols to appear in the date/time stamp and next
   to the nickname in backlog replay.
 * Added support for UnrealIRCd's 671 numeric.
-
+* Ignore network up/down notifications for localhost connections.
+* Fix WolframAlpha urls.
 
 Changes from 1.3 to 1.3.1:
 Konversation 1.3.1 is a maintenance release that improves program behavior
diff --git a/src/commit.h b/src/commit.h
index ec4c97b..cf5250b 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4057
+#define COMMIT 4058
 #endif

commit ee5e815f9fe99b88cb9e4a005e4db36fedb8fbb2
Author: Peter Simonsson <peter.simonsson@gmail.com>
Date:   Fri Jul 16 23:08:06 2010 +0200

    Move emoticon parsing after highlight parsing to avoid false highlights
    BUG:231785

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 86f8abf..13a0d77 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -1145,8 +1145,6 @@ bool doHighlight, bool parseURL, bool self)
         filteredLine.replace("\x0b", "&");
     }
 
-    filteredLine = Konversation::Emoticons::parseEmoticons(filteredLine);
-
     // Highlight
     QString ownNick;
 
@@ -1245,6 +1243,8 @@ bool doHighlight, bool parseURL, bool self)
             "\">" + filteredLine + "</font>";
     }
 
+    filteredLine = Konversation::Emoticons::parseEmoticons(filteredLine);
+
     // Replace pairs of spaces with "<space>&nbsp;" to preserve some semblance of text wrapping
     filteredLine.replace("  "," \xA0");
     return filteredLine;

commit d6d868c42b7e99ab0e6626838d1a952c4d9b1206
Author: Martin Blumenstingl <darklight.xdarklight@googlemail.com>
Date:   Sun Jul 18 18:11:13 2010 +0200

    remove an unused variable

diff --git a/src/irc/nickinfo.cpp b/src/irc/nickinfo.cpp
index 93e730e..ad968eb 100644
--- a/src/irc/nickinfo.cpp
+++ b/src/irc/nickinfo.cpp
@@ -320,7 +320,6 @@ void NickInfo::tooltipTableData(QTextStream &tooltip) const
 {
     tooltip << "<tr><td colspan=\"2\" valign=\"top\">";
 
-    bool dirty = false;
     KABC::Picture photo = m_addressee.photo();
     KABC::Picture logo = m_addressee.logo();
     bool isimage=false;
@@ -328,7 +327,6 @@ void NickInfo::tooltipTableData(QTextStream &tooltip) const
     {
         Q3MimeSourceFactory::defaultFactory()->setImage( "photo", photo.data() );
         tooltip << "<img src=\"photo\">";
-        dirty=true;
         isimage=true;
     }
     else if(!photo.url().isEmpty())
@@ -337,14 +335,12 @@ void NickInfo::tooltipTableData(QTextStream &tooltip) const
         //Are there security problems with this?  loading from an external refrence?
         //Assuming not.
         tooltip << "<img src=\"" << photo.url() << "\">";
-        dirty=true;
         isimage=true;
     }
     if(logo.isIntern())
     {
         Q3MimeSourceFactory::defaultFactory()->setImage( "logo", logo.data() );
         tooltip << "<img src=\"logo\">";
-        dirty=true;
         isimage=true;
     }
     else if(!logo.url().isEmpty())
@@ -353,31 +349,26 @@ void NickInfo::tooltipTableData(QTextStream &tooltip) const
         //Are there security problems with this?  loading from an external refrence?
         //Assuming not.
         tooltip << "<img src=\"" << logo.url() << "\">";
-        dirty=true;
         isimage=true;
     }
     tooltip << "<b>" << (isimage?"":"<center>");
     if(!m_addressee.formattedName().isEmpty())
     {
         tooltip << m_addressee.formattedName();
-        dirty = true;
     }
     else if(!m_addressee.realName().isEmpty())
     {
         tooltip << m_addressee.realName();
-        dirty = true;
     }
     else if(!getRealName().isEmpty() && getRealName().toLower() != loweredNickname())
     {
         QString escapedRealName( getRealName() );
         escapedRealName.replace('<',"&lt;").replace('>',"&gt;");
         tooltip << escapedRealName;
-        dirty = true;
     }
     else
     {
         tooltip << getNickname();
-        //Don't set dirty if all we have is their nickname
     }
     if(m_identified) tooltip << i18n(" (identified)");
     tooltip << (isimage?"":"</center>") << "</b>";
@@ -388,34 +379,28 @@ void NickInfo::tooltipTableData(QTextStream &tooltip) const
         tooltip << "<tr><td><b>" << i18n("Email") << ": </b></td><td>";
         tooltip << m_addressee.emails().join(", ");
         tooltip << "</td></tr>";
-        dirty=true;
     }
 
     if(!m_addressee.organization().isEmpty())
     {
         tooltip << "<tr><td><b>" << m_addressee.organizationLabel() << ": </b></td><td>" << m_addressee.organization() << "</td></tr>";
-        dirty=true;
     }
     if(!m_addressee.role().isEmpty())
     {
         tooltip << "<tr><td><b>" << m_addressee.roleLabel() << ": </b></td><td>" << m_addressee.role() << "</td></tr>";
-        dirty=true;
     }
     KABC::PhoneNumber::List numbers = m_addressee.phoneNumbers();
     for( KABC::PhoneNumber::List::ConstIterator it = numbers.constBegin(); it != numbers.constEnd(); ++it)
     {
         tooltip << "<tr><td><b>" << (*it).typeLabel() << ": </b></td><td>" << (*it).number() << "</td></tr>";
-        dirty=true;
     }
     if(!m_addressee.birthday().toString().isEmpty() )
     {
         tooltip << "<tr><td><b>" << m_addressee.birthdayLabel() << ": </b></td><td>" << m_addressee.birthday().toString("ddd d MMMM yyyy") << "</td></tr>";
-        dirty=true;
     }
     if(!getHostmask().isEmpty())
     {
         tooltip << "<tr><td><b>" << i18n("Hostmask:") << " </b></td><td>" << getHostmask() << "</td></tr>";
-        dirty=true;
     }
     if(isAway())
     {
@@ -425,12 +410,10 @@ void NickInfo::tooltipTableData(QTextStream &tooltip) const
         else
             tooltip << i18n("(unknown)");
         tooltip << "</td></tr>";
-        dirty=true;
     }
     if(!getOnlineSince().toString().isEmpty())
     {
         tooltip << "<tr><td><b>" << i18n("Online Since:") << " </b></td><td>" << getPrettyOnlineSince() << "</td></tr>";
-        dirty=true;
     }
 
 }

commit c9855d7173282f7a45e5a7fa1f06c2f300e7e961
Author: Aurelien Gateau <agateau@kde.org>
Date:   Mon Jul 19 12:05:38 2010 +0200

    Fixed a few double-margin issues

diff --git a/src/irc/servergroupdialog.cpp b/src/irc/servergroupdialog.cpp
index b7e3504..91ab99c 100644
--- a/src/irc/servergroupdialog.cpp
+++ b/src/irc/servergroupdialog.cpp
@@ -43,6 +43,9 @@ namespace Konversation
 
         m_mainWidget = new Ui::ServerGroupDialogUI();
         m_mainWidget->setupUi(mainWidget());
+        mainWidget()->layout()->setMargin(0);
+        m_mainWidget->serverWidget->layout()->setMargin(0);
+        m_mainWidget->channelWidget->layout()->setMargin(0);
 
         connect(m_mainWidget->m_editIdentityButton, SIGNAL(clicked()), this, SLOT(editIdentity()));
 
diff --git a/src/irc/servergroupdialogui.ui b/src/irc/servergroupdialogui.ui
index d9d2c83..8b603a4 100644
--- a/src/irc/servergroupdialogui.ui
+++ b/src/irc/servergroupdialogui.ui
@@ -6,8 +6,8 @@
    <rect>
     <x>0</x>
     <y>0</y>
-    <width>300</width>
-    <height>390</height>
+    <width>307</width>
+    <height>431</height>
    </rect>
   </property>
   <layout class="QGridLayout" name="gridLayout_3">
@@ -95,6 +95,33 @@
      </property>
     </widget>
    </item>
+   <item row="0" column="1" colspan="2">
+    <widget class="KLineEdit" name="m_nameEdit">
+     <property name="whatsThis">
+      <string>Enter the name of the Network here. You may create as many entries in the Server List screen with the same Network as you like.</string>
+     </property>
+    </widget>
+   </item>
+   <item row="6" column="0" colspan="3">
+    <widget class="QLabel" name="label">
+     <property name="text">
+      <string>Servers:</string>
+     </property>
+     <property name="buddy">
+      <cstring>m_serverLBox</cstring>
+     </property>
+    </widget>
+   </item>
+   <item row="10" column="0" colspan="3">
+    <widget class="QLabel" name="label_2">
+     <property name="text">
+      <string>Auto Join Channels:</string>
+     </property>
+     <property name="buddy">
+      <cstring>m_channelLBox</cstring>
+     </property>
+    </widget>
+   </item>
    <item row="4" column="0" colspan="3">
     <widget class="QCheckBox" name="m_autoConnectCBox">
      <property name="whatsThis">
@@ -105,14 +132,8 @@
      </property>
     </widget>
    </item>
-   <item row="5" column="0" colspan="3">
-    <widget class="QGroupBox" name="groupBox">
-     <property name="title">
-      <string>Servers</string>
-     </property>
-     <property name="flat">
-      <bool>true</bool>
-     </property>
+   <item row="8" column="0" colspan="3">
+    <widget class="QWidget" name="serverWidget" native="true">
      <layout class="QGridLayout" name="gridLayout">
       <item row="0" column="0" colspan="6">
        <widget class="KListWidget" name="m_serverLBox">
@@ -196,14 +217,8 @@
      </layout>
     </widget>
    </item>
-   <item row="6" column="0" colspan="3">
-    <widget class="QGroupBox" name="groupBox_2">
-     <property name="title">
-      <string>Auto Join Channels</string>
-     </property>
-     <property name="flat">
-      <bool>true</bool>
-     </property>
+   <item row="11" column="0" colspan="3">
+    <widget class="QWidget" name="channelWidget" native="true">
      <layout class="QGridLayout" name="gridLayout_2">
       <item row="0" column="0" colspan="6">
        <widget class="KListWidget" name="m_channelLBox">
@@ -287,12 +302,37 @@
      </layout>
     </widget>
    </item>
-   <item row="0" column="1" colspan="2">
-    <widget class="KLineEdit" name="m_nameEdit">
-     <property name="whatsThis">
-      <string>Enter the name of the Network here. You may create as many entries in the Server List screen with the same Network as you like.</string>
+   <item row="5" column="0">
+    <spacer name="verticalSpacer">
+     <property name="orientation">
+      <enum>Qt::Vertical</enum>
      </property>
-    </widget>
+     <property name="sizeType">
+      <enum>QSizePolicy::Fixed</enum>
+     </property>
+     <property name="sizeHint" stdset="0">
+      <size>
+       <width>20</width>
+       <height>6</height>
+      </size>
+     </property>
+    </spacer>
+   </item>
+   <item row="9" column="0">
+    <spacer name="verticalSpacer_2">
+     <property name="orientation">
+      <enum>Qt::Vertical</enum>
+     </property>
+     <property name="sizeType">
+      <enum>QSizePolicy::Fixed</enum>
+     </property>
+     <property name="sizeHint" stdset="0">
+      <size>
+       <width>20</width>
+       <height>6</height>
+      </size>
+     </property>
+    </spacer>
    </item>
   </layout>
  </widget>
@@ -319,6 +359,25 @@
    <header>kcombobox.h</header>
   </customwidget>
  </customwidgets>
+ <tabstops>
+  <tabstop>m_nameEdit</tabstop>
+  <tabstop>m_identityCBox</tabstop>
+  <tabstop>m_editIdentityButton</tabstop>
+  <tabstop>m_commandEdit</tabstop>
+  <tabstop>m_autoConnectCBox</tabstop>
+  <tabstop>m_serverLBox</tabstop>
+  <tabstop>m_addServerButton</tabstop>
+  <tabstop>m_changeServerButton</tabstop>
+  <tabstop>m_removeServerButton</tabstop>
+  <tabstop>m_upServerBtn</tabstop>
+  <tabstop>m_downServerBtn</tabstop>
+  <tabstop>m_channelLBox</tabstop>
+  <tabstop>m_addChannelButton</tabstop>
+  <tabstop>m_changeChannelButton</tabstop>
+  <tabstop>m_removeChannelButton</tabstop>
+  <tabstop>m_upChannelBtn</tabstop>
+  <tabstop>m_downChannelBtn</tabstop>
+ </tabstops>
  <resources/>
  <connections/>
 </ui>
diff --git a/src/irc/serverlistdialog.cpp b/src/irc/serverlistdialog.cpp
index c6fa583..7b7d8bb 100644
--- a/src/irc/serverlistdialog.cpp
+++ b/src/irc/serverlistdialog.cpp
@@ -62,6 +62,7 @@ namespace Konversation
 
         m_mainWidget = new Ui::ServerListDialogUI();
         m_mainWidget->setupUi(mainWidget());
+        mainWidget()->layout()->setMargin(0);
         m_serverList = m_mainWidget->m_serverList;
         m_addButton = m_mainWidget->m_addButton;
         m_delButton = m_mainWidget->m_delButton;

commit 990ddadf57dc2d4d2422dfc1fb1ec1b576c0cf5b
Author: Eike Hein <hein@kde.org>
Date:   Tue Jul 20 10:56:29 2010 +0200

    Move "Rejoin Channel" action above "Close Tab".
    
    BUG:245179

diff --git a/ChangeLog b/ChangeLog
index c953701..eef26c6 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -4,6 +4,10 @@ Changes since 1.3.1:
 * Added support for UnrealIRCd's 671 numeric.
 * Ignore network up/down notifications for localhost connections.
 * Fix WolframAlpha urls.
+* The "Rejoin Channel" context menu action, shown when a channel could not
+  be rejoined automatically on reconnect as well as after having been kicked
+  from a channel, will now appear above the "Close Tab" action rather than
+  at the end of the context menu, so "Close Tab" is always the last item.
 
 Changes from 1.3 to 1.3.1:
 Konversation 1.3.1 is a maintenance release that improves program behavior
diff --git a/src/viewer/viewcontainer.cpp b/src/viewer/viewcontainer.cpp
index 208956b..b74cd66 100644
--- a/src/viewer/viewcontainer.cpp
+++ b/src/viewer/viewcontainer.cpp
@@ -1745,6 +1745,7 @@ void ViewContainer::showViewContextMenu(QWidget* tab, const QPoint& pos)
     ChatWindow* view = static_cast<ChatWindow*>(tab);
     KToggleAction* autoJoinAction = qobject_cast<KToggleAction*>(actionCollection()->action("tab_autojoin"));
     QAction* rejoinAction = actionCollection()->action("rejoin_channel");
+    QAction* closeAction = actionCollection()->action("close_tab");
 
     QAction* renameAct = new QAction(this);
     renameAct->setText(i18n("&Rename Tab..."));
@@ -1765,7 +1766,7 @@ void ViewContainer::showViewContextMenu(QWidget* tab, const QPoint& pos)
             Channel *channel = static_cast<Channel*>(view);
             if (channel->rejoinable() && rejoinAction)
             {
-                menu->addAction(rejoinAction);
+                menu->insertAction(closeAction, rejoinAction);
                 rejoinAction->setEnabled(true);
             }
         }

commit 88b0c4961d50747bf1eeeb7ceb61a60d685f0b59
Author: Eike Hein <hein@kde.org>
Date:   Tue Jul 20 10:57:19 2010 +0200

    Update.

diff --git a/ChangeLog b/ChangeLog
index eef26c6..f82559a 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -2,13 +2,21 @@ Changes since 1.3.1:
 * Fixed a bug causing pipe symbols to appear in the date/time stamp and next
   to the nickname in backlog replay.
 * Added support for UnrealIRCd's 671 numeric.
-* Ignore network up/down notifications for localhost connections.
-* Fix WolframAlpha urls.
+* Solid network up/down notifications are now ignored for connections to
+  localhost.
+* Fixed WolframAlpha URLs not being turned into links correctly in the chat
+  text view.
+* Resolved a conflict between the highlight system and the graphical emoticon
+  support that was causing unintended highlights when the filesystem path to
+  an emoticon image file shown in the chat text view matched any of the con-
+  figured highlights.
+* Got rid of some too large margins in the "Edit Network" dialog.
 * The "Rejoin Channel" context menu action, shown when a channel could not
   be rejoined automatically on reconnect as well as after having been kicked
   from a channel, will now appear above the "Close Tab" action rather than
   at the end of the context menu, so "Close Tab" is always the last item.
 
+
 Changes from 1.3 to 1.3.1:
 Konversation 1.3.1 is a maintenance release that improves program behavior
 and fixes defects, the most serious of which is a regression that unfortu-

commit ebb013558a5dd2cb62ed19d5cbd487680ec11c46
Author: Eike Hein <hein@kde.org>
Date:   Tue Jul 20 22:50:15 2010 +0200

    Add convenience fluff to restart Konversation.
    
    Adds a --restart CLI argument and a /restart command to restart Konvi
    (if running, otherwise --restart has no effect).
    
    Pro tip: Having your KDevelop launch target run konversation --restart.

diff --git a/ChangeLog b/ChangeLog
index f82559a..ca53e77 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -15,6 +15,11 @@ Changes since 1.3.1:
   be rejoined automatically on reconnect as well as after having been kicked
   from a channel, will now appear above the "Close Tab" action rather than
   at the end of the context menu, so "Close Tab" is always the last item.
+* Added a '--restart' command line argument and a '/restart' command that
+  quits and restarts Konversation (if running, otherwise has no effect).
+* Added a '--startupdelay <msec>' command line argument that causes the app
+  to sleep for the specified amount of miliseconds early during the startup
+  process, delaying D-Bus activity and UI creation.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/application.cpp b/src/application.cpp
index cc736bb..7d59006 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -41,6 +41,7 @@
 #include <QRegExp>
 #include <QtDBus/QDBusConnection>
 #include <QNetworkProxy>
+#include <QWaitCondition>
 
 #include <KRun>
 #include <KCmdLineArgs>
@@ -58,6 +59,7 @@ Application::Application()
 : KUniqueApplication(true, true)
 {
     mainWindow = 0;
+    m_restartScheduled = false;
     m_connectionManager = 0;
     m_awayManager = 0;
     quickConnectDialog = 0;
@@ -90,6 +92,9 @@ Application::~Application()
     delete osd;
     osd = 0;
     closeWallet();
+
+    if (m_restartScheduled)
+        KProcess::startDetached(QCoreApplication::applicationFilePath(), QStringList() << "--startupdelay" << "2000");
 }
 
 int Application::newInstance()
@@ -219,6 +224,14 @@ int Application::newInstance()
 
         connect(this, SIGNAL(appearanceChanged()), this, SLOT(updateProxySettings()));
     }
+    else if (args->isSet("restart"))
+    {
+        m_restartScheduled = true;
+
+        mainWindow->quitProgram();
+
+        return KUniqueApplication::newInstance();
+    }
 
     if (!url.isEmpty())
         getConnectionManager()->connectTo(Konversation::SilentlyReuseConnection, url);
diff --git a/src/application.h b/src/application.h
index 95e1e01..01dcf73 100644
--- a/src/application.h
+++ b/src/application.h
@@ -135,6 +135,8 @@ class Application : public KUniqueApplication
         /// The wallet used to store passwords. Opens the wallet if it's closed.
         KWallet::Wallet* wallet();
 
+        void abortScheduledRestart() { m_restartScheduled = false; }
+
     signals:
         void catchUrl(const QString& who,const QString& url,const QDateTime &datetime);
         void serverGroupsChanged(const Konversation::ServerGroupSettingsPtr serverGroup);
@@ -178,6 +180,7 @@ class Application : public KUniqueApplication
         Konversation::Sound* m_sound;
         QuickConnectDialog* quickConnectDialog;
         Images* m_images;
+        bool m_restartScheduled;
 
         Konversation::NotificationHandler* m_notificationHandler;
 
diff --git a/src/commit.h b/src/commit.h
index cf5250b..9d58cbc 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4058
+#define COMMIT 4059
 #endif
diff --git a/src/irc/outputfilter.cpp b/src/irc/outputfilter.cpp
index 9cc9cbe..f803086 100644
--- a/src/irc/outputfilter.cpp
+++ b/src/irc/outputfilter.cpp
@@ -1877,6 +1877,13 @@ namespace Konversation
         return result;
     }
 
+    OutputFilterResult OutputFilter::command_restart(const OutputFilterInput& /* input */)
+    {
+        KProcess::startDetached(QCoreApplication::applicationFilePath(), QStringList("--restart"));
+
+        return OutputFilterResult();
+    }
+
     OutputFilterResult OutputFilter::changeMode(const QString &parameter, const QString& destination,
                                                 char mode, char giveTake)
     {
diff --git a/src/irc/outputfilter.h b/src/irc/outputfilter.h
index 2c3c9b7..f57963d 100644
--- a/src/irc/outputfilter.h
+++ b/src/irc/outputfilter.h
@@ -193,6 +193,7 @@ namespace Konversation
             OutputFilterResult command_konsole(const OutputFilterInput& input);
             OutputFilterResult command_queuetuner(const OutputFilterInput& input);
             OutputFilterResult command_sayversion(const OutputFilterInput& input);
+            OutputFilterResult command_restart(const OutputFilterInput& input);
 
         private:
             static void fillCommandList();
diff --git a/src/main.cpp b/src/main.cpp
index fb438f0..d92aa54 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -17,6 +17,8 @@
 #include "version.h"
 #include "commit.h"
 
+#include <QWaitCondition>
+
 #include <KCmdLineArgs>
 #include <KAboutData>
 
@@ -92,10 +94,28 @@ int main(int argc, char* argv[])
     options.add( "password <password>", ki18n("Password for connection"),"");
     options.add( "ssl", ki18n("Use SSL for connection"),"false");
     options.add( "noautoconnect", ki18n("Disable auto-connecting to any IRC networks"));
-
+    options.add( "startupdelay <msec>", ki18n("Delay D-Bus activity and UI creation by the specified amount of miliseconds"), "2000");
+    options.add( "restart", ki18n("Quits and restarts Konversation (if running, otherwise has no effect)"));
 
     KCmdLineArgs::addCmdLineOptions(options);
     KCmdLineArgs::addStdCmdLineOptions();
+    KUniqueApplication::addCmdLineOptions();
+
+    KCmdLineArgs* args = KCmdLineArgs::parsedArgs();
+
+    if (args->isSet("startupdelay"))
+    {
+        bool ok;
+        ulong delay = args->getOption("startupdelay").toULong(&ok);
+
+        if (ok)
+        {
+            QMutex dummy;
+            dummy.lock();
+            QWaitCondition waitCondition;
+            waitCondition.wait(&dummy, delay);
+        }
+    }
 
     if (!KUniqueApplication::start()) return 0;
 
diff --git a/src/mainwindow.cpp b/src/mainwindow.cpp
index 8d86cdf..75e9390 100644
--- a/src/mainwindow.cpp
+++ b/src/mainwindow.cpp
@@ -551,6 +551,9 @@ int MainWindow::confirmQuit()
             "systemtrayquitKonversation");
     }
 
+    if (result != KMessageBox::Continue)
+        konvApp->abortScheduledRestart();
+
     return result;
 }
 
diff --git a/src/mainwindow.h b/src/mainwindow.h
index 70afca0..cac6526 100644
--- a/src/mainwindow.h
+++ b/src/mainwindow.h
@@ -70,6 +70,8 @@ class MainWindow : public KXmlGuiWindow
         void insertMarkerLine();
 
     public slots:
+        void quitProgram();
+
         void updateTrayIcon();
 
         void openServerList();
@@ -107,7 +109,6 @@ class MainWindow : public KXmlGuiWindow
         void openNotifications();
         void notifyAction(int connectionId,const QString& nick);
 
-        void quitProgram();
         void showEvent(QShowEvent* e);
         void hideEvent(QHideEvent* e);
         void leaveEvent(QEvent* e);

commit 89a292146703434bf031d97ddc3c5f814e96006a
Author: Eike Hein <hein@kde.org>
Date:   Wed Jul 21 03:03:12 2010 +0200

    Added an optional '-showpath' to '/exec' to show script file path.
    
    Also makes ScriptLauncher a singleton owned by Application vs. every
    server having one.

diff --git a/ChangeLog b/ChangeLog
index ca53e77..cb5980b 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -20,6 +20,9 @@ Changes since 1.3.1:
 * Added a '--startupdelay <msec>' command line argument that causes the app
   to sleep for the specified amount of miliseconds early during the startup
   process, delaying D-Bus activity and UI creation.
+* Added an optional '-showpath' parameter to the '/exec' command that shows
+  the path at which the given script file was found in the chat text view,
+  i.e. '/exec -showpath media'.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/application.cpp b/src/application.cpp
index 7d59006..28a7a7b 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -15,6 +15,7 @@
 
 #include "application.h"
 #include "connectionmanager.h"
+#include "scriptlauncher.h"
 #include "transfermanager.h"
 #include "viewcontainer.h"
 #include "highlight.h"
@@ -62,6 +63,7 @@ Application::Application()
     m_restartScheduled = false;
     m_connectionManager = 0;
     m_awayManager = 0;
+    m_scriptLauncher = 0;
     quickConnectDialog = 0;
     osd = 0;
     m_wallet = NULL;
@@ -119,6 +121,8 @@ int Application::newInstance()
         connect(Solid::Networking::notifier(), SIGNAL(shouldDisconnect()), m_connectionManager, SLOT(involuntaryQuitServers()));
         connect(Solid::Networking::notifier(), SIGNAL(shouldConnect()), m_connectionManager, SLOT(reconnectInvoluntary()));
 
+        m_scriptLauncher = new ScriptLauncher(this);
+
         // an instance of DccTransferManager needs to be created before GUI class instances' creation.
         m_dccTransferManager = new DCC::TransferManager(this);
 
diff --git a/src/application.h b/src/application.h
index 01dcf73..6569016 100644
--- a/src/application.h
+++ b/src/application.h
@@ -27,6 +27,7 @@
 
 class ConnectionManager;
 class AbstractAwayManager;
+class ScriptLauncher;
 class Server;
 class QuickConnectDialog;
 class Images;
@@ -81,6 +82,7 @@ class Application : public KUniqueApplication
 
         ConnectionManager* getConnectionManager() { return m_connectionManager; }
         AbstractAwayManager* getAwayManager() { return m_awayManager; }
+        ScriptLauncher* getScriptLauncher() { return m_scriptLauncher; }
         Konversation::DCC::TransferManager* getDccTransferManager() { return m_dccTransferManager; }
 
         // HACK
@@ -173,6 +175,7 @@ class Application : public KUniqueApplication
         ConnectionManager* m_connectionManager;
         AbstractAwayManager* m_awayManager;
         Konversation::DCC::TransferManager* m_dccTransferManager;
+        ScriptLauncher* m_scriptLauncher;
         QStringList urlList;
         Konversation::DBus* dbusObject;
         Konversation::IdentDBus* identDBus;
diff --git a/src/commit.h b/src/commit.h
index 9d58cbc..05129d5 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4059
+#define COMMIT 4060
 #endif
diff --git a/src/irc/outputfilter.cpp b/src/irc/outputfilter.cpp
index f803086..b1ca4d0 100644
--- a/src/irc/outputfilter.cpp
+++ b/src/irc/outputfilter.cpp
@@ -19,6 +19,7 @@
 #include "abstractawaymanager.h"
 #include "ignore.h"
 #include "server.h"
+#include "scriptlauncher.h"
 #include "irccharsets.h"
 #include "linkaddressbook/addressbook.h"
 #include "query.h"
@@ -1202,16 +1203,23 @@ namespace Konversation
         OutputFilterResult result;
 
         if (input.parameter.isEmpty())
-            result = usage(i18n("Usage: %1EXEC <script> [parameter list]",
-                                Preferences::self()->commandChar()));
+            result = usage(i18n("Usage: %1EXEC [-SHOWPATH] <script> [parameter list]",
+                Preferences::self()->commandChar()));
         else
         {
             QStringList parameterList = input.parameter.split(' ');
 
-            if (!parameterList[0].contains("../"))
-                emit launchScript(input.destination, input.parameter);
+            if (parameterList[0].toLower() == "-showpath" && !parameterList[1].isEmpty())
+            {
+                result = info(i18nc("%2 is a filesystem path to the script file",
+                    "The script file '%1' was found at: %2",
+                    parameterList[1],
+                    ScriptLauncher::scriptPath(parameterList[1])));
+            }
+            else if (!parameterList[0].contains("../"))
+                emit launchScript(m_server->connectionId(), input.destination, input.parameter);
             else
-                result = error(i18n("Script name may not contain \"../\"."));
+                result = error(i18n("The script name may not contain \"../\"."));
         }
 
         return result;
diff --git a/src/irc/outputfilter.h b/src/irc/outputfilter.h
index f57963d..76ce85c 100644
--- a/src/irc/outputfilter.h
+++ b/src/irc/outputfilter.h
@@ -106,7 +106,7 @@ namespace Konversation
             void openKonsolePanel();
             void openChannelList(const QString& parameter, bool getList);
             void sendToAllChannels(const QString& text);
-            void launchScript(const QString& target, const QString& parameter);
+            void launchScript(int connectionId, const QString& target, const QString& parameter);
             void banUsers(const QStringList& userList,const QString& channel,const QString& option);
             void unbanUsers(const QString& mask,const QString& channel);
             void multiServerCommand(const QString& command, const QString& parameter);
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index 89c25c3..1e3c5dc 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -33,9 +33,9 @@
 #include "statuspanel.h"
 #include "rawlog.h"
 #include "channellistpanel.h"
-#include "scriptlauncher.h"
 #include "servergroupsettings.h"
 #include "addressbook.h"
+#include "scriptlauncher.h"
 #include "serverison.h"
 #include "common.h"
 #include "notificationhandler.h"
@@ -120,7 +120,6 @@ Server::Server(QObject* parent, ConnectionSettings& settings) : QObject(parent)
 
     m_inputFilter.setServer(this);
     m_outputFilter = new Konversation::OutputFilter(this);
-    m_scriptLauncher = new ScriptLauncher(this);
 
     // For /msg query completion
     m_completeQueryPosition = 0;
@@ -330,12 +329,12 @@ void Server::connectSignals()
     // Status View
     connect(this, SIGNAL(serverOnline(bool)), getStatusView(), SLOT(serverOnline(bool)));
 
-    // Scripts
-    connect(getOutputFilter(), SIGNAL(launchScript(const QString&, const QString&)),
-        m_scriptLauncher, SLOT(launchScript(const QString&, const QString&)));
-    connect(m_scriptLauncher, SIGNAL(scriptNotFound(const QString&)),
+        // Scripts
+    connect(getOutputFilter(), SIGNAL(launchScript(int, const QString&, const QString&)),
+        konvApp->getScriptLauncher(), SLOT(launchScript(int, const QString&, const QString&)));
+    connect(konvApp->getScriptLauncher(), SIGNAL(scriptNotFound(const QString&)),
         this, SLOT(scriptNotFound(const QString&)));
-    connect(m_scriptLauncher, SIGNAL(scriptExecutionError(const QString&)),
+    connect(konvApp->getScriptLauncher(), SIGNAL(scriptExecutionError(const QString&)),
         this, SLOT(scriptExecutionError(const QString&)));
 
     // Stats
diff --git a/src/irc/server.h b/src/irc/server.h
index 89d19d2..bd500de 100644
--- a/src/irc/server.h
+++ b/src/irc/server.h
@@ -49,7 +49,6 @@ class Query;
 class Identity;
 class RawLog;
 class ChannelListPanel;
-class ScriptLauncher;
 class ServerISON;
 class ChatWindow;
 class ViewContainer;
@@ -731,8 +730,6 @@ class Server : public QObject
         void updateConnectionState(Konversation::ConnectionState state);
         bool isSocketConnected() const;
 
-        ScriptLauncher* m_scriptLauncher;
-
         KProcess m_preShellCommand;
 
     private:
diff --git a/src/scriptlauncher.cpp b/src/scriptlauncher.cpp
index dbca943..267c263 100644
--- a/src/scriptlauncher.cpp
+++ b/src/scriptlauncher.cpp
@@ -21,30 +21,34 @@
 #include <KStandardDirs>
 
 
-ScriptLauncher::ScriptLauncher(Server* server)
-: QObject(server)
+ScriptLauncher::ScriptLauncher(QObject* parent) : QObject(parent)
 {
-    m_server = server;
 }
 
 ScriptLauncher::~ScriptLauncher()
 {
 }
 
-void ScriptLauncher::launchScript(const QString& target, const QString &parameter)
+QString ScriptLauncher::scriptPath(const QString& script)
+{
+    return KStandardDirs::locate("data", "konversation/scripts/" + script);
+}
+
+void ScriptLauncher::launchScript(int connectionId, const QString& target, const QString &parameter)
 {
     // send the script all the information it will need
     QStringList parameterList = parameter.split(' ');
     // find script path (could be installed for all users in $KDEDIR/share/apps/ or
     // for one user alone in $HOME/.kde/share/apps/
     QString script(parameterList.takeFirst());
-    QString scriptPath(KStandardDirs::locate("data", "konversation/scripts/" + script));
+    QString path = scriptPath(script);
     parameterList.prepend(target);
-    parameterList.prepend(QString::number(m_server->connectionId()));
-    QFileInfo fileInfo(scriptPath);
-    if (!QProcess::startDetached(scriptPath, parameterList, fileInfo.path()))
+    parameterList.prepend(QString::number(connectionId));
+    QFileInfo fileInfo(path);
+
+    if (!QProcess::startDetached(path, parameterList, fileInfo.path()))
     {
-        if(!fileInfo.exists())
+        if (!fileInfo.exists())
            emit scriptNotFound(script);
         else
            emit scriptExecutionError(script);
diff --git a/src/scriptlauncher.h b/src/scriptlauncher.h
index 1a4cf58..631e288 100644
--- a/src/scriptlauncher.h
+++ b/src/scriptlauncher.h
@@ -23,17 +23,16 @@ class ScriptLauncher : public QObject
     Q_OBJECT
 
     public:
-        explicit ScriptLauncher(Server* server);
+        explicit ScriptLauncher(QObject* parent);
         ~ScriptLauncher();
 
-        signals:
+        static QString scriptPath(const QString& script);
+
+    signals:
         void scriptNotFound(const QString& name);
         void scriptExecutionError(const QString& name);
 
     public slots:
-        void launchScript(const QString& target, const QString& parameter);
-
-    protected:
-        Server* m_server;
+        void launchScript(int connectionId, const QString& target, const QString& parameter);
 };
 #endif

commit 8f98446677e2d17d878c322c7c2be9811037fc27
Author: Eike Hein <hein@kde.org>
Date:   Wed Jul 21 03:22:51 2010 +0200

    Take a more direct route for /restart.
    
    Reusing --restart was meant well, but on second thought is pretty
    inefficient.

diff --git a/src/application.cpp b/src/application.cpp
index 28a7a7b..e0a6b3e 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -230,9 +230,7 @@ int Application::newInstance()
     }
     else if (args->isSet("restart"))
     {
-        m_restartScheduled = true;
-
-        mainWindow->quitProgram();
+        restart();
 
         return KUniqueApplication::newInstance();
     }
@@ -258,6 +256,13 @@ Application* Application::instance()
     return static_cast<Application*>(KApplication::kApplication());
 }
 
+void Application::restart()
+{
+    m_restartScheduled = true;
+
+    mainWindow->quitProgram();
+}
+
 void Application::prepareShutdown()
 {
     if (mainWindow)
diff --git a/src/application.h b/src/application.h
index 6569016..02c482b 100644
--- a/src/application.h
+++ b/src/application.h
@@ -97,6 +97,8 @@ class Application : public KUniqueApplication
 
         static Application* instance();
 
+        void restart();
+
         /** For dcop and addressbook, a user can be specified as user@irc.server.net
          *  or user\@servergroup or using the unicode separator symbol 0xE120 instead
          *  of the "@".  This function takes a string like the above examples, and
diff --git a/src/irc/outputfilter.cpp b/src/irc/outputfilter.cpp
index b1ca4d0..a4ef643 100644
--- a/src/irc/outputfilter.cpp
+++ b/src/irc/outputfilter.cpp
@@ -1887,7 +1887,9 @@ namespace Konversation
 
     OutputFilterResult OutputFilter::command_restart(const OutputFilterInput& /* input */)
     {
-        KProcess::startDetached(QCoreApplication::applicationFilePath(), QStringList("--restart"));
+        Application *konvApp = static_cast<Application*>(KApplication::kApplication());
+
+        konvApp->restart();
 
         return OutputFilterResult();
     }

commit a4c57723f21b92fc26521295d1ae4b2e4497a18e
Author: Eike Hein <hein@kde.org>
Date:   Wed Jul 21 16:09:27 2010 +0200

    Fix connection failure resulting in lag meter reset on unrelated active tab.

diff --git a/ChangeLog b/ChangeLog
index cb5980b..fcce1e7 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -23,6 +23,9 @@ Changes since 1.3.1:
 * Added an optional '-showpath' parameter to the '/exec' command that shows
   the path at which the given script file was found in the chat text view,
   i.e. '/exec -showpath media'.
+* Fixed a bug causing a connection failure to reset the lag meter in the
+  status bar to "Unknown" even when the active tab is not related to the
+  connection that failed.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index 1e3c5dc..126dd0e 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -289,7 +289,7 @@ void Server::connectSignals()
             getViewContainer(), SLOT(addDccChat(Konversation::DCC::Chat*)), Qt::QueuedConnection);
     connect(this, SIGNAL(serverLag(Server*, int)), getViewContainer(), SIGNAL(updateStatusBarLagLabel(Server*, int)));
     connect(this, SIGNAL(tooLongLag(Server*, int)), getViewContainer(), SIGNAL(setStatusBarLagLabelTooLongLag(Server*, int)));
-    connect(this, SIGNAL(resetLag()), getViewContainer(), SIGNAL(resetStatusBarLagLabel()));
+    connect(this, SIGNAL(resetLag(Server*)), getViewContainer(), SIGNAL(resetStatusBarLagLabel(Server*)));
     connect(getOutputFilter(), SIGNAL(showView(ChatWindow*)), getViewContainer(), SLOT(showView(ChatWindow*)));
     connect(getOutputFilter(), SIGNAL(openKonsolePanel()), getViewContainer(), SLOT(addKonsolePanel()));
     connect(getOutputFilter(), SIGNAL(openChannelList(const QString&, bool)), getViewContainer(), SLOT(openChannelList(const QString&, bool)));
@@ -633,8 +633,8 @@ void Server::broken(KTcpSocket::Error error)
         if (nickChangeDialog) nickChangeDialog->reject();
     }
 
-    emit resetLag();
-    emit nicksNowOnline(this,QStringList(),true);
+    emit resetLag(this);
+    emit nicksNowOnline(this, QStringList(), true);
 
     updateAutoJoin();
 
@@ -838,7 +838,7 @@ void Server::quitServer(const QString& quitMessage)
         toServer += quitMessage;
 
     queue(toServer, HighPriority);
-    
+
     flushQueues();
 
     // Close the socket to allow a dead connection to be reconnected before the socket timeout.
@@ -3795,7 +3795,7 @@ void Server::pongReceived()
 
     emit serverLag(this, m_currentLag);
 
-    // Send another PING in 60 seconds 
+    // Send another PING in 60 seconds
     m_pingSendTimer.start(60000 /*60 sec*/);
 }
 
diff --git a/src/irc/server.h b/src/irc/server.h
index bd500de..36e8643 100644
--- a/src/irc/server.h
+++ b/src/irc/server.h
@@ -382,7 +382,7 @@ class Server : public QObject
         void nicknameChanged(const QString&);
         void serverLag(Server* server,int msec);  /// will be connected to KonversationMainWindow::updateLag()
         void tooLongLag(Server* server, int msec);/// will be connected to KonversationMainWindow::updateLag()
-        void resetLag(); ///< will be emitted when new 303 came in
+        void resetLag(Server* server); ///< will be emitted when new 303 came in
         void nicksNowOnline(Server* server,const QStringList& list,bool changed);
         void awayState(bool away);                /// will be connected to any user input panel;
         void multiServerCommand(const QString& command, const QString& parameter);
diff --git a/src/mainwindow.cpp b/src/mainwindow.cpp
index 75e9390..c3a03ab 100644
--- a/src/mainwindow.cpp
+++ b/src/mainwindow.cpp
@@ -98,7 +98,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     connect(m_viewContainer, SIGNAL(clearStatusBarInfoLabel()), m_statusBar, SLOT(clearInfoLabel()));
     connect(m_viewContainer, SIGNAL(setStatusBarLagLabelShown(bool)), m_statusBar, SLOT(setLagLabelShown(bool)));
     connect(m_viewContainer, SIGNAL(updateStatusBarLagLabel(Server*, int)), m_statusBar, SLOT(updateLagLabel(Server*, int)));
-    connect(m_viewContainer, SIGNAL(resetStatusBarLagLabel()), m_statusBar, SLOT(resetLagLabel()));
+    connect(m_viewContainer, SIGNAL(resetStatusBarLagLabel(Server*)), m_statusBar, SLOT(resetLagLabel(Server*)));
     connect(m_viewContainer, SIGNAL(setStatusBarLagLabelTooLongLag(Server*, int)), m_statusBar, SLOT(setTooLongLag(Server*, int)));
     connect(m_viewContainer, SIGNAL(updateStatusBarSSLLabel(Server*)), m_statusBar, SLOT(updateSSLLabel(Server*)));
     connect(m_viewContainer, SIGNAL(removeStatusBarSSLLabel()), m_statusBar, SLOT(removeSSLLabel()));
@@ -274,14 +274,14 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setEnabled(false);
     connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(showLastFocusedView()));
     actionCollection()->addAction("last_focused_tab", action);
-    
+
     action=new KAction(this);
     action->setText(i18n("Next Active Tab"));
     action->setShortcut(KShortcut("Ctrl+Alt+Space"));
     action->setEnabled(false);
     connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(showNextActiveView()));
     actionCollection()->addAction("next_active_tab", action);
-    
+
     if (Preferences::self()->tabPlacement()==Preferences::Left)
     {
         action=new KAction(this);
diff --git a/src/statusbar.cpp b/src/statusbar.cpp
index 91e8d6b..f82437b 100644
--- a/src/statusbar.cpp
+++ b/src/statusbar.cpp
@@ -138,7 +138,7 @@ namespace Konversation
 
     void StatusBar::updateLagLabel(Server* lagServer, int msec)
     {
-        if (lagServer==m_window->getViewContainer()->getFrontServer())
+        if (lagServer == m_window->getViewContainer()->getFrontServer())
         {
             setMainLabelText(i18n("Ready."));
 
@@ -157,9 +157,12 @@ namespace Konversation
         }
     }
 
-    void StatusBar::resetLagLabel()
+    void StatusBar::resetLagLabel(Server* lagServer)
     {
-        m_lagLabel->setText(i18n("Lag: Unknown"));
+        if (!lagServer || lagServer == m_window->getViewContainer()->getFrontServer())
+        {
+            m_lagLabel->setText(i18n("Lag: Unknown"));
+        }
     }
 
     void StatusBar::setTooLongLag(Server* lagServer, int msec)
diff --git a/src/statusbar.h b/src/statusbar.h
index e303dda..576ca19 100644
--- a/src/statusbar.h
+++ b/src/statusbar.h
@@ -49,7 +49,7 @@ namespace Konversation
 
             void setLagLabelShown(bool shown);
             void updateLagLabel(Server* lagServer, int msec);
-            void resetLagLabel();
+            void resetLagLabel(Server* lagServer = 0);
             void setTooLongLag(Server* lagServer, int msec);
 
             void updateSSLLabel(Server* server);
diff --git a/src/viewer/viewcontainer.h b/src/viewer/viewcontainer.h
index 93b0a83..134277c 100644
--- a/src/viewer/viewcontainer.h
+++ b/src/viewer/viewcontainer.h
@@ -195,7 +195,7 @@ class ViewContainer : public QObject
         void clearStatusBarInfoLabel();
         void setStatusBarLagLabelShown(bool shown);
         void updateStatusBarLagLabel(Server* server, int msec);
-        void resetStatusBarLagLabel();
+        void resetStatusBarLagLabel(Server* server);
         void setStatusBarLagLabelTooLongLag(Server* server, int msec);
         void updateStatusBarSSLLabel(Server* server);
         void removeStatusBarSSLLabel();

commit 0795a188e86f064043ff7ea68286d0463d9b0f94
Author: Eike Hein <hein@kde.org>
Date:   Wed Jul 21 18:25:45 2010 +0200

    Yank out the old /cycle code.

diff --git a/src/irc/channel.cpp b/src/irc/channel.cpp
index 6717e1d..a3c477f 100644
--- a/src/irc/channel.cpp
+++ b/src/irc/channel.cpp
@@ -1063,14 +1063,8 @@ void Channel::channelTextEntered()
     QString line = channelInput->toPlainText();
     channelInput->clear();
 
-    if(line.toLower().trimmed() == Preferences::self()->commandChar()+"clear")
-    {
+    if (line.toLower().trimmed() == Preferences::self()->commandChar()+"clear")
         textView->clear();
-    }
-    else if(line.toLower().trimmed() == Preferences::self()->commandChar()+"cycle")
-    {
-        cycleChannel();
-    }
     else
     {
         if(!line.isEmpty())
@@ -2537,12 +2531,6 @@ void Channel::refreshModeButtons()
 
 }
 
-void Channel::cycleChannel()
-{
-    closeYourself();
-    m_server->sendJoinCommand(getName(), getPassword());
-}
-
 void Channel::nicknameListViewTextChanged(int textChangedFlags)
 {
     m_nicknameListViewTextChanged |= textChangedFlags;
diff --git a/src/irc/channel.h b/src/irc/channel.h
index 34c4896..967cca7 100644
--- a/src/irc/channel.h
+++ b/src/irc/channel.h
@@ -295,8 +295,6 @@ class Channel : public ChatWindow
         void syncSplitters();
         /// Called from ChatWindow adjustFocus
         virtual void childAdjustFocus();
-        /// Close the channel then come back in
-        void cycleChannel(); ///< TODO this is definately implemented and hooked incorrectly.
 
         bool channelCommand;///< True if nick context menu is executed from IRCView
 

commit 74eee6f896dbb2518f55b5a6a185e61578161eb7
Author: Eike Hein <hein@kde.org>
Date:   Wed Jul 21 18:29:52 2010 +0200

    Minor fixes to usage text formatting.

diff --git a/src/irc/outputfilter.cpp b/src/irc/outputfilter.cpp
index a4ef643..2a9adb7 100644
--- a/src/irc/outputfilter.cpp
+++ b/src/irc/outputfilter.cpp
@@ -1403,10 +1403,10 @@ namespace Konversation
         {
             if (!kick)
                 result = usage(i18n("Usage: %1BAN [-HOST | -DOMAIN | -USERHOST | -USERDOMAIN] "
-                                    "[channel] <user|mask>", Preferences::self()->commandChar()));
+                                    "[channel] <nickname | mask>", Preferences::self()->commandChar()));
             else
                 result = usage(i18n("Usage: %1KICKBAN [-HOST | -DOMAIN | -USERHOST | -USERDOMAIN] "
-                                    "[channel] <user|mask> [reason]",
+                                    "[channel] <nickname | mask> [reason]",
                                     Preferences::self()->commandChar()));
         }
 

commit b08afc71ff114b9c3d9b6303a2e6553c56a2c64e
Author: Eike Hein <hein@kde.org>
Date:   Wed Jul 21 18:30:47 2010 +0200

    Remove /restart again.

diff --git a/src/irc/outputfilter.cpp b/src/irc/outputfilter.cpp
index 2a9adb7..89b9ef0 100644
--- a/src/irc/outputfilter.cpp
+++ b/src/irc/outputfilter.cpp
@@ -1885,15 +1885,6 @@ namespace Konversation
         return result;
     }
 
-    OutputFilterResult OutputFilter::command_restart(const OutputFilterInput& /* input */)
-    {
-        Application *konvApp = static_cast<Application*>(KApplication::kApplication());
-
-        konvApp->restart();
-
-        return OutputFilterResult();
-    }
-
     OutputFilterResult OutputFilter::changeMode(const QString &parameter, const QString& destination,
                                                 char mode, char giveTake)
     {
diff --git a/src/irc/outputfilter.h b/src/irc/outputfilter.h
index 76ce85c..0470d21 100644
--- a/src/irc/outputfilter.h
+++ b/src/irc/outputfilter.h
@@ -113,7 +113,7 @@ namespace Konversation
             void reconnectServer(const QString& quitMessage);
             void disconnectServer(const QString& quitMessage);
             void quitServer(const QString& quitMessage);
-            
+
             void connectTo(Konversation::ConnectionFlag flag,
                            const QString& hostName,
                            const QString& port = "",
@@ -193,7 +193,6 @@ namespace Konversation
             OutputFilterResult command_konsole(const OutputFilterInput& input);
             OutputFilterResult command_queuetuner(const OutputFilterInput& input);
             OutputFilterResult command_sayversion(const OutputFilterInput& input);
-            OutputFilterResult command_restart(const OutputFilterInput& input);
 
         private:
             static void fillCommandList();

commit 5d6fe671028096bbf5256a066391c7aa523ece9c
Author: Eike Hein <hein@kde.org>
Date:   Wed Jul 21 20:46:06 2010 +0200

    Much improve the /cycle command.
    
    Prior to this commit, /cycle only worked from within a particular
    channel tab to close it and subsequently rejoin that channel. It's
    quite a bit more capable now; the new syntax is:
    
    /CYCLE [-APP | -SERVER] [channel | nickname].
    
    '/cycle -app' will restart Konversation.
    
    '/cycle -server' closes all tabs of the connection context and
    creates a new connection with the same settings as the old one.
    Notably this means that it doesn't necessarily rejoin all the
    channels you were in previously -- it would be fairly easy to
    make it do that, but I'm not sure it should; I'm currently
    thinking of /cycle more of starting over fresh. Might change
    my mind later though.
    
    '/cycle channel' closes the channel tab and rejoins the channel.
    
    '/cycle nickname' closes a corresponding query and then reopens
    it (if there's no such query, it will instead fall through to
    showing a help text).
    
    A parameter-less '/cycle' in server, channel and query tabs
    does the equivalent of '/cycle -server', '/cycle <that channel>
    and '/cycle <that query nick>', respectively.

diff --git a/src/irc/channel.cpp b/src/irc/channel.cpp
index a3c477f..7e3af30 100644
--- a/src/irc/channel.cpp
+++ b/src/irc/channel.cpp
@@ -402,12 +402,17 @@ Channel::~Channel()
 
     // Purge nickname list
     purgeNicks();
-    kDebug() << "nicks purged";
+    kDebug() << "Nicks purged.";
 
     // Unlink this channel from channel list
     m_server->removeChannel(this);
     kDebug() << "Channel removed.";
 
+    if (m_recreationScheduled)
+    {
+        QMetaObject::invokeMethod(m_server, "sendJoinCommand", Qt::QueuedConnection,
+            Q_ARG(QString, getName()), Q_ARG(QString, getPassword()));
+    }
 }
 
 bool Channel::rejoinable()
@@ -1108,7 +1113,7 @@ void Channel::sendChannelText(const QString& sendLine)
         QString output(outList[index]);
 
         // encoding stuff is done in Server()
-        Konversation::OutputFilterResult result = m_server->getOutputFilter()->parse(m_server->getNickname(),output,getName());
+        Konversation::OutputFilterResult result = m_server->getOutputFilter()->parse(m_server->getNickname(), output, getName(), this);
 
         // Is there something we need to display for ourselves?
         if(!result.output.isEmpty())
@@ -2649,6 +2654,7 @@ void Channel::appendInputText(const QString& s, bool fromCursor)
 bool Channel::closeYourself(bool confirm)
 {
     int result=KMessageBox::Continue;
+
     if (confirm)
         result = KMessageBox::warningContinueCancel(this,
             i18n("Do you want to leave %1?", getName()),
@@ -2661,9 +2667,14 @@ bool Channel::closeYourself(bool confirm)
     {
         m_server->closeChannel(getName());
         m_server->removeChannel(this);
+
         deleteLater();
+
         return true;
     }
+    else
+        m_recreationScheduled = false;
+
     return false;
 }
 
diff --git a/src/irc/outputfilter.cpp b/src/irc/outputfilter.cpp
index 89b9ef0..3efd335 100644
--- a/src/irc/outputfilter.cpp
+++ b/src/irc/outputfilter.cpp
@@ -19,6 +19,7 @@
 #include "abstractawaymanager.h"
 #include "ignore.h"
 #include "server.h"
+#include "chatwindow.h"
 #include "scriptlauncher.h"
 #include "irccharsets.h"
 #include "linkaddressbook/addressbook.h"
@@ -224,11 +225,12 @@ namespace Konversation
     }
 
     OutputFilterResult OutputFilter::parse(const QString& myNick, const QString& originalLine,
-                                           const QString& destination)
+        const QString& destination, ChatWindow* inputContext)
     {
         OutputFilterInput input;
         input.myNick = myNick;
         input.destination = destination;
+        input.context = inputContext;
 
         OutputFilterResult result;
 
@@ -765,7 +767,7 @@ namespace Konversation
             // We only want to create ('obtain') a new nickinfo if we have done /query
             // or "/msg nick".  Not "/msg nick message".
             NickInfoPtr nickInfo = m_server->obtainNickInfo(recipient);
-            ::Query* query = m_server->addQuery(nickInfo, true /*we initiated*/);
+            Query* query = m_server->addQuery(nickInfo, true /*we initiated*/);
 
             // Force focus if the user did not specify any message.
             if (output.isEmpty()) emit showView(query);
@@ -1885,6 +1887,58 @@ namespace Konversation
         return result;
     }
 
+    OutputFilterResult OutputFilter::command_cycle(const OutputFilterInput& input)
+    {
+        if (input.parameter.isEmpty())
+        {
+            if (input.context)
+                input.context->cycle();
+            else
+            {
+                kDebug() << "Parameter-less /cycle without an input context can't work.";
+
+                return OutputFilterResult();
+            }
+        }
+        else
+        {
+            QString lowerParameter = input.parameter.toLower();
+
+            if (lowerParameter == "-app")
+            {
+                Application *konvApp = static_cast<Application*>(KApplication::kApplication());
+
+                konvApp->restart();
+            }
+            else if (lowerParameter == "-server")
+            {
+                if (m_server)
+                    m_server->cycle();
+                else
+                {
+                    kDebug() << "Told to cycle the server, but current context doesn't have one.";
+
+                    return OutputFilterResult();
+                }
+            }
+            else if (m_server)
+            {
+                if (isAChannel(input.parameter))
+                {
+                    Channel* channel = m_server->getChannelByName(input.parameter);
+
+                    if (channel) channel->cycle();
+                }
+                else if (m_server->getQueryByName(input.parameter))
+                    m_server->getQueryByName(input.parameter)->cycle();
+                else
+                    return usage(i18n("%1CYCLE [-APP | -SERVER] [channel | nickname]", Preferences::self()->commandChar()));
+            }
+        }
+
+        return OutputFilterResult();
+    }
+
     OutputFilterResult OutputFilter::changeMode(const QString &parameter, const QString& destination,
                                                 char mode, char giveTake)
     {
diff --git a/src/irc/outputfilter.h b/src/irc/outputfilter.h
index 0470d21..e7bc322 100644
--- a/src/irc/outputfilter.h
+++ b/src/irc/outputfilter.h
@@ -22,6 +22,7 @@
 #include <QObject>
 #include <QString>
 #include <QSet>
+#include <QPointer>
 
 #include <KUrl>
 #include <kio/global.h>
@@ -46,6 +47,7 @@ namespace Konversation
         QString parameter;
         QString destination;
         QString myNick;
+        QPointer<ChatWindow> context;
     };
 
     struct OutputFilterResult
@@ -69,7 +71,7 @@ namespace Konversation
             static const QSet<QString>& supportedCommands() { return m_commands; }
 
             QStringList splitForEncoding(const QString& destination, const QString& inputLine, int max, int segments = -1);
-            OutputFilterResult parse(const QString& myNick,const QString& line,const QString& destination);
+            OutputFilterResult parse(const QString& myNick, const QString& line, const QString& destination, ChatWindow* inputContext = 0);
 
             // dcc send
             OutputFilterResult sendRequest(const QString &recipient, const QString &fileName, const QString &address, quint16 port,quint64 size);
@@ -193,6 +195,7 @@ namespace Konversation
             OutputFilterResult command_konsole(const OutputFilterInput& input);
             OutputFilterResult command_queuetuner(const OutputFilterInput& input);
             OutputFilterResult command_sayversion(const OutputFilterInput& input);
+            OutputFilterResult command_cycle(const OutputFilterInput& input);
 
         private:
             static void fillCommandList();
diff --git a/src/irc/query.cpp b/src/irc/query.cpp
index f350cea..3661420 100644
--- a/src/irc/query.cpp
+++ b/src/irc/query.cpp
@@ -131,6 +131,13 @@ Query::Query(QWidget* parent, QString _name) : ChatWindow(parent)
 
 Query::~Query()
 {
+    if (m_recreationScheduled)
+    {
+        qRegisterMetaType<NickInfoPtr>("NickInfoPtr");
+
+        QMetaObject::invokeMethod(m_server, "addQuery", Qt::QueuedConnection,
+            Q_ARG(NickInfoPtr, m_nickInfo), Q_ARG(bool, true));
+    }
 }
 
 void Query::setServer(Server* newServer)
@@ -254,7 +261,7 @@ void Query::sendQueryText(const QString& sendLine)
         QString output(outList[index]);
 
         // encoding stuff is done in Server()
-        Konversation::OutputFilterResult result = m_server->getOutputFilter()->parse(m_server->getNickname(), output, getName());
+        Konversation::OutputFilterResult result = m_server->getOutputFilter()->parse(m_server->getNickname(), output, getName(), this);
 
         if(!result.output.isEmpty())
         {
@@ -586,6 +593,7 @@ QString Query::getChannelEncodingDefaultDesc()    // virtual
 bool Query::closeYourself(bool confirm)
 {
     int result = KMessageBox::Continue;
+
     if (confirm)
         result=KMessageBox::warningContinueCancel(
             this,
@@ -598,8 +606,11 @@ bool Query::closeYourself(bool confirm)
     if (result == KMessageBox::Continue)
     {
         m_server->removeQuery(this);
+
         return true;
     }
+    else
+        m_recreationScheduled = false;
 
     return false;
 }
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index 126dd0e..af4adb2 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -68,6 +68,8 @@ Server::Server(QObject* parent, ConnectionSettings& settings) : QObject(parent)
 
     m_connectionState = Konversation::SSNeverConnected;
 
+    m_recreationScheduled = false;
+
     m_delayedConnectTimer = new QTimer(this);
     m_delayedConnectTimer->setSingleShot(true);
     connect(m_delayedConnectTimer, SIGNAL(timeout()), this, SLOT(connectToIRCServer()));
@@ -189,6 +191,18 @@ Server::~Server()
 
     emit destroyed(m_connectionId);
 
+    if (m_recreationScheduled)
+    {
+        qRegisterMetaType<ConnectionSettings>("ConnectionSettings&");
+        qRegisterMetaType<Konversation::ConnectionFlag>("Konversation::ConnectionFlag");
+
+        Application* konvApp = static_cast<Application*>(kapp);
+
+        QMetaObject::invokeMethod(konvApp->getConnectionManager(), "connectTo", Qt::QueuedConnection,
+            Q_ARG(Konversation::ConnectionFlag, Konversation::CreateNewConnection),
+            Q_ARG(ConnectionSettings&, m_connectionSettings));
+    }
+
     kDebug() << "~Server done";
 }
 
@@ -217,6 +231,13 @@ bool Server::closeYourself(bool)
     return true;
 }
 
+void Server::cycle()
+{
+    m_recreationScheduled = true;
+
+    m_statusView->closeYourself();
+}
+
 void Server::doPreShellCommand()
 {
     QString command = getIdentity()->getShellCommand();
diff --git a/src/irc/server.h b/src/irc/server.h
index 36e8643..91a0f3a 100644
--- a/src/irc/server.h
+++ b/src/irc/server.h
@@ -88,6 +88,9 @@ class Server : public QObject
         Server(QObject* parent, ConnectionSettings& settings);
         ~Server();
 
+        void cycle();
+        void abortScheduledRecration() { m_recreationScheduled = false; }
+
         int connectionId() { return m_connectionId; }
 
         ConnectionSettings& getConnectionSettings() { return m_connectionSettings; }
@@ -819,6 +822,8 @@ class Server : public QObject
         QTimer* m_nickInfoChangedTimer;
         QTimer* m_channelNickChangedTimer;
         QStringList m_changedChannels;
+
+        bool m_recreationScheduled;
 };
 
 #endif
diff --git a/src/viewer/chatwindow.cpp b/src/viewer/chatwindow.cpp
index a150c53..ee8177d 100644
--- a/src/viewer/chatwindow.cpp
+++ b/src/viewer/chatwindow.cpp
@@ -32,8 +32,9 @@ ChatWindow::ChatWindow(QWidget* parent) : KVBox(parent)
 {
     setName("ChatWindowObject");
     setTextView(0);
-    firstLog=true;
-    m_server=0;
+    firstLog = true;
+    m_server = 0;
+    m_recreationScheduled = false;
     m_notificationsEnabled = true;
     m_channelEncodingSupported = false;
     m_currentTabNotify = Konversation::tnfNone;
@@ -48,6 +49,21 @@ ChatWindow::~ChatWindow()
     m_server=0;
 }
 
+// reimplement this if your window needs special close treatment
+bool ChatWindow::closeYourself(bool /* askForConfirmation */)
+{
+    deleteLater();
+
+    return true;
+}
+
+void ChatWindow::cycle()
+{
+    m_recreationScheduled = true;
+
+    closeYourself(false);
+}
+
 void ChatWindow::updateAppearance()
 {
     if (getTextView()) getTextView()->updateAppearance();
@@ -475,14 +491,6 @@ void ChatWindow::appendInputText(const QString&, bool)
 {
 }
 
-// reimplement this if your window needs special close treatment
-bool ChatWindow::closeYourself(bool /* askForConfirmation */)
-{
-    deleteLater();
-
-    return true;
-}
-
 bool ChatWindow::eventFilter(QObject* watched, QEvent* e)
 {
     if(e->type() == QEvent::KeyPress)
diff --git a/src/viewer/chatwindow.h b/src/viewer/chatwindow.h
index 10d62c6..d7d2826 100644
--- a/src/viewer/chatwindow.h
+++ b/src/viewer/chatwindow.h
@@ -49,6 +49,11 @@ class ChatWindow : public KVBox
             LogFileReader
         };
 
+        /** Clean up and close this tab.  Return false if you want to cancel the close. */
+        virtual bool closeYourself(bool askForConfirmation = true);
+
+        virtual void cycle();
+
         /** This should be called and set with a non-null server as soon
          *  as possibly after ChatWindow is created.
          *  @param newServer The server to set it to.
@@ -85,8 +90,6 @@ class ChatWindow : public KVBox
         virtual void appendBacklogMessage(const QString& firstColumn,const QString& message);
 
         virtual QString getTextInLine();
-        /** Clean up and close this tab.  Return false if you want to cancel the close. */
-        virtual bool closeYourself(bool askForConfirmation = true);
         /** Reimplement this to return true in all classes that /can/ become front view.
          */
         virtual bool canBeFrontView();
@@ -203,5 +206,7 @@ class ChatWindow : public KVBox
         bool m_channelEncodingSupported;
 
         Konversation::TabNotifyType m_currentTabNotify;
+
+        bool m_recreationScheduled;
 };
 #endif
diff --git a/src/viewer/statuspanel.cpp b/src/viewer/statuspanel.cpp
index 75f909e..a3ada90 100644
--- a/src/viewer/statuspanel.cpp
+++ b/src/viewer/statuspanel.cpp
@@ -83,6 +83,11 @@ void StatusPanel::serverSaysClose()
     closeYourself(false);
 }
 
+void StatusPanel::cycle()
+{
+    if (m_server) m_server->cycle();
+}
+
 void StatusPanel::setNickname(const QString& newNickname)
 {
     nicknameCombobox->setCurrentIndex(nicknameCombobox->findText(newNickname));
@@ -110,7 +115,7 @@ void StatusPanel::sendStatusText(const QString& sendLine)
         QString output(outList[index]);
 
         // encoding stuff is done in Server()
-        Konversation::OutputFilterResult result = m_server->getOutputFilter()->parse(m_server->getNickname(), output, QString());
+        Konversation::OutputFilterResult result = m_server->getOutputFilter()->parse(m_server->getNickname(), output, QString(), this);
 
         if(!result.output.isEmpty())
         {
@@ -261,6 +266,13 @@ bool StatusPanel::closeYourself(bool confirm)
         m_server = 0;
         return true;
     }
+    else
+    {
+        m_recreationScheduled = false;
+
+        m_server->abortScheduledRecration();
+    }
+
     return false;
 }
 
diff --git a/src/viewer/statuspanel.h b/src/viewer/statuspanel.h
index 5eecd53..a1d8e9d 100644
--- a/src/viewer/statuspanel.h
+++ b/src/viewer/statuspanel.h
@@ -31,6 +31,8 @@ class StatusPanel : public ChatWindow
         explicit StatusPanel(QWidget* parent);
         ~StatusPanel();
 
+        virtual void cycle();
+
         virtual void setName(const QString& newName);
 
         virtual QString getTextInLine();

commit 799ad4ac4ed453527eae8c3cdfd709ae4384a062
Author: Eike Hein <hein@kde.org>
Date:   Wed Jul 21 21:04:02 2010 +0200

    Clean away some unnecessary code.

diff --git a/src/irc/query.cpp b/src/irc/query.cpp
index 3661420..692cc4d 100644
--- a/src/irc/query.cpp
+++ b/src/irc/query.cpp
@@ -383,7 +383,7 @@ void Query::popup(int id)
                 "CloseQueryAfterIgnore");
 
                 if (rc == KMessageBox::Yes && m_server)
-                    QTimer::singleShot(0, this, SLOT(closeWithoutAsking()));
+                    closeYourself(false);
             }
 
             break;
@@ -615,11 +615,6 @@ bool Query::closeYourself(bool confirm)
     return false;
 }
 
-void Query::closeWithoutAsking()
-{
-    m_server->removeQuery(this);
-}
-
 void Query::urlsDropped(const KUrl::List urls)
 {
     m_server->sendURIs(urls, getName());
diff --git a/src/irc/query.h b/src/irc/query.h
index a5d2ad0..99a8e61 100644
--- a/src/irc/query.h
+++ b/src/irc/query.h
@@ -100,7 +100,6 @@ class Query : public ChatWindow
         void popup(int id);
         void nickInfoChanged();
         void updateNickInfo(Server* server, NickInfoPtr nickInfo);
-        void closeWithoutAsking();
         virtual void serverOnline(bool online);
         void slotActionTriggered(QAction* action);
 

commit 8b1f8d6d7b92d7b74256e06fc31e92c5c2d07b50
Author: Eike Hein <hein@kde.org>
Date:   Wed Jul 21 21:09:52 2010 +0200

    This is unnecessary code, too.

diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index af4adb2..017e8db 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -225,9 +225,10 @@ void Server::purgeData()
 }
 
 //... so called to match the ChatWindow derivatives.
-bool Server::closeYourself(bool)
+bool Server::closeYourself(bool askForConfirmation)
 {
-    QTimer::singleShot(0, m_statusView, SLOT(serverSaysClose()));
+    m_statusView->closeYourself(askForConfirmation);
+
     return true;
 }
 
diff --git a/src/viewer/statuspanel.cpp b/src/viewer/statuspanel.cpp
index a3ada90..2c2c1c2 100644
--- a/src/viewer/statuspanel.cpp
+++ b/src/viewer/statuspanel.cpp
@@ -78,11 +78,6 @@ StatusPanel::~StatusPanel()
 {
 }
 
-void StatusPanel::serverSaysClose()
-{
-    closeYourself(false);
-}
-
 void StatusPanel::cycle()
 {
     if (m_server) m_server->cycle();
diff --git a/src/viewer/statuspanel.h b/src/viewer/statuspanel.h
index a1d8e9d..8f0dec4 100644
--- a/src/viewer/statuspanel.h
+++ b/src/viewer/statuspanel.h
@@ -60,7 +60,6 @@ class StatusPanel : public ChatWindow
         void updateAppearance();
         virtual void appendInputText(const QString&, bool fromCursor);
         void updateName();
-        void serverSaysClose();
 
     protected slots:
         void sendFileMenu();

commit ea073952cc59c1031bfc2d4b499e7b26783e8be1
Author: Eike Hein <hein@kde.org>
Date:   Wed Jul 21 22:05:44 2010 +0200

    Move the duplicated /clear code from StatusPanel, Channel and Query into OutputFilter.

diff --git a/src/irc/channel.cpp b/src/irc/channel.cpp
index 7e3af30..9b8d332 100644
--- a/src/irc/channel.cpp
+++ b/src/irc/channel.cpp
@@ -1066,15 +1066,10 @@ void Channel::sendFileMenu()
 void Channel::channelTextEntered()
 {
     QString line = channelInput->toPlainText();
+
     channelInput->clear();
 
-    if (line.toLower().trimmed() == Preferences::self()->commandChar()+"clear")
-        textView->clear();
-    else
-    {
-        if(!line.isEmpty())
-            sendChannelText(sterilizeUnicode(line));
-    }
+    if (!line.isEmpty()) sendChannelText(sterilizeUnicode(line));
 }
 
 void Channel::channelPassthroughCommand()
diff --git a/src/irc/outputfilter.cpp b/src/irc/outputfilter.cpp
index 3efd335..3996c19 100644
--- a/src/irc/outputfilter.cpp
+++ b/src/irc/outputfilter.cpp
@@ -19,7 +19,6 @@
 #include "abstractawaymanager.h"
 #include "ignore.h"
 #include "server.h"
-#include "chatwindow.h"
 #include "scriptlauncher.h"
 #include "irccharsets.h"
 #include "linkaddressbook/addressbook.h"
@@ -1939,6 +1938,13 @@ namespace Konversation
         return OutputFilterResult();
     }
 
+    OutputFilterResult OutputFilter::command_clear(const OutputFilterInput& input)
+    {
+        if (input.context) input.context->clear();
+
+        return OutputFilterResult();
+    }
+
     OutputFilterResult OutputFilter::changeMode(const QString &parameter, const QString& destination,
                                                 char mode, char giveTake)
     {
diff --git a/src/irc/outputfilter.h b/src/irc/outputfilter.h
index e7bc322..3b4d381 100644
--- a/src/irc/outputfilter.h
+++ b/src/irc/outputfilter.h
@@ -196,6 +196,7 @@ namespace Konversation
             OutputFilterResult command_queuetuner(const OutputFilterInput& input);
             OutputFilterResult command_sayversion(const OutputFilterInput& input);
             OutputFilterResult command_cycle(const OutputFilterInput& input);
+            OutputFilterResult command_clear(const OutputFilterInput& input);
 
         private:
             static void fillCommandList();
diff --git a/src/irc/query.cpp b/src/irc/query.cpp
index 692cc4d..9b87e58 100644
--- a/src/irc/query.cpp
+++ b/src/irc/query.cpp
@@ -215,15 +215,10 @@ void Query::setEncryptedOutput(bool e)
 void Query::queryTextEntered()
 {
     QString line=queryInput->toPlainText();
+
     queryInput->clear();
-    if(line.toLower()==Preferences::self()->commandChar()+"clear")
-    {
-        textView->clear();
-    }
-    else if(line.length())
-    {
-         sendQueryText(sterilizeUnicode(line));
-    }
+
+    if (!line.isEmpty()) sendQueryText(sterilizeUnicode(line));
 }
 
 void Query::queryPassthroughCommand()
diff --git a/src/viewer/chatwindow.cpp b/src/viewer/chatwindow.cpp
index ee8177d..72149c5 100644
--- a/src/viewer/chatwindow.cpp
+++ b/src/viewer/chatwindow.cpp
@@ -239,6 +239,13 @@ void ChatWindow::appendBacklogMessage(const QString& firstColumn,const QString&
     textView->appendBacklogMessage(firstColumn,Konversation::sterilizeUnicode(message));
 }
 
+void ChatWindow::clear()
+{
+    if (!textView) return;
+
+    textView->clear();
+}
+
 void ChatWindow::cdIntoLogPath()
 {
     QString home = KUser(KUser::UseRealUserID).homeDir();
diff --git a/src/viewer/chatwindow.h b/src/viewer/chatwindow.h
index d7d2826..670d18e 100644
--- a/src/viewer/chatwindow.h
+++ b/src/viewer/chatwindow.h
@@ -89,6 +89,8 @@ class ChatWindow : public KVBox
             bool parseURL = true, bool self = false);
         virtual void appendBacklogMessage(const QString& firstColumn,const QString& message);
 
+        void clear();
+
         virtual QString getTextInLine();
         /** Reimplement this to return true in all classes that /can/ become front view.
          */
diff --git a/src/viewer/statuspanel.cpp b/src/viewer/statuspanel.cpp
index 2c2c1c2..d0ec8b1 100644
--- a/src/viewer/statuspanel.cpp
+++ b/src/viewer/statuspanel.cpp
@@ -123,14 +123,11 @@ void StatusPanel::sendStatusText(const QString& sendLine)
 
 void StatusPanel::statusTextEntered()
 {
-    QString line=sterilizeUnicode(statusInput->toPlainText());
+    QString line = sterilizeUnicode(statusInput->toPlainText());
+
     statusInput->clear();
 
-    if(line.toLower()==Preferences::self()->commandChar()+"clear") textView->clear();
-    else
-    {
-        if(line.length()) sendStatusText(line);
-    }
+    if (!line.isEmpty()) sendStatusText(line);
 }
 
 void StatusPanel::textPasted(const QString& text)

commit 906b121e36a3dd00bb9104d11867786d7f26d10e
Author: Eike Hein <hein@kde.org>
Date:   Wed Jul 21 22:06:55 2010 +0200

    Consistency++.

diff --git a/src/dcc/chatcontainer.cpp b/src/dcc/chatcontainer.cpp
index 9467342..e9d50f1 100644
--- a/src/dcc/chatcontainer.cpp
+++ b/src/dcc/chatcontainer.cpp
@@ -288,7 +288,7 @@ namespace Konversation
                 }
                 else if (cmd == cc + "close")
                 {
-                    deleteLater();
+                    closeYourself(false);
                 }
                 else
                 {
diff --git a/src/irc/outputfilter.cpp b/src/irc/outputfilter.cpp
index 3996c19..117c8d8 100644
--- a/src/irc/outputfilter.cpp
+++ b/src/irc/outputfilter.cpp
@@ -1605,21 +1605,21 @@ namespace Konversation
             emit reconnectServer(QString());
         else
         {
-            QStringList splitString = input.parameter.split(' ');
-            QString host = splitString[0];
+            QStringList parameterList = input.parameter.split(' ');
+            QString host = parameterList[0];
             QString password;
 
-            if (splitString.count() == 3)
-                emit connectTo(Konversation::CreateNewConnection, splitString[0], splitString[1], splitString[2]);
-            else if (splitString.count() == 2)
+            if (parameterList.count() == 3)
+                emit connectTo(Konversation::CreateNewConnection, parameterList[0], parameterList[1], parameterList[2]);
+            else if (parameterList.count() == 2)
             {
-                if (splitString[0].contains(QRegExp(":[0-9]+$")))
-                    emit connectTo(Konversation::CreateNewConnection, splitString[0], 0, splitString[1]);
+                if (parameterList[0].contains(QRegExp(":[0-9]+$")))
+                    emit connectTo(Konversation::CreateNewConnection, parameterList[0], 0, parameterList[1]);
                 else
-                    emit connectTo(Konversation::CreateNewConnection, splitString[0], splitString[1]);
+                    emit connectTo(Konversation::CreateNewConnection, parameterList[0], parameterList[1]);
             }
             else
-                emit connectTo(Konversation::CreateNewConnection, splitString[0]);
+                emit connectTo(Konversation::CreateNewConnection, parameterList[0]);
         }
 
         return OutputFilterResult();

commit 78e9f5eb461f5d5f1c422e093840f7b8669a51dd
Author: Eike Hein <hein@kde.org>
Date:   Wed Jul 21 22:41:54 2010 +0200

    Treat -foo and --foo as equivalent in /command parameter parsing.

diff --git a/ChangeLog b/ChangeLog
index fcce1e7..90e2ed2 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -26,6 +26,8 @@ Changes since 1.3.1:
 * Fixed a bug causing a connection failure to reset the lag meter in the
   status bar to "Unknown" even when the active tab is not related to the
   connection that failed.
+* Commands that accept parameters in the form "-foo" will now also under-
+  stand "--foo".
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/irc/outputfilter.cpp b/src/irc/outputfilter.cpp
index 117c8d8..3e1d2f2 100644
--- a/src/irc/outputfilter.cpp
+++ b/src/irc/outputfilter.cpp
@@ -766,7 +766,7 @@ namespace Konversation
             // We only want to create ('obtain') a new nickinfo if we have done /query
             // or "/msg nick".  Not "/msg nick message".
             NickInfoPtr nickInfo = m_server->obtainNickInfo(recipient);
-            Query* query = m_server->addQuery(nickInfo, true /*we initiated*/);
+            ::Query* query = m_server->addQuery(nickInfo, true /*we initiated*/);
 
             // Force focus if the user did not specify any message.
             if (output.isEmpty()) emit showView(query);
@@ -847,7 +847,7 @@ namespace Konversation
         if (input.parameter.isEmpty())
             return usage(i18n("Usage: %1AME [-LOCAL] text", Preferences::self()->commandChar()));
 
-        if (input.parameter.section(' ', 0, 0).toLower() == "-local")
+        if (isParameter("local", input.parameter.section(' ', 0, 0)))
             m_server->sendToAllChannelsAndQueries(Preferences::self()->commandChar() + "me " + input.parameter.section(' ', 1));
         else
             emit multiServerCommand("me", input.parameter);
@@ -860,7 +860,7 @@ namespace Konversation
         if (input.parameter.isEmpty())
             return usage(i18n("Usage: %1AMSG [-LOCAL] text", Preferences::self()->commandChar()));
 
-        if (input.parameter.section(' ', 0, 0).toLower() == "-local")
+        if (isParameter("local", input.parameter.section(' ', 0, 0)))
             m_server->sendToAllChannelsAndQueries(input.parameter.section(' ', 1));
         else
             emit multiServerCommand("msg", input.parameter);
@@ -1210,7 +1210,7 @@ namespace Konversation
         {
             QStringList parameterList = input.parameter.split(' ');
 
-            if (parameterList[0].toLower() == "-showpath" && !parameterList[1].isEmpty())
+            if (isParameter("showpath", parameterList[0]) && !parameterList[1].isEmpty())
             {
                 result = info(i18nc("%2 is a filesystem path to the script file",
                     "The script file '%1' was found at: %2",
@@ -1339,11 +1339,10 @@ namespace Konversation
             QString channel;
             QString option;
             // check for option
-            QString lowerParameter = parameterList[0].toLower();
-            bool host = (lowerParameter == "-host");
-            bool domain = (lowerParameter == "-domain");
-            bool uhost = (lowerParameter == "-userhost");
-            bool udomain = (lowerParameter == "-userdomain");
+            bool host = isParameter("host", parameterList[0]);
+            bool domain = isParameter("domain", parameterList[0]);
+            bool uhost = isParameter("userhost", parameterList[0]);
+            bool udomain = isParameter("userdomain", parameterList[0]);
 
             // remove possible option
             if (host || domain || uhost || udomain)
@@ -1492,7 +1491,7 @@ namespace Konversation
             int value = Ignore::Channel | Ignore::Query;
 
             // user specified -all option
-            if (parameterList[0].toLower() == "-all")
+            if (isParameter("all", parameterList[0]))
             {
                 // ignore everything
                 value = Ignore::All;
@@ -1901,15 +1900,13 @@ namespace Konversation
         }
         else
         {
-            QString lowerParameter = input.parameter.toLower();
-
-            if (lowerParameter == "-app")
+            if (isParameter("app", input.parameter))
             {
                 Application *konvApp = static_cast<Application*>(KApplication::kApplication());
 
                 konvApp->restart();
             }
-            else if (lowerParameter == "-server")
+            else if (isParameter("server", input.parameter))
             {
                 if (m_server)
                     m_server->cycle();
@@ -2065,6 +2062,13 @@ namespace Konversation
                                                   // XXX if we ever see the assert, we need the ternary
         return m_server? m_server->isAChannel(check) : bool(QString("#&").contains(check.at(0)));
     }
+
+    bool OutputFilter::isParameter(const QString& parameter, const QString& string)
+    {
+        QRegExp rx(QString("^[\\-]{1,2}%1$").arg(parameter), Qt::CaseInsensitive);
+
+        return rx.exactMatch(string);
+    }
 }
 #include "outputfilter.moc"
 
diff --git a/src/irc/outputfilter.h b/src/irc/outputfilter.h
index 3b4d381..18ef639 100644
--- a/src/irc/outputfilter.h
+++ b/src/irc/outputfilter.h
@@ -208,6 +208,7 @@ namespace Konversation
 
             OutputFilterResult changeMode(const QString& parameter, const QString& destination, char mode, char giveTake);
             bool isAChannel(const QString& check);
+            bool isParameter(const QString& parameter, const QString& string);
             OutputFilterResult usage(const QString& check);
             OutputFilterResult info(const QString& check);
             OutputFilterResult error(const QString& check);

commit 524d036065d3d089ac0ae8e04d8f60d78546606c
Author: Eike Hein <hein@kde.org>
Date:   Wed Jul 21 22:42:14 2010 +0200

    Update changelog.

diff --git a/ChangeLog b/ChangeLog
index 90e2ed2..7cfe2ff 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -15,8 +15,8 @@ Changes since 1.3.1:
   be rejoined automatically on reconnect as well as after having been kicked
   from a channel, will now appear above the "Close Tab" action rather than
   at the end of the context menu, so "Close Tab" is always the last item.
-* Added a '--restart' command line argument and a '/restart' command that
-  quits and restarts Konversation (if running, otherwise has no effect).
+* Added a '--restart' command line argument that quits and restarts Konver-
+  sation (if running, otherwise has no effect).
 * Added a '--startupdelay <msec>' command line argument that causes the app
   to sleep for the specified amount of miliseconds early during the startup
   process, delaying D-Bus activity and UI creation.
@@ -28,6 +28,17 @@ Changes since 1.3.1:
   connection that failed.
 * Commands that accept parameters in the form "-foo" will now also under-
   stand "--foo".
+* The syntax for the '/cycle' command is now '%1CYCLE [-APP | -SERVER]
+  [channel | nickname]'. Whereas '/cycle' previously only allowed you to
+  cycle a channel from the input line of that same channel, you can now
+  specify the target explicitly. '-app' will restart Konversation (see
+  also the new --restart command line argument to the konversation exe-
+  cutable) and '--server' will close all tabs belonging to the currect
+  connection and then create a new connection with the same settings as
+  the old one; both are new abilities for the command. A '/cycle' without
+  parameters issued in server, channel and query tabs is equivalent to
+  specifying '-server' or the current channel or query, respectively --
+  the ability to cycle a query is also new.
 
 
 Changes from 1.3 to 1.3.1:

commit 1c746b35e71f0549e17483133e6d6420b60282f8
Author: Eike Hein <hein@kde.org>
Date:   Wed Jul 21 22:49:56 2010 +0200

    Make server /cycle recreate non-autojoin channels, too, after all.

diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index 017e8db..da28575 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -178,6 +178,18 @@ Server::~Server()
     closeRawLog();
     closeChannelListPanel();
 
+    if (m_recreationScheduled)
+    {
+        Konversation::ChannelList channelList;
+
+        foreach (Channel* channel, m_channelList)
+        {
+            channelList << channel->channelSettings();
+        }
+
+        m_connectionSettings.setOneShotChannelList(channelList);
+    }
+
     qDeleteAll(m_channelList);
     m_channelList.clear();
 

commit b3efd8ddbc091810468badc37247fdecebe74e6e
Author: Eike Hein <hein@kde.org>
Date:   Thu Jul 22 00:49:48 2010 +0200

    Fix WNO notifications getting logged as HTML.

diff --git a/ChangeLog b/ChangeLog
index 7cfe2ff..53d8e19 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -39,6 +39,9 @@ Changes since 1.3.1:
   parameters issued in server, channel and query tabs is equivalent to
   specifying '-server' or the current channel or query, respectively --
   the ability to cycle a query is also new.
+* Fixed a bug causing the chat text notification messages originating in
+  the Watched Nicknames Online system to be logged in HTML format (and
+  thus HTML source to be displayed e.g. in backlog replay).
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index da28575..4958adf 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -2808,8 +2808,10 @@ NickInfoPtr Server::setWatchedNickOnline(const QString& nickname)
     KABC::Addressee addressee = nickInfo->getAddressee();
     if (!addressee.isEmpty()) Konversation::Addressbook::self()->emitContactPresenceChanged(addressee.uid());
 
-    appendMessageToFrontmost(i18n("Notify"),"<a class=\"nick\" href=\"#"+nickname+"\">"+
-        i18n("%1 is online (%2).", nickname, getServerName())+"</a>", getStatusView());
+    // FIXME HACK: Until message routing and the ircview are refactored, there's no better
+    // way to pass the nickname down to the ircview than prepending it -- the entire append-
+    // MessageToFrontmost callgraph is pretty inflexible in terms of metadata payload, boo.
+    appendMessageToFrontmost(i18n("Notify"), nickname + ' ' + i18n("%1 is online (%2).", nickname, getServerName()), getStatusView());
 
     static_cast<Application*>(kapp)->notificationHandler()->nickOnline(getStatusView(), nickname);
 
diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 13a0d77..33e0007 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -811,7 +811,11 @@ void IRCView::appendServerMessage(const QString& type, const QString& message, b
     if(type != i18n("Notify"))
         line = line.arg(timeStamp(), type, filter(message, serverColor, 0 , true, parseURL));
     else
-        line = "<font color=\"" + serverColor + "\">"+line.arg(timeStamp(), type, message)+"</font>";
+    {
+        // See Server::setWatchedNickOnline() for the originating call site.
+        line = "<font color=\"" + serverColor + "\"><a class=\"nick\" href=\"#"+message.section(' ', 0, 0)+"\">"
+            +line.arg(timeStamp(), type, message.section(' ', 1))+"</a></font>";
+    }
 
     emit textToLog(QString("%1\t%2").arg(type).arg(message));
 

commit a803acf308eaead7d70ede32ecc7ceb44bd39343
Author: Eike Hein <hein@kde.org>
Date:   Thu Jul 22 01:21:41 2010 +0200

    The ChangeLog is not in C++.

diff --git a/ChangeLog b/ChangeLog
index 53d8e19..9df0512 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -28,7 +28,7 @@ Changes since 1.3.1:
   connection that failed.
 * Commands that accept parameters in the form "-foo" will now also under-
   stand "--foo".
-* The syntax for the '/cycle' command is now '%1CYCLE [-APP | -SERVER]
+* The syntax for the '/cycle' command is now '/CYCLE [-APP | -SERVER]
   [channel | nickname]'. Whereas '/cycle' previously only allowed you to
   cycle a channel from the input line of that same channel, you can now
   specify the target explicitly. '-app' will restart Konversation (see

commit f9ea87d863dc904475823e3b73c0339b55031939
Author: Eike Hein <hein@kde.org>
Date:   Thu Jul 22 01:26:44 2010 +0200

    A link by any other name.

diff --git a/ChangeLog b/ChangeLog
index 9df0512..7b1adc2 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -33,12 +33,12 @@ Changes since 1.3.1:
   cycle a channel from the input line of that same channel, you can now
   specify the target explicitly. '-app' will restart Konversation (see
   also the new --restart command line argument to the konversation exe-
-  cutable) and '--server' will close all tabs belonging to the currect
-  connection and then create a new connection with the same settings as
-  the old one; both are new abilities for the command. A '/cycle' without
-  parameters issued in server, channel and query tabs is equivalent to
-  specifying '-server' or the current channel or query, respectively --
-  the ability to cycle a query is also new.
+  cutable mentioned above) and '--server' will close all tabs belonging
+  to the currect connection and then create a new connection with the
+  same settings as the old one; both are new abilities for the command.
+  A '/cycle' without parameters issued in server, channel and query tabs
+  is equivalent to specifying '-server' or the current channel or query,
+  respectively -- the ability to cycle a query is also new.
 * Fixed a bug causing the chat text notification messages originating in
   the Watched Nicknames Online system to be logged in HTML format (and
   thus HTML source to be displayed e.g. in backlog replay).

commit a11c28fd58aa44587b3b1316e1390a1dd86cfc98
Author: Eike Hein <hein@kde.org>
Date:   Thu Jul 22 02:50:17 2010 +0200

    On KDE 4.6 use brand new API to preserve CLI arguments across --restart and /cycle -app.

diff --git a/src/application.cpp b/src/application.cpp
index e0a6b3e..cb755ee 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -95,8 +95,55 @@ Application::~Application()
     osd = 0;
     closeWallet();
 
-    if (m_restartScheduled)
-        KProcess::startDetached(QCoreApplication::applicationFilePath(), QStringList() << "--startupdelay" << "2000");
+    if (m_restartScheduled) implementRestart();
+}
+
+void Application::implementRestart()
+{
+    QStringList argumentList;
+
+#if KDE_IS_VERSION(4,5,60)
+    KCmdLineArgs* args = KCmdLineArgs::parsedArgs();
+
+    argumentList = args->allArguments();
+
+    // Pop off the executable name. May not be the first argument in argv
+    // everywhere, so verify first.
+    if (QCoreApplication::applicationFilePath().endsWith(argumentList.first()))
+        argumentList.removeFirst();
+
+    // Don't round-trip --restart.
+    argumentList.removeAll("--restart");
+
+    // FIXME: I shouldn't have to check for the single-dash variant, but
+    // KCmdLineArgs::allArguments() presently doesn't round-trip '--foo'
+    // properly and turns it into '-foo' - dfaure is informed.
+    argumentList.replaceInStrings("-startupdelay", "--startupdelay");
+
+    // Avoid accumulating multiple --startupdelay arguments across multiple
+    // uses of restart().
+    if (argumentList.contains("--startupdelay"))
+    {
+        int index = argumentList.lastIndexOf("--startupdelay");
+
+        if (index < argumentList.count() - 1 && !argumentList.at(index + 1).startsWith("-"))
+        {
+            QString delayArgument = argumentList.at(index + 1);
+
+            bool ok;
+
+            uint delay = delayArgument.toUInt(&ok, 10);
+
+            // If the argument is invalid or too low, raise to at least 2000 msecs.
+            if (!ok || delay < 2000)
+                argumentList.replace(index + 1, "2000");
+        }
+    }
+    else
+#endif
+        argumentList << "--startupdelay" << "2000";
+
+    KProcess::startDetached(QCoreApplication::applicationFilePath(), argumentList);
 }
 
 int Application::newInstance()
diff --git a/src/application.h b/src/application.h
index 02c482b..1fb11c9 100644
--- a/src/application.h
+++ b/src/application.h
@@ -174,6 +174,8 @@ class Application : public KUniqueApplication
         void closeWallet();
 
     private:
+        void implementRestart();
+
         ConnectionManager* m_connectionManager;
         AbstractAwayManager* m_awayManager;
         Konversation::DCC::TransferManager* m_dccTransferManager;

commit 792dbc9e322638dd5fa00de54440e0ed5118d7bf
Author: Eike Hein <hein@kde.org>
Date:   Thu Jul 22 02:57:12 2010 +0200

    Extend the workaround around the small remaining kdelibs bug a bit.

diff --git a/src/application.cpp b/src/application.cpp
index cb755ee..0005c27 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -112,14 +112,15 @@ void Application::implementRestart()
     if (QCoreApplication::applicationFilePath().endsWith(argumentList.first()))
         argumentList.removeFirst();
 
-    // Don't round-trip --restart.
-    argumentList.removeAll("--restart");
-
-    // FIXME: I shouldn't have to check for the single-dash variant, but
+    // FIXME: I shouldn't have to check for the single-dash variants, but
     // KCmdLineArgs::allArguments() presently doesn't round-trip '--foo'
     // properly and turns it into '-foo' - dfaure is informed.
+    argumentList.replaceInStrings("-restart", "--restart");
     argumentList.replaceInStrings("-startupdelay", "--startupdelay");
 
+    // Don't round-trip --restart.
+    argumentList.removeAll("--restart");
+
     // Avoid accumulating multiple --startupdelay arguments across multiple
     // uses of restart().
     if (argumentList.contains("--startupdelay"))

commit 42fe29b04b33f5617e2888875fa9e8e6c63daa58
Author: Eike Hein <hein@kde.org>
Date:   Thu Jul 22 03:13:05 2010 +0200

    Add notes that CLI argument preservation requires 4.6 libs.

diff --git a/ChangeLog b/ChangeLog
index 7b1adc2..eb134ef 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -16,7 +16,10 @@ Changes since 1.3.1:
   from a channel, will now appear above the "Close Tab" action rather than
   at the end of the context menu, so "Close Tab" is always the last item.
 * Added a '--restart' command line argument that quits and restarts Konver-
-  sation (if running, otherwise has no effect).
+  sation (if running, otherwise has no effect). Note that preservation of
+  command line arguments across restarts only works on KDE Platform 4.6 and
+  higher, as a required library feature is only available as of that ver-
+  sion.
 * Added a '--startupdelay <msec>' command line argument that causes the app
   to sleep for the specified amount of miliseconds early during the startup
   process, delaying D-Bus activity and UI creation.
@@ -33,12 +36,14 @@ Changes since 1.3.1:
   cycle a channel from the input line of that same channel, you can now
   specify the target explicitly. '-app' will restart Konversation (see
   also the new --restart command line argument to the konversation exe-
-  cutable mentioned above) and '--server' will close all tabs belonging
-  to the currect connection and then create a new connection with the
-  same settings as the old one; both are new abilities for the command.
-  A '/cycle' without parameters issued in server, channel and query tabs
-  is equivalent to specifying '-server' or the current channel or query,
-  respectively -- the ability to cycle a query is also new.
+  cutable mentioned above: as with --restart, preservation of the command
+  line arguments the app was started with requires KDE Platform 4.6 or
+  higher) and '--server' will close all tabs belonging to the currect
+  connection and then create a new connection with the same settings as the
+  old one. Both are new abilities for the command. A '/cycle' without para--
+  meters issued in server, channel and query tabs is equivalent to specify-
+  ing '-server' or the current channel or query, respectively -- the ability
+  to cycle a query is also new.
 * Fixed a bug causing the chat text notification messages originating in
   the Watched Nicknames Online system to be logged in HTML format (and
   thus HTML source to be displayed e.g. in backlog replay).

commit ff7e0e2647edd59e82f9e150f5d07090c7937cbb
Author: Eike Hein <hein@kde.org>
Date:   Thu Jul 22 08:50:26 2010 +0200

    Make this string more grokable*.
    
    * At least I still get to use obscure jargon in commit messages.

diff --git a/src/config/chatwindowbehaviour_config.ui b/src/config/chatwindowbehaviour_config.ui
index f4c6829..1466076 100644
--- a/src/config/chatwindowbehaviour_config.ui
+++ b/src/config/chatwindowbehaviour_config.ui
@@ -92,7 +92,7 @@
          <string>Keep channel mode string as a combination of characters instead of translating them into human readable words. E.g. '*** Channel modes: no messages from outside' will become '*** Channel modes: n'</string>
         </property>
         <property name="text">
-         <string>Show raw mode characters</string>
+         <string>Show raw mode characters (e.g. +o) instead of descriptions</string>
         </property>
        </widget>
       </item>

commit 24f5b7e77e5249a0f2f46cd7c381fcf7855c7f94
Author: Eike Hein <hein@kde.org>
Date:   Thu Jul 22 09:14:50 2010 +0200

    Test slightly modified CIA rules.

diff --git a/src/commit.h b/src/commit.h
index 05129d5..d472aea 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4060
+#define COMMIT 4061
 #endif

commit 28444a5abcb0d2d132ad61e7a9f04973e3e2c050
Author: Eike Hein <hein@kde.org>
Date:   Thu Jul 22 10:42:01 2010 +0200

    The kdelibs bug got fixed 10 minutes ago (r1152962, hugs to dfaure), so this workaround can go now.

diff --git a/src/application.cpp b/src/application.cpp
index 0005c27..3b47f4f 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -112,12 +112,6 @@ void Application::implementRestart()
     if (QCoreApplication::applicationFilePath().endsWith(argumentList.first()))
         argumentList.removeFirst();
 
-    // FIXME: I shouldn't have to check for the single-dash variants, but
-    // KCmdLineArgs::allArguments() presently doesn't round-trip '--foo'
-    // properly and turns it into '-foo' - dfaure is informed.
-    argumentList.replaceInStrings("-restart", "--restart");
-    argumentList.replaceInStrings("-startupdelay", "--startupdelay");
-
     // Don't round-trip --restart.
     argumentList.removeAll("--restart");
 

commit df2d69265b781b72a911de49b0228680303f2174
Author: Eike Hein <hein@kde.org>
Date:   Thu Jul 22 11:17:58 2010 +0200

    Expose the restart ability in the action collection.

diff --git a/ChangeLog b/ChangeLog
index eb134ef..bd8fd86 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -15,11 +15,12 @@ Changes since 1.3.1:
   be rejoined automatically on reconnect as well as after having been kicked
   from a channel, will now appear above the "Close Tab" action rather than
   at the end of the context menu, so "Close Tab" is always the last item.
-* Added a '--restart' command line argument that quits and restarts Konver-
-  sation (if running, otherwise has no effect). Note that preservation of
-  command line arguments across restarts only works on KDE Platform 4.6 and
-  higher, as a required library feature is only available as of that ver-
-  sion.
+* Added a 'Restart' action and a '--restart' command line argument that quit
+  and restart Konversation. Notes: If not already running, the command line
+  argument has no effect; startup will occur normally. Also, the preservation
+  of command line arguments across restarts is only supported on KDE Platform
+  4.6 Alpha 1 and higher, as a required library feature is only available as
+  of that version.
 * Added a '--startupdelay <msec>' command line argument that causes the app
   to sleep for the specified amount of miliseconds early during the startup
   process, delaying D-Bus activity and UI creation.
@@ -34,16 +35,16 @@ Changes since 1.3.1:
 * The syntax for the '/cycle' command is now '/CYCLE [-APP | -SERVER]
   [channel | nickname]'. Whereas '/cycle' previously only allowed you to
   cycle a channel from the input line of that same channel, you can now
-  specify the target explicitly. '-app' will restart Konversation (see
-  also the new --restart command line argument to the konversation exe-
-  cutable mentioned above: as with --restart, preservation of the command
-  line arguments the app was started with requires KDE Platform 4.6 or
-  higher) and '--server' will close all tabs belonging to the currect
+  specify the target explicitly. '-app' will restart Konversation (as with
+  the new 'Restart' action mentioned above, preservation of the command line
+  arguments the app was started with requires KDE Platform 4.6 Alpha 1 or
+  higher to work) and '--server' will close all tabs belonging to the current
   connection and then create a new connection with the same settings as the
-  old one. Both are new abilities for the command. A '/cycle' without para--
-  meters issued in server, channel and query tabs is equivalent to specify-
-  ing '-server' or the current channel or query, respectively -- the ability
-  to cycle a query is also new.
+  old one (plus it will attempt to rejoin all previously open channels). Both
+  are new abilities for the command. A '/cycle' without parameters issued in
+  server, channel and query tabs is equivalent to specifying '-server' or the
+  current channel or query, respectively -- the ability to cycle a query is
+  also new.
 * Fixed a bug causing the chat text notification messages originating in
   the Watched Nicknames Online system to be logged in HTML format (and
   thus HTML source to be displayed e.g. in backlog replay).
diff --git a/src/application.h b/src/application.h
index 1fb11c9..3598b87 100644
--- a/src/application.h
+++ b/src/application.h
@@ -97,8 +97,6 @@ class Application : public KUniqueApplication
 
         static Application* instance();
 
-        void restart();
-
         /** For dcop and addressbook, a user can be specified as user@irc.server.net
          *  or user\@servergroup or using the unicode separator symbol 0xE120 instead
          *  of the "@".  This function takes a string like the above examples, and
@@ -147,6 +145,8 @@ class Application : public KUniqueApplication
         void appearanceChanged();
 
     public slots:
+        void restart();
+
         void readOptions();
         void saveOptions(bool updateGUI=true);
 
diff --git a/src/mainwindow.cpp b/src/mainwindow.cpp
index c3a03ab..3055717 100644
--- a/src/mainwindow.cpp
+++ b/src/mainwindow.cpp
@@ -117,11 +117,18 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
 
     KStandardAction::configureNotifications(this, SLOT(openNotifications()), actionCollection());
 
-    KAction* action;
-
     // NOTE: once kdelibs-4.3 is required, please replace setStatusTip with setHelpText everywhere.
     // It will make toolbar-button tooltips work again (while keeping menuitem statustips working too)
 
+    KAction* action;
+
+    action=new KAction(this);
+    action->setText(i18n("Restart"));
+    action->setIcon(KIcon("system-reboot"));
+    action->setStatusTip(i18n("Quit and restart the application"));
+    connect(action, SIGNAL(triggered()), Application::instance(), SLOT(restart()));
+    actionCollection()->addAction("restart", action);
+
     action=new KAction(this);
     action->setText(i18n("&Server List..."));
     action->setIcon(KIcon("network-server"));

commit c34a1192d42886ee1f91983fc20c146c6cecf001
Author: Eike Hein <hein@kde.org>
Date:   Thu Jul 22 11:36:17 2010 +0200

    We depend on 4.3 now, so we can port to setHelpText() and reap the rewards. FIXME--.

diff --git a/src/mainwindow.cpp b/src/mainwindow.cpp
index 3055717..9d211c0 100644
--- a/src/mainwindow.cpp
+++ b/src/mainwindow.cpp
@@ -117,15 +117,12 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
 
     KStandardAction::configureNotifications(this, SLOT(openNotifications()), actionCollection());
 
-    // NOTE: once kdelibs-4.3 is required, please replace setStatusTip with setHelpText everywhere.
-    // It will make toolbar-button tooltips work again (while keeping menuitem statustips working too)
-
     KAction* action;
 
     action=new KAction(this);
     action->setText(i18n("Restart"));
     action->setIcon(KIcon("system-reboot"));
-    action->setStatusTip(i18n("Quit and restart the application"));
+    action->setHelpText(i18n("Quit and restart the application"));
     connect(action, SIGNAL(triggered()), Application::instance(), SLOT(restart()));
     actionCollection()->addAction("restart", action);
 
@@ -133,7 +130,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setText(i18n("&Server List..."));
     action->setIcon(KIcon("network-server"));
     action->setShortcut(KShortcut("F2"));
-    action->setStatusTip(i18n("Manage networks and servers"));
+    action->setHelpText(i18n("Manage networks and servers"));
     connect(action, SIGNAL(triggered()), SLOT(openServerList()));
     actionCollection()->addAction("open_server_list", action);
 
@@ -141,7 +138,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setText(i18n("Quick &Connect..."));
     action->setIcon(KIcon("network-connect"));
     action->setShortcut(KShortcut("F7"));
-    action->setStatusTip(i18n("Type in the address of a new IRC server to connect to"));
+    action->setHelpText(i18n("Type in the address of a new IRC server to connect to"));
     connect(action, SIGNAL(triggered()), SLOT(openQuickConnectDialog()));
     actionCollection()->addAction("quick_connect_dialog", action);
 
@@ -149,7 +146,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setText(i18n("&Reconnect"));
     action->setIcon(KIcon("view-refresh"));
     action->setEnabled(false);
-    action->setStatusTip(i18n("Reconnect to the current server."));
+    action->setHelpText(i18n("Reconnect to the current server."));
     connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(reconnectFrontServer()));
     actionCollection()->addAction("reconnect_server", action);
 
@@ -158,7 +155,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setText(i18n("&Disconnect"));
     action->setIcon(KIcon("network-disconnect"));
     action->setEnabled(false);
-    action->setStatusTip(i18n("Disconnect from the current server."));
+    action->setHelpText(i18n("Disconnect from the current server."));
     connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(disconnectFrontServer()));
     actionCollection()->addAction("disconnect_server", action);
 
@@ -166,7 +163,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setText(i18n("&Identities..."));
     action->setIcon(KIcon("user-identity"));
     action->setShortcut(KShortcut("F8"));
-    action->setStatusTip(i18n("Manage your nick, away and other identity settings"));
+    action->setHelpText(i18n("Manage your nick, away and other identity settings"));
     connect(action, SIGNAL(triggered()), SLOT(openIdentitiesDialog()));
     actionCollection()->addAction("identities_dialog", action);
 
@@ -192,7 +189,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setIcon(KIcon("view-history"));
     action->setShortcut(KShortcut("Ctrl+O"));
     action->setEnabled(false);
-    action->setStatusTip(i18n("Open the known history for this channel in a new tab"));
+    action->setHelpText(i18n("Open the known history for this channel in a new tab"));
     connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(openLogFile()));
     actionCollection()->addAction("open_logfile", action);
 
@@ -200,7 +197,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setText(i18n("&Channel Settings..."));
     action->setIcon(KIcon("configure"));
     action->setEnabled(false);
-    action->setStatusTip(i18n("Open the channel settings dialog for this tab"));
+    action->setHelpText(i18n("Open the channel settings dialog for this tab"));
     connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(openChannelSettings()));
     actionCollection()->addAction("channel_settings", action);
 
@@ -209,7 +206,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setIcon(KIcon("view-list-text"));
     action->setShortcut(KShortcut("F5"));
     action->setEnabled(false);
-    action->setStatusTip(i18n("Show a list of all the known channels on this server"));
+    action->setHelpText(i18n("Show a list of all the known channels on this server"));
     connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(openChannelList()));
     actionCollection()->addAction("open_channel_list", action);
 
@@ -217,7 +214,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setText(i18n("&URL Catcher"));
     action->setIcon(KIcon("text-html"));
     action->setShortcut(KShortcut("F6"));
-    action->setStatusTip(i18n("List all URLs that have been mentioned recently in a new tab"));
+    action->setHelpText(i18n("List all URLs that have been mentioned recently in a new tab"));
     connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(addUrlCatcher()));
     actionCollection()->addAction("open_url_catcher", action);
 
@@ -226,7 +223,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
         action=new KAction(this);
         action->setText(i18n("New &Konsole"));
         action->setIcon(KIcon("utilities-terminal"));
-        action->setStatusTip(i18n("Open a terminal in a new tab"));
+        action->setHelpText(i18n("Open a terminal in a new tab"));
         connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(addKonsolePanel()));
         actionCollection()->addAction("open_konsole", action);
     }
@@ -296,12 +293,12 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
         action->setIcon(KIcon("arrow-up"));
         action->setShortcut(KShortcut("Alt+Shift+Left"));
         action->setEnabled(false);
-        action->setStatusTip("Move this tab");
+        action->setHelpText("Move this tab");
         connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(moveViewLeft()));
         actionCollection()->addAction("move_tab_left", action);
 
         action->setEnabled(false);
-        action->setStatusTip("Move this tab");
+        action->setHelpText("Move this tab");
         action=new KAction(this);
         action->setText(i18n("Move Tab Down"));
         action->setIcon(KIcon("arrow-down"));
@@ -318,7 +315,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
             action->setIcon(KIcon("arrow-right"));
             action->setShortcut(KShortcut("Alt+Shift+Right"));
             action->setEnabled(false);
-            action->setStatusTip("Move this tab");
+            action->setHelpText("Move this tab");
             connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(moveViewLeft()));
             actionCollection()->addAction("move_tab_left", action);
 
@@ -327,7 +324,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
             action->setIcon(KIcon("arrow-left"));
             action->setShortcut(KShortcut("Alt+Shift+Left"));
             action->setEnabled(false);
-            action->setStatusTip("Move this tab");
+            action->setHelpText("Move this tab");
             connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(moveViewRight()));
             actionCollection()->addAction("move_tab_right", action);
 
@@ -339,7 +336,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
             action->setIcon(KIcon("arrow-left"));
             action->setShortcut(KShortcut("Alt+Shift+Left"));
             action->setEnabled(false);
-            action->setStatusTip("Move this tab");
+            action->setHelpText("Move this tab");
             connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(moveViewLeft()));
             actionCollection()->addAction("move_tab_left", action);
 
@@ -348,7 +345,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
             action->setIcon(KIcon("arrow-right"));
             action->setShortcut(KShortcut("Alt+Shift+Right"));
             action->setEnabled(false);
-            action->setStatusTip("Move this tab");
+            action->setHelpText("Move this tab");
             connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(moveViewRight()));
             actionCollection()->addAction("move_tab_right", action);
 
@@ -404,7 +401,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setText(i18n("Clear &Marker Lines"));
     action->setShortcut(KShortcut("Ctrl+Shift+R"));
     action->setEnabled(false);
-    action->setStatusTip(i18n("Clear marker lines in the current tab"));
+    action->setHelpText(i18n("Clear marker lines in the current tab"));
     connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(clearViewLines()));
     actionCollection()->addAction("clear_lines", action);
 
@@ -412,7 +409,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setText(i18n("&Clear Window"));
     action->setShortcut(KShortcut("Ctrl+L"));
     action->setEnabled(false);
-    action->setStatusTip(i18n("Clear the contents of the current tab"));
+    action->setHelpText(i18n("Clear the contents of the current tab"));
     connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(clearView()));
     actionCollection()->addAction("clear_window", action);
 
@@ -420,7 +417,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setText(i18n("Clear &All Windows"));
     action->setShortcut(KShortcut("Ctrl+Shift+L"));
     action->setEnabled(false);
-    action->setStatusTip(i18n("Clear the contents of all open tabs"));
+    action->setHelpText(i18n("Clear the contents of all open tabs"));
     connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(clearAllViews()));
     actionCollection()->addAction("clear_tabs", action);
 
@@ -437,7 +434,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setIcon(KIcon("irc-join-channel"));
     action->setShortcut(KShortcut("Ctrl+J"));
     action->setEnabled(false);
-    action->setStatusTip("Join a new channel on this server");
+    action->setHelpText("Join a new channel on this server");
     connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(showJoinChannelDialog()));
     actionCollection()->addAction("join_channel", action);
 
@@ -453,7 +450,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setIcon(KIcon("format-text-color"));
     action->setShortcut(KShortcut("Ctrl+K"));
     action->setEnabled(false);
-    action->setStatusTip(i18n("Set the color of your current IRC message"));
+    action->setHelpText(i18n("Set the color of your current IRC message"));
     connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(insertIRCColor()));
     actionCollection()->addAction("irc_colors", action);
 
@@ -461,7 +458,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setText(i18n("&Marker Line"));
     action->setShortcut(KShortcut("Ctrl+R"));
     action->setEnabled(false);
-    action->setStatusTip(i18n("Insert a horizontal line into the current tab that only you can see"));
+    action->setHelpText(i18n("Insert a horizontal line into the current tab that only you can see"));
     connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(insertMarkerLine()));
     actionCollection()->addAction("insert_marker_line", action);
 
@@ -470,7 +467,7 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     action->setIcon(KIcon("character-set"));
     action->setShortcut(KShortcut("Alt+Shift+C"));
     action->setEnabled(false);
-    action->setStatusTip(i18n("Insert any character into your current IRC message"));
+    action->setHelpText(i18n("Insert any character into your current IRC message"));
     connect(action, SIGNAL(triggered()), m_viewContainer, SLOT(insertCharacter()));
     actionCollection()->addAction("insert_character", action);
 
diff --git a/src/viewer/viewcontainer.cpp b/src/viewer/viewcontainer.cpp
index b74cd66..fbe2f75 100644
--- a/src/viewer/viewcontainer.cpp
+++ b/src/viewer/viewcontainer.cpp
@@ -395,7 +395,7 @@ void ViewContainer::updateTabWidgetAppearance()
     m_tabWidget->setTabBarHidden(noTabBar);
 
     m_tabWidget->setDocumentMode(true);
-    
+
     if (Preferences::self()->customTabFont())
         m_tabWidget->setFont(Preferences::self()->tabFont());
     else

commit ec68cfdf6084f3249e2674847fad15d25912eb6a
Author: Andre Woebbeking <Woebbeking@kde.org>
Date:   Thu Jul 22 21:14:25 2010 +0200

    compile

diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index 4958adf..ddbb0ec 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -212,7 +212,7 @@ Server::~Server()
 
         QMetaObject::invokeMethod(konvApp->getConnectionManager(), "connectTo", Qt::QueuedConnection,
             Q_ARG(Konversation::ConnectionFlag, Konversation::CreateNewConnection),
-            Q_ARG(ConnectionSettings&, m_connectionSettings));
+            Q_ARG(ConnectionSettings, m_connectionSettings));
     }
 
     kDebug() << "~Server done";

commit 54cac1dde8806af7c47e08d9ed51a1587b3f5cd1
Author: Script Kiddy <scripty@kde.org>
Date:   Fri Jul 23 09:12:35 2010 +0200

    SVN_SILENT made messages (.desktop file)

diff --git a/data/konversation.notifyrc b/data/konversation.notifyrc
index 49ab403..b3fcb2b 100644
--- a/data/konversation.notifyrc
+++ b/data/konversation.notifyrc
@@ -1141,7 +1141,7 @@ Name[nl]=Kick
 Name[oc]=Kick
 Name[pa]=ਕਿੱਕ
 Name[pt]=Kick
-Name[pt_BR]=Retirar
+Name[pt_BR]=Expulsar
 Name[ro]=Dat afară
 Name[ru]=Выкинуть
 Name[si]=පාපහර
@@ -1181,7 +1181,7 @@ Comment[nds]=Een hett Di ut en Kanaal smeten
 Comment[nl]=Iemand heeft u van het kanaal geknikkerd
 Comment[pa]=ਕਿਸੇ ਨੇ ਤੁਹਾਨੂੰ ਇੱਕ ਚੈਨਲ ਵਿੱਚੋਂ ਕਿੱਕ ਮਾਰੀ ਹੈ
 Comment[pt]=Alguém o expulsou de um canal
-Comment[pt_BR]=Alguém retirou você de um canal
+Comment[pt_BR]=Alguém expulsou você de um canal
 Comment[ro]=Cineva v-a dat afară dintr-un canal
 Comment[ru]=Кто-то выкинул вас с канала
 Comment[si]=නාලිකාවෙන් එලියට යැවීමට යමෙක් ඔබට පාපහරක් දෙන ලදී 

commit 39b5cfcf179a55f2475e0447918561e189ac4d86
Author: Eike Hein <hein@kde.org>
Date:   Fri Jul 23 13:16:51 2010 +0200

    Fix runtime regression from ec68cfdf; should work with 4.6 and 4.7 now.

diff --git a/src/connectionmanager.cpp b/src/connectionmanager.cpp
index bb12509..f197036 100644
--- a/src/connectionmanager.cpp
+++ b/src/connectionmanager.cpp
@@ -127,7 +127,7 @@ void ConnectionManager::connectTo(Konversation::ConnectionFlag flag, const QList
     }
 }
 
-void ConnectionManager::connectTo(Konversation::ConnectionFlag flag, ConnectionSettings& settings)
+void ConnectionManager::connectTo(Konversation::ConnectionFlag flag, ConnectionSettings settings)
 {
     if (!settings.isValid()) return;
 
diff --git a/src/connectionmanager.h b/src/connectionmanager.h
index db43032..ea7d839 100644
--- a/src/connectionmanager.h
+++ b/src/connectionmanager.h
@@ -49,7 +49,7 @@ class ConnectionManager : public QObject
 
         void connectTo(Konversation::ConnectionFlag flag, int serverGroupId);
         void connectTo(Konversation::ConnectionFlag flag, const QList<KUrl>& list);
-        void connectTo(Konversation::ConnectionFlag flag, ConnectionSettings& settings);
+        void connectTo(Konversation::ConnectionFlag flag, ConnectionSettings settings);
 
         void quitServers();
         void reconnectServers();
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index ddbb0ec..45dbd5c 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -205,7 +205,7 @@ Server::~Server()
 
     if (m_recreationScheduled)
     {
-        qRegisterMetaType<ConnectionSettings>("ConnectionSettings&");
+        qRegisterMetaType<ConnectionSettings>("ConnectionSettings");
         qRegisterMetaType<Konversation::ConnectionFlag>("Konversation::ConnectionFlag");
 
         Application* konvApp = static_cast<Application*>(kapp);

commit 136d000d28fc3bdc1f7d4d01d1def7dd842eff8b
Author: Eike Hein <hein@kde.org>
Date:   Fri Jul 23 13:17:12 2010 +0200

    Bump.

diff --git a/src/commit.h b/src/commit.h
index d472aea..6f34237 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4061
+#define COMMIT 4062
 #endif

commit 172fb6dd7c99481d27ec0acf66dce46378658d24
Author: Eike Hein <hein@kde.org>
Date:   Fri Jul 23 13:20:13 2010 +0200

    Coding style consistency.

diff --git a/src/connectionmanager.cpp b/src/connectionmanager.cpp
index f197036..185f565 100644
--- a/src/connectionmanager.cpp
+++ b/src/connectionmanager.cpp
@@ -101,27 +101,32 @@ void ConnectionManager::connectTo(Konversation::ConnectionFlag flag, const QList
 
     QList<KUrl>::ConstIterator it = list.constBegin();
     QList<KUrl>::ConstIterator end = list.constEnd();
+
     for (; it != end; ++it)
     {
-        ConnectionSettings cs;
-        decodeIrcUrl(it->url(), cs);
-        kDebug() << cs.name() << " - "
-                 << cs.server().host() << cs.server().port() << cs.server().password()
-                 << " - " << (cs.serverGroup()?cs.serverGroup()->name():"");
-        QString sname = (cs.serverGroup()?
-                         cs.serverGroup()->name():
-                         (cs.server().host()+':'+cs.server().port()) );
+        ConnectionSettings settings;
+
+        decodeIrcUrl(it->url(), settings);
+
+        kDebug() << settings.name() << " - "
+                 << settings.server().host() << settings.server().port()
+                 << settings.server().password() << " - "
+                 << (settings.serverGroup()?settings.serverGroup()->name():"");
+
+        QString sname = (settings.serverGroup() ? settings.serverGroup()->name()
+            : (settings.server().host() + ':' + settings.server().port()));
 
         if (!serverChannels.contains(sname))
-        {
-            serverConnections[sname] = cs;
-        }
-        serverChannels[sname] += cs.oneShotChannelList();
+            serverConnections[sname] = settings;
+
+        serverChannels[sname] += settings.oneShotChannelList();
     }
 
-    // Perform the connection
+    // Perform the connection.
     QMap<QString,Konversation::ChannelList>::ConstIterator s_i = serverChannels.constBegin();
-    for (; s_i != serverChannels.constEnd(); ++s_i) {
+
+    for (; s_i != serverChannels.constEnd(); ++s_i)
+    {
         serverConnections[s_i.key()].setOneShotChannelList(s_i.value());
         connectTo(flag, serverConnections[s_i.key()]);
     }

commit 75b2f0388436b7082394a9740de0ebe5b3c8956d
Author: Eike Hein <hein@kde.org>
Date:   Fri Jul 23 13:27:18 2010 +0200

    Remove outdated FIXME.

diff --git a/src/viewer/statuspanel.cpp b/src/viewer/statuspanel.cpp
index d0ec8b1..4745c30 100644
--- a/src/viewer/statuspanel.cpp
+++ b/src/viewer/statuspanel.cpp
@@ -225,9 +225,6 @@ bool StatusPanel::closeYourself(bool confirm)
 {
     int result;
 
-    //FIXME: Show "Do you really want to close ..." warnings in
-    // disconnected state instead of closing directly. Can't do
-    // that due to string freeze at the moment.
     if (confirm && !m_server->isConnected())
     {
         result = KMessageBox::warningContinueCancel(

commit 7e47c80ca2f94398342f67212f4f6e34b6d6dfcd
Author: Eike Hein <hein@kde.org>
Date:   Sat Jul 24 17:32:58 2010 +0200

    Test CIA rules.

diff --git a/src/commit.h b/src/commit.h
index 6f34237..dfbcae3 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4062
+#define COMMIT 4063
 #endif

commit d76886834dcd2cf212e9ac5a63469854db8d9544
Author: Eike Hein <hein@kde.org>
Date:   Sat Jul 24 18:06:32 2010 +0200

    Hopefully last CIA test ...

diff --git a/src/commit.h b/src/commit.h
index dfbcae3..d239825 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4063
+#define COMMIT 4064
 #endif

commit 21bc58b4c58bf8e21844e9a0557ecd477046ad6b
Author: Eike Hein <hein@kde.org>
Date:   Mon Jul 26 02:26:24 2010 +0200

    Fix signal connection.

diff --git a/src/irc/serverlistdialog.h b/src/irc/serverlistdialog.h
index 3e49803..67614e2 100644
--- a/src/irc/serverlistdialog.h
+++ b/src/irc/serverlistdialog.h
@@ -59,7 +59,7 @@ namespace Konversation
 
         signals:
             void connectTo(Konversation::ConnectionFlag flag, int serverGroupId);
-            void connectTo(Konversation::ConnectionFlag flag, ConnectionSettings& connectionSettings);
+            void connectTo(Konversation::ConnectionFlag flag, ConnectionSettings connectionSettings);
             void serverGroupsChanged(const Konversation::ServerGroupSettingsPtr serverGroup = Konversation::ServerGroupSettingsPtr());
 
         protected slots:
@@ -82,7 +82,7 @@ namespace Konversation
         protected:
             QTreeWidgetItem* insertServerGroup(ServerGroupSettingsPtr serverGroup);
             void addServerGroup(ServerGroupSettingsPtr serverGroup);
-            
+
             int m_lastSortColumn;
             Qt::SortOrder m_lastSortOrder;
 
diff --git a/src/mainwindow.cpp b/src/mainwindow.cpp
index 9d211c0..35e16c7 100644
--- a/src/mainwindow.cpp
+++ b/src/mainwindow.cpp
@@ -773,8 +773,8 @@ void MainWindow::openServerList()
                 m_serverListDialog, SLOT(updateServerList()));
         connect(m_serverListDialog, SIGNAL(connectTo(Konversation::ConnectionFlag, int)),
                 konvApp->getConnectionManager(), SLOT(connectTo(Konversation::ConnectionFlag, int)));
-        connect(m_serverListDialog, SIGNAL(connectTo(Konversation::ConnectionFlag, ConnectionSettings&)),
-                konvApp->getConnectionManager(), SLOT(connectTo(Konversation::ConnectionFlag, ConnectionSettings&)));
+        connect(m_serverListDialog, SIGNAL(connectTo(Konversation::ConnectionFlag, ConnectionSettings)),
+                konvApp->getConnectionManager(), SLOT(connectTo(Konversation::ConnectionFlag, ConnectionSettings)));
         connect(konvApp->getConnectionManager(), SIGNAL(closeServerList()), m_serverListDialog, SLOT(slotClose()));
     }
 

commit 78c9ac8f71ddd5b3b90a5fb562d6b7d26dc1ab40
Author: Eike Hein <hein@kde.org>
Date:   Mon Jul 26 18:40:33 2010 +0200

    Fix regression introduced by b3efd8d causing the nickname to be lost in WNO offline ircview notifications.

diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index 45dbd5c..f4e0027 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -2811,6 +2811,7 @@ NickInfoPtr Server::setWatchedNickOnline(const QString& nickname)
     // FIXME HACK: Until message routing and the ircview are refactored, there's no better
     // way to pass the nickname down to the ircview than prepending it -- the entire append-
     // MessageToFrontmost callgraph is pretty inflexible in terms of metadata payload, boo.
+    // The same trick is in Server::setWatchedNickOffline() for the offline notification.
     appendMessageToFrontmost(i18n("Notify"), nickname + ' ' + i18n("%1 is online (%2).", nickname, getServerName()), getStatusView());
 
     static_cast<Application*>(kapp)->notificationHandler()->nickOnline(getStatusView(), nickname);
@@ -2828,7 +2829,11 @@ void Server::setWatchedNickOffline(const QString& nickname, const NickInfoPtr ni
 
     emit watchedNickChanged(this, nickname, false);
 
-    appendMessageToFrontmost(i18n("Notify"), i18n("%1 went offline (%2).", nickname, getServerName()), getStatusView());
+    // FIXME HACK: Until message routing and the ircview are refactored, there's no better
+    // way to pass the nickname down to the ircview than prepending it -- the entire append-
+    // MessageToFrontmost callgraph is pretty inflexible in terms of metadata payload, boo.
+    // The same trick is in Server::setWatchedNickOffline() for the online notification.
+    appendMessageToFrontmost(i18n("Notify"), nickname + ' ' + i18n("%1 went online (%2).", nickname, getServerName()), getStatusView());
 
     static_cast<Application*>(kapp)->notificationHandler()->nickOffline(getStatusView(), nickname);
 

commit 650fd1528bc7a2b6d02510f9db6f6a16fc63d9d1
Author: Eike Hein <hein@kde.org>
Date:   Mon Jul 26 18:45:37 2010 +0200

    Fix typo.

diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index f4e0027..bc92da2 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -2832,7 +2832,7 @@ void Server::setWatchedNickOffline(const QString& nickname, const NickInfoPtr ni
     // FIXME HACK: Until message routing and the ircview are refactored, there's no better
     // way to pass the nickname down to the ircview than prepending it -- the entire append-
     // MessageToFrontmost callgraph is pretty inflexible in terms of metadata payload, boo.
-    // The same trick is in Server::setWatchedNickOffline() for the online notification.
+    // The same trick is in Server::setWatchedNickOnline() for the online notification.
     appendMessageToFrontmost(i18n("Notify"), nickname + ' ' + i18n("%1 went online (%2).", nickname, getServerName()), getStatusView());
 
     static_cast<Application*>(kapp)->notificationHandler()->nickOffline(getStatusView(), nickname);

commit bb9a0fca3352e3348c9411fe6481cd3e4fd9e0a8
Author: Eike Hein <hein@kde.org>
Date:   Thu Jul 29 01:19:10 2010 +0200

    Delete unused.

diff --git a/src/common.cpp b/src/common.cpp
index a103c6e..ad534aa 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -29,7 +29,6 @@ namespace Konversation
     static QRegExp colorRegExp("((\003([0-9]|0[0-9]|1[0-5])(,([0-9]|0[0-9]|1[0-5])|)|\017)|\x02|\x09|\x13|\x16|\x1f)");
     static QRegExp urlPattern("((www\\.(?!\\.)|(fish|irc|amarok|(f|sf|ht)tp(|s))://)(\\.?[\\d\\w/,\\':~\\?=;#@\\-\\+\\%\\*\\{\\}\\!\\(\\)\\[\\]\\^]|&)+)|"
         "([-.\\d\\w]+@[-.\\d\\w]{2,}\\.[\\w]{2,})");
-    static QRegExp tdlPattern("(.*)\\.(\\w+),$");
 
     void initChanModesHash()
     {

commit 978fd7b94d09c674ef76387bdc3ac34822bf4a96
Author: Eike Hein <hein@kde.org>
Date:   Sat Jul 31 19:34:59 2010 +0200

    Pop off trailing placeholder segments in the last auto-join command.
    
    BUG:246321

diff --git a/ChangeLog b/ChangeLog
index bd8fd86..f3edf35 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -48,6 +48,10 @@ Changes since 1.3.1:
 * Fixed a bug causing the chat text notification messages originating in
   the Watched Nicknames Online system to be logged in HTML format (and
   thus HTML source to be displayed e.g. in backlog replay).
+* Fixed a (harmless) bug causing unnecessary trailing "." placeholder channel
+  key segments to be added to the raw format auto-join command (or to the
+  last of multiple such auto-join commands when the amount of auto-join
+  channels requires multiple commands to be generated).
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index bc92da2..b87fd78 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -3597,6 +3597,8 @@ QStringList Server::generateJoinCommand(const Konversation::ChannelList &tmpList
         passwords << password;
     }
 
+    while (!passwords.isEmpty() && passwords.last() == ".") passwords.pop_back();
+
     joinCommands << "JOIN " + channels.join(",") + ' ' + passwords.join(",");
 
     return joinCommands;

commit 784db8012290950f8d1f97b7b0f5fa2c6942166a
Author: Eike Hein <hein@kde.org>
Date:   Sat Jul 31 20:06:41 2010 +0200

    Add support for ircs:// URLs.
    
    BUG:246352

diff --git a/ChangeLog b/ChangeLog
index f3edf35..b2487c2 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -52,6 +52,11 @@ Changes since 1.3.1:
   key segments to be added to the raw format auto-join command (or to the
   last of multiple such auto-join commands when the amount of auto-join
   channels requires multiple commands to be generated).
+* Added support for ircs:// URLs, the 's' standing for 'SSL'. It is supported
+  both for opening and for bookmarking. If an ircs:// URL matches a server
+  configured in the server list or refers to a network name instead of a
+  specific server, the directive from the URL overrides the state of the SSL
+  setting in the configuration.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/data/CMakeLists.txt b/data/CMakeLists.txt
index f8eb508..1c25acf 100644
--- a/data/CMakeLists.txt
+++ b/data/CMakeLists.txt
@@ -19,4 +19,4 @@ install(PROGRAMS updaters/konversation-0.19-colors.pl
                 updaters/konversation-0.20-quickbuttons.pl
                 updaters/konversation-0.20-customfonts.pl
                 DESTINATION ${DATA_INSTALL_DIR}/kconf_update)
-install(FILES  konvirc.protocol konvirc6.protocol DESTINATION ${SERVICES_INSTALL_DIR})
+install(FILES  konvirc.protocol konvircs.protocol konvirc6.protocol DESTINATION ${SERVICES_INSTALL_DIR})
diff --git a/data/konvircs.protocol b/data/konvircs.protocol
new file mode 100644
index 0000000..8118795
--- /dev/null
+++ b/data/konvircs.protocol
@@ -0,0 +1,11 @@
+[Protocol]
+exec=konversation %u
+protocol=ircs
+input=none
+output=none
+helper=true
+listing=false
+reading=false
+writing=false
+makedir=false
+deleting=false
diff --git a/src/commit.h b/src/commit.h
index d239825..0a9da5c 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4064
+#define COMMIT 4065
 #endif
diff --git a/src/common.cpp b/src/common.cpp
index ad534aa..160019d 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -27,7 +27,7 @@ namespace Konversation
 {
 
     static QRegExp colorRegExp("((\003([0-9]|0[0-9]|1[0-5])(,([0-9]|0[0-9]|1[0-5])|)|\017)|\x02|\x09|\x13|\x16|\x1f)");
-    static QRegExp urlPattern("((www\\.(?!\\.)|(fish|irc|amarok|(f|sf|ht)tp(|s))://)(\\.?[\\d\\w/,\\':~\\?=;#@\\-\\+\\%\\*\\{\\}\\!\\(\\)\\[\\]\\^]|&)+)|"
+    static QRegExp urlPattern("((www\\.(?!\\.)|(fish|irc|ircs|amarok|(f|sf|ht)tp(|s))://)(\\.?[\\d\\w/,\\':~\\?=;#@\\-\\+\\%\\*\\{\\}\\!\\(\\)\\[\\]\\^]|&)+)|"
         "([-.\\d\\w]+@[-.\\d\\w]{2,}\\.[\\w]{2,})");
 
     void initChanModesHash()
diff --git a/src/connectionmanager.cpp b/src/connectionmanager.cpp
index 185f565..e34d38d 100644
--- a/src/connectionmanager.cpp
+++ b/src/connectionmanager.cpp
@@ -44,7 +44,7 @@ void ConnectionManager::connectTo(Konversation::ConnectionFlag flag, const QStri
 {
     ConnectionSettings settings;
 
-    if (target.startsWith(QLatin1String("irc://")))
+    if (target.startsWith(QLatin1String("irc://")) || target.startsWith(QLatin1String("ircs://")))
         decodeIrcUrl(target, settings);
     else
     {
@@ -303,11 +303,11 @@ void ConnectionManager::reconnectServers()
 
 void ConnectionManager::decodeIrcUrl(const QString& url, ConnectionSettings& settings)
 {
-    if (!url.startsWith(QLatin1String("irc://"))) return;
+    if (!url.startsWith(QLatin1String("irc://")) && !url.startsWith(QLatin1String("ircs://"))) return;
 
     QString mangledUrl = url;
 
-    mangledUrl.remove(QRegExp("^irc:/+"));
+    mangledUrl.remove(QRegExp("^ircs?:/+"));
 
     if (mangledUrl.isEmpty()) return;
 
@@ -386,6 +386,16 @@ void ConnectionManager::decodeIrcUrl(const QString& url, ConnectionSettings& set
 
         settings.setOneShotChannelList(cl);
     }
+
+    // Override SSL setting state with directive from URL.
+    if (url.startsWith(QLatin1String("ircs://")))
+    {
+        Konversation::ServerSettings server = settings.server();
+
+        server.setSSLEnabled(true);
+
+        settings.setServer(server);
+    }
 }
 
 void ConnectionManager::decodeAddress(const QString& address, ConnectionSettings& settings,
diff --git a/src/irc/nicklistview.cpp b/src/irc/nicklistview.cpp
index 409ccc4..173d2e9 100644
--- a/src/irc/nicklistview.cpp
+++ b/src/irc/nicklistview.cpp
@@ -494,8 +494,12 @@ bool NickListView::canDecodeMime(QDropEvent const *event) const {
         {
             const KUrl first = uris.first();
 
-            if ((first.protocol() == QLatin1String("irc")) || channel->getNickList().containsNick(first.url()))
-                return false;
+            if (first.protocol() == QLatin1String("irc") ||
+                first.protocol() == QLatin1String("ircs") ||
+                channel->getNickList().containsNick(first.url()))
+                {
+                    return false;
+                }
         }
         return true;
     }
diff --git a/src/viewer/chatwindow.cpp b/src/viewer/chatwindow.cpp
index 72149c5..785cc9e 100644
--- a/src/viewer/chatwindow.cpp
+++ b/src/viewer/chatwindow.cpp
@@ -103,6 +103,7 @@ QString ChatWindow::getTitle()
 
 QString ChatWindow::getURI(bool passNetwork)
 {
+    QString protocol;
     QString url;
     QString port;
     QString server;
@@ -123,7 +124,12 @@ QString ChatWindow::getURI(bool passNetwork)
     if (server.contains(':')) // IPv6
         server = '['+server+']';
 
-    url = "irc://"+server+port+'/'+channel;
+    if (getServer()->getUseSSL())
+        protocol = "ircs://";
+    else
+        protocol = "irc://";
+
+    url = protocol+server+port+'/'+channel;
 
     return url;
 }
diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 33e0007..12a6f33 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -1508,7 +1508,7 @@ void IRCView::openLink(const QUrl& url)
 
     if (!link.isEmpty() && !link.startsWith('#'))
     {
-        if (link.startsWith(QLatin1String("irc://")))
+        if (link.startsWith(QLatin1String("irc://")) || link.startsWith(QLatin1String("ircs://")))
         {
             Application* konvApp = Application::instance();
             konvApp->getConnectionManager()->connectTo(Konversation::SilentlyReuseConnection, link);
diff --git a/src/viewer/topiclabel.cpp b/src/viewer/topiclabel.cpp
index 5f86d98..5dc333b 100644
--- a/src/viewer/topiclabel.cpp
+++ b/src/viewer/topiclabel.cpp
@@ -87,7 +87,7 @@ namespace Konversation
     {
         if (!link.isEmpty())
         {
-            if (link.startsWith(QLatin1String("irc://")))
+            if (link.startsWith(QLatin1String("irc://")) || link.startsWith(QLatin1String("ircs://")))
             {
                 Application* konvApp = static_cast<Application*>(kapp);
                 konvApp->getConnectionManager()->connectTo(Konversation::SilentlyReuseConnection, link);

commit 0a17283cbe4046296870172eb7453606fe1ca852
Author: Eike Hein <hein@kde.org>
Date:   Sun Aug 1 11:32:25 2010 +0200

    Land a from-scratch rewrite of the URL Catcher: various improvements and fixes.
    
    - It is now possible to to select multiple list entries, and all of the
      selection-related actions, such as "Open" or "Add Bookmark", can now
      operate on multiple selected entries.
    - Reasonable default sorting: The list is now sorted by the "Date" column
      in descending order the first time the URL Catcher is opened, so that
      the newest URLs are found at the top. Previously, the list was sorted by
      the "From" column in ascending order by default.
    - The list data is no longer stored in memory twice while the URL
      Catcher
      is open. Data handling is generally more efficient.
    - The list entry context menu has been cleaned up, now showing only the
      actions applicable to individual entries.
    - The list now automatically receives keyboard focus when switching to
      the
      URL Catcher tab.
    - When saving the list to disk, the file dialog to pick the destination
      file will now ask before overwriting an existing file of the same name.
    - The date and time in the header of a saved list file is now formatted
      according to the user's locale settings.
    - Fixed a bug causing the "Date" column to sort alphabetically rather than
      chronologically.
    - Fixed a bug causing the deletion of list entries not to work.
    BUG:246322
    - Fixed a bug causing a 1px remnant of tree branch lines to be visible
      along the left edge of list entries.
    - An unnecessary margin around the toolbar and the search line edit has
      been removed.
    - Fixed a bug causing the URL Catcher tab to claim to be elibile to re-
      ceive chat text messages that have the frontmost eligible tab as their
      recipient despite it not actually possessing the means to display them,
      resulting in a crash when such a message occured.

diff --git a/ChangeLog b/ChangeLog
index b2487c2..c0aaa8f 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -57,6 +57,36 @@ Changes since 1.3.1:
   configured in the server list or refers to a network name instead of a
   specific server, the directive from the URL overrides the state of the SSL
   setting in the configuration.
+* The URL Catcher has been rewritten from scratch, bringing about a number
+  of improvements and bug fixes:
+  - It is now possible to to select multiple list entries, and all of the
+    selection-related actions, such as "Open" or "Add Bookmark", can now
+    operate on multiple selected entries.
+  - Reasonable default sorting: The list is now sorted by the "Date" column
+    in descending order the first time the URL Catcher is opened, so that
+    the newest URLs are found at the top. Previously, the list was sorted by
+    the "From" column in ascending order by default.
+  - The list data is no longer stored in memory twice while the URL Catcher
+    is open. Data handling is generally more efficient.
+  - The list entry context menu has been cleaned up, now showing only the
+    actions applicable to individual entries.
+  - The list now automatically receives keyboard focus when switching to the
+    URL Catcher tab.
+  - When saving the list to disk, the file dialog to pick the destination
+    file will now ask before overwriting an existing file of the same name.
+  - The date and time in the header of a saved list file is now formatted
+    according to the user's locale settings.
+  - Fixed a bug causing the "Date" column to sort alphabetically rather than
+    chronologically.
+  - Fixed a bug causing the deletion of list entries not to work.
+  - Fixed a bug causing a 1px remnant of tree branch lines to be visible
+    along the left edge of list entries.
+  - An unnecessary margin around the toolbar and the search line edit has
+    been removed.
+  - Fixed a bug causing the URL Catcher tab to claim to be elibile to re-
+    ceive chat text messages that have the frontmost eligible tab as their
+    recipient despite it not actually possessing the means to display them,
+    resulting in a crash when such a message occured.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 632a747..b063ee9 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -38,10 +38,6 @@ set(core_SRCS
     quickconnectdialog.cpp
 )
 
-kde4_add_ui_files(core_SRCS
-    urlcatcherui.ui
-)
-
 set (irc_SRCS
     #== IRC
     irc/server.cpp
diff --git a/src/application.cpp b/src/application.cpp
index 3b47f4f..b744a43 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -18,6 +18,7 @@
 #include "scriptlauncher.h"
 #include "transfermanager.h"
 #include "viewcontainer.h"
+#include "urlcatcher.h"
 #include "highlight.h"
 #include "server.h"
 #include "sound.h"
@@ -43,6 +44,7 @@
 #include <QtDBus/QDBusConnection>
 #include <QNetworkProxy>
 #include <QWaitCondition>
+#include <QStandardItemModel>
 
 #include <KRun>
 #include <KCmdLineArgs>
@@ -183,6 +185,8 @@ int Application::newInstance()
         // Images object providing LEDs, NickIcons
         m_images = new Images();
 
+        m_urlModel = new QStandardItemModel(0, 3, this);
+
         // Auto-alias scripts.  This adds any missing aliases
         QStringList aliasList(Preferences::self()->aliasList());
         const QStringList scripts(Preferences::defaultAliasList());
@@ -975,36 +979,36 @@ void Application::resetQueueRates()
     }
 }
 
-// FIXME: use KUrl maybe?
-void Application::storeUrl(const QString& who,const QString& newUrl, const QDateTime& datetime)
+void Application::storeUrl(const QString& origin, const QString& newUrl, const QDateTime& dateTime)
 {
     QString url(newUrl);
-    // clean up URL to help KRun() in URL catcher interface
-    if(url.startsWith(QLatin1String("www."))) url="http://"+url;
-    else if(url.startsWith(QLatin1String("ftp."))) url="ftp://"+url;
 
-    url=url.replace("&amp;","&");
+    if (url.startsWith(QLatin1String("www."))) url = "http://"+url;
+    else if (url.startsWith(QLatin1String("ftp."))) url = "ftp://"+url;
 
-    // check that we don't add the same URL twice
-    deleteUrl(who,url,datetime);
-    QDateTime date = QDateTime::currentDateTime();
-    urlList.append(who+' '+url+ ' ' + date.toString());
-    emit catchUrl(who,url,date);
-}
+    url = url.replace("&amp;", "&");
 
-const QStringList& Application::getUrlList()
-{
-    return urlList;
-}
+    QTime time;
+    time.start();
 
-void Application::deleteUrl(const QString& who,const QString& url, const QDateTime& datetime)
-{
-    urlList.removeOne(who+' '+url + ' ' + datetime.toString());
-}
+    QList<QStandardItem*> existing = m_urlModel->findItems(url, Qt::MatchExactly, 1);
 
-void Application::clearUrlList()
-{
-    urlList.clear();
+    QStandardItem* item;
+
+    foreach(item, existing)
+    {
+        if (m_urlModel->item(item->row(), 0)->data(Qt::DisplayRole).toString() == origin)
+            m_urlModel->removeRow(item->row());
+    }
+
+    kDebug() << "Elimination took:" << time.elapsed();
+
+    m_urlModel->insertRow(0);
+    m_urlModel->setData(m_urlModel->index(0, 0), origin, Qt::DisplayRole);
+    m_urlModel->setData(m_urlModel->index(0, 1), url, Qt::DisplayRole);
+
+    UrlDateItem* dateItem = new UrlDateItem(dateTime);
+    m_urlModel->setItem(0, 2, dateItem);
 }
 
 void Application::openQuickConnectDialog()
diff --git a/src/application.h b/src/application.h
index 3598b87..356d4d0 100644
--- a/src/application.h
+++ b/src/application.h
@@ -23,7 +23,7 @@
 #include "nickinfo.h"
 #include "ircqueue.h"
 
-#include <kuniqueapplication.h>
+#include <KUniqueApplication>
 
 class ConnectionManager;
 class AbstractAwayManager;
@@ -32,6 +32,7 @@ class Server;
 class QuickConnectDialog;
 class Images;
 class ServerGroupSettings;
+class QStandardItemModel;
 
 namespace Konversation
 {
@@ -89,8 +90,8 @@ class Application : public KUniqueApplication
         void showQueueTuner(bool);
 
         // URL-Catcher
-        void storeUrl(const QString& who,const QString& url,const QDateTime& datetime);
-        const QStringList& getUrlList();
+        void storeUrl(const QString& origin, const QString& newUrl, const QDateTime& dateTime);
+        QStandardItemModel* getUrlModel() { return m_urlModel; }
 
         Application();
         ~Application();
@@ -140,7 +141,6 @@ class Application : public KUniqueApplication
         void abortScheduledRestart() { m_restartScheduled = false; }
 
     signals:
-        void catchUrl(const QString& who,const QString& url,const QDateTime &datetime);
         void serverGroupsChanged(const Konversation::ServerGroupSettingsPtr serverGroup);
         void appearanceChanged();
 
@@ -155,9 +155,6 @@ class Application : public KUniqueApplication
         void resetQueueRates(); ///< when QueueTuner says to
         int countOfQueues() { return Server::_QueueListSize-1; }
 
-        void deleteUrl(const QString& who,const QString& url,const QDateTime& datetime);
-        void clearUrlList();
-
         void prepareShutdown();
 
     protected slots:
@@ -180,7 +177,7 @@ class Application : public KUniqueApplication
         AbstractAwayManager* m_awayManager;
         Konversation::DCC::TransferManager* m_dccTransferManager;
         ScriptLauncher* m_scriptLauncher;
-        QStringList urlList;
+        QStandardItemModel* m_urlModel;
         Konversation::DBus* dbusObject;
         Konversation::IdentDBus* identDBus;
         QPointer<MainWindow> mainWindow;
diff --git a/src/commit.h b/src/commit.h
index 0a9da5c..4d58e1b 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4065
+#define COMMIT 4066
 #endif
diff --git a/src/config/preferences.cpp b/src/config/preferences.cpp
index 0371bc2..19a7b8b 100644
--- a/src/config/preferences.cpp
+++ b/src/config/preferences.cpp
@@ -579,7 +579,7 @@ void Preferences::saveColumnState(QTreeView *treeView, QString name)
     group.writeEntry("ColumnSortDescending", treeView->header()->sortIndicatorOrder() == Qt::DescendingOrder ? true : false );
 }
 
-void Preferences::restoreColumnState(QTreeView *treeView, QString name)
+void Preferences::restoreColumnState(QTreeView* treeView, QString name, int defaultColumn , Qt::SortOrder defaultSortOrder)
 {
     KConfigGroup group(KGlobal::config(), name);
 
@@ -588,10 +588,10 @@ void Preferences::restoreColumnState(QTreeView *treeView, QString name)
         if (columnWidths.at(i))
             treeView->setColumnWidth(i, columnWidths.at(i));
 
-    if (group.readEntry("ColumnSortDescending", false))
-        treeView->header()->setSortIndicator(group.readEntry("ColumnSorted", 0), Qt::DescendingOrder);
+    if (group.readEntry("ColumnSortDescending", (defaultSortOrder == Qt::DescendingOrder)))
+        treeView->header()->setSortIndicator(group.readEntry("ColumnSorted", defaultColumn), Qt::DescendingOrder);
     else
-        treeView->header()->setSortIndicator(group.readEntry("ColumnSorted", 0), Qt::AscendingOrder);
+        treeView->header()->setSortIndicator(group.readEntry("ColumnSorted", defaultColumn), Qt::AscendingOrder);
 }
 
 #include "preferences.moc"
diff --git a/src/config/preferences.h b/src/config/preferences.h
index 746d84b..01f9792 100644
--- a/src/config/preferences.h
+++ b/src/config/preferences.h
@@ -142,7 +142,8 @@ class Preferences : public PreferencesBase
         static QString webBrowserCmd();
 
         static void saveColumnState(QTreeView *treeView, QString name);
-        static void restoreColumnState(QTreeView *treeView, QString name);
+        static void restoreColumnState(QTreeView *treeView, QString name, int defaultColumn = 0,
+                                       Qt::SortOrder defaultSortOrder = Qt::AscendingOrder);
 
     signals:
         void requestServerConnection(int number);
diff --git a/src/urlcatcher.cpp b/src/urlcatcher.cpp
index b9fbe96..b706cb0 100644
--- a/src/urlcatcher.cpp
+++ b/src/urlcatcher.cpp
@@ -1,146 +1,77 @@
 /*
-  This program is free software; you can redistribute it and/or modify
-  it under the terms of the GNU General Public License as published by
-  the Free Software Foundation; either version 2 of the License, or
-  (at your option) any later version.
+  This program is free software; you can redistribute it and/or
+  modify it under the terms of the GNU General Public License as
+  published by the Free Software Foundation; either version 2 of
+  the License or (at your option) version 3 or any later version
+  accepted by the membership of KDE e.V. (or its successor appro-
+  ved by the membership of KDE e.V.), which shall act as a proxy
+  defined in Section 14 of version 3 of the license.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program. If not, see http://www.gnu.org/licenses/.
 */
 
 /*
-  Shows all URLs found by the client
-
-  Copyright (C) 2003 Dario Abatianni <eisfuchs@tigress.com>
-  Copyright (C) 2009 Travis McHenry <wordsizzle@gmail.com>
+  Copyright (C) 2010 Eike Hein <hein@kde.org>
 */
 
 #include "urlcatcher.h"
-#include "channel.h"
-#include "server.h"
 #include "application.h"
-#include "viewcontainer.h"
 
-#include <QSortFilterProxyModel>
-#include <QItemSelectionModel>
 #include <QClipboard>
+#include <QTreeView>
 
-#include <KMenu>
+#include <KBookmarkDialog>
 #include <KBookmarkManager>
-#include <kbookmarkdialog.h>
-#include <KUrl>
 #include <KFileDialog>
+#include <KFilterProxySearchLine>
 #include <KIO/CopyJob>
+#include <KMenu>
+#include <KMessageBox>
 #include <KToolBar>
 
-UrlCatcherModel::UrlCatcherModel(QObject* parent) : QAbstractListModel(parent)
-{
-}
 
-bool operator==(const UrlItem& item, const UrlItem& item2)
+UrlDateItem::UrlDateItem(const QDateTime& dateTime)
 {
-    return (item.nick == item2.nick && item.url == item2.url && item.datetime == item2.datetime);
+    setData(dateTime);
 }
 
-void UrlCatcherModel::append(const UrlItem& item)
+UrlDateItem::~UrlDateItem()
 {
-    if(!m_urlList.contains(item))
-        m_urlList.append(item);
-    reset();
 }
 
-bool UrlCatcherModel::removeRows(int row, int count, const QModelIndex& parent)
+QVariant UrlDateItem::data(int role) const
 {
-    int last = row+count;
-    beginRemoveRows(parent, row, last);
-
-    QModelIndex topLeft = parent.sibling(row,0);
-    QModelIndex bottomRight = parent.sibling(last,2);
-
-    bool success = true;
-    for(int i=row; i <= last; i++)
-    {
-        UrlItem item;
-        item.nick = parent.sibling(i,0).data().toString();
-        item.url = parent.sibling(i,1).data().toString();
-        item.datetime = parent.sibling(i,2).data().toDateTime();
-        if (success)
-            success = m_urlList.removeOne(item);
-    }
-
-    emit dataChanged(topLeft, bottomRight);
-    endRemoveRows();
-
-    return success;
-}
+    if (role == Qt::DisplayRole)
+        return KGlobal::locale()->formatDateTime(QStandardItem::data().toDateTime(), KLocale::ShortDate, true);
 
-void UrlCatcherModel::setUrlList(const QList<UrlItem>& list)
-{
-    m_urlList = list;
-    reset();
+    return QStandardItem::data(role);
 }
 
-int UrlCatcherModel::columnCount(const QModelIndex& /*parent*/) const
+UrlSortFilterProxyModel::UrlSortFilterProxyModel(QObject* parent) : QSortFilterProxyModel(parent)
 {
-    return 3;
 }
 
-int UrlCatcherModel::rowCount(const QModelIndex& /*parent*/) const
+UrlSortFilterProxyModel::~UrlSortFilterProxyModel()
 {
-    return m_urlList.count();
 }
 
-QVariant UrlCatcherModel::data(const QModelIndex& index, int role) const
+bool UrlSortFilterProxyModel::lessThan(const QModelIndex& left, const QModelIndex& right) const
 {
-    if (!index.isValid() || index.row() >= m_urlList.count ())
-        return QVariant();
-
-    const UrlItem& item = m_urlList[index.row()];
-
-    if (role == Qt::DisplayRole)
-    {
-        switch(index.column())
-        {
-            case 0:
-                return item.nick;
-            case 1:
-                return item.url;
-            case 2:
-                return KGlobal::locale()->formatDateTime(item.datetime, KLocale::ShortDate, true);
-            default:
-                return QVariant();
-        }
-    }
-    if (role == Qt::UserRole)
+    if (sortColumn() == 2)
     {
-        switch(index.column())
-        {
-            case 0:
-                return item.nick;
-            case 1:
-                return item.url;
-            case 2:
-                return item.datetime;
-            default:
-                return QVariant();
-        }
-    }
-    return QVariant();
-}
-
-QVariant UrlCatcherModel::headerData (int section, Qt::Orientation orientation, int role) const
-{
-    if (orientation == Qt::Vertical || role != Qt::DisplayRole)
-        return QVariant();
+        QVariant leftData = sourceModel()->data(left, Qt::UserRole + 1);
+        QVariant rightData = sourceModel()->data(right, Qt::UserRole + 1);
 
-    switch (section)
-    {
-        case 0:
-            return i18n("From");
-        case 1:
-            return i18n("URL");
-        case 2:
-            return i18n("Date");
-        default:
-            return QVariant();
+        return leftData.toDateTime() < rightData.toDateTime();
     }
+
+    return QSortFilterProxyModel::lessThan(left, right);
 }
 
 UrlCatcher::UrlCatcher(QWidget* parent) : ChatWindow(parent)
@@ -149,327 +80,346 @@ UrlCatcher::UrlCatcher(QWidget* parent) : ChatWindow(parent)
     setType(ChatWindow::UrlCatcher);
 
     setSpacing(0);
+
+    setupActions();
+    setupUrlTree();
+}
+
+UrlCatcher::~UrlCatcher()
+{
+    Preferences::saveColumnState(m_urlTree, "UrlCatcher ViewSettings");
+}
+
+void UrlCatcher::setupActions()
+{
     m_toolBar = new KToolBar(this, true, true);
-    m_toolBar->setObjectName("urlcatcher_toolbar");
-    m_open = m_toolBar->addAction(KIcon("window-new"), i18nc("open url", "&Open"), this, SLOT(openUrlClicked()));
-    m_open->setStatusTip(i18n("Open link in external browser."));
-    m_open->setWhatsThis(i18n("<p>Select a <b>URL</b> above, then click this button to launch the application associated with the mimetype of the URL.</p>-<p>In the <b>Settings</b>, under <b>Behavior</b> | <b>General</b>, you can specify a custom web browser for web URLs.</p>"));
-    m_open->setEnabled(false);
-    m_saveLink = m_toolBar->addAction(KIcon("document-save"), i18n("&Save..."), this, SLOT(saveLinkAs()));
-    m_saveLink->setStatusTip(i18n("Save selected link to the disk."));
-    m_saveLink->setEnabled(false);
-    m_toolBar->addSeparator();
-    m_copy = m_toolBar->addAction(KIcon("edit-copy"), i18nc("copy url","&Copy"), this, SLOT(copyUrlClicked()));
-    m_copy->setStatusTip(i18n("Copy link address to the clipboard."));
-    m_copy->setWhatsThis(i18n("Select a <b>URL</b> above, then click this button to copy the URL to the clipboard."));
-    m_copy->setEnabled(false);
-    m_delete = m_toolBar->addAction(KIcon("edit-delete"), i18nc("delete url","&Delete"), this, SLOT(deleteUrlClicked()));
-    m_delete->setWhatsThis(i18n("Select a <b>URL</b> above, then click this button to delete the URL from the list."));
-    m_delete->setStatusTip(i18n("Delete selected link."));
-    m_delete->setEnabled(false);
+    m_contextMenu = new KMenu(this);
+
+    QAction* action;
+
+    action = m_toolBar->addAction(KIcon("window-new"), i18nc("open url", "&Open"), this, SLOT(openSelectedUrls()));
+    m_itemActions.append(action);
+    m_contextMenu->addAction(action);
+    action->setStatusTip(i18n("Open URLs in external browser."));
+    action->setWhatsThis(i18n("<p>Select one or several <b>URLs</b> below, then click this button to launch the application associated with the mimetype of the URL.</p>-<p>In the <b>Settings</b>, under <b>Behavior</b> | <b>General</b>, you can specify a custom web browser for web URLs.</p>"));
+    action->setEnabled(false);
+
+    action = m_toolBar->addAction(KIcon("document-save"), i18n("&Save..."), this, SLOT(saveSelectedUrls()));
+    m_itemActions.append(action);
+    m_contextMenu->addAction(action);
+    action->setStatusTip(i18n("Save selected URLs to the disk."));
+    action->setEnabled(false);
+
+    action = m_toolBar->addAction(KIcon("bookmark-new"), i18n("Add Bookmark..."), this, SLOT (bookmarkSelectedUrls()));
+    m_itemActions.append(action);
+    m_contextMenu->addAction(action);
+    action->setEnabled(false);
+
     m_toolBar->addSeparator();
-    m_save = m_toolBar->addAction(KIcon("document-save"), i18nc("save url list", "&Save List..."), this, SLOT(saveListClicked()));
-    m_save->setStatusTip(i18n("Save list."));
-    m_save->setWhatsThis(i18n("Click to save the entire list to a file."));
-    m_save->setEnabled(false);
-    m_clear = m_toolBar->addAction(KIcon("edit-clear-list"), i18nc("clear url list","&Clear List"), this, SLOT(clearListClicked()));
-    m_clear->setStatusTip(i18n("Clear list."));
-    m_clear->setWhatsThis(i18n("Click to erase the entire list."));
-    m_clear->setEnabled(false);
+    m_contextMenu->addSeparator();
+
+    action = m_toolBar->addAction(KIcon("edit-copy"), i18nc("copy url","&Copy"), this, SLOT(copySelectedUrls()));
+    m_itemActions.append(action);
+    m_contextMenu->addAction(action);
+    action->setStatusTip(i18n("Copy URLs to the clipboard."));
+    action->setWhatsThis(i18n("Select one or several <b>URLs</b> above, then click this button to copy them to the clipboard."));
+    action->setEnabled(false);
+
+    action = m_toolBar->addAction(KIcon("edit-delete"), i18nc("delete url","&Delete"), this, SLOT(deleteSelectedUrls()));
+    m_itemActions.append(action);
+    m_contextMenu->addAction(action);
+    action->setWhatsThis(i18n("Select one or several <b>URLs</b> above, then click this button to delete them from the list."));
+    action->setStatusTip(i18n("Delete selected link."));
+    action->setEnabled(false);
+
     m_toolBar->addSeparator();
-    m_bookmarkLink = m_toolBar->addAction(KIcon("bookmark-new"), i18n("Add Bookmark..."), this, SLOT (bookmarkUrl()));
-    m_bookmarkLink->setEnabled(false);
+    m_contextMenu->addSeparator();
 
-    setupUi(this);
+    action = m_toolBar->addAction(KIcon("document-save"), i18nc("save url list", "&Save List..."), this, SLOT(saveUrlModel()));
+    m_listActions.append(action);
+    action->setStatusTip(i18n("Save list."));
+    action->setWhatsThis(i18n("Click to save the entire list to a file."));
+    action->setEnabled(false);
 
-    m_urlListModel = new UrlCatcherModel(this);
+    action = m_toolBar->addAction(KIcon("edit-clear-list"), i18nc("clear url list","&Clear List"), this, SLOT(clearUrlModel()));
+    m_listActions.append(action);
+    action->setStatusTip(i18n("Clear list."));
+    action->setWhatsThis(i18n("Click to erase the entire list."));
+    action->setEnabled(false);
 
-    m_proxyModel = new QSortFilterProxyModel(this);
-    m_proxyModel->setSortRole(Qt::UserRole);
-    m_proxyModel->setSourceModel(m_urlListModel);
-    m_urlListView->setModel(m_proxyModel);
+    updateListActionStates();
+}
 
-    m_proxyModel->setDynamicSortFilter(true);
+void UrlCatcher::setupUrlTree()
+{
+    KFilterProxySearchLine* searchLine = new KFilterProxySearchLine(this);
+
+    m_urlTree = new QTreeView(this);
+    m_urlTree->setWhatsThis(i18n("List of Uniform Resource Locators mentioned in any of the Konversation windows during this session."));
+    m_urlTree->setContextMenuPolicy(Qt::CustomContextMenu);
+    m_urlTree->setSortingEnabled(true);
+    m_urlTree->header()->setMovable(false);
+    m_urlTree->header()->setSortIndicatorShown(true);
+    m_urlTree->setAllColumnsShowFocus(true);
+    m_urlTree->setSelectionMode(QAbstractItemView::ExtendedSelection);
+    m_urlTree->setRootIsDecorated(false);
+    connect(m_urlTree, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(openContextMenu(const QPoint&)));
+    connect(m_urlTree, SIGNAL(doubleClicked(const QModelIndex&)), this, SLOT(openUrl(const QModelIndex&)));
+
+    Application* konvApp = static_cast<Application *>(kapp);
+    QStandardItemModel* urlModel = konvApp->getUrlModel();
+    QStandardItem* item = new QStandardItem(i18n("From"));
+    urlModel->setHorizontalHeaderItem(0, item);
+    item = new QStandardItem(i18n("URL"));
+    urlModel->setHorizontalHeaderItem(1, item);
+    item = new QStandardItem(i18n("Date"));
+    urlModel->setHorizontalHeaderItem(2, item);
+    connect(urlModel, SIGNAL(rowsInserted(const QModelIndex&, int, int)), this, SLOT(updateListActionStates()));
+    connect(urlModel, SIGNAL(rowsRemoved(const QModelIndex&, int, int)), this, SLOT(updateListActionStates()));
+
+    UrlSortFilterProxyModel* proxyModel = new UrlSortFilterProxyModel(this);
+    proxyModel->setSourceModel(urlModel);
+    proxyModel->setDynamicSortFilter(true);
+    proxyModel->setFilterCaseSensitivity(Qt::CaseInsensitive);
+    proxyModel->setFilterKeyColumn(-1);
+
+    m_urlTree->setModel(proxyModel);
+    connect(m_urlTree->selectionModel(), SIGNAL(selectionChanged(const QItemSelection&, const QItemSelection&)),
+        this, SLOT(updateItemActionStates()));
+
+    searchLine->setProxy(proxyModel);
+
+    Preferences::restoreColumnState(m_urlTree, "UrlCatcher ViewSettings", 2, Qt::DescendingOrder);
+}
 
-    Preferences::restoreColumnState(m_urlListView, "UrlCatcher ViewSettings");
+void UrlCatcher::updateItemActionStates()
+{
+    bool enable = m_urlTree->selectionModel()->hasSelection();
 
-    connect(m_urlListView->selectionModel(), SIGNAL(selectionChanged(const QItemSelection&, const QItemSelection&)),
-            this, SLOT(urlSelected(const QItemSelection&)));
-    connect(m_urlListView, SIGNAL(doubleClicked(const QModelIndex&)),
-            this, SLOT(openUrl(const QModelIndex&)) );
-    connect(m_urlListView, SIGNAL(customContextMenuRequested(const QPoint&)),
-            this, SLOT(contextMenu(const QPoint&)) );
+    QAction* action;
 
-    m_filterLine->setProxy(m_proxyModel);
-    connect(m_proxyModel, SIGNAL(rowsInserted(const QModelIndex&, int, int)), this, SLOT(updateButtons()));
-    connect(m_proxyModel, SIGNAL(rowsRemoved(const QModelIndex&, int, int)), this, SLOT(updateButtons()));
+    foreach(action, m_itemActions) action->setEnabled(enable);
 }
 
+void UrlCatcher::updateListActionStates()
+{
+    Application* konvApp = static_cast<Application *>(kapp);
+    bool enable = konvApp->getUrlModel()->rowCount();
 
-UrlCatcher::~UrlCatcher()
+    QAction* action;
+
+    foreach(action, m_listActions) action->setEnabled(enable);
+}
+
+void UrlCatcher::openContextMenu(const QPoint& p)
+{
+    QModelIndex index = m_urlTree->indexAt(p);
+    if (!index.isValid()) return;
+
+    m_contextMenu->exec(QCursor::pos());
+}
+
+void UrlCatcher::openUrl(const QModelIndex& index)
 {
-    Preferences::saveColumnState(m_urlListView, "UrlCatcher ViewSettings");
+    Application::openUrl(index.sibling(index.row(), 1).data().toString());
 }
 
-void UrlCatcher::updateButtons()
+void UrlCatcher::openSelectedUrls()
 {
-    if(!m_proxyModel->rowCount())
+    QModelIndexList selectedIndexes = m_urlTree->selectionModel()->selectedRows(1);
+
+    if (selectedIndexes.count() > 1)
     {
-        m_clear->setEnabled(false);
-        m_save->setEnabled(false);
+        int ret = KMessageBox::warningContinueCancel(this,
+            i18n("You have selected more than one URL. Do you really want to open several URLs at once?"),
+            i18n("Open URLs"),
+            KStandardGuiItem::cont(),
+            KStandardGuiItem::cancel(),
+            QString(),
+            KMessageBox::Notify | KMessageBox::Dangerous);
+
+        if (ret != KMessageBox::Continue) return;
     }
-    else
+
+    QModelIndex index;
+
+    foreach(index, selectedIndexes)
     {
-        m_clear->setEnabled(true);
-        m_save->setEnabled(true);
+        if (index.isValid()) Application::openUrl(index.data().toString());
     }
-
 }
 
-void UrlCatcher::setUrlList(const QStringList& list)
+void UrlCatcher::saveSelectedUrls()
 {
-    m_urlListModel = new UrlCatcherModel(this);
+    QModelIndexList selectedIndexes = m_urlTree->selectionModel()->selectedRows(1);
 
-    if(!list.isEmpty())
+    if (selectedIndexes.count() > 1)
     {
+        int ret = KMessageBox::warningContinueCancel(this,
+            i18n("You have selected more than one URL. A file dialog to set the destination will open for each. "
+                "Do you really want to save several URLs at once?"),
+            i18n("Open URLs"),
+            KStandardGuiItem::cont(),
+            KStandardGuiItem::cancel(),
+            QString(),
+            KMessageBox::Notify | KMessageBox::Dangerous);
+
+        if (ret != KMessageBox::Continue) return;
+    }
 
-        QList<UrlItem> urlList;
-        for (int i=0; i < list.count(); i++)
+    QModelIndex index;
+
+    foreach(index, selectedIndexes)
+    {
+        if (index.isValid())
         {
-            UrlItem item;
-            item.nick = list.at(i).section(' ',0,0);
-            item.url = list.at(i).section(' ',1,1);
-            item.datetime = QDateTime::fromString(list.at(i).section(' ',2));
-            urlList.append(item);
-        }
+            KUrl url(index.data().toString());
+            KUrl targetUrl = KFileDialog::getSaveUrl(url.fileName(KUrl::ObeyTrailingSlash), QString(), this, i18n("Save link as"));
 
-        m_urlListModel->setUrlList(urlList);
+            if (targetUrl.isEmpty() || !targetUrl.isValid())
+                continue;
 
-        m_clear->setEnabled(true);
-        m_save->setEnabled(true);
+            KIO::copy(url, targetUrl);
+        }
     }
-
-    m_proxyModel->setSourceModel(m_urlListModel);
-
 }
 
-void UrlCatcher::addUrl(const QString& who,const QString& url, const QDateTime &datetime)
+void UrlCatcher::bookmarkSelectedUrls()
 {
-    UrlItem item;
-    item.nick = who;
-    item.url = url;
-    item.datetime = datetime;
-    m_urlListModel->append(item);
-
-    m_clear->setEnabled(true);
-    m_save->setEnabled(true);
-}
+    QModelIndexList selectedIndexes = m_urlTree->selectionModel()->selectedRows(1);
 
-void UrlCatcher::urlSelected(const QItemSelection& selected)
-{
-    if(!selected.isEmpty())
+    KBookmarkManager* manager = KBookmarkManager::userBookmarksManager();
+    KBookmarkDialog* dialog = new KBookmarkDialog(manager, this);
+
+    if (selectedIndexes.count() > 1)
     {
-        m_open->setEnabled(true);
-        m_saveLink->setEnabled(true);
-        m_copy->setEnabled(true);
-        m_delete->setEnabled(true);
-        m_bookmarkLink->setEnabled(true);
+        QList<QPair<QString, QString> > bookmarks;
+
+        QModelIndex index;
+
+        foreach(index, selectedIndexes)
+        {
+            bookmarks << QPair<QString, QString>(index.data().toString(), index.data().toString());
+        }
+
+        dialog->addBookmarks(bookmarks, i18n("New"));
     }
     else
     {
-        m_open->setEnabled(false);
-        m_saveLink->setEnabled(false);
-        m_copy->setEnabled(false);
-        m_delete->setEnabled(false);
-        m_bookmarkLink->setEnabled(false);
+        QString url = selectedIndexes.first().data().toString();
+        dialog->addBookmark(url, url);
     }
+
+    delete dialog;
 }
 
-void UrlCatcher::openUrl(const QModelIndex& index)
+void UrlCatcher::copySelectedUrls()
 {
-    QString url = index.sibling(index.row(), 1).data().toString();
+    QModelIndexList selectedIndexes = m_urlTree->selectionModel()->selectedRows(1);
 
-    Application::openUrl(url);
-}
+    QStringList urls;
+    QModelIndex index;
 
-void UrlCatcher::openUrlClicked()
-{
-    QModelIndex index = m_urlListView->selectionModel()->selectedIndexes().first();
-    if (index.isValid()) openUrl(index);
-}
+    foreach(index, selectedIndexes)
+        if (index.isValid()) urls << index.data().toString();
 
-void UrlCatcher::copyUrlClicked()
-{
-    QModelIndex index = m_urlListView->selectionModel()->selectedIndexes().first();
-    if (index.isValid())
-    {
-        QString url = index.sibling(index.row(), 1).data().toString();
-        QClipboard *cb = qApp->clipboard();
-        cb->setText(url, QClipboard::Selection);
-        cb->setText(url, QClipboard::Clipboard);
-    }
+    QClipboard* clipboard = qApp->clipboard();
+    clipboard->setText(urls.join("\n"), QClipboard::Clipboard);
 }
 
-void UrlCatcher::deleteUrlClicked()
+void UrlCatcher::deleteSelectedUrls()
 {
-    QModelIndex index = m_urlListView->selectionModel()->selectedIndexes().first();
-    if (index.isValid())
+    QModelIndexList selectedIndexes = m_urlTree->selectionModel()->selectedIndexes();
+
+    QHash<int, QString> origins;
+    QHash<QString, int> urls;
+    QModelIndex index;
+
+    foreach(index, selectedIndexes)
     {
-        QModelIndex indexAbove;
-        QModelIndex indexBelow;
-        if(index.row()-1 >= 0)
-            indexAbove = index.sibling(index.row()-1, 0);
-        if(index.row()+1 < m_proxyModel->rowCount())
-            indexBelow = index.sibling(index.row()+1, 0);
-
-        if (indexAbove.isValid())
-        {
-            QItemSelection selection(indexAbove, indexAbove.sibling(indexAbove.row(),2));
-            if(!selection.isEmpty())
-                m_urlListView->selectionModel()->select(selection, QItemSelectionModel::ClearAndSelect);
-        }
-        else if (indexBelow.isValid())
+        if (index.isValid())
         {
-            QItemSelection selection(index, index.sibling(index.row(),2));
-            if(!selection.isEmpty())
-                m_urlListView->selectionModel()->select(selection, QItemSelectionModel::ClearAndSelect);
+            if (index.column() == 0)
+                origins.insert(index.row(), index.data().toString());
+            else if (index.column() == 1)
+                urls.insert(index.data().toString(), index.row());
         }
-        else
-            urlSelected(QItemSelection());
+    }
+
+    Application* konvApp = static_cast<Application *>(kapp);
+    QStandardItemModel* urlModel = konvApp->getUrlModel();
+    QString url;
+
+    foreach(url, urls.keys())
+    {
+        QList<QStandardItem*> existing = urlModel->findItems(url, Qt::MatchExactly, 1);
 
-        UrlItem item;
-        item.nick = index.sibling(index.row(), 0).data().toString();
-        item.url = index.sibling(index.row(), 1).data().toString();
-        item.datetime = index.sibling(index.row(), 2).data().toDateTime();
+        QStandardItem* item;
 
-        m_urlListModel->removeRows(index.row(), 0, index);
-        if(!m_urlListModel->rowCount())
+        foreach(item, existing)
         {
-            urlSelected(QItemSelection());
-            m_clear->setEnabled(false);
-            m_save->setEnabled(false);
+            if (urlModel->item(item->row(), 0)->data(Qt::DisplayRole).toString() == origins.value(urls.value(url)))
+                urlModel->removeRow(item->row());
         }
 
-        emit deleteUrl(item.nick, item.url, item.datetime);
     }
 }
 
-void UrlCatcher::clearListClicked()
+void UrlCatcher::saveUrlModel()
 {
-    m_urlListModel = new UrlCatcherModel(this);
-    m_proxyModel->setSourceModel(m_urlListModel);
+    QString target = KFileDialog::getSaveFileName(QString(), QString(), this,
+        i18n("Save URL List"), KFileDialog::ConfirmOverwrite);
 
-    m_save->setEnabled(false);
-    m_clear->setEnabled(false);
-    urlSelected(QItemSelection());
+    if (!target.isEmpty())
+    {
+        Application* konvApp = static_cast<Application *>(kapp);
+        QStandardItemModel* urlModel = konvApp->getUrlModel();
 
-    emit clearUrlList();
-}
+        int nickColumnWidth = 0;
 
-void UrlCatcher::saveListClicked()
-{
-    // Ask user for file name
-    QString fileName=KFileDialog::getSaveFileName(
-        QString(),
-        QString(),
-        this,
-        i18n("Save URL List"));
-
-    if (!fileName.isEmpty())
-    {
-        int maxNickWidth=0;
+        QModelIndex index = urlModel->index(0, 0, QModelIndex());
+        int rows = urlModel->rowCount();
 
-        int rows = m_proxyModel->rowCount();
-        QModelIndex index = m_proxyModel->index(0,0,QModelIndex());
         for (int r = 0; r < rows; r++)
         {
-            QString nick = index.sibling(r,0).data().toString();
+            int length = index.sibling(r, 0).data().toString().length();
 
-            if (nick.length()>maxNickWidth)
-            {
-                maxNickWidth = nick.length();
-            }
+            if (length > nickColumnWidth)
+                nickColumnWidth = length;
         }
 
-        // now save the list to disk
-        QFile listFile(fileName);
-        listFile.open(QIODevice::WriteOnly);
-        // wrap the file into a stream
-        QTextStream stream(&listFile);
+        ++nickColumnWidth;
 
-        QString header(i18n("Konversation URL List: %1\n\n",
-                            QDateTime::currentDateTime().toString()));
-        stream << header;
+        QFile file(target);
+        file.open(QIODevice::WriteOnly);
+
+        QTextStream stream(&file);
+
+        stream << i18n("Konversation URL List: %1\n\n",
+            KGlobal::locale()->formatDateTime(QDateTime::currentDateTime(), KLocale::LongDate, true));
 
         for (int r = 0; r < rows; r++)
         {
-            QString nick = index.sibling(r,0).data().toString();
-            QString url = index.sibling(r,1).data().toString();
-
-            QString nickPad;
-            nickPad.fill(' ', maxNickWidth);
-            nickPad.replace(0, nick.length(), nick);
+            QString line = index.sibling(r, 0).data().toString().leftJustified(nickColumnWidth, ' ');
+            line.append(index.sibling(r, 1).data().toString());
+            line.append('\n');
 
-            QString line(nickPad+' '+url+'\n');
             stream << line;
         }
 
-        listFile.close();
+        file.close();
     }
 }
 
-void UrlCatcher::contextMenu(const QPoint& p)
+void UrlCatcher::clearUrlModel()
 {
-    QModelIndex item = m_urlListView->indexAt(p);
-    if (!item.isValid()) return;
-
-    KMenu* menu = new KMenu(this);
-
-    menu->insertAction(0, m_open);
-    menu->insertAction(0, m_saveLink);
-    menu->addSeparator();
-    menu->insertAction(0, m_copy);
-    menu->insertAction(0, m_delete);
-    menu->addSeparator();
-    menu->insertAction(0, m_save);
-    menu->insertAction(0, m_clear);
-    menu->addSeparator();
-    menu->insertAction(0, m_bookmarkLink);
-    menu->exec(QCursor::pos());
-
-    delete menu;
-}
-
-void UrlCatcher::bookmarkUrl()
-{
-    QModelIndex index = m_urlListView->selectionModel()->selectedIndexes().first();
-    if (!index.isValid()) return;
-
-    QString url = index.sibling(index.row(), 1).data().toString();
-
-    KBookmarkManager* bm = KBookmarkManager::userBookmarksManager();
-    KBookmarkDialog* dialog = new KBookmarkDialog(bm, this);
-    dialog->addBookmark(url, url);
-    delete dialog;
-}
-
-void UrlCatcher::saveLinkAs()
-{
-    QModelIndex index = m_urlListView->selectionModel()->selectedIndexes().first();
-    if (!index.isValid()) return;
-
-    QString url = index.sibling(index.row(), 1).data().toString();
-
-    KUrl srcUrl (url);
-    KUrl saveUrl = KFileDialog::getSaveUrl(srcUrl.fileName(KUrl::ObeyTrailingSlash), QString(), this, i18n("Save link as"));
-
-    if (saveUrl.isEmpty() || !saveUrl.isValid())
-        return;
+    Application* konvApp = static_cast<Application *>(kapp);
+    QStandardItemModel* urlModel = konvApp->getUrlModel();
 
-    KIO::copy(srcUrl, saveUrl);
+    urlModel->removeRows(0, urlModel->rowCount());
 }
 
 void UrlCatcher::childAdjustFocus()
 {
+    m_urlTree->setFocus();
 }
-#include "urlcatcher.moc"
diff --git a/src/urlcatcher.h b/src/urlcatcher.h
index 1c75676..f187f18 100644
--- a/src/urlcatcher.h
+++ b/src/urlcatcher.h
@@ -1,58 +1,64 @@
 /*
-  This program is free software; you can redistribute it and/or modify
-  it under the terms of the GNU General Public License as published by
-  the Free Software Foundation; either version 2 of the License, or
-  (at your option) any later version.
+  This program is free software; you can redistribute it and/or
+  modify it under the terms of the GNU General Public License as
+  published by the Free Software Foundation; either version 2 of
+  the License or (at your option) version 3 or any later version
+  accepted by the membership of KDE e.V. (or its successor appro-
+  ved by the membership of KDE e.V.), which shall act as a proxy
+  defined in Section 14 of version 3 of the license.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program. If not, see http://www.gnu.org/licenses/.
 */
 
 /*
-  shows all URLs found by the client
-  begin:     Die Mai 27 2003
-  copyright: (C) 2003 by Dario Abatianni
-  email:     eisfuchs@tigress.com
+  Copyright (C) 2010 Eike Hein <hein@kde.org>
 */
 
 #ifndef URLCATCHER_H
 #define URLCATCHER_H
 
+#include <QSortFilterProxyModel>
+#include <QStandardItem>
+
 #include "chatwindow.h"
-#include "ui_urlcatcherui.h"
 
-#include <QAbstractListModel>
 
-class QSortFilterProxyModel;
+class QTreeView;
+
+class KMenu;
 class KToolBar;
 
-struct UrlItem
+
+class UrlDateItem : public QStandardItem
 {
-    QString nick;
-    QString url;
-    QDateTime datetime;
+    public:
+        explicit UrlDateItem(const QDateTime& dateTime);
+        ~UrlDateItem();
+
+        QVariant data(int role) const;
 };
 
-bool operator==(const UrlItem& item, const UrlItem& item2);
 
-class UrlCatcherModel : public QAbstractListModel
+class UrlSortFilterProxyModel : public QSortFilterProxyModel
 {
     Q_OBJECT
 
     public:
-        UrlCatcherModel(QObject* parent);
-
-        void append(const UrlItem& item);
-        virtual bool removeRows(int row, int count, const QModelIndex & parent = QModelIndex());
-        void setUrlList(const QList<UrlItem>& list);
-        int columnCount(const QModelIndex& parent = QModelIndex()) const;
-        int rowCount(const QModelIndex& parent = QModelIndex()) const;
+        explicit UrlSortFilterProxyModel(QObject* parent = 0);
+        ~UrlSortFilterProxyModel();
 
-        QVariant data(const QModelIndex& index, int role = Qt::DisplayRole) const;
-        QVariant headerData (int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const;
-
-    private:
-        QList<UrlItem> m_urlList;
+    protected:
+        bool lessThan(const QModelIndex& left, const QModelIndex& right) const;
 };
 
-class UrlCatcher : public ChatWindow, private Ui::URLCatcherUI
+
+class UrlCatcher : public ChatWindow
 {
     Q_OBJECT
 
@@ -60,45 +66,36 @@ class UrlCatcher : public ChatWindow, private Ui::URLCatcherUI
         explicit UrlCatcher(QWidget* parent);
         ~UrlCatcher();
 
-        virtual bool canBeFrontView()   { return true; }
 
-    signals:
-        void deleteUrl(const QString& who, const QString& url, const QDateTime& datetime);
-        void clearUrlList();
+    protected:
+        void childAdjustFocus();
 
-    public slots:
-        void setUrlList(const QStringList& urlList);
-        void addUrl(const QString& who,const QString& url,const QDateTime& datetime);
 
-    protected slots:
-        void urlSelected(const QItemSelection& selected);
+    private slots:
+        void updateItemActionStates();
+        void updateListActionStates();
+        void openContextMenu(const QPoint& p);
         void openUrl(const QModelIndex& index);
-        void openUrlClicked();
+        void openSelectedUrls();
+        void saveSelectedUrls();
+        void bookmarkSelectedUrls();
+        void copySelectedUrls();
+        void deleteSelectedUrls();
+        void saveUrlModel();
+        void clearUrlModel();
 
-        void copyUrlClicked();
-        void deleteUrlClicked();
-        void saveListClicked();
-        void clearListClicked();
 
-        void bookmarkUrl();
-        void saveLinkAs();
-        void contextMenu(const QPoint& p);
+    private:
+        void setupActions();
+        void setupUrlTree();
 
-        void updateButtons();
+        KToolBar* m_toolBar;
+        KMenu* m_contextMenu;
 
-    protected:
-        /** Called from ChatWindow adjustFocus */
-        virtual void childAdjustFocus();
-
-        UrlCatcherModel* m_urlListModel;
-        QSortFilterProxyModel* m_proxyModel;
-        KToolBar *m_toolBar;
-        QAction *m_open;
-        QAction *m_saveLink;
-        QAction *m_copy;
-        QAction *m_delete;
-        QAction *m_save;
-        QAction *m_clear;
-        QAction *m_bookmarkLink;
+        QList<QAction*> m_itemActions;
+        QList<QAction*> m_listActions;
+
+        QTreeView* m_urlTree;
 };
+
 #endif
diff --git a/src/urlcatcherui.ui b/src/urlcatcherui.ui
deleted file mode 100644
index 4d6126e..0000000
--- a/src/urlcatcherui.ui
+++ /dev/null
@@ -1,60 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ui version="4.0">
- <class>URLCatcherUI</class>
- <widget class="QWidget" name="URLCatcherUI">
-  <property name="geometry">
-   <rect>
-    <x>0</x>
-    <y>0</y>
-    <width>542</width>
-    <height>344</height>
-   </rect>
-  </property>
-  <property name="windowTitle">
-   <string>URL Catcher</string>
-  </property>
-  <widget class="QWidget" name="gridLayoutWidget">
-   <property name="geometry">
-    <rect>
-     <x>0</x>
-     <y>10</y>
-     <width>541</width>
-     <height>331</height>
-    </rect>
-   </property>
-   <layout class="QGridLayout" name="gridLayout">
-    <item row="1" column="0" colspan="3">
-     <widget class="QTreeView" name="m_urlListView">
-      <property name="contextMenuPolicy">
-       <enum>Qt::CustomContextMenu</enum>
-      </property>
-      <property name="whatsThis">
-       <string>List of Uniform Resource Locators mentioned in any of the Konversation windows during this session.</string>
-      </property>
-      <property name="indentation">
-       <number>0</number>
-      </property>
-      <property name="sortingEnabled">
-       <bool>true</bool>
-      </property>
-      <property name="allColumnsShowFocus">
-       <bool>true</bool>
-      </property>
-     </widget>
-    </item>
-    <item row="0" column="1">
-     <widget class="KFilterProxySearchLine" name="m_filterLine"/>
-    </item>
-   </layout>
-  </widget>
- </widget>
- <customwidgets>
-  <customwidget>
-   <class>KFilterProxySearchLine</class>
-   <extends>QWidget</extends>
-   <header>kfilterproxysearchline.h</header>
-  </customwidget>
- </customwidgets>
- <resources/>
- <connections/>
-</ui>
diff --git a/src/viewer/viewcontainer.cpp b/src/viewer/viewcontainer.cpp
index fbe2f75..5c10e9c 100644
--- a/src/viewer/viewcontainer.cpp
+++ b/src/viewer/viewcontainer.cpp
@@ -2116,20 +2116,10 @@ void ViewContainer::addKonsolePanel()
 
 void ViewContainer::addUrlCatcher()
 {
-    // if the panel wasn't open yet
-    if (m_urlCatcherPanel==0)
+    if (m_urlCatcherPanel == 0)
     {
         m_urlCatcherPanel=new UrlCatcher(m_tabWidget);
         addView(m_urlCatcherPanel, i18n("URL Catcher"));
-        Application *konvApp=static_cast<Application *>(KApplication::kApplication());
-        connect(konvApp,SIGNAL(catchUrl(const QString&,const QString&,const QDateTime&)),
-            m_urlCatcherPanel, SLOT(addUrl(const QString&,const QString&,const QDateTime&)) );
-        connect(m_urlCatcherPanel, SIGNAL(deleteUrl(const QString&,const QString&,const QDateTime&)),
-            konvApp, SLOT(deleteUrl(const QString&,const QString&,const QDateTime&)) );
-        connect(m_urlCatcherPanel, SIGNAL(clearUrlList()),
-            konvApp, SLOT(clearUrlList()));
-
-        m_urlCatcherPanel->setUrlList(konvApp->getUrlList());
 
         (dynamic_cast<KToggleAction*>(actionCollection()->action("open_url_catcher")))->setChecked(true);
     }
@@ -2139,11 +2129,11 @@ void ViewContainer::addUrlCatcher()
 
 void ViewContainer::closeUrlCatcher()
 {
-    // if there actually is a dcc panel
     if (m_urlCatcherPanel)
     {
         delete m_urlCatcherPanel;
         m_urlCatcherPanel = 0;
+
         (dynamic_cast<KToggleAction*>(actionCollection()->action("open_url_catcher")))->setChecked(false);
     }
 }

commit a9a1c8b0b21934743fe6a459454267a098fa2b41
Author: Eike Hein <hein@kde.org>
Date:   Mon Aug 2 03:25:05 2010 +0200

    Carry ban list column state across sessions.
    
    BUG:246431

diff --git a/ChangeLog b/ChangeLog
index c0aaa8f..489bf13 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -87,6 +87,8 @@ Changes since 1.3.1:
     ceive chat text messages that have the frontmost eligible tab as their
     recipient despite it not actually possessing the means to display them,
     resulting in a crash when such a message occured.
+* The widths of the columns and the sort column and direction in the Channel
+  Option dialog's ban list are now remembered across application restarts.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/irc/channeloptionsdialog.cpp b/src/irc/channeloptionsdialog.cpp
index 48dc9ba..88930e0 100644
--- a/src/irc/channeloptionsdialog.cpp
+++ b/src/irc/channeloptionsdialog.cpp
@@ -92,10 +92,13 @@ namespace Konversation
         refreshModes();
 
         setInitialSize(QSize(450, 380));
+
+        Preferences::restoreColumnState(m_ui.banList, "BanList ViewSettings");
     }
 
     ChannelOptionsDialog::~ChannelOptionsDialog()
     {
+        Preferences::saveColumnState(m_ui.banList, "BanList ViewSettings");
     }
 
     void ChannelOptionsDialog::changeOptions()

commit 32c71fc3fd90e00fa7c036eb723631ad31667a46
Author: Eike Hein <hein@kde.org>
Date:   Mon Aug 2 06:22:13 2010 +0200

    Cleanup.

diff --git a/ChangeLog b/ChangeLog
index 489bf13..9d1db1a 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -83,7 +83,7 @@ Changes since 1.3.1:
     along the left edge of list entries.
   - An unnecessary margin around the toolbar and the search line edit has
     been removed.
-  - Fixed a bug causing the URL Catcher tab to claim to be elibile to re-
+  - Fixed a bug causing the URL Catcher tab to claim to be eligible to re-
     ceive chat text messages that have the frontmost eligible tab as their
     recipient despite it not actually possessing the means to display them,
     resulting in a crash when such a message occured.
diff --git a/src/application.cpp b/src/application.cpp
index b744a43..b5c1f88 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -988,9 +988,6 @@ void Application::storeUrl(const QString& origin, const QString& newUrl, const Q
 
     url = url.replace("&amp;", "&");
 
-    QTime time;
-    time.start();
-
     QList<QStandardItem*> existing = m_urlModel->findItems(url, Qt::MatchExactly, 1);
 
     QStandardItem* item;
@@ -1001,8 +998,6 @@ void Application::storeUrl(const QString& origin, const QString& newUrl, const Q
             m_urlModel->removeRow(item->row());
     }
 
-    kDebug() << "Elimination took:" << time.elapsed();
-
     m_urlModel->insertRow(0);
     m_urlModel->setData(m_urlModel->index(0, 0), origin, Qt::DisplayRole);
     m_urlModel->setData(m_urlModel->index(0, 1), url, Qt::DisplayRole);

commit 38381a3df1a99ad407088145e054ff099cddbcb8
Author: Eike Hein <hein@kde.org>
Date:   Mon Aug 2 06:28:43 2010 +0200

    Expand a tad.

diff --git a/ChangeLog b/ChangeLog
index 9d1db1a..6c483a2 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -61,7 +61,8 @@ Changes since 1.3.1:
   of improvements and bug fixes:
   - It is now possible to to select multiple list entries, and all of the
     selection-related actions, such as "Open" or "Add Bookmark", can now
-    operate on multiple selected entries.
+    operate on multiple selected entries ("Add Bookmark" will offer to
+    add all selected entries as a new bookmark folder, for example).
   - Reasonable default sorting: The list is now sorted by the "Date" column
     in descending order the first time the URL Catcher is opened, so that
     the newest URLs are found at the top. Previously, the list was sorted by

commit bc42fb99197aa8ea22ed242be475924c9a69ff3b
Author: Eike Hein <hein@kde.org>
Date:   Mon Aug 2 07:10:04 2010 +0200

    Override the editable flag in the proxy model.

diff --git a/src/urlcatcher.cpp b/src/urlcatcher.cpp
index b706cb0..208be05 100644
--- a/src/urlcatcher.cpp
+++ b/src/urlcatcher.cpp
@@ -61,6 +61,11 @@ UrlSortFilterProxyModel::~UrlSortFilterProxyModel()
 {
 }
 
+Qt::ItemFlags UrlSortFilterProxyModel::flags(const QModelIndex& index) const
+{
+    return QSortFilterProxyModel::flags(index) & ~Qt::ItemIsEditable;
+}
+
 bool UrlSortFilterProxyModel::lessThan(const QModelIndex& left, const QModelIndex& right) const
 {
     if (sortColumn() == 2)
diff --git a/src/urlcatcher.h b/src/urlcatcher.h
index f187f18..512eeb8 100644
--- a/src/urlcatcher.h
+++ b/src/urlcatcher.h
@@ -53,6 +53,9 @@ class UrlSortFilterProxyModel : public QSortFilterProxyModel
         explicit UrlSortFilterProxyModel(QObject* parent = 0);
         ~UrlSortFilterProxyModel();
 
+        Qt::ItemFlags flags(const QModelIndex& index) const;
+
+
     protected:
         bool lessThan(const QModelIndex& left, const QModelIndex& right) const;
 };

commit dbdc318f6c318cc6389c6870369ffcde0d6d1d22
Author: Frederik Schwarzer <schwarzerf@gmail.com>
Date:   Mon Aug 2 16:22:17 2010 +0200

    fix typos in changelog
    
    SVN_SILENT

diff --git a/ChangeLog b/ChangeLog
index 6c483a2..5731e61 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -59,7 +59,7 @@ Changes since 1.3.1:
   setting in the configuration.
 * The URL Catcher has been rewritten from scratch, bringing about a number
   of improvements and bug fixes:
-  - It is now possible to to select multiple list entries, and all of the
+  - It is now possible to select multiple list entries, and all of the
     selection-related actions, such as "Open" or "Add Bookmark", can now
     operate on multiple selected entries ("Add Bookmark" will offer to
     add all selected entries as a new bookmark folder, for example).
@@ -87,7 +87,7 @@ Changes since 1.3.1:
   - Fixed a bug causing the URL Catcher tab to claim to be eligible to re-
     ceive chat text messages that have the frontmost eligible tab as their
     recipient despite it not actually possessing the means to display them,
-    resulting in a crash when such a message occured.
+    resulting in a crash when such a message occurred.
 * The widths of the columns and the sort column and direction in the Channel
   Option dialog's ban list are now remembered across application restarts.
 

commit 4b92c8c61b0a3a952d0026ea7735c64e02659680
Author: Eike Hein <hein@kde.org>
Date:   Tue Aug 3 02:01:24 2010 +0200

    s/Ok Computer/Send Computer/; <Radiohead> *sad face*

diff --git a/ChangeLog b/ChangeLog
index 5731e61..924c7b1 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -90,6 +90,9 @@ Changes since 1.3.1:
     resulting in a crash when such a message occurred.
 * The widths of the columns and the sort column and direction in the Channel
   Option dialog's ban list are now remembered across application restarts.
+* The "Ok" button in the "Edit Multiline Paste" editor has been renamed to
+  "Send" to communicate more clearly that clicking it will send the editor
+  contents to the server.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/viewer/pasteeditor.cpp b/src/viewer/pasteeditor.cpp
index 9525aef..92d16b3 100644
--- a/src/viewer/pasteeditor.cpp
+++ b/src/viewer/pasteeditor.cpp
@@ -2,7 +2,7 @@
 //
 // This program is free software; you can redistribute it and/or
 // modify it under the terms of the GNU General Public License as
-// published by the Free Software Foundation; either version 2 of 
+// published by the Free Software Foundation; either version 2 of
 // the License, or (at your option) any later version.
 //
 // This program is distributed in the hope that it will be useful,
@@ -29,6 +29,8 @@ PasteEditor::PasteEditor(QWidget* parent)
     setCaption(i18n("Edit Multiline Paste"));
     setModal(true);
 
+    setButtonText(KDialog::Ok, i18n("&Send"));
+
     QWidget* widget = new QWidget(this);
     setupUi(widget);
     setMainWidget(widget);
@@ -92,7 +94,7 @@ void PasteEditor::removeNewlines()
 
     cursor.endEditBlock();
 }
-       
+
 void PasteEditor::setText(const QString& text)
 {
     m_textEditor->setPlainText(text);

commit 8af1d1df3f3ffb27aaf514f2c409ed1e84730e8f
Author: Eike Hein <hein@kde.org>
Date:   Tue Aug 3 04:02:22 2010 +0200

    Don't do linkification pass on ircview serializations of RPL_TOPICSETBY.

diff --git a/ChangeLog b/ChangeLog
index 924c7b1..9cc1ad3 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -93,6 +93,9 @@ Changes since 1.3.1:
 * The "Ok" button in the "Edit Multiline Paste" editor has been renamed to
   "Send" to communicate more clearly that clicking it will send the editor
   contents to the server.
+* Fixed a bug causing some user hostmasks in chat text lines about channel
+  topic author information to be treated as email addresses and thus turned
+  into clickable links. They would also pollute the URL Catcher.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/irc/inputfilter.cpp b/src/irc/inputfilter.cpp
index 00e3261..e521e46 100644
--- a/src/irc/inputfilter.cpp
+++ b/src/irc/inputfilter.cpp
@@ -1126,6 +1126,7 @@ void InputFilter::parseServerCommand(const QString &prefix, const QString &comma
                         server->appendCommandMessageToChannel(parameterList.value(1), i18n("Topic"),
                             i18n("The topic was set by %1 on %2.",
                             parameterList.value(2), KGlobal::locale()->formatDateTime(when, KLocale::ShortDate)),
+                            false,
                             false);
                     }
                     else
@@ -1133,8 +1134,8 @@ void InputFilter::parseServerCommand(const QString &prefix, const QString &comma
                         server->appendMessageToFrontmost(i18n("Topic"),i18n("The topic for %1 was set by %2 on %3.",
                             parameterList.value(1),
                             parameterList.value(2),
-                            KGlobal::locale()->formatDateTime(when, KLocale::ShortDate))
-                            );
+                            KGlobal::locale()->formatDateTime(when, KLocale::ShortDate)),
+                            false);
                         setAutomaticRequest("TOPIC",parameterList.value(1), false);
                     }
                     emit topicAuthor(parameterList.value(1), parameterList.value(2), when);
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index b87fd78..8166332 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -3266,12 +3266,12 @@ void Server::appendServerMessageToChannel(const QString& channel,const QString&
     if (outChannel) outChannel->appendServerMessage(type,message);
 }
 
-void Server::appendCommandMessageToChannel(const QString& channel,const QString& command,const QString& message, bool highlight)
+void Server::appendCommandMessageToChannel(const QString& channel,const QString& command,const QString& message, bool highlight, bool parseURL)
 {
     Channel* outChannel = getChannelByName(channel);
     if (outChannel)
     {
-        outChannel->appendCommandMessage(command,message,true,true,!highlight);
+        outChannel->appendCommandMessage(command,message,true,parseURL,!highlight);
     }
     else
     {
diff --git a/src/irc/server.h b/src/irc/server.h
index 91a0f3a..cb5047f 100644
--- a/src/irc/server.h
+++ b/src/irc/server.h
@@ -155,7 +155,8 @@ class Server : public QObject
         void joinChannel(const QString& name, const QString& hostmask);
         void removeChannel(Channel* channel);
         void appendServerMessageToChannel(const QString& channel, const QString& type, const QString& message);
-        void appendCommandMessageToChannel(const QString& channel, const QString& command, const QString& message, bool highlight = true);
+        void appendCommandMessageToChannel(const QString& channel, const QString& command, const QString& message,
+                                           bool highlight = true, bool parseURL = true);
         void appendStatusMessage(const QString& type,const QString& message);
         void appendMessageToFrontmost(const QString& type,const QString& message, bool parseURL = true);
 

commit c495b271145d96bbce9b3fab387a150bdb681256
Author: Eike Hein <hein@kde.org>
Date:   Tue Aug 3 09:23:18 2010 +0200

    Revamp link detection. Large set of improvements detailed below.
    
    - Unicode characters in URLs are now handled properly, enabling
      support for example for international domain names.
    - Protocol-less links not starting in "www.", such as the short URLs
      popular these days ("bit.ly/foo" and similar), are now recognized.
    - Arbitrary protocols (e.g. "http://" or "message://") are now recog-
      nized; previously only a small hand-picked and insufficient set was.
    - The check that avoids balanced a pair of parenthesis around an URL
      becoming part of the link now works for more than one level of ba-
      lanced parenthesis.
    - Aside from balanced pairs of parenthesis, also square and other
      forms of brackets are now handled properly.
    - Trailing question marks no longer become part of the link.
    - URLs using uncommon schemas, e.g. Apple message:// URLs, are now
      handled properly.
    - User names containing the plus sign are now handled correctly in
      the detection of email addresses.
    - Average performance of link detection has improved slightly.
    
    A note about performance: On my system, the new link detector com-
    pletes 100 iterations of a specially crafted set of 44 lines con-
    taining common as well as uncommon URL and email address examples
    in avg. 230 miliseconds, while the old link detector finishes in
    avg. 225ms. However, the old link detector fails to handle about
    50% of the lines correctly.
    
    Meanwhile, when feeding both link detectors 5000 lines of actual
    Freenode #kde log data (containing 346 lines with at least one
    http:// URL) and letting them interate over each line 150 times,
    the new link detector is on average 2% faster.
    
    All averages are of five runs each.

diff --git a/ChangeLog b/ChangeLog
index 9cc1ad3..1b83edf 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -4,8 +4,6 @@ Changes since 1.3.1:
 * Added support for UnrealIRCd's 671 numeric.
 * Solid network up/down notifications are now ignored for connections to
   localhost.
-* Fixed WolframAlpha URLs not being turned into links correctly in the chat
-  text view.
 * Resolved a conflict between the highlight system and the graphical emoticon
   support that was causing unintended highlights when the filesystem path to
   an emoticon image file shown in the chat text view matched any of the con-
@@ -96,6 +94,26 @@ Changes since 1.3.1:
 * Fixed a bug causing some user hostmasks in chat text lines about channel
   topic author information to be treated as email addresses and thus turned
   into clickable links. They would also pollute the URL Catcher.
+* Detection of URLs and email addresses in chat text views to turn them into
+  clickable links has been much improved. An incomplete overview of notable
+  cases:
+  - Unicode characters in URLs are now handled properly, enabling support
+    for example for international domain names.
+  - Protocol-less links not starting in "www.", such as the short URLs pop-
+    ular these days ("bit.ly/foo" and similar), are now recognized.
+  - Arbitrary protocols (e.g. "http://" or "message://") are now recognized;
+    previously only a small hand-picked and insufficient set was.
+  - The check that avoids balanced a pair of parenthesis around an URL be-
+    coming part of the link now works for more than one level of balanced
+    parenthesis.
+  - Aside from balanced pairs of parenthesis, also square and other forms
+    of brackets are now handled properly.
+  - Trailing question marks no longer become part of the link.
+  - URLs using uncommon schemas, e.g. Apple message:// URLs or Wolfram
+    Alpha URLs, are now handled properly.
+  - User names containing the plus sign are now handled correctly in the de-
+    tection of email addresses.
+  - Average performance of link detection has improved slightly.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/commit.h b/src/commit.h
index 4d58e1b..77f18f5 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4066
+#define COMMIT 4067
 #endif
diff --git a/src/common.cpp b/src/common.cpp
index 160019d..478d377 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -27,8 +27,8 @@ namespace Konversation
 {
 
     static QRegExp colorRegExp("((\003([0-9]|0[0-9]|1[0-5])(,([0-9]|0[0-9]|1[0-5])|)|\017)|\x02|\x09|\x13|\x16|\x1f)");
-    static QRegExp urlPattern("((www\\.(?!\\.)|(fish|irc|ircs|amarok|(f|sf|ht)tp(|s))://)(\\.?[\\d\\w/,\\':~\\?=;#@\\-\\+\\%\\*\\{\\}\\!\\(\\)\\[\\]\\^]|&)+)|"
-        "([-.\\d\\w]+@[-.\\d\\w]{2,}\\.[\\w]{2,})");
+    static QRegExp urlPattern("\\b((?:(?:[a-z][\\w-]+:/{1,3}|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+|[a-z0-9.+_]+@[a-z0-9.\\-]+[.][a-z]{2,4})(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!();:'\".,<>?«»“”‘’]))");
+    static QRegExp chanExp("(^|\\s|^\"|\\s\"|,|'|\\(|\\:|!|@|%|\\+)(#[^,\\s;\\)\\:\\/\\(\\<\\>]*[^.,\\s;\\)\\:\\/\\(\"\''\\<\\>])");
 
     void initChanModesHash()
     {
@@ -147,9 +147,6 @@ namespace Konversation
     TextUrlData extractUrlData(const QString& text, const QString& fromNick, bool doUrlRanges,
         bool doHyperlinks, bool useCustomHyperlinkColor)
     {
-        // QTime timer;
-        // timer.start();
-
         TextUrlData data;
         data.htmlText = text;
 
@@ -213,38 +210,8 @@ namespace Konversation
             href = data.htmlText.mid(pos, urlLen);
             append.clear();
 
-            // Don't consider trailing comma part of link.
-            if (href.right(1) == ",")
-            {
-                href.truncate(href.length()-1);
-                append = ',';
-            }
-
-            // Don't consider trailing semicolon part of link.
-            if (href.right(1) == ";")
-            {
-                href.truncate(href.length()-1);
-                append = ';';
-            }
-
-            // Don't consider trailing closing parenthesis part of link when
-            // there's an opening parenthesis preceding the beginning of the
-            // URL or there is no opening parenthesis in the URL at all.
-            if (href.right(1) == ")" && (data.htmlText.mid(pos-1, 1) == "(" || !href.contains("(")))
-            {
-                href.truncate(href.length()-1);
-                append.prepend(")");
-            }
-
             if (doHyperlinks)
             {
-                // Qt doesn't support (?<=pattern) so we do it here
-                if ((pos > 0) && data.htmlText[pos-1].isLetterOrNumber())
-                {
-                    pos++;
-                    continue;
-                }
-
                 if (urlPattern.cap(1).startsWith(QLatin1String("www."), Qt::CaseInsensitive))
                     protocol = "http://";
                 else if (urlPattern.cap(1).isEmpty())
@@ -273,8 +240,6 @@ namespace Konversation
             data.htmlText.replace("\x0b", "&");
         }
 
-        // kDebug() << "Took (msecs) : " << timer.elapsed() << " for " << data.htmlText;
-
         return data;
     }
 

commit 140df12ed08332c4ddfd474b5fde05dff3f6c48c
Author: Eike Hein <hein@kde.org>
Date:   Tue Aug 3 10:26:47 2010 +0200

    Handle incoming CTCP ACTION without argument.

diff --git a/ChangeLog b/ChangeLog
index 1b83edf..396004b 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -114,6 +114,7 @@ Changes since 1.3.1:
   - User names containing the plus sign are now handled correctly in the de-
     tection of email addresses.
   - Average performance of link detection has improved slightly.
+* Incoming actions (i.e. "/me") without an argument are now handled properly.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/commit.h b/src/commit.h
index 77f18f5..2946f3b 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4067
+#define COMMIT 4068
 #endif
diff --git a/src/irc/inputfilter.cpp b/src/irc/inputfilter.cpp
index e521e46..ba1828a 100644
--- a/src/irc/inputfilter.cpp
+++ b/src/irc/inputfilter.cpp
@@ -209,9 +209,9 @@ void InputFilter::parseClientCommand(const QString &prefix, const QString &comma
                 ctcpArgument = konv_app->doAutoreplace(ctcpArgument, false);
 
             // If it was a ctcp action, build an action string
-            if (ctcpCommand == "action" && isChan && hasArg)
+            if (ctcpCommand == "action" && isChan)
             {
-                if (!isIgnore(prefix,Ignore::Channel))
+                if (!isIgnore(prefix, Ignore::Channel))
                 {
                     Channel* channel = server->getChannelByName( parameterList.value(0) );
 
@@ -224,7 +224,7 @@ void InputFilter::parseClientCommand(const QString &prefix, const QString &comma
 
                     if (sourceNick != server->getNickname())
                     {
-                        if (ctcpArgument.toLower().contains(QRegExp("(^|[^\\d\\w])"
+                        if (hasArg && ctcpArgument.toLower().contains(QRegExp("(^|[^\\d\\w])"
                             + QRegExp::escape(server->loweredNickname())
                             + "([^\\d\\w]|$)")))
                         {
@@ -238,10 +238,10 @@ void InputFilter::parseClientCommand(const QString &prefix, const QString &comma
                 }
             }
             // If it was a ctcp action, build an action string
-            else if (ctcpCommand == "action" && !isChan && hasArg)
+            else if (ctcpCommand == "action" && !isChan)
             {
                 // Check if we ignore queries from this nick
-                if (!isIgnore(prefix,Ignore::Query))
+                if (!isIgnore(prefix, Ignore::Query))
                 {
                     NickInfoPtr nickinfo = server->obtainNickInfo(sourceNick);
                     nickinfo->setHostmask(sourceHostmask);
@@ -250,12 +250,10 @@ void InputFilter::parseClientCommand(const QString &prefix, const QString &comma
                     query = server->addQuery(nickinfo, false /* we didn't initiate this*/ );
 
                     // send action to query
-                    query->appendAction(sourceNick,ctcpArgument);
+                    query->appendAction(sourceNick, ctcpArgument);
 
-                    if(sourceNick != server->getNickname() && query)
-                    {
+                    if (sourceNick != server->getNickname() && query)
                         konv_app->notificationHandler()->queryMessage(query, sourceNick, ctcpArgument);
-                    }
                 }
             }
 
diff --git a/src/notificationhandler.cpp b/src/notificationhandler.cpp
index dfef708..f9a68de 100644
--- a/src/notificationhandler.cpp
+++ b/src/notificationhandler.cpp
@@ -45,24 +45,39 @@ namespace Konversation
         if (Preferences::self()->disableNotifyWhileAway() && chatWin->getServer() && chatWin->getServer()->isAway())
             return;
 
-        QString cleanedMessage = removeIrcMarkup(message);
-        QString forKNotify = Qt::escape(cleanedMessage);
-
-        KNotification::event(QString::fromLatin1("message"), QString("<html>&lt;%1&gt; %2</html>").arg(fromNick).arg(forKNotify), QPixmap(), m_mainWindow);
+        bool osd = Preferences::self()->oSDShowChannel() &&
+            (!m_mainWindow->isActiveWindow() || (chatWin != m_mainWindow->getViewContainer()->getFrontView()));
 
-        if(!Preferences::self()->trayNotifyOnlyOwnNick())
+        if (message.isEmpty())
         {
-            startTrayNotification(chatWin);
-        }
+            KNotification::event(QString::fromLatin1("message"), QString("<html>&lt;%1&gt;</html>").arg(fromNick), QPixmap(), m_mainWindow);
 
+            if (osd)
+            {
+                Application* konvApp = static_cast<Application*>(kapp);
 
-        if(Preferences::self()->oSDShowChannel() &&
-            (!m_mainWindow->isActiveWindow() || (chatWin != m_mainWindow->getViewContainer()->getFrontView())))
+                konvApp->osd->show('(' + chatWin->getName() + ") <" + fromNick + ">");
+            }
+        }
+        else
         {
-            Application* konvApp = static_cast<Application*>(kapp);
-            konvApp->osd->show('(' + chatWin->getName() + ") <" + fromNick + "> " + cleanedMessage);
+            QString cleanedMessage = removeIrcMarkup(message);
+            QString forKNotify = Qt::escape(cleanedMessage);
+
+            KNotification::event(QString::fromLatin1("message"), QString("<html>&lt;%1&gt; %2</html>").arg(fromNick).arg(forKNotify), QPixmap(), m_mainWindow);
+
+            if (osd)
+            {
+                Application* konvApp = static_cast<Application*>(kapp);
+
+                konvApp->osd->show('(' + chatWin->getName() + ") <" + fromNick + "> " + cleanedMessage);
+            }
         }
 
+        if (!Preferences::self()->trayNotifyOnlyOwnNick())
+        {
+            startTrayNotification(chatWin);
+        }
     }
 
     void NotificationHandler::nick(ChatWindow* chatWin, const QString& fromNick, const QString& message)
@@ -73,21 +88,37 @@ namespace Konversation
         if (Preferences::self()->disableNotifyWhileAway() && chatWin->getServer() && chatWin->getServer()->isAway())
             return;
 
-        QString cleanedMessage = removeIrcMarkup(message);
-        QString forKNotify = Qt::escape(cleanedMessage);
-
-        KNotification::event(QString::fromLatin1("nick"), QString("<html>&lt;%1&gt; %2</html>").arg(fromNick).arg(forKNotify), QPixmap(), m_mainWindow);
+        bool osd = (Preferences::self()->oSDShowChannel() || Preferences::self()->oSDShowOwnNick()) &&
+            (!m_mainWindow->isActiveWindow() ||
+            (chatWin != m_mainWindow->getViewContainer()->getFrontView()));
 
-        startTrayNotification(chatWin);
+        if (message.isEmpty())
+        {
+            KNotification::event(QString::fromLatin1("nick"), QString("<html>&lt;%1&gt;</html>").arg(fromNick), QPixmap(), m_mainWindow);
 
-        Application* konvApp = static_cast<Application*>(kapp);
+            if (osd)
+            {
+                Application* konvApp = static_cast<Application*>(kapp);
 
-        if((Preferences::self()->oSDShowChannel() || Preferences::self()->oSDShowOwnNick()) &&
-            (!m_mainWindow->isActiveWindow() ||
-            (chatWin != m_mainWindow->getViewContainer()->getFrontView())))
+                konvApp->osd->show(i18n("[HighLight] (%1) &lt;%2&gt;", chatWin->getName(), fromNick));
+            }
+        }
+        else
         {
-            konvApp->osd->show(i18n("[HighLight] (%1) &lt;%2&gt; %3",chatWin->getName(),fromNick,cleanedMessage));
+            QString cleanedMessage = removeIrcMarkup(message);
+            QString forKNotify = Qt::escape(cleanedMessage);
+
+            KNotification::event(QString::fromLatin1("nick"), QString("<html>&lt;%1&gt; %2</html>").arg(fromNick).arg(forKNotify), QPixmap(), m_mainWindow);
+
+            if (osd)
+            {
+                Application* konvApp = static_cast<Application*>(kapp);
+
+                konvApp->osd->show(i18n("[HighLight] (%1) &lt;%2&gt; %3", chatWin->getName(), fromNick, cleanedMessage));
+            }
         }
+
+        startTrayNotification(chatWin);
     }
 
     void NotificationHandler::queryMessage(ChatWindow* chatWin,
@@ -99,20 +130,36 @@ namespace Konversation
         if (Preferences::self()->disableNotifyWhileAway() && chatWin->getServer() && chatWin->getServer()->isAway())
             return;
 
-        QString cleanedMessage = removeIrcMarkup(message);
-        QString forKNotify = Qt::escape(cleanedMessage);
-
-        KNotification::event(QString::fromLatin1("queryMessage"), QString("<html>&lt;%1&gt; %2</html>").arg(fromNick).arg(forKNotify), QPixmap(), m_mainWindow);
+        bool osd = Preferences::self()->oSDShowQuery() && (!m_mainWindow->isActiveWindow() ||
+            (chatWin != m_mainWindow->getViewContainer()->getFrontView()));
 
-        startTrayNotification(chatWin);
+        if (message.isEmpty())
+        {
+            KNotification::event(QString::fromLatin1("queryMessage"), QString("<html>&lt;%1&gt;</html>").arg(fromNick), QPixmap(), m_mainWindow);
 
-        Application* konvApp = static_cast<Application*>(kapp);
+            if (osd)
+            {
+                Application* konvApp = static_cast<Application*>(kapp);
 
-        if(Preferences::self()->oSDShowQuery() && (!m_mainWindow->isActiveWindow() ||
-           (chatWin != m_mainWindow->getViewContainer()->getFrontView())))
+                konvApp->osd->show(i18n("[Query] &lt;%1&gt;", fromNick));
+            }
+        }
+        else
         {
-            konvApp->osd->show(i18n("[Query] &lt;%1&gt; %2",fromNick,cleanedMessage));
+            QString cleanedMessage = removeIrcMarkup(message);
+            QString forKNotify = Qt::escape(cleanedMessage);
+
+            KNotification::event(QString::fromLatin1("queryMessage"), QString("<html>&lt;%1&gt; %2</html>").arg(fromNick).arg(forKNotify), QPixmap(), m_mainWindow);
+
+            if (osd)
+            {
+                Application* konvApp = static_cast<Application*>(kapp);
+
+                konvApp->osd->show(i18n("[Query] &lt;%1&gt; %2", fromNick, cleanedMessage));
+            }
         }
+
+        startTrayNotification(chatWin);
     }
 
     void NotificationHandler::startTrayNotification(ChatWindow* chatWin)
diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 12a6f33..79417d0 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -750,32 +750,49 @@ void IRCView::appendQueryAction(const QString& nick, const QString& message)
 
 void IRCView::appendAction(const QString& nick, const QString& message)
 {
-    QString actionColor=Preferences::self()->color(Preferences::ActionMessage).name();
-
-    QString nickLine = createNickLine(nick, actionColor, false);
+    QString actionColor = Preferences::self()->color(Preferences::ActionMessage).name();
 
     QString line;
-    bool rtl = (basicDirection(message) == QChar::DirR);
 
-    if(rtl)
+    QString nickLine = createNickLine(nick, actionColor, false);
+
+    if (message.isEmpty())
     {
-        line = RLE;
-        line += LRE;
-        line += "<font color=\"" + actionColor + "\">" + nickLine + " * %1" + PDF + " %3</font>";
+        if (!QApplication::isLeftToRight())
+            line += LRE;
+
+        line += "<font color=\"" + actionColor + "\">%1 * " + nickLine + "</font>";
+
+        line = line.arg(timeStamp(), nick);
+
+        emit textToLog(QString("\t * %1").arg(nick));
+
+        doAppend(line, false);
     }
     else
     {
-        if (!QApplication::isLeftToRight())
+        bool rtl = (basicDirection(message) == QChar::DirR);
+
+        if (rtl)
+        {
+            line = RLE;
             line += LRE;
+            line += "<font color=\"" + actionColor + "\">" + nickLine + " * %1" + PDF + " %3</font>";
+        }
+        else
+        {
+            if (!QApplication::isLeftToRight())
+                line += LRE;
 
-        line += "<font color=\"" + actionColor + "\">%1 * " + nickLine + " %3</font>";
-    }
+            line += "<font color=\"" + actionColor + "\">%1 * " + nickLine + " %3</font>";
+        }
 
-    line = line.arg(timeStamp(), nick, filter(message, actionColor, nick, true));
+        line = line.arg(timeStamp(), nick, filter(message, actionColor, nick, true));
 
-    emit textToLog(QString("\t * %1 %2").arg(nick).arg(message));
+        emit textToLog(QString("\t * %1 %2").arg(nick).arg(message));
 
-    doAppend(line, rtl);
+        doAppend(line, rtl);
+    }
 }
 
 void IRCView::appendServerMessage(const QString& type, const QString& message, bool parseURL)

commit a2acea6319ec0308527ee656b1df200f1fe00f28
Author: Eike Hein <hein@kde.org>
Date:   Tue Aug 3 11:29:37 2010 +0200

    Don't crash on Jonas Thiem's fuzzer.
    
    Fixed a small loop logic error in incoming(), a missing length
    sanity check after the encoding pass and a source of QList::last()
    calls on an empty list.
    
    BUG:246576

diff --git a/ChangeLog b/ChangeLog
index 396004b..3c10d30 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -115,6 +115,7 @@ Changes since 1.3.1:
     tection of email addresses.
   - Average performance of link detection has improved slightly.
 * Incoming actions (i.e. "/me") without an argument are now handled properly.
+* Fixed a number of crashes on illegal data from the server.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/commit.h b/src/commit.h
index 2946f3b..8a5cc24 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4068
+#define COMMIT 4069
 #endif
diff --git a/src/irc/inputfilter.cpp b/src/irc/inputfilter.cpp
index ba1828a..7948c63 100644
--- a/src/irc/inputfilter.cpp
+++ b/src/irc/inputfilter.cpp
@@ -153,7 +153,7 @@ void InputFilter::parseLine(const QString& line)
     }
 }
 
-#define trailing parameterList.last()
+#define trailing (parameterList.isEmpty() ? QString() : parameterList.last())
 #define plHas(x) _plHas(parameterList.count(), (x))
 
 bool _plHad=false;
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index 8166332..72a3bba 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -1100,13 +1100,15 @@ void Server::incoming()
         QTextCodec* codec = getIdentity()->getCodec();
         QByteArray first = bufferLines.first();
 
+        bufferLines.removeFirst();
+
         QStringList lineSplit = codec->toUnicode(first).split(' ', QString::SkipEmptyParts);
 
-        if( lineSplit.count() >= 1 )
+        if (lineSplit.count() >= 1)
         {
-            if( lineSplit[0][0] == ':' )          // does this message have a prefix?
+            if (lineSplit[0][0] == ':')          // does this message have a prefix?
             {
-                if( !lineSplit[0].contains('!') ) // is this a server(global) message?
+                if(!lineSplit[0].contains('!')) // is this a server(global) message?
                     isServerMessage = true;
                 else
                     senderNick = lineSplit[0].mid(1, lineSplit[0].indexOf('!')-1);
@@ -1114,13 +1116,9 @@ void Server::incoming()
                 lineSplit.removeFirst();          // remove prefix
             }
         }
-        else
-        {
-            // The line contained only spaces (other than CRLF, removed above)
-            // and thus there's nothing more we can do with it.
-            bufferLines.removeFirst();
+
+        if (lineSplit.isEmpty())
             continue;
-        }
 
         // BEGIN pre-parse to know where the message belongs to
         QString command = lineSplit[0].toLower();
@@ -1200,8 +1198,10 @@ void Server::incoming()
         #endif
         bool isUtf8 = Konversation::isUtf8(first);
 
+        QString encoded;
+
         if (isUtf8)
-            m_inputBuffer << QString::fromUtf8(first);
+            encoded = QString::fromUtf8(first);
         else
         {
             // check setting
@@ -1223,15 +1223,16 @@ void Server::incoming()
             if (codec->mibEnum() == 106)
                 codec = QTextCodec::codecForMib( 4 /* iso-8859-1 */ );
 
-            m_inputBuffer << codec->toUnicode(first);
+            encoded = codec->toUnicode(first);
         }
 
-        bufferLines.removeFirst();
-
         // Qt uses 0xFDD0 and 0xFDD1 to mark the beginning and end of text frames. Remove
         // these here to avoid fatal errors encountered in QText* and the event loop pro-
         // cessing.
-        sterilizeUnicode(m_inputBuffer.back());
+        sterilizeUnicode(encoded);
+
+        if (!encoded.isEmpty())
+            m_inputBuffer << encoded;
 
         //FIXME: This has nothing to do with bytes, and it's not raw received bytes either. Bogus number.
         //m_bytesReceived+=m_inputBuffer.back().length();

commit 153c670ebbbe372d6b967218a0b7fc1386687f02
Author: Eike Hein <hein@kde.org>
Date:   Tue Aug 3 12:46:09 2010 +0200

    Cleanup.

diff --git a/src/common.cpp b/src/common.cpp
index 478d377..f6927ec 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -172,8 +172,6 @@ namespace Konversation
 
             if (data.htmlText.contains("#"))
             {
-                QRegExp chanExp("(^|\\s|^\"|\\s\"|,|'|\\(|\\:|!|@|%|\\+)(#[^,\\s;\\)\\:\\/\\(\\<\\>]*[^.,\\s;\\)\\:\\/\\(\"\''\\<\\>])");
-
                 while ((pos = chanExp.indexIn(data.htmlText, pos)) >= 0)
                 {
                     href = chanExp.cap(2);

commit 89d066ebe4f4a4b18c5090d62036f1348bab04a4
Author: Eike Hein <hein@kde.org>
Date:   Tue Aug 3 13:42:15 2010 +0200

    Add dash.

diff --git a/src/common.cpp b/src/common.cpp
index f6927ec..ea28677 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -27,7 +27,7 @@ namespace Konversation
 {
 
     static QRegExp colorRegExp("((\003([0-9]|0[0-9]|1[0-5])(,([0-9]|0[0-9]|1[0-5])|)|\017)|\x02|\x09|\x13|\x16|\x1f)");
-    static QRegExp urlPattern("\\b((?:(?:[a-z][\\w-]+:/{1,3}|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+|[a-z0-9.+_]+@[a-z0-9.\\-]+[.][a-z]{2,4})(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!();:'\".,<>?«»“”‘’]))");
+    static QRegExp urlPattern("\\b((?:(?:[a-z][\\w-]+:/{1,3}|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+|[a-z0-9.-+_]+@[a-z0-9.\\-]+[.][a-z]{2,4})(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!();:'\".,<>?«»“”‘’]))");
     static QRegExp chanExp("(^|\\s|^\"|\\s\"|,|'|\\(|\\:|!|@|%|\\+)(#[^,\\s;\\)\\:\\/\\(\\<\\>]*[^.,\\s;\\)\\:\\/\\(\"\''\\<\\>])");
 
     void initChanModesHash()

commit b67a654dbd48b8c805ec8af19f087c7101379728
Author: Eike Hein <hein@kde.org>
Date:   Tue Aug 3 14:04:07 2010 +0200

    Put the storeUrl() call into the event queue rather than doing it in
    extractUrlData() directly. That means the amount of time it takes to
    do extractUrlData() doesn't increase as Application's m_urlModel fills
    up, as it's decoupled from the dupe elimination storeUrl() does. Plus
    since the dupe elimination now happens after the ircview update, the
    latency of the ircview update isn't related anymore to the amount of
    data in the model either. But even with an almost empty URL model this
    causes my linkification testsuite to complete in 160ms rather than 220ms.
    Bottom line, faster ircview and no more increasing speed hit for very
    long-running Konvi sessions.

diff --git a/src/application.h b/src/application.h
index 356d4d0..f6fb56b 100644
--- a/src/application.h
+++ b/src/application.h
@@ -90,7 +90,6 @@ class Application : public KUniqueApplication
         void showQueueTuner(bool);
 
         // URL-Catcher
-        void storeUrl(const QString& origin, const QString& newUrl, const QDateTime& dateTime);
         QStandardItemModel* getUrlModel() { return m_urlModel; }
 
         Application();
@@ -157,6 +156,8 @@ class Application : public KUniqueApplication
 
         void prepareShutdown();
 
+        void storeUrl(const QString& origin, const QString& newUrl, const QDateTime& dateTime);
+
     protected slots:
         void openQuickConnectDialog();
 
diff --git a/src/common.cpp b/src/common.cpp
index ea28677..1b41111 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -220,7 +220,8 @@ namespace Konversation
 
                 data.htmlText.replace(pos, urlLen, insertText);
 
-                Application::instance()->storeUrl(fromNick, href, QDateTime::currentDateTime());
+                QMetaObject::invokeMethod(Application::instance(), "storeUrl", Qt::QueuedConnection,
+                    Q_ARG(QString, fromNick), Q_ARG(QString, href), Q_ARG(QDateTime, QDateTime::currentDateTime()));
             }
             else
                 insertText = href + append;

commit 28f5927d49f0b6465150ec07884e69961543cce1
Author: Eike Hein <hein@kde.org>
Date:   Tue Aug 3 14:57:36 2010 +0200

    Be a wee bit smarter about Wolfram Alpha vs. trailing delimiter.

diff --git a/src/common.cpp b/src/common.cpp
index 1b41111..1caf91e 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -27,7 +27,7 @@ namespace Konversation
 {
 
     static QRegExp colorRegExp("((\003([0-9]|0[0-9]|1[0-5])(,([0-9]|0[0-9]|1[0-5])|)|\017)|\x02|\x09|\x13|\x16|\x1f)");
-    static QRegExp urlPattern("\\b((?:(?:[a-z][\\w-]+:/{1,3}|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+|[a-z0-9.-+_]+@[a-z0-9.\\-]+[.][a-z]{2,4})(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!();:'\".,<>?«»“”‘’]))");
+    static QRegExp urlPattern("\\b((?:(?:[a-z][\\w-]+:/{1,3}|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+|[a-z0-9.-+_]+@[a-z0-9.\\-]+[.][a-z]{2,4})(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|\\}\\]|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))");
     static QRegExp chanExp("(^|\\s|^\"|\\s\"|,|'|\\(|\\:|!|@|%|\\+)(#[^,\\s;\\)\\:\\/\\(\\<\\>]*[^.,\\s;\\)\\:\\/\\(\"\''\\<\\>])");
 
     void initChanModesHash()

commit 8e1733d9476981875c16c26f02f49eede47812aa
Author: Juan Carlos de Guzman Torres <carlosdgtorres@gmail.com>
Date:   Wed Aug 4 20:42:21 2010 +0800

    Change back offline message for WNO notifications
    
    Regression from 78c9ac8f

diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index 72a3bba..315f54b 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -2834,7 +2834,7 @@ void Server::setWatchedNickOffline(const QString& nickname, const NickInfoPtr ni
     // way to pass the nickname down to the ircview than prepending it -- the entire append-
     // MessageToFrontmost callgraph is pretty inflexible in terms of metadata payload, boo.
     // The same trick is in Server::setWatchedNickOnline() for the online notification.
-    appendMessageToFrontmost(i18n("Notify"), nickname + ' ' + i18n("%1 went online (%2).", nickname, getServerName()), getStatusView());
+    appendMessageToFrontmost(i18n("Notify"), nickname + ' ' + i18n("%1 went offline (%2).", nickname, getServerName()), getStatusView());
 
     static_cast<Application*>(kapp)->notificationHandler()->nickOffline(getStatusView(), nickname);
 

commit ee37721d78a64f497bb24858ce0bd5c4afb568a1
Author: Eike Hein <hein@kde.org>
Date:   Wed Aug 4 16:03:11 2010 +0200

    --cruft;

diff --git a/src/irc/nickinfo.cpp b/src/irc/nickinfo.cpp
index ad968eb..7bf9936 100644
--- a/src/irc/nickinfo.cpp
+++ b/src/irc/nickinfo.cpp
@@ -35,7 +35,6 @@ NickInfo::NickInfo(const QString& nick, Server* server): KShared()
     m_loweredNickname = nick.toLower();
     m_owningServer = server;
     m_away = false;
-    m_notified = false;
     m_identified = false;
     m_printedOnline = true;
     m_changed = false;
@@ -79,21 +78,6 @@ QString NickInfo::getAwayMessage() const
     return m_awayMessage;
 }
 
-QString NickInfo::getIdentdInfo() const
-{
-    return m_identdInfo;
-}
-
-QString NickInfo::getVersionInfo() const
-{
-    return m_versionInfo;
-}
-
-bool NickInfo::isNotified() const
-{
-    return m_notified;
-}
-
 QString NickInfo::getRealName() const
 {
     return m_realName;
@@ -208,28 +192,6 @@ void NickInfo::setAwayMessage(const QString& newMessage)
     startNickInfoChangedTimer();
 }
 
-void NickInfo::setIdentdInfo(const QString& newIdentdInfo)
-{
-    if(m_identdInfo == newIdentdInfo) return;
-    m_identdInfo = newIdentdInfo;
-    startNickInfoChangedTimer();
-}
-
-void NickInfo::setVersionInfo(const QString& newVersionInfo)
-{
-    if(m_versionInfo == newVersionInfo) return;
-    m_versionInfo = newVersionInfo;
-
-    startNickInfoChangedTimer();
-}
-
-void NickInfo::setNotified(bool state)
-{
-    if(state == m_notified) return;
-    m_notified = state;
-    startNickInfoChangedTimer();
-}
-
 void NickInfo::setRealName(const QString& newRealName)
 {
     if (newRealName.isEmpty() || m_realName == newRealName) return;
diff --git a/src/irc/nickinfo.h b/src/irc/nickinfo.h
index 5e80e2e..20b8ef1 100644
--- a/src/irc/nickinfo.h
+++ b/src/irc/nickinfo.h
@@ -50,9 +50,6 @@ class NickInfo : public KShared
          */
         bool isAway() const;
         QString getAwayMessage() const;
-        QString getIdentdInfo() const;
-        QString getVersionInfo() const;
-        bool isNotified() const;
         QString getRealName() const;
         QString getNetServer() const;
         QString getNetServerInfo() const;
@@ -82,12 +79,6 @@ class NickInfo : public KShared
         /** Set properties of NickInfo object. */
         void setAwayMessage(const QString& newMessage);
         /** Set properties of NickInfo object. */
-        void setIdentdInfo(const QString& newIdentdInfo);
-        /** Set properties of NickInfo object. */
-        void setVersionInfo(const QString& newVersionInfo);
-        /** Set properties of NickInfo object. */
-        void setNotified(bool state);
-        /** Set properties of NickInfo object. */
         void setRealName(const QString& newRealName);
         /** Set properties of NickInfo object. */
         void setNetServer(const QString& newNetServer);
@@ -138,9 +129,6 @@ class NickInfo : public KShared
         QString m_hostmask;
         bool m_away;
         QString m_awayMessage;
-        QString m_identdInfo;
-        QString m_versionInfo;
-        bool m_notified;
         QString m_realName;
         /** The server they are connected to. */
         QString m_netServer;

commit eeed7f756f67ba1fc18f475e6eb3a9bde13446cc
Author: Eike Hein <hein@kde.org>
Date:   Thu Aug 5 12:43:03 2010 +0200

    Improved email handling.

diff --git a/src/common.cpp b/src/common.cpp
index 1caf91e..b2e31c2 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -27,7 +27,7 @@ namespace Konversation
 {
 
     static QRegExp colorRegExp("((\003([0-9]|0[0-9]|1[0-5])(,([0-9]|0[0-9]|1[0-5])|)|\017)|\x02|\x09|\x13|\x16|\x1f)");
-    static QRegExp urlPattern("\\b((?:(?:[a-z][\\w-]+:/{1,3}|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+|[a-z0-9.-+_]+@[a-z0-9.\\-]+[.][a-z]{2,4})(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|\\}\\]|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))");
+    static QRegExp urlPattern("\\b((?:(?:[a-z][\\w-]+:/{1,3}|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|\\}\\]|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’])|[a-z0-9.\\-+_]+@[a-z0-9.\\-]+[^\\s/`!()\\[\\]{};:'\".,<>?«»“”‘’]))");
     static QRegExp chanExp("(^|\\s|^\"|\\s\"|,|'|\\(|\\:|!|@|%|\\+)(#[^,\\s;\\)\\:\\/\\(\\<\\>]*[^.,\\s;\\)\\:\\/\\(\"\''\\<\\>])");
 
     void initChanModesHash()

commit 33837db758e6d7948f336da447a3add4fb1d3aad
Author: Eike Hein <hein@kde.org>
Date:   Thu Aug 5 13:03:49 2010 +0200

    Fix Unicode handling.

diff --git a/src/common.cpp b/src/common.cpp
index b2e31c2..550b689 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -27,7 +27,7 @@ namespace Konversation
 {
 
     static QRegExp colorRegExp("((\003([0-9]|0[0-9]|1[0-5])(,([0-9]|0[0-9]|1[0-5])|)|\017)|\x02|\x09|\x13|\x16|\x1f)");
-    static QRegExp urlPattern("\\b((?:(?:[a-z][\\w-]+:/{1,3}|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|\\}\\]|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’])|[a-z0-9.\\-+_]+@[a-z0-9.\\-]+[^\\s/`!()\\[\\]{};:'\".,<>?«»“”‘’]))");
+    static QRegExp urlPattern(QString("\\b((?:(?:[a-z][\\w-]+:/{1,3}|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|\\}\\]|[^\\s`!()\\[\\]{};:'\".,<>?%1%2%3%4%5%6])|[a-z0-9.\\-+_]+@[a-z0-9.\\-]+[^\\s/`!()\\[\\]{};:'\".,<>?%1%2%3%4%5%6]))").arg(QChar(0x00AB)).arg(QChar(0x00BB)).arg(QChar(0x201C)).arg(QChar(0x201D)).arg(QChar(0x2018)).arg(QChar(0x2019)));
     static QRegExp chanExp("(^|\\s|^\"|\\s\"|,|'|\\(|\\:|!|@|%|\\+)(#[^,\\s;\\)\\:\\/\\(\\<\\>]*[^.,\\s;\\)\\:\\/\\(\"\''\\<\\>])");
 
     void initChanModesHash()

commit bbf3aca9c8da663cc29dc0246e1044f3a7602073
Author: Eike Hein <hein@kde.org>
Date:   Thu Aug 5 13:10:48 2010 +0200

    Bump.

diff --git a/src/commit.h b/src/commit.h
index 8a5cc24..67cb6e7 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4069
+#define COMMIT 4070
 #endif

commit e026e0de6a9530948e5c2d7f590600da3b026055
Author: Eike Hein <hein@kde.org>
Date:   Thu Aug 5 16:05:16 2010 +0200

    Fix link protocol heuristics.
    
    Fix opening email links from IrcView and the URL Catcher, plus
    less code duplication between extractUrlData() and storeUrl().

diff --git a/src/application.cpp b/src/application.cpp
index b5c1f88..5a01acf 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -983,9 +983,6 @@ void Application::storeUrl(const QString& origin, const QString& newUrl, const Q
 {
     QString url(newUrl);
 
-    if (url.startsWith(QLatin1String("www."))) url = "http://"+url;
-    else if (url.startsWith(QLatin1String("ftp."))) url = "ftp://"+url;
-
     url = url.replace("&amp;", "&");
 
     QList<QStandardItem*> existing = m_urlModel->findItems(url, Qt::MatchExactly, 1);
diff --git a/src/commit.h b/src/commit.h
index 67cb6e7..12c89e4 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4070
+#define COMMIT 4071
 #endif
diff --git a/src/common.cpp b/src/common.cpp
index 550b689..c79efd8 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -210,10 +210,12 @@ namespace Konversation
 
             if (doHyperlinks)
             {
-                if (urlPattern.cap(1).startsWith(QLatin1String("www."), Qt::CaseInsensitive))
-                    protocol = "http://";
-                else if (urlPattern.cap(1).isEmpty())
+                if (urlPattern.cap(1).contains('@') && !urlPattern.cap(1).contains("://"))
                     protocol = "mailto:";
+                else if (urlPattern.cap(1).startsWith(QLatin1String("www."), Qt::CaseInsensitive))
+                    protocol = "http://";
+                else if (urlPattern.cap(1).startsWith(QLatin1String("ftp."), Qt::CaseInsensitive))
+                    protocol = "ftp://";
 
                 // Use \x0b as a placeholder for & so we can read them after changing all & in the normal text to &amp;
                 insertText = link.arg(protocol, QString(href).replace('&', "\x0b"), href) + append;
@@ -221,7 +223,7 @@ namespace Konversation
                 data.htmlText.replace(pos, urlLen, insertText);
 
                 QMetaObject::invokeMethod(Application::instance(), "storeUrl", Qt::QueuedConnection,
-                    Q_ARG(QString, fromNick), Q_ARG(QString, href), Q_ARG(QDateTime, QDateTime::currentDateTime()));
+                    Q_ARG(QString, fromNick), Q_ARG(QString, protocol+href), Q_ARG(QDateTime, QDateTime::currentDateTime()));
             }
             else
                 insertText = href + append;

commit 03437234665581f65460114346837b1edf62fd3a
Author: Eike Hein <hein@kde.org>
Date:   Thu Aug 5 17:02:25 2010 +0200

    Update.

diff --git a/ChangeLog b/ChangeLog
index 3c10d30..0eb8e89 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -111,9 +111,10 @@ Changes since 1.3.1:
   - Trailing question marks no longer become part of the link.
   - URLs using uncommon schemas, e.g. Apple message:// URLs or Wolfram
     Alpha URLs, are now handled properly.
-  - User names containing the plus sign are now handled correctly in the de-
-    tection of email addresses.
-  - Average performance of link detection has improved slightly.
+  - Numerous improvements to email link handling: User names containing the
+    plus sign are now handled correctly, opening email links from the URL
+    Catcher works now and others.
+  - Average spreed of link detection has improved slightly.
 * Incoming actions (i.e. "/me") without an argument are now handled properly.
 * Fixed a number of crashes on illegal data from the server.
 

commit 85445d67544e9d1042b1281fe6a4bc39f20cbc15
Author: Eike Hein <hein@kde.org>
Date:   Thu Aug 5 18:06:58 2010 +0200

    Small improvements to email matching.

diff --git a/src/common.cpp b/src/common.cpp
index c79efd8..338dcd7 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -27,7 +27,7 @@ namespace Konversation
 {
 
     static QRegExp colorRegExp("((\003([0-9]|0[0-9]|1[0-5])(,([0-9]|0[0-9]|1[0-5])|)|\017)|\x02|\x09|\x13|\x16|\x1f)");
-    static QRegExp urlPattern(QString("\\b((?:(?:[a-z][\\w-]+:/{1,3}|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|\\}\\]|[^\\s`!()\\[\\]{};:'\".,<>?%1%2%3%4%5%6])|[a-z0-9.\\-+_]+@[a-z0-9.\\-]+[^\\s/`!()\\[\\]{};:'\".,<>?%1%2%3%4%5%6]))").arg(QChar(0x00AB)).arg(QChar(0x00BB)).arg(QChar(0x201C)).arg(QChar(0x201D)).arg(QChar(0x2018)).arg(QChar(0x2019)));
+    static QRegExp urlPattern(QString("\\b((?:(?:[a-z][\\w-]+:/{1,3}|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|\\}\\]|[^\\s`!()\\[\\]{};:'\".,<>?%1%2%3%4%5%6])|[a-z0-9.\\-+_]+@[a-z0-9.\\-]+[.][a-z]{1,5}[^\\s/`!()\\[\\]{};:'\".,<>?%1%2%3%4%5%6]))").arg(QChar(0x00AB)).arg(QChar(0x00BB)).arg(QChar(0x201C)).arg(QChar(0x201D)).arg(QChar(0x2018)).arg(QChar(0x2019)));
     static QRegExp chanExp("(^|\\s|^\"|\\s\"|,|'|\\(|\\:|!|@|%|\\+)(#[^,\\s;\\)\\:\\/\\(\\<\\>]*[^.,\\s;\\)\\:\\/\\(\"\''\\<\\>])");
 
     void initChanModesHash()

commit bcb8995f48d13fb1478f90acdebbf513db864dfb
Author: Eike Hein <hein@kde.org>
Date:   Fri Aug 6 05:54:17 2010 +0200

    Krazy2 fixes.

diff --git a/src/application.cpp b/src/application.cpp
index 5a01acf..7f06750 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -123,7 +123,7 @@ void Application::implementRestart()
     {
         int index = argumentList.lastIndexOf("--startupdelay");
 
-        if (index < argumentList.count() - 1 && !argumentList.at(index + 1).startsWith("-"))
+        if (index < argumentList.count() - 1 && !argumentList.at(index + 1).startsWith('-'))
         {
             QString delayArgument = argumentList.at(index + 1);
 
@@ -987,9 +987,7 @@ void Application::storeUrl(const QString& origin, const QString& newUrl, const Q
 
     QList<QStandardItem*> existing = m_urlModel->findItems(url, Qt::MatchExactly, 1);
 
-    QStandardItem* item;
-
-    foreach(item, existing)
+    foreach(QStandardItem* item, existing)
     {
         if (m_urlModel->item(item->row(), 0)->data(Qt::DisplayRole).toString() == origin)
             m_urlModel->removeRow(item->row());
diff --git a/src/dcc/whiteboardtoolbar.cpp b/src/dcc/whiteboardtoolbar.cpp
index cb6621b..22d3261 100644
--- a/src/dcc/whiteboardtoolbar.cpp
+++ b/src/dcc/whiteboardtoolbar.cpp
@@ -336,7 +336,7 @@ namespace Konversation
 
         void WhiteBoardToolBar::unCheckOtherButtons(KPushButton* button)
         {
-            foreach (KPushButton* pushButton, m_toggleButtonHash.keys())
+            foreach(KPushButton* pushButton, m_toggleButtonHash.keys())
             {
                 if (pushButton != button && pushButton->isChecked())
                 {
diff --git a/src/notificationhandler.cpp b/src/notificationhandler.cpp
index f9a68de..def77c9 100644
--- a/src/notificationhandler.cpp
+++ b/src/notificationhandler.cpp
@@ -56,7 +56,7 @@ namespace Konversation
             {
                 Application* konvApp = static_cast<Application*>(kapp);
 
-                konvApp->osd->show('(' + chatWin->getName() + ") <" + fromNick + ">");
+                konvApp->osd->show('(' + chatWin->getName() + ") <" + fromNick + '>');
             }
         }
         else
diff --git a/src/urlcatcher.cpp b/src/urlcatcher.cpp
index 208be05..1ba74e0 100644
--- a/src/urlcatcher.cpp
+++ b/src/urlcatcher.cpp
@@ -201,9 +201,7 @@ void UrlCatcher::updateItemActionStates()
 {
     bool enable = m_urlTree->selectionModel()->hasSelection();
 
-    QAction* action;
-
-    foreach(action, m_itemActions) action->setEnabled(enable);
+    foreach(QAction* action, m_itemActions) action->setEnabled(enable);
 }
 
 void UrlCatcher::updateListActionStates()
@@ -211,9 +209,7 @@ void UrlCatcher::updateListActionStates()
     Application* konvApp = static_cast<Application *>(kapp);
     bool enable = konvApp->getUrlModel()->rowCount();
 
-    QAction* action;
-
-    foreach(action, m_listActions) action->setEnabled(enable);
+    foreach(QAction* action, m_listActions) action->setEnabled(enable);
 }
 
 void UrlCatcher::openContextMenu(const QPoint& p)
@@ -246,12 +242,8 @@ void UrlCatcher::openSelectedUrls()
         if (ret != KMessageBox::Continue) return;
     }
 
-    QModelIndex index;
-
-    foreach(index, selectedIndexes)
-    {
+    foreach(const QModelIndex& index, selectedIndexes)
         if (index.isValid()) Application::openUrl(index.data().toString());
-    }
 }
 
 void UrlCatcher::saveSelectedUrls()
@@ -272,9 +264,7 @@ void UrlCatcher::saveSelectedUrls()
         if (ret != KMessageBox::Continue) return;
     }
 
-    QModelIndex index;
-
-    foreach(index, selectedIndexes)
+    foreach(const QModelIndex& index, selectedIndexes)
     {
         if (index.isValid())
         {
@@ -300,18 +290,15 @@ void UrlCatcher::bookmarkSelectedUrls()
     {
         QList<QPair<QString, QString> > bookmarks;
 
-        QModelIndex index;
-
-        foreach(index, selectedIndexes)
-        {
+        foreach(const QModelIndex& index, selectedIndexes)
             bookmarks << QPair<QString, QString>(index.data().toString(), index.data().toString());
-        }
 
         dialog->addBookmarks(bookmarks, i18n("New"));
     }
     else
     {
         QString url = selectedIndexes.first().data().toString();
+
         dialog->addBookmark(url, url);
     }
 
@@ -323,9 +310,8 @@ void UrlCatcher::copySelectedUrls()
     QModelIndexList selectedIndexes = m_urlTree->selectionModel()->selectedRows(1);
 
     QStringList urls;
-    QModelIndex index;
 
-    foreach(index, selectedIndexes)
+    foreach(const QModelIndex& index, selectedIndexes)
         if (index.isValid()) urls << index.data().toString();
 
     QClipboard* clipboard = qApp->clipboard();
@@ -338,9 +324,8 @@ void UrlCatcher::deleteSelectedUrls()
 
     QHash<int, QString> origins;
     QHash<QString, int> urls;
-    QModelIndex index;
 
-    foreach(index, selectedIndexes)
+    foreach(const QModelIndex& index, selectedIndexes)
     {
         if (index.isValid())
         {
@@ -353,15 +338,12 @@ void UrlCatcher::deleteSelectedUrls()
 
     Application* konvApp = static_cast<Application *>(kapp);
     QStandardItemModel* urlModel = konvApp->getUrlModel();
-    QString url;
 
-    foreach(url, urls.keys())
+    foreach(const QString& url, urls.keys())
     {
         QList<QStandardItem*> existing = urlModel->findItems(url, Qt::MatchExactly, 1);
 
-        QStandardItem* item;
-
-        foreach(item, existing)
+        foreach(QStandardItem* item, existing)
         {
             if (urlModel->item(item->row(), 0)->data(Qt::DisplayRole).toString() == origins.value(urls.value(url)))
                 urlModel->removeRow(item->row());

commit 6c8c409b162e44e838531d50c78e968df219e8b2
Author: Eike Hein <hein@kde.org>
Date:   Sun Aug 8 21:22:45 2010 +0200

    Fall back to http:// more liberally during the protocol pass, helps with stupid browsers and short URLs.

diff --git a/src/common.cpp b/src/common.cpp
index 338dcd7..1f03a4e 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -27,7 +27,7 @@ namespace Konversation
 {
 
     static QRegExp colorRegExp("((\003([0-9]|0[0-9]|1[0-5])(,([0-9]|0[0-9]|1[0-5])|)|\017)|\x02|\x09|\x13|\x16|\x1f)");
-    static QRegExp urlPattern(QString("\\b((?:(?:[a-z][\\w-]+:/{1,3}|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|\\}\\]|[^\\s`!()\\[\\]{};:'\".,<>?%1%2%3%4%5%6])|[a-z0-9.\\-+_]+@[a-z0-9.\\-]+[.][a-z]{1,5}[^\\s/`!()\\[\\]{};:'\".,<>?%1%2%3%4%5%6]))").arg(QChar(0x00AB)).arg(QChar(0x00BB)).arg(QChar(0x201C)).arg(QChar(0x201D)).arg(QChar(0x2018)).arg(QChar(0x2019)));
+    static QRegExp urlPattern(QString("\\b((?:(?:([a-z][\\w-]+:/{1,3})|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|\\}\\]|[^\\s`!()\\[\\]{};:'\".,<>?%1%2%3%4%5%6])|[a-z0-9.\\-+_]+@[a-z0-9.\\-]+[.][a-z]{1,5}[^\\s/`!()\\[\\]{};:'\".,<>?%1%2%3%4%5%6]))").arg(QChar(0x00AB)).arg(QChar(0x00BB)).arg(QChar(0x201C)).arg(QChar(0x201D)).arg(QChar(0x2018)).arg(QChar(0x2019)));
     static QRegExp chanExp("(^|\\s|^\"|\\s\"|,|'|\\(|\\:|!|@|%|\\+)(#[^,\\s;\\)\\:\\/\\(\\<\\>]*[^.,\\s;\\)\\:\\/\\(\"\''\\<\\>])");
 
     void initChanModesHash()
@@ -210,12 +210,15 @@ namespace Konversation
 
             if (doHyperlinks)
             {
-                if (urlPattern.cap(1).contains('@') && !urlPattern.cap(1).contains("://"))
-                    protocol = "mailto:";
-                else if (urlPattern.cap(1).startsWith(QLatin1String("www."), Qt::CaseInsensitive))
-                    protocol = "http://";
-                else if (urlPattern.cap(1).startsWith(QLatin1String("ftp."), Qt::CaseInsensitive))
-                    protocol = "ftp://";
+                if (urlPattern.cap(2).isEmpty())
+                {
+                    if (urlPattern.cap(1).contains('@'))
+                        protocol = "mailto:";
+                    else if (urlPattern.cap(1).startsWith(QLatin1String("ftp."), Qt::CaseInsensitive))
+                        protocol = "ftp://";
+                    else
+                        protocol = "http://";
+                }
 
                 // Use \x0b as a placeholder for & so we can read them after changing all & in the normal text to &amp;
                 insertText = link.arg(protocol, QString(href).replace('&', "\x0b"), href) + append;

commit aeb686f9aa3f908fcc17020ac495b71a907e0d01
Author: Peter Simonsson <peter.simonsson@gmail.com>
Date:   Mon Aug 9 14:59:40 2010 +0200

    Fix slowness of showing nicks in nicklist when hostmasks is shown.
    BUG:247072

diff --git a/src/irc/channel.cpp b/src/irc/channel.cpp
index 9b8d332..85b8c9d 100644
--- a/src/irc/channel.cpp
+++ b/src/irc/channel.cpp
@@ -300,9 +300,6 @@ Channel::Channel(QWidget* parent, QString _name) : ChatWindow(parent)
 
     connect(&userhostTimer,SIGNAL (timeout()),this,SLOT (autoUserhost()));
 
-    // every few seconds try to get more userhosts
-    userhostTimer.start(10000);
-
     m_whoTimer.setSingleShot(true);
     connect(&m_whoTimer,SIGNAL (timeout()),this,SLOT (autoWho()));
 
@@ -2556,12 +2553,10 @@ void Channel::autoUserhost()
         if(!nickString.isEmpty()) m_server->requestUserhost(nickString);
     }
 
-    // Resize columns if needed (on regular basis)
-    if (m_nicknameListViewTextChanged & (1 << Nick::NicknameColumn))
-        nicknameListView->resizeColumnToContents(Nick::NicknameColumn);
-    if (m_nicknameListViewTextChanged & (1 << Nick::HostmaskColumn))
-        nicknameListView->resizeColumnToContents(Nick::HostmaskColumn);
-    m_nicknameListViewTextChanged = 0;
+    if(!nicknameList.isEmpty())
+    {
+        resizeNicknameListViewColumns();
+    }
 }
 
 void Channel::setAutoUserhost(bool state)
@@ -2772,6 +2767,9 @@ void Channel::processPendingNicks()
         m_processingTimer->stop();
         sortNickList();
         nicknameListView->setUpdatesEnabled(true);
+
+        if (Preferences::self()->autoUserhost())
+            resizeNicknameListViewColumns();
     }
 }
 
@@ -3007,6 +3005,17 @@ void Channel::updateChannelNicks(const QString& channel)
     }
 }
 
+void Channel::resizeNicknameListViewColumns()
+{
+    // Resize columns if needed (on regular basis)
+    if (m_nicknameListViewTextChanged & (1 << Nick::NicknameColumn))
+        nicknameListView->resizeColumnToContents(Nick::NicknameColumn);
+    if (m_nicknameListViewTextChanged & (1 << Nick::HostmaskColumn))
+        nicknameListView->resizeColumnToContents(Nick::HostmaskColumn);
+    m_nicknameListViewTextChanged = 0;
+}
+
+
 //
 // NickList
 //
diff --git a/src/irc/channel.h b/src/irc/channel.h
index 967cca7..25ca6fc 100644
--- a/src/irc/channel.h
+++ b/src/irc/channel.h
@@ -147,6 +147,8 @@ class Channel : public ChatWindow
         void adjustOps(int value);
         virtual void emitUpdateInfo();
 
+        void resizeNicknameListViewColumns();
+
     protected slots:
         void purgeNicks();
         void processPendingNicks();

commit 6d1cdd62b90a7d22c1f7c3240acee4c4129ffde8
Author: Martin Blumenstingl <darklight.xdarklight@googlemail.com>
Date:   Mon Aug 9 22:41:18 2010 +0200

    Remove some unused code from src/CMakeLists.txt.

diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index b063ee9..380bb35 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -6,10 +6,6 @@ if (QCA2_FOUND)
     include_directories(${QCA2_INCLUDE_DIR})
 endif (QCA2_FOUND)
 
-if (LIBKNOTIFICATIONITEM-1_FOUND)
-    include_directories(${KNOTIFICATIONITEM_INCLUDE_DIR})
-endif (LIBKNOTIFICATIONITEM-1_FOUND)
-
 set(core_SRCS
     #====================================
     #=== Application

commit 914a73d7162e663ba07393f6f2d062d8bb9f9fad
Author: Eike Hein <hein@kde.org>
Date:   Tue Aug 10 20:01:00 2010 +0200

    Less convoluted (Url Catcher), and back to 0 on EBN.

diff --git a/src/dcc/whiteboardtoolbar.cpp b/src/dcc/whiteboardtoolbar.cpp
index 22d3261..e0b0587 100644
--- a/src/dcc/whiteboardtoolbar.cpp
+++ b/src/dcc/whiteboardtoolbar.cpp
@@ -45,51 +45,51 @@ namespace Konversation
             m_pencilPushButton->setIcon(KIcon("draw-freehand"));
             m_pencilPushButton->setToolTip(i18n("Freehand Drawing"));
             m_pencilPushButton->setFlat(true);
-            m_toggleButtonHash.insert(m_pencilPushButton, WhiteBoardGlobals::Pencil);
+            m_toggleButtonHash.insert(WhiteBoardGlobals::Pencil, m_pencilPushButton);
             m_pencilPushButton->setChecked(true);
 
             m_linePushButton->setIcon(KIcon("draw-line"));
             m_linePushButton->setToolTip(i18n("Draw a straight line"));
             m_linePushButton->setFlat(true);
-            m_toggleButtonHash.insert(m_linePushButton, WhiteBoardGlobals::Line);
+            m_toggleButtonHash.insert(WhiteBoardGlobals::Line, m_linePushButton);
 
             m_rectanglePushButton->setIcon(KIcon("draw-rectangle"));
             m_rectanglePushButton->setToolTip(i18n("Draw a rectangle"));
             m_rectanglePushButton->setFlat(true);
-            m_toggleButtonHash.insert(m_rectanglePushButton, WhiteBoardGlobals::Rectangle);
-            m_toggleButtonHash.insert(m_rectanglePushButton, WhiteBoardGlobals::FilledRectangle);
+            m_toggleButtonHash.insert(WhiteBoardGlobals::Rectangle, m_rectanglePushButton);
+            m_toggleButtonHash.insert(WhiteBoardGlobals::FilledRectangle, m_rectanglePushButton);
 
             m_ellipsePushButton->setIcon(KIcon("draw-circle"));
             m_ellipsePushButton->setToolTip(i18n("Draw an ellipse"));
             m_ellipsePushButton->setFlat(true);
-            m_toggleButtonHash.insert(m_ellipsePushButton, WhiteBoardGlobals::Ellipse);
-            m_toggleButtonHash.insert(m_ellipsePushButton, WhiteBoardGlobals::FilledEllipse);
+            m_toggleButtonHash.insert(WhiteBoardGlobals::Ellipse, m_ellipsePushButton);
+            m_toggleButtonHash.insert(WhiteBoardGlobals::FilledEllipse, m_ellipsePushButton);
 
             m_textPushButton->setIcon(KIcon("draw-text"));
             m_textPushButton->setToolTip(i18n("Draw text"));
             m_textPushButton->setFlat(true);
-            m_toggleButtonHash.insert(m_textPushButton, WhiteBoardGlobals::Text);
+            m_toggleButtonHash.insert(WhiteBoardGlobals::Text, m_textPushButton);
 
             m_selectionPushButton->setEnabled(false); // it has no function in current whiteboard
             m_selectionPushButton->setIcon(KIcon("select-rectangular"));
             m_selectionPushButton->setToolTip(i18nc("dcc whiteboard selection tool", "Selection"));
             m_selectionPushButton->setFlat(true);
-            m_toggleButtonHash.insert(m_selectionPushButton, WhiteBoardGlobals::Selection);
+            m_toggleButtonHash.insert(WhiteBoardGlobals::Selection, m_selectionPushButton);
 
             m_eraserPushButton->setIcon(KIcon("draw-eraser"));
             m_eraserPushButton->setToolTip(i18n("Eraser"));
             m_eraserPushButton->setFlat(true);
-            m_toggleButtonHash.insert(m_eraserPushButton, WhiteBoardGlobals::Eraser);
+            m_toggleButtonHash.insert(WhiteBoardGlobals::Eraser, m_eraserPushButton);
 
             m_fillPushButton->setIcon(KIcon("fill-color"));
             m_fillPushButton->setToolTip(i18n("Fill a contiguous area with the foreground color"));
             m_fillPushButton->setFlat(true);
-            m_toggleButtonHash.insert(m_fillPushButton, WhiteBoardGlobals::FloodFill);
+            m_toggleButtonHash.insert(WhiteBoardGlobals::FloodFill, m_fillPushButton);
 
             m_arrowPushButton->setIcon(KIcon("draw-arrow-forward"));
             m_arrowPushButton->setToolTip(i18n("Draw an arrow"));
             m_arrowPushButton->setFlat(true);
-            m_toggleButtonHash.insert(m_arrowPushButton, WhiteBoardGlobals::Arrow);
+            m_toggleButtonHash.insert(WhiteBoardGlobals::Arrow, m_arrowPushButton);
 
             m_lineWidthSlider->setMaximum(WhiteBoardGlobals::MaxPenWidth);
 
@@ -133,7 +133,7 @@ namespace Konversation
 
         void WhiteBoardToolBar::disableTool(WhiteBoardGlobals::WhiteBoardTool tool)
         {
-            KPushButton* button = m_toggleButtonHash.key(tool);
+            KPushButton* button = m_toggleButtonHash.value(tool);
             if (button)
             {
                 button->setEnabled(false);
@@ -146,7 +146,7 @@ namespace Konversation
 
         void WhiteBoardToolBar::enableTool(WhiteBoardGlobals::WhiteBoardTool tool)
         {
-            KPushButton* button = m_toggleButtonHash.key(tool);
+            KPushButton* button = m_toggleButtonHash.value(tool);
             if (button)
             {
                 button->setEnabled(true);
@@ -336,7 +336,7 @@ namespace Konversation
 
         void WhiteBoardToolBar::unCheckOtherButtons(KPushButton* button)
         {
-            foreach(KPushButton* pushButton, m_toggleButtonHash.keys())
+            foreach(KPushButton* pushButton, m_toggleButtonHash)
             {
                 if (pushButton != button && pushButton->isChecked())
                 {
diff --git a/src/dcc/whiteboardtoolbar.h b/src/dcc/whiteboardtoolbar.h
index debe88b..60bc300 100644
--- a/src/dcc/whiteboardtoolbar.h
+++ b/src/dcc/whiteboardtoolbar.h
@@ -13,7 +13,7 @@
 #define WHITEBOARDTOOLBAR_H
 
 #include <QWidget>
-#include <QHash> 
+#include <QHash>
 
 #include "ui_whiteboardtoolbarui.h"
 
@@ -109,7 +109,7 @@ namespace Konversation
 
                 inline void fillFormOptionList(FormOption form);
 
-                QHash<KPushButton*, Konversation::DCC::WhiteBoardGlobals::WhiteBoardTool> m_toggleButtonHash;
+                QHash<Konversation::DCC::WhiteBoardGlobals::WhiteBoardTool, KPushButton*> m_toggleButtonHash;
                 QPixmap m_lineWidthPixmap;
 
                 QPixmap m_rectanglePixmap;
diff --git a/src/urlcatcher.cpp b/src/urlcatcher.cpp
index 1ba74e0..69afc95 100644
--- a/src/urlcatcher.cpp
+++ b/src/urlcatcher.cpp
@@ -171,7 +171,7 @@ void UrlCatcher::setupUrlTree()
     connect(m_urlTree, SIGNAL(customContextMenuRequested(const QPoint&)), this, SLOT(openContextMenu(const QPoint&)));
     connect(m_urlTree, SIGNAL(doubleClicked(const QModelIndex&)), this, SLOT(openUrl(const QModelIndex&)));
 
-    Application* konvApp = static_cast<Application *>(kapp);
+    Application* konvApp = static_cast<Application*>(kapp);
     QStandardItemModel* urlModel = konvApp->getUrlModel();
     QStandardItem* item = new QStandardItem(i18n("From"));
     urlModel->setHorizontalHeaderItem(0, item);
@@ -206,7 +206,7 @@ void UrlCatcher::updateItemActionStates()
 
 void UrlCatcher::updateListActionStates()
 {
-    Application* konvApp = static_cast<Application *>(kapp);
+    Application* konvApp = static_cast<Application*>(kapp);
     bool enable = konvApp->getUrlModel()->rowCount();
 
     foreach(QAction* action, m_listActions) action->setEnabled(enable);
@@ -320,36 +320,15 @@ void UrlCatcher::copySelectedUrls()
 
 void UrlCatcher::deleteSelectedUrls()
 {
-    QModelIndexList selectedIndexes = m_urlTree->selectionModel()->selectedIndexes();
+    QList<QPersistentModelIndex> selectedIndices;
 
-    QHash<int, QString> origins;
-    QHash<QString, int> urls;
+    foreach(const QPersistentModelIndex& index, m_urlTree->selectionModel()->selectedIndexes())
+        selectedIndices << index;
 
-    foreach(const QModelIndex& index, selectedIndexes)
-    {
-        if (index.isValid())
-        {
-            if (index.column() == 0)
-                origins.insert(index.row(), index.data().toString());
-            else if (index.column() == 1)
-                urls.insert(index.data().toString(), index.row());
-        }
-    }
-
-    Application* konvApp = static_cast<Application *>(kapp);
-    QStandardItemModel* urlModel = konvApp->getUrlModel();
-
-    foreach(const QString& url, urls.keys())
-    {
-        QList<QStandardItem*> existing = urlModel->findItems(url, Qt::MatchExactly, 1);
+    Application* konvApp = static_cast<Application*>(kapp);
 
-        foreach(QStandardItem* item, existing)
-        {
-            if (urlModel->item(item->row(), 0)->data(Qt::DisplayRole).toString() == origins.value(urls.value(url)))
-                urlModel->removeRow(item->row());
-        }
-
-    }
+    foreach(const QPersistentModelIndex& index, selectedIndices)
+        if (index.isValid()) konvApp->getUrlModel()->removeRow(index.row());
 }
 
 void UrlCatcher::saveUrlModel()
@@ -359,7 +338,7 @@ void UrlCatcher::saveUrlModel()
 
     if (!target.isEmpty())
     {
-        Application* konvApp = static_cast<Application *>(kapp);
+        Application* konvApp = static_cast<Application*>(kapp);
         QStandardItemModel* urlModel = konvApp->getUrlModel();
 
         int nickColumnWidth = 0;
@@ -400,7 +379,7 @@ void UrlCatcher::saveUrlModel()
 
 void UrlCatcher::clearUrlModel()
 {
-    Application* konvApp = static_cast<Application *>(kapp);
+    Application* konvApp = static_cast<Application*>(kapp);
     QStandardItemModel* urlModel = konvApp->getUrlModel();
 
     urlModel->removeRows(0, urlModel->rowCount());

commit 1e59b7b1a41ba268ca27c332d6d384c1acfc4493
Author: Eike Hein <hein@kde.org>
Date:   Tue Aug 10 21:32:25 2010 +0200

    Add an action to show/hide the main window.
    
    BUG:247263

diff --git a/ChangeLog b/ChangeLog
index 0eb8e89..ffe288a 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -117,6 +117,9 @@ Changes since 1.3.1:
   - Average spreed of link detection has improved slightly.
 * Incoming actions (i.e. "/me") without an argument are now handled properly.
 * Fixed a number of crashes on illegal data from the server.
+* Added a "Show/Hide Konversation" action that can be used to toggle the
+  minimized state of the Konversation window or, if the tray icon is enabled,
+  its visibility.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/mainwindow.cpp b/src/mainwindow.cpp
index 35e16c7..caf8b32 100644
--- a/src/mainwindow.cpp
+++ b/src/mainwindow.cpp
@@ -486,6 +486,12 @@ MainWindow::MainWindow() : KXmlGuiWindow(0)
     connect(toggleChannelNickListsAction, SIGNAL(triggered()), m_viewContainer, SLOT(toggleChannelNicklists()));
     actionCollection()->addAction("hide_nicknamelist", toggleChannelNickListsAction);
 
+    action=new KAction(this);
+    action->setText(i18n("Show/Hide Konversation"));
+    connect(action, SIGNAL(triggered()), this, SLOT(toggleVisibility()));
+    actionCollection()->addAction("toggle_mainwindow_visibility", action);
+    action->setGlobalShortcut(KShortcut());
+
     // Bookmarks
     KActionMenu *bookmarkMenu = new KActionMenu(i18n("Bookmarks"), actionCollection());
     new KonviBookmarkHandler(bookmarkMenu->menu(), this);
@@ -844,4 +850,22 @@ void MainWindow::setOnlineList(Server* notifyServer,const QStringList& /*list*/,
     // FIXME  if (changed && nicksOnlinePanel) newText(nicksOnlinePanel, QString::null, true);
 }
 
+void MainWindow::toggleVisibility()
+{
+    if (isMinimized())
+    {
+        KWindowSystem::unminimizeWindow(winId());
+        KWindowSystem::activateWindow(winId());
+    }
+    else if (isVisible())
+    {
+        if (Preferences::self()->showTrayIcon())
+            hide();
+        else
+            KWindowSystem::minimizeWindow(winId());
+    }
+    else if (Preferences::self()->showTrayIcon())
+        m_trayIcon->restore();
+}
+
 #include "mainwindow.moc"
diff --git a/src/mainwindow.h b/src/mainwindow.h
index cac6526..8cff7ba 100644
--- a/src/mainwindow.h
+++ b/src/mainwindow.h
@@ -109,6 +109,8 @@ class MainWindow : public KXmlGuiWindow
         void openNotifications();
         void notifyAction(int connectionId,const QString& nick);
 
+        void toggleVisibility();
+
         void showEvent(QShowEvent* e);
         void hideEvent(QHideEvent* e);
         void leaveEvent(QEvent* e);
diff --git a/src/viewer/trayicon.h b/src/viewer/trayicon.h
index de99b05..418868d 100644
--- a/src/viewer/trayicon.h
+++ b/src/viewer/trayicon.h
@@ -34,13 +34,15 @@ namespace Konversation
 #endif
     {
         Q_OBJECT
-        
+
         public:
             explicit TrayIcon(QWidget* parent = 0);
             ~TrayIcon();
 
             bool notificationEnabled() { return m_notificationEnabled; }
 
+            void restore();
+
         public slots:
             void startNotification();
             void endNotification();
diff --git a/src/viewer/trayiconkstatusnotifieritem.cpp b/src/viewer/trayiconkstatusnotifieritem.cpp
index 250c005..9982e18 100644
--- a/src/viewer/trayiconkstatusnotifieritem.cpp
+++ b/src/viewer/trayiconkstatusnotifieritem.cpp
@@ -18,7 +18,7 @@ namespace Konversation
         setStatus(Active);
 
         m_notificationEnabled = false;
-        
+
         updateAppearance();
 
         setToolTip("konversation", i18n("Konversation"), i18n("Konversation - IRC Client"));
@@ -28,6 +28,11 @@ namespace Konversation
     {
     }
 
+    void TrayIcon::restore()
+    {
+        activate(QPoint());
+    }
+
     void TrayIcon::startNotification()
     {
         if (!m_notificationEnabled)
@@ -42,12 +47,12 @@ namespace Konversation
     {
         setStatus(Active);
     }
-    
+
     void TrayIcon::updateAppearance()
     {
         m_nomessagePix = "konversation";
         m_messagePix = "konv_message";
-        
+
         setIconByName(m_nomessagePix);
         setAttentionIconByName(m_messagePix);
     }
diff --git a/src/viewer/trayiconksystemtray.cpp b/src/viewer/trayiconksystemtray.cpp
index f72e389..4b60381 100644
--- a/src/viewer/trayiconksystemtray.cpp
+++ b/src/viewer/trayiconksystemtray.cpp
@@ -38,6 +38,11 @@ namespace Konversation
     {
     }
 
+    void TrayIcon::restore()
+    {
+        toggleActive();
+    }
+
     void TrayIcon::startNotification()
     {
         if(!m_notificationEnabled)
@@ -80,13 +85,13 @@ namespace Konversation
             setIcon(m_nomessagePix);
         }
     }
-    
+
     void TrayIcon::updateAppearance()
     {
         m_nomessagePix = loadIcon("konversation");
         m_messagePix = loadIcon("konv_message");
         setIcon(m_nomessagePix);
-        
+
         show();
     }
 }

commit 1ab55d2b294b43e54c65fe1868e947ca5dc62946
Author: Eike Hein <hein@kde.org>
Date:   Tue Aug 10 21:36:55 2010 +0200

    Pull to current desktop on show by action.
    
    CCBUG:247263

diff --git a/src/mainwindow.cpp b/src/mainwindow.cpp
index caf8b32..8dc435e 100644
--- a/src/mainwindow.cpp
+++ b/src/mainwindow.cpp
@@ -855,6 +855,7 @@ void MainWindow::toggleVisibility()
     if (isMinimized())
     {
         KWindowSystem::unminimizeWindow(winId());
+        KWindowSystem::setOnDesktop(winId(), KWindowSystem::currentDesktop());
         KWindowSystem::activateWindow(winId());
     }
     else if (isVisible())
@@ -865,7 +866,10 @@ void MainWindow::toggleVisibility()
             KWindowSystem::minimizeWindow(winId());
     }
     else if (Preferences::self()->showTrayIcon())
+    {
+        KWindowSystem::setOnDesktop(winId(), KWindowSystem::currentDesktop());
         m_trayIcon->restore();
+    }
 }
 
 #include "mainwindow.moc"

commit 65f91b9e833dc40e0b3e093dec06d173f9929afa
Author: Eike Hein <hein@kde.org>
Date:   Tue Aug 10 21:49:21 2010 +0200

    Handle another scenario.
    
    BUG:247263

diff --git a/ChangeLog b/ChangeLog
index ffe288a..c500b5f 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -119,7 +119,10 @@ Changes since 1.3.1:
 * Fixed a number of crashes on illegal data from the server.
 * Added a "Show/Hide Konversation" action that can be used to toggle the
   minimized state of the Konversation window or, if the tray icon is enabled,
-  its visibility.
+  its visibility. Additionally, the window will always be moved to the
+  current virtual desktop if shown using this action (if the window is
+  already shown on another desktop, it will be moved to the current desktop
+  rather than hidden).
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/mainwindow.cpp b/src/mainwindow.cpp
index 8dc435e..ec2f5a6 100644
--- a/src/mainwindow.cpp
+++ b/src/mainwindow.cpp
@@ -860,10 +860,20 @@ void MainWindow::toggleVisibility()
     }
     else if (isVisible())
     {
-        if (Preferences::self()->showTrayIcon())
-            hide();
+        bool onCurrentDesktop = KWindowSystem::windowInfo(winId(), NET::WMDesktop).isOnCurrentDesktop();
+
+        if (onCurrentDesktop)
+        {
+            if (Preferences::self()->showTrayIcon())
+                hide();
+            else
+                KWindowSystem::minimizeWindow(winId());
+        }
         else
-            KWindowSystem::minimizeWindow(winId());
+        {
+            KWindowSystem::setOnDesktop(winId(), KWindowSystem::currentDesktop());
+            KWindowSystem::activateWindow(winId());
+        }
     }
     else if (Preferences::self()->showTrayIcon())
     {

commit 71492e8528e41559e27edbe6d7412eba7b43741b
Author: Eike Hein <hein@kde.org>
Date:   Thu Aug 12 22:31:34 2010 +0200

    Better image scaling and elide the text.

diff --git a/src/irc/query.cpp b/src/irc/query.cpp
index 9b87e58..17398c9 100644
--- a/src/irc/query.cpp
+++ b/src/irc/query.cpp
@@ -26,7 +26,7 @@
 #include <QSplitter>
 
 #include <KMessageBox>
-#include <KStringHandler>
+#include <KSqueezedTextLabel>
 #include <KStandardGuiItem>
 #include <KMenu>
 #include <KHBox>
@@ -59,7 +59,8 @@ Query::Query(QWidget* parent, QString _name) : ChatWindow(parent)
     addresseelogoimage->setSizePolicy(QSizePolicy::Fixed, QSizePolicy::Fixed);
     addresseelogoimage->hide();
 
-    queryHostmask=new QLabel(box);
+    queryHostmask=new KSqueezedTextLabel(box);
+    queryHostmask->setTextElideMode(Qt::ElideRight);
     queryHostmask->setObjectName("query_hostmask");
 
     QString whatsthis = i18n("<qt><p>Some details of the person you are talking to in this query is shown in this bar.  The full name and hostmask is shown, along with any image or logo this person has associated with them in the KDE Address Book.</p><p>See the <i>Konversation Handbook</i> for information on associating a nick with a contact in the address book, and for an explanation of what the hostmask is.</p></qt>");
@@ -475,13 +476,13 @@ void Query::nickInfoChanged()
             text += " - ";
         text += m_nickInfo->getHostmask();
         if(m_nickInfo->isAway() && !m_nickInfo->getAwayMessage().isEmpty())
-            text += " (" + KStringHandler::rsqueeze(m_nickInfo->getAwayMessage(),100) + ") ";
+            text += " (" + m_nickInfo->getAwayMessage() + ") ";
         queryHostmask->setText(Konversation::removeIrcMarkup(text));
 
         KABC::Picture pic = m_nickInfo->getAddressee().photo();
         if(pic.isIntern())
         {
-            QPixmap qpixmap = QPixmap::fromImage(pic.data().scaledToHeight(queryHostmask->height()));
+            QPixmap qpixmap = QPixmap::fromImage(pic.data().scaledToHeight(queryHostmask->height(), Qt::SmoothTransformation));
             if(!qpixmap.isNull())
             {
                 addresseeimage->setPixmap(qpixmap);
@@ -499,7 +500,7 @@ void Query::nickInfoChanged()
         KABC::Picture logo = m_nickInfo->getAddressee().logo();
         if(logo.isIntern())
         {
-            QPixmap qpixmap = QPixmap::fromImage(logo.data().scaledToHeight(queryHostmask->height()));
+            QPixmap qpixmap = QPixmap::fromImage(logo.data().scaledToHeight(queryHostmask->height(), Qt::SmoothTransformation));
             if(!qpixmap.isNull())
             {
                 addresseelogoimage->setPixmap(qpixmap);
diff --git a/src/irc/query.h b/src/irc/query.h
index 99a8e61..310ca37 100644
--- a/src/irc/query.h
+++ b/src/irc/query.h
@@ -28,16 +28,16 @@
 /* TODO: Idle counter to close query after XXX minutes of inactivity */
 /* TODO: Use /USERHOST to check if queries are still valid */
 
+class IRCInput;
+
 class QActionGroup;
 class QMenu;
 class KAction;
 class QLabel;
 class QSplitter;
 
-class IRCInput;
+class KSqueezedTextLabel;
 
-namespace Konversation {
-  }
 
 class Query : public ChatWindow
 {
@@ -130,7 +130,7 @@ class Query : public ChatWindow
         KAction* m_addNotifyAction;
 
         QSplitter* m_headerSplitter;
-        QLabel* queryHostmask;
+        KSqueezedTextLabel* queryHostmask;
         QLabel* addresseeimage;
         QLabel* addresseelogoimage;
         QLabel* awayLabel;

commit 58639531961ae55371f661f439ccab48a79bf90a
Author: Peter Simonsson <peter.simonsson@gmail.com>
Date:   Sun Aug 15 13:51:31 2010 +0200

    Add some space between key and value in nick tooltips
    
    Using a space character doesn't really work so set the cellspacing on
    the table instead.

diff --git a/src/irc/channelnick.cpp b/src/irc/channelnick.cpp
index 04fa4a6..e7740cc 100644
--- a/src/irc/channelnick.cpp
+++ b/src/irc/channelnick.cpp
@@ -191,7 +191,7 @@ QString ChannelNick::tooltip() const
 
     tooltip << "<qt>";
 
-    tooltip << "<table cellspacing=\"0\" cellpadding=\"0\">";
+    tooltip << "<table cellspacing=\"5\" cellpadding=\"0\">";
 
     m_nickInfo->tooltipTableData(tooltip);
 
@@ -205,7 +205,7 @@ QString ChannelNick::tooltip() const
     //if(modes.empty()) modes << i18n("A normal user");
     if(!modes.empty())
     {
-        tooltip << "<tr><td><b>" << i18n("Mode") << ": </b></td><td>" << modes.join(", ") << "</td></tr>";
+        tooltip << "<tr><td><b>" << i18n("Mode") << ":</b></td><td>" << modes.join(", ") << "</td></tr>";
     }
     tooltip << "</table></qt>";
     //kDebug() << strTooltip ;
diff --git a/src/irc/nickinfo.cpp b/src/irc/nickinfo.cpp
index 7bf9936..e768d0d 100644
--- a/src/irc/nickinfo.cpp
+++ b/src/irc/nickinfo.cpp
@@ -251,7 +251,7 @@ QString NickInfo::tooltip() const
     QTextStream tooltip( &strTooltip, QIODevice::WriteOnly );
     tooltip << "<qt>";
 
-    tooltip << "<table cellspacing=\"0\" cellpadding=\"0\">";
+    tooltip << "<table cellspacing=\"5\" cellpadding=\"0\">";
     tooltipTableData(tooltip);
     tooltip << "</table></qt>";
     return strTooltip;
@@ -338,35 +338,35 @@ void NickInfo::tooltipTableData(QTextStream &tooltip) const
     tooltip << "</td></tr>";
     if(!m_addressee.emails().isEmpty())
     {
-        tooltip << "<tr><td><b>" << i18n("Email") << ": </b></td><td>";
+        tooltip << "<tr><td><b>" << i18n("Email") << ":</b></td><td>";
         tooltip << m_addressee.emails().join(", ");
         tooltip << "</td></tr>";
     }
 
     if(!m_addressee.organization().isEmpty())
     {
-        tooltip << "<tr><td><b>" << m_addressee.organizationLabel() << ": </b></td><td>" << m_addressee.organization() << "</td></tr>";
+        tooltip << "<tr><td><b>" << m_addressee.organizationLabel() << ":</b></td><td>" << m_addressee.organization() << "</td></tr>";
     }
     if(!m_addressee.role().isEmpty())
     {
-        tooltip << "<tr><td><b>" << m_addressee.roleLabel() << ": </b></td><td>" << m_addressee.role() << "</td></tr>";
+        tooltip << "<tr><td><b>" << m_addressee.roleLabel() << ":</b></td><td>" << m_addressee.role() << "</td></tr>";
     }
     KABC::PhoneNumber::List numbers = m_addressee.phoneNumbers();
     for( KABC::PhoneNumber::List::ConstIterator it = numbers.constBegin(); it != numbers.constEnd(); ++it)
     {
-        tooltip << "<tr><td><b>" << (*it).typeLabel() << ": </b></td><td>" << (*it).number() << "</td></tr>";
+        tooltip << "<tr><td><b>" << (*it).typeLabel() << ":</b></td><td>" << (*it).number() << "</td></tr>";
     }
     if(!m_addressee.birthday().toString().isEmpty() )
     {
-        tooltip << "<tr><td><b>" << m_addressee.birthdayLabel() << ": </b></td><td>" << m_addressee.birthday().toString("ddd d MMMM yyyy") << "</td></tr>";
+        tooltip << "<tr><td><b>" << m_addressee.birthdayLabel() << ":</b></td><td>" << m_addressee.birthday().toString("ddd d MMMM yyyy") << "</td></tr>";
     }
     if(!getHostmask().isEmpty())
     {
-        tooltip << "<tr><td><b>" << i18n("Hostmask:") << " </b></td><td>" << getHostmask() << "</td></tr>";
+        tooltip << "<tr><td><b>" << i18n("Hostmask:") << "</b></td><td>" << getHostmask() << "</td></tr>";
     }
     if(isAway())
     {
-        tooltip << "<tr><td><b>" << i18n("Away Message:") << " </b></td><td>";
+        tooltip << "<tr><td><b>" << i18n("Away&nbsp;Message:") << "</b></td><td>";
         if(!getAwayMessage().isEmpty())
             tooltip << getAwayMessage();
         else
@@ -375,7 +375,7 @@ void NickInfo::tooltipTableData(QTextStream &tooltip) const
     }
     if(!getOnlineSince().toString().isEmpty())
     {
-        tooltip << "<tr><td><b>" << i18n("Online Since:") << " </b></td><td>" << getPrettyOnlineSince() << "</td></tr>";
+        tooltip << "<tr><td><b>" << i18n("Online&nbsp;Since:") << "</b></td><td>" << getPrettyOnlineSince() << "</td></tr>";
     }
 
 }
diff --git a/src/irc/query.cpp b/src/irc/query.cpp
index 17398c9..c56f251 100644
--- a/src/irc/query.cpp
+++ b/src/irc/query.cpp
@@ -521,7 +521,7 @@ void Query::nickInfoChanged()
 
         tooltip << "<qt>";
 
-        tooltip << "<table cellspacing=\"0\" cellpadding=\"0\">";
+        tooltip << "<table cellspacing=\"5\" cellpadding=\"0\">";
 
         m_nickInfo->tooltipTableData(tooltip);
 

commit a64122d8b578e0adc9680bc1ad3a8b0d7fb20631
Author: Peter Simonsson <peter.simonsson@gmail.com>
Date:   Sun Aug 15 13:57:10 2010 +0200

    Remove irc markup from real name in nicklist.
    
    Also clean up the code a bit.
    BUG:247882

diff --git a/src/irc/nick.cpp b/src/irc/nick.cpp
index cef0043..298eafb 100644
--- a/src/irc/nick.cpp
+++ b/src/irc/nick.cpp
@@ -150,16 +150,18 @@ QString Nick::calculateLabel1() const
     NickInfoPtr nickinfo = getChannelNick()->getNickInfo();
     KABC::Addressee addressee = nickinfo->getAddressee();
 
+    QString retString = nickinfo->getNickname();
+
     if(!addressee.realName().isEmpty())           //if no addressee, realName will be empty
     {
-        return nickinfo->getNickname() + " (" + addressee.realName() + ')';
+        retString += " (" + Konversation::removeIrcMarkup(addressee.realName()) + ')';
     }
     else if(Preferences::self()->showRealNames() && !nickinfo->getRealName().isEmpty())
     {
-        return nickinfo->getNickname() + " (" + nickinfo->getRealName() + ')';
+        retString += " (" + Konversation::removeIrcMarkup(nickinfo->getRealName()) + ')';
     }
 
-    return nickinfo->getNickname();
+    return retString;
 }
 
 QString Nick::calculateLabel2() const

commit e5fa802859f8090479bdc6c032d993df76342b1e
Author: Eike Hein <hein@kde.org>
Date:   Sun Aug 15 19:52:54 2010 +0200

    Changelog update.

diff --git a/ChangeLog b/ChangeLog
index c500b5f..c4d85d0 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -123,6 +123,11 @@ Changes since 1.3.1:
   current virtual desktop if shown using this action (if the window is
   already shown on another desktop, it will be moved to the current desktop
   rather than hidden).
+* Fixed a bug causing a very wide minimum window width when a query tab with
+  very long user information in the header area was open.
+* Formatting control codes (e.g. for colors) in user real names are now fil-
+  tered out before the names are shown in the nickname list when the "Show
+  real names in nickname list" option is enabled.
 
 
 Changes from 1.3 to 1.3.1:

commit 7feddb02af2d8913dc49cd69f7fdf71ecd43d8c6
Author: Eike Hein <hein@kde.org>
Date:   Sun Aug 15 19:54:02 2010 +0200

    Forgot this one

diff --git a/ChangeLog b/ChangeLog
index c4d85d0..12bbf64 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -128,6 +128,9 @@ Changes since 1.3.1:
 * Formatting control codes (e.g. for colors) in user real names are now fil-
   tered out before the names are shown in the nickname list when the "Show
   real names in nickname list" option is enabled.
+* The layout of user information tooltips (shown e.g. when hovering a nick
+  in the nickname list or the header area of a query tab) has been improved
+  slightly.
 
 
 Changes from 1.3 to 1.3.1:

commit 0d511fcecca363ba5a47c5b10eb8124355ff6e57
Author: Andrius Štikonas <stikonas@gmail.com>
Date:   Sun Aug 15 18:49:22 2010 +0300

    Replace two QSpinBoxes with KIntSpinBoxes and add support for plural suffixes.

diff --git a/src/config/dcc_config.cpp b/src/config/dcc_config.cpp
index 9ccd547..15c308b 100644
--- a/src/config/dcc_config.cpp
+++ b/src/config/dcc_config.cpp
@@ -29,6 +29,8 @@ DCC_Config::DCC_Config(QWidget *parent, const char* name) :
     connect(kcfg_DccMethodToGetOwnIp, SIGNAL(activated(int)), this, SLOT(dccMethodChanged(int)));
     connect(kcfg_DccUPnP, SIGNAL(stateChanged( int )), this, SLOT (dccUPnPChanged( int )));
     dccMethodChanged(kcfg_DccMethodToGetOwnIp->currentIndex());
+    kcfg_DccBufferSize->setSuffix(ki18np(" byte", " bytes"));
+    kcfg_DccSendTimeout->setSuffix(ki18np(" second", " seconds"));
 }
 
 void DCC_Config::showEvent(QShowEvent *event)
diff --git a/src/config/dcc_configui.ui b/src/config/dcc_configui.ui
index 970b150..d531684 100644
--- a/src/config/dcc_configui.ui
+++ b/src/config/dcc_configui.ui
@@ -130,10 +130,7 @@ the Free Software Foundation; either version 2 of the License, or
     </widget>
    </item>
    <item row="11" column="2">
-    <widget class="QSpinBox" name="kcfg_DccSendTimeout">
-     <property name="suffix">
-      <string> sec</string>
-     </property>
+    <widget class="KIntSpinBox" name="kcfg_DccSendTimeout">
      <property name="minimum">
       <number>1</number>
      </property>
@@ -172,10 +169,7 @@ the Free Software Foundation; either version 2 of the License, or
     </widget>
    </item>
    <item row="12" column="2">
-    <widget class="QSpinBox" name="kcfg_DccBufferSize">
-     <property name="suffix">
-      <string> bytes</string>
-     </property>
+    <widget class="KIntSpinBox" name="kcfg_DccBufferSize">
      <property name="minimum">
       <number>1024</number>
      </property>
@@ -478,6 +472,13 @@ the Free Software Foundation; either version 2 of the License, or
   <include location="local">kpushbutton.h</include>
   <include location="local">klineedit.h</include>
  </includes>
+ <customwidgets>
+  <customwidget>
+   <class>KIntSpinBox</class>
+   <extends>QSpinBox</extends>
+   <header>knuminput.h</header>
+  </customwidget>
+ </customwidgets>
  <resources/>
  <connections>
   <connection>

commit de8d4d6ddbf2a9890b065e40d8bf485e1a6a004d
Author: Eike Hein <hein@kde.org>
Date:   Mon Aug 16 05:59:08 2010 +0200

    *sprays a little Typo-B-Gone onto some lines*

diff --git a/src/irc/server.h b/src/irc/server.h
index cb5047f..12db06b 100644
--- a/src/irc/server.h
+++ b/src/irc/server.h
@@ -89,7 +89,7 @@ class Server : public QObject
         ~Server();
 
         void cycle();
-        void abortScheduledRecration() { m_recreationScheduled = false; }
+        void abortScheduledRecreation() { m_recreationScheduled = false; }
 
         int connectionId() { return m_connectionId; }
 
diff --git a/src/viewer/statuspanel.cpp b/src/viewer/statuspanel.cpp
index 4745c30..4fdf503 100644
--- a/src/viewer/statuspanel.cpp
+++ b/src/viewer/statuspanel.cpp
@@ -259,7 +259,7 @@ bool StatusPanel::closeYourself(bool confirm)
     {
         m_recreationScheduled = false;
 
-        m_server->abortScheduledRecration();
+        m_server->abortScheduledRecreation();
     }
 
     return false;

commit 00a343ede8e4bb7ad98c0cba3651eeb2cf8cda43
Author: Eike Hein <hein@kde.org>
Date:   Tue Aug 17 02:29:20 2010 +0200

    * Fix URL opening in the Channel List panel list entry context menu.
    * Port the link detection that fills the menu to the general link
      detection code (it was using its own custom code before), much better
      now.

diff --git a/ChangeLog b/ChangeLog
index 12bbf64..035477a 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -114,6 +114,10 @@ Changes since 1.3.1:
   - Numerous improvements to email link handling: User names containing the
     plus sign are now handled correctly, opening email links from the URL
     Catcher works now and others.
+  - The URL detection for the "Open URL" sub-menu in the list entry context
+    menu in Channel List tabs now uses the same infrastructure as link detec-
+    tion elsewhere rather than separate code, making it massively better com-
+    pared to previous versions.
   - Average spreed of link detection has improved slightly.
 * Incoming actions (i.e. "/me") without an argument are now handled properly.
 * Fixed a number of crashes on illegal data from the server.
@@ -131,6 +135,9 @@ Changes since 1.3.1:
 * The layout of user information tooltips (shown e.g. when hovering a nick
   in the nickname list or the header area of a query tab) has been improved
   slightly.
+* Fixed bug causing the opening of URLs via the "Open URL" sub-menu in the
+  list entry context menu in Channel List tabs not to work.
+
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/irc/channellistpanel.cpp b/src/irc/channellistpanel.cpp
index 229374f..3208dff 100644
--- a/src/irc/channellistpanel.cpp
+++ b/src/irc/channellistpanel.cpp
@@ -17,6 +17,7 @@
 #include "preferences.h"
 #include "server.h"
 #include "common.h"
+#include "application.h"
 
 #include <QHeaderView>
 #include <QTextDocument>
@@ -445,9 +446,9 @@ void ChannelListPanel::applyFilterClicked()
 void ChannelListPanel::contextMenu(const QPoint& p)
 {
     QModelIndex item = m_channelListView->indexAt(p);
-    if(!item.isValid()) return;
+    if (!item.isValid()) return;
 
-    if(item.column() != 2)
+    if (item.column() != 2)
         item = item.sibling(item.row(),2);
 
     QString filteredLine = item.data().toString();
@@ -464,61 +465,26 @@ void ChannelListPanel::contextMenu(const QPoint& p)
     menu->addSeparator();
 
     // open URL submenu
-    KMenu *showURLmenu = new KMenu("Open URL", menu);
-
-    QRegExp pattern("((http://|https://|ftp://|nntp://|news://|gopher://|www\\.|ftp\\.)"
-    // IP Address
-        "([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}|"
-    // Decimal IP address
-        "[0-9]{1,12}|"
-    // Standard host name
-        "[a-z0-9][\\.@%a-z0-9_-]+\\.[a-z]{2,}"
-    // Port number, path to document
-        ")(:[0-9]{1,5})?(/[^)>\"'\\s]*)?|"
-    // eDonkey2000 links need special treatment
-        "ed2k://\\|([^|]+\\|){4})");
-
-    pattern.setCaseSensitivity(Qt::CaseInsensitive);
-
-    int index=0;
-    while (static_cast<int>(index) < filteredLine.length())
-    {
-        if (pattern.indexIn(filteredLine, index) != -1)
-        {
-            // Remember where we found the url
-            index=pattern.pos();
+    KMenu* showURLmenu = new KMenu("Open URL", menu);
 
-            // Extract url
-            QString url=pattern.capturedTexts()[0];
-            QString href(url);
+    QList<QPair<int, int> > urlRanges = Konversation::getUrlRanges(filteredLine);
+    QPair<int, int> range;
 
-            // clean up href for browser
-            if(href.startsWith(QLatin1String("www."))) href="http://"+href;
-            else if(href.startsWith(QLatin1String("ftp."))) href="ftp://"+href;
+    foreach(range, urlRanges)
+    {
+        QString url = filteredLine.mid(range.first, range.second);
 
-            // Replace all spaces with %20 in href
-            href.replace(' ', "%20");
-            href.replace('&', "&&");
+        QAction* action = new QAction(showURLmenu);
+        action->setText(url);
+        action->setData(url);
 
-            // next search begins right after the link
-            index += url.length();
+        showURLmenu->addAction(action);
 
-            // tell the program that we have found a new url
-            QAction* action = new QAction(showURLmenu);
-            action->setText(href);
-            showURLmenu->addAction(action);
-            connect(action, SIGNAL(triggered()), this, SLOT(openURL()));
-        }
-        else
-        {
-            index++;
-        }
+        connect(action, SIGNAL(triggered()), this, SLOT(openURL()));
     }
 
     if (showURLmenu->actions().count()==0)
-    {
         showURLmenu->setEnabled(false);
-    }
 
     menu->addMenu(showURLmenu);
     menu->exec(QCursor::pos());
@@ -531,7 +497,10 @@ void ChannelListPanel::openURL()
     const QAction* action = static_cast<const QAction*>(sender());
 
     if (action)
-        new KRun(KUrl(action->text().replace("&&","&")), this);
+    {
+        Application* konvApp = static_cast<Application *>(kapp);
+        konvApp->openUrl(action->data().toString());
+    }
 }
 
 bool ChannelListPanel::closeYourself()

commit b3c39826bc31a67d2f2d9bfd49e6435896b528be
Author: Eike Hein <hein@kde.org>
Date:   Tue Aug 17 03:42:21 2010 +0200

    foreach() can't take parameters with commas, which makes it hard to accomodate Krazy2's non-const ref check, so use an iterator instead ...

diff --git a/src/irc/channellistpanel.cpp b/src/irc/channellistpanel.cpp
index 3208dff..3c3a070 100644
--- a/src/irc/channellistpanel.cpp
+++ b/src/irc/channellistpanel.cpp
@@ -468,11 +468,14 @@ void ChannelListPanel::contextMenu(const QPoint& p)
     KMenu* showURLmenu = new KMenu("Open URL", menu);
 
     QList<QPair<int, int> > urlRanges = Konversation::getUrlRanges(filteredLine);
-    QPair<int, int> range;
+    QPair<int, int> urlRange;
+    QListIterator<QPair<int, int> > i(urlRanges);
 
-    foreach(range, urlRanges)
+    while (i.hasNext())
     {
-        QString url = filteredLine.mid(range.first, range.second);
+        urlRange = i.next();
+
+        QString url = filteredLine.mid(urlRange.first, urlRange.second);
 
         QAction* action = new QAction(showURLmenu);
         action->setText(url);

commit 5b5d5d212833306630b2cc6a474a69a4f17843ef
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Thu Aug 26 02:13:03 2010 +0200

    - new ColorPicker for dcc wboard

diff --git a/ChangeLog b/ChangeLog
index 035477a..e5e5c45 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -137,6 +137,7 @@ Changes since 1.3.1:
   slightly.
 * Fixed bug causing the opening of URLs via the "Open URL" sub-menu in the
   list entry context menu in Channel List tabs not to work.
+* Added Color Picker tool to DCC WHITEBOARD, to select a color from the image
 
 
 
diff --git a/src/dcc/whiteboard.cpp b/src/dcc/whiteboard.cpp
index ee2e7f5..c4435dc 100644
--- a/src/dcc/whiteboard.cpp
+++ b/src/dcc/whiteboard.cpp
@@ -75,6 +75,9 @@ namespace Konversation
                     this, SLOT(usedText(int, int, const QString&)));
             connect(m_paintArea, SIGNAL(usedTextExtended(int, int, const QFont&, const QColor&, const QColor&, const QString&)),
                     this, SLOT(usedTextExtended(int, int, const QFont&, const QColor&, const QColor&, const QString&)));
+
+            connect(m_paintArea, SIGNAL(colorPicked(const QColor&)),
+                    m_toolbar, SLOT(setForegroundColor(const QColor&)));
         }
 
         WhiteBoard::~WhiteBoard()
diff --git a/src/dcc/whiteboardcolorchooser.cpp b/src/dcc/whiteboardcolorchooser.cpp
index 12cc810..7f32b19 100644
--- a/src/dcc/whiteboardcolorchooser.cpp
+++ b/src/dcc/whiteboardcolorchooser.cpp
@@ -82,11 +82,13 @@ namespace Konversation
         void WhiteBoardColorChooser::setForegroundColor (const QColor& color)
         {
             m_foregroundColor = color;
+            update();
         }
 
         void WhiteBoardColorChooser::setBackgroundColor (const QColor& color)
         {
             m_backgroundColor = color;
+            update();
         }
 
         void WhiteBoardColorChooser::mouseReleaseEvent(QMouseEvent *e)
diff --git a/src/dcc/whiteboardglobals.h b/src/dcc/whiteboardglobals.h
index 14871f7..a78b32c 100644
--- a/src/dcc/whiteboardglobals.h
+++ b/src/dcc/whiteboardglobals.h
@@ -41,7 +41,8 @@ namespace Konversation
                     Selection       = 64,
                     Text,
                     TextExtended,
-                    Stamp
+                    Stamp,
+                    ColorPicker
                 };
 
                 enum WhiteBoardCommand
diff --git a/src/dcc/whiteboardpaintarea.cpp b/src/dcc/whiteboardpaintarea.cpp
index c9f2276..92bbc10 100644
--- a/src/dcc/whiteboardpaintarea.cpp
+++ b/src/dcc/whiteboardpaintarea.cpp
@@ -368,6 +368,7 @@ namespace Konversation
                 case WhiteBoardGlobals::Eraser:
                 case WhiteBoardGlobals::FloodFill:
                 case WhiteBoardGlobals::Stamp:
+                case WhiteBoardGlobals::ColorPicker:
                     break;
 
                 case WhiteBoardGlobals::Rectangle:
@@ -539,6 +540,12 @@ namespace Konversation
                     //handle in mousePressEvent
                     break;
 
+                case WhiteBoardGlobals::ColorPicker:
+                    {
+                        QImage image = m_imagePixmap->toImage();
+                        emit colorPicked(QColor(image.pixel(event->pos().x(), event->pos().y())));
+                    }
+                    break;
                 case WhiteBoardGlobals::Stamp:
                 case WhiteBoardGlobals::Selection:
                     kDebug() << "TODO implement whiteboard Selection/Stamp";
diff --git a/src/dcc/whiteboardpaintarea.h b/src/dcc/whiteboardpaintarea.h
index 69b0790..40740d9 100644
--- a/src/dcc/whiteboardpaintarea.h
+++ b/src/dcc/whiteboardpaintarea.h
@@ -87,6 +87,7 @@ namespace Konversation
             void usedFloodFill(int x, int y, const QColor& color);
             void usedText(int x, int y, const QString& text);
             void usedTextExtended(int x, int y, const QFont& font, const QColor& textColor, const QColor& background, const QString& text);
+            void colorPicked(const QColor& color);
 
         protected:
             virtual void paintEvent(QPaintEvent * event);
diff --git a/src/dcc/whiteboardtoolbar.cpp b/src/dcc/whiteboardtoolbar.cpp
index e0b0587..62842fe 100644
--- a/src/dcc/whiteboardtoolbar.cpp
+++ b/src/dcc/whiteboardtoolbar.cpp
@@ -91,6 +91,11 @@ namespace Konversation
             m_arrowPushButton->setFlat(true);
             m_toggleButtonHash.insert(WhiteBoardGlobals::Arrow, m_arrowPushButton);
 
+            m_colorPickerPushButton->setIcon(KIcon("color-picker"));
+            m_colorPickerPushButton->setToolTip(i18n("Select a color from the image"));
+            m_colorPickerPushButton->setFlat(true);
+            m_toggleButtonHash.insert(WhiteBoardGlobals::ColorPicker, m_colorPickerPushButton);
+
             m_lineWidthSlider->setMaximum(WhiteBoardGlobals::MaxPenWidth);
 
             connectToggleButtons();
@@ -126,11 +131,21 @@ namespace Konversation
             return m_colorChooser->foregroundColor();
         }
 
+        void WhiteBoardToolBar::setForegroundColor(const QColor& foregroundColor)
+        {
+            m_colorChooser->setForegroundColor(foregroundColor);
+        }
+
         QColor WhiteBoardToolBar::backgroundColor() const
         {
             return m_colorChooser->backgroundColor();
         }
 
+        void WhiteBoardToolBar::setBackgroundColor(const QColor& backgroundColor)
+        {
+            m_colorChooser->setBackgroundColor(backgroundColor);
+        }
+
         void WhiteBoardToolBar::disableTool(WhiteBoardGlobals::WhiteBoardTool tool)
         {
             KPushButton* button = m_toggleButtonHash.value(tool);
@@ -198,6 +213,7 @@ namespace Konversation
             connect(m_eraserPushButton, SIGNAL(toggled(bool)), this, SLOT(eraseToggled(bool)));
             connect(m_fillPushButton, SIGNAL(toggled(bool)), this, SLOT(fillToggled(bool)));
             connect(m_arrowPushButton, SIGNAL(toggled(bool)), this, SLOT(arrowToggled(bool)));
+            connect(m_colorPickerPushButton, SIGNAL(toggled(bool)), this, SLOT(colorPickerToggled(bool)));
         }
 
         void WhiteBoardToolBar::disconnectToggleButtons()
@@ -212,6 +228,7 @@ namespace Konversation
             disconnect(m_eraserPushButton, 0, 0, 0);
             disconnect(m_fillPushButton, 0, 0, 0);
             disconnect(m_arrowPushButton, 0, 0, 0);
+            disconnect(m_colorPickerPushButton, 0, 0, 0);
         }
 
         void WhiteBoardToolBar::clearClicked()
@@ -236,6 +253,14 @@ namespace Konversation
             delete fileDialog;
         }
 
+        void WhiteBoardToolBar::colorPickerToggled(bool checked)
+        {
+            handleToggleButton(m_colorPickerPushButton, checked, WhiteBoardGlobals::ColorPicker);
+            setLineWidthVisible(false);
+            setFormOptionVisible(false);
+            setFontDialogVisible(false);
+        }
+
         void WhiteBoardToolBar::arrowToggled (bool checked)
         {
             handleToggleButton(m_arrowPushButton, checked, WhiteBoardGlobals::Arrow);
diff --git a/src/dcc/whiteboardtoolbar.h b/src/dcc/whiteboardtoolbar.h
index 60bc300..72b151d 100644
--- a/src/dcc/whiteboardtoolbar.h
+++ b/src/dcc/whiteboardtoolbar.h
@@ -53,6 +53,9 @@ namespace Konversation
                 void setSupportedTextType(Konversation::DCC::WhiteBoardToolBar::TextType textType);
                 Konversation::DCC::WhiteBoardToolBar::TextType textType() const;
 
+                void setForegroundColor(const QColor& foregroundColor);
+                void setBackgroundColor(const QColor& backgroundColor);
+
             signals:
                 void toolChanged(Konversation::DCC::WhiteBoardGlobals::WhiteBoardTool tool);
 
@@ -85,6 +88,7 @@ namespace Konversation
                 void eraseToggled(bool checked);
                 void fillToggled(bool checked);
                 void arrowToggled(bool checked);
+                void colorPickerToggled(bool checked);
 
                 void updateLineWidthPixmap(int lineWidth);
 
diff --git a/src/dcc/whiteboardtoolbarui.ui b/src/dcc/whiteboardtoolbarui.ui
index 710c84d..ec01a82 100644
--- a/src/dcc/whiteboardtoolbarui.ui
+++ b/src/dcc/whiteboardtoolbarui.ui
@@ -7,7 +7,7 @@
     <x>0</x>
     <y>0</y>
     <width>114</width>
-    <height>312</height>
+    <height>333</height>
    </rect>
   </property>
   <property name="sizePolicy">
@@ -32,8 +32,17 @@
    <property name="spacing">
     <number>2</number>
    </property>
-   <property name="margin">
-    <number>2</number>
+   <property name="leftMargin">
+    <number>1</number>
+   </property>
+   <property name="topMargin">
+    <number>0</number>
+   </property>
+   <property name="rightMargin">
+    <number>1</number>
+   </property>
+   <property name="bottomMargin">
+    <number>0</number>
    </property>
    <item>
     <layout class="QGridLayout" name="gridLayout_2">
@@ -156,6 +165,16 @@
        </property>
       </widget>
      </item>
+     <item row="4" column="1">
+      <widget class="KPushButton" name="m_colorPickerPushButton">
+       <property name="checkable">
+        <bool>true</bool>
+       </property>
+       <property name="flat">
+        <bool>true</bool>
+       </property>
+      </widget>
+     </item>
     </layout>
    </item>
    <item>
@@ -236,7 +255,7 @@
      </property>
      <property name="maximumSize">
       <size>
-       <width>106</width>
+       <width>109</width>
        <height>50</height>
       </size>
      </property>

commit 01c0b5d8a3e28565427e577dc744658b9dc02ba8
Author: Eike Hein <hein@kde.org>
Date:   Thu Aug 26 14:17:56 2010 +0200

    Cleanup.

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 79417d0..a0faad3 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -10,7 +10,7 @@
 /*
   Copyright (C) 2002 Dario Abatianni <eisfuchs@tigress.com>
   Copyright (C) 2005-2007 Peter Simonsson <psn@linux.se>
-  Copyright (C) 2006-2008 Eike Hein <hein@kde.org>
+  Copyright (C) 2006-2010 Eike Hein <hein@kde.org>
   Copyright (C) 2004-2009 Eli Mackenzie <argonel@gmail.com>
 */
 
@@ -54,6 +54,10 @@
 #include <KToggleAction>
 #include <KIO/CopyJob>
 
+class Server;
+class ChatWindow;
+class SearchBar;
+
 class QPixmap;
 class QDropEvent;
 class QDragEnterEvent;
@@ -61,25 +65,6 @@ class QEvent;
 
 class KMenu;
 
-class Server;
-class ChatWindow;
-class SearchBar;
-
-#if 0
-//IRCView::getPopup() const
-//IRCView::searchNext(bool)
-IRCView::clear()
-//IRCView::search(QString const&, bool, bool, bool, bool)
-//IRCView::setNickAndChannelContextMenusEnabled(bool)
-//IRCView::setupNickPopupMenu()
-//IRCView::enableParagraphSpacing()
-//IRCView::setViewBackground(QColor const&, QString const&)
-//IRCView::getContextNick() const
-//IRCView::setupQueryPopupMenu() { m_nickPopup = 0; }
-//IRCView::hasLines()
-//IRCView::setupChannelPopupMenu()
-#endif
-
 using namespace Konversation;
 
 class ScrollBarPin
@@ -146,7 +131,7 @@ IRCView::IRCView(QWidget* parent, Server* newServer) : KTextBrowser(parent), m_n
 
     setAcceptDrops(false);
 
-    //// Marker lines
+    // Marker lines
     connect(document(), SIGNAL(contentsChange(int, int, int)), SLOT(cullMarkedLine(int, int, int)));
 
     //This assert is here because a bad build environment can cause this to fail. There is a note
@@ -161,78 +146,19 @@ IRCView::IRCView(QWidget* parent, Server* newServer) : KTextBrowser(parent), m_n
     document()->documentLayout()->registerHandler(IRCView::RememberLine, &markerFormatObject);
 
 
-    //// Other Stuff
-
-    //m_disableEnsureCursorVisible = false;
-    //m_wasPainted = false;
-
     connect(this, SIGNAL(anchorClicked(QUrl)), this, SLOT(anchorClicked(QUrl)));
     connect( this, SIGNAL( highlighted ( const QString &) ), this, SLOT( highlightedSlot( const QString &) ) );
     setOpenLinks(false);
     setUndoRedoEnabled(0);
     document()->setDefaultStyleSheet("a.nick:link {text-decoration: none}");
     setWordWrapMode(QTextOption::WrapAtWordBoundaryOrAnywhere);
-    //setNotifyClick(true); // TODO FIXME import the rest of the link handling
     setFocusPolicy(Qt::ClickFocus);
     setReadOnly(true);
     viewport()->setCursor(Qt::ArrowCursor);
     setTextInteractionFlags(Qt::TextBrowserInteraction);
     viewport()->setMouseTracking(true);
 
-//     // set basic style sheet for <p> to make paragraph spacing possible
-//     Q3StyleSheet* sheet=new Q3StyleSheet(this,"ircview_style_sheet");
-//     new Q3StyleSheetItem(sheet,"p");
-//     setStyleSheet(sheet);
-
-    m_popup = new KMenu(this);
-    m_popup->setObjectName("ircview_context_menu");
-
-    m_popup->addSeparator();
-
-    m_copyUrlClipBoard = new KAction(this);
-    m_copyUrlClipBoard->setIcon(KIcon("edit-copy"));
-    m_copyUrlClipBoard->setText(i18n("Copy Link Address"));
-    connect(m_copyUrlClipBoard, SIGNAL(triggered()), SLOT(copyUrl()));
-    m_popup->addAction(m_copyUrlClipBoard);
-    m_copyUrlClipBoard->setVisible( false );
-
-    m_bookmark = new KAction(this);
-    m_bookmark->setIcon(KIcon("bookmark-new"));
-    m_bookmark->setText(i18n("Add to Bookmarks"));
-    connect(m_bookmark, SIGNAL(triggered()), SLOT(slotBookmark()));
-    m_popup->addAction(m_bookmark);
-    m_bookmark->setVisible( false );
-
-    m_saveUrl = new KAction(this);
-    m_saveUrl->setIcon(KIcon("document-save"));
-    m_saveUrl->setText(i18n("Save Link As..."));
-    connect(m_saveUrl, SIGNAL(triggered()), SLOT(saveLinkAs()));
-    m_popup->addAction(m_saveUrl);
-    m_saveUrl->setVisible( false );
-
-    QAction * toggleMenuBarSeparator = m_popup->addSeparator();
-    toggleMenuBarSeparator->setVisible(false);
-    copyUrlMenuSeparator = m_popup->addSeparator();
-    copyUrlMenuSeparator->setVisible( false );
-
-    QAction *copyAct = new KAction(this);
-    copyAct->setIcon(KIcon("edit-copy"));
-    copyAct->setText(i18n("&Copy"));
-    connect(copyAct, SIGNAL(triggered()), SLOT(copy()));
-    m_popup->addAction(copyAct);
-    connect(this, SIGNAL(copyAvailable(bool)), copyAct, SLOT( setEnabled( bool ) ));
-    copyAct->setEnabled( false );
-
-    QAction *selectAllAct = new KAction(this);
-    selectAllAct->setText(i18n("Select All"));
-    connect(selectAllAct, SIGNAL(triggered()), SLOT(selectAll()));
-    m_popup->addAction(selectAllAct);
-
-    QAction *findTextAct = new KAction(this);
-    findTextAct->setIcon(KIcon("edit-find"));
-    findTextAct->setText(i18n("Find Text..."));
-    connect(findTextAct, SIGNAL(triggered()), SLOT(findText()));
-    m_popup->addAction(findTextAct);
+    setupContextMenu();
 
     setServer(newServer);
 
@@ -246,7 +172,6 @@ IRCView::IRCView(QWidget* parent, Server* newServer) : KTextBrowser(parent), m_n
 
 IRCView::~IRCView()
 {
-    delete m_popup;
 }
 
 void IRCView::setServer(Server* newServer)
@@ -325,7 +250,7 @@ bool IRCView::searchNext(bool reversed)
     return find(m_pattern, m_searchFlags);
 }
 
-//// Marker lines
+// Marker lines
 
 #define _S(x) #x << (x)
 void dump_doc(QTextDocument* document)
@@ -612,7 +537,7 @@ void IRCView::appendLine(IRCView::ObjectFormats type)
 }
 
 
-//// Other stuff
+// Other stuff
 
 void IRCView::enableParagraphSpacing() {}
 
@@ -942,13 +867,10 @@ void IRCView::doAppend(const QString& newLine, bool rtl, bool self)
         //don't remove lines if the user has scrolled up to read old lines
         bool atBottom = (verticalScrollBar()->value() == verticalScrollBar()->maximum());
         document()->setMaximumBlockCount(atBottom ? scrollMax : document()->maximumBlockCount() + 1);
-        //setMaximumBlockCount(atBottom ? scrollMax : maximumBlockCount() + 1);
     }
 
     doRawAppend(newLine, rtl);
 
-    //appendHtml(line);
-
     //FIXME: Disable auto-text for DCC Chats since we don't have a server to parse wildcards.
     if (!m_autoTextToSend.isEmpty() && m_server)
     {
@@ -1271,152 +1193,6 @@ bool doHighlight, bool parseURL, bool self)
     return filteredLine;
 }
 
-
-//Context Menu
-
-const QString& IRCView::getContextNick() const
-{
-    return m_currentNick;
-}
-
-void IRCView::clearContextNick()
-{
-    m_currentNick.clear();
-}
-
-KMenu* IRCView::getPopup() const
-{
-    return m_popup;
-}
-
-void IRCView::setNickAndChannelContextMenusEnabled(bool enable)
-{
-    if (m_nickPopup) m_nickPopup->setEnabled(enable);
-    if (m_channelPopup) m_channelPopup->setEnabled(enable);
-}
-
-void IRCView::setupNickPopupMenu(bool isQuery)
-{
-    m_nickPopup = new KMenu(this);
-    m_nickPopup->setObjectName("nicklist_context_menu");
-    m_nickPopup->setTitle(m_currentNick);
-
-    QAction* action = m_nickPopup->addAction(i18n("&Whois"), this, SLOT(handleContextActions()));
-    action->setData(Konversation::Whois);
-    action = m_nickPopup->addAction(i18n("&Version"), this, SLOT(handleContextActions()));
-    action->setData(Konversation::Version);
-    action = m_nickPopup->addAction(i18n("&Ping"), this, SLOT(handleContextActions()));
-    action->setData(Konversation::Ping);
-
-    m_nickPopup->addSeparator();
-
-    if(!isQuery)
-    {
-        QMenu* modes = m_nickPopup->addMenu(i18n("Modes"));
-        action = modes->addAction(i18n("Give Op"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::GiveOp);
-        action->setIcon(KIcon("irc-operator"));
-        action = modes->addAction(i18n("Take Op"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::TakeOp);
-        action->setIcon(KIcon("irc-remove-operator"));
-        action = modes->addAction(i18n("Give Voice"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::GiveVoice);
-        action->setIcon(KIcon("irc-voice"));
-        action = modes->addAction(i18n("Take Voice"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::TakeVoice);
-        action->setIcon(KIcon("irc-unvoice"));
-
-        QMenu* kickban = m_nickPopup->addMenu(i18n("Kick / Ban"));
-        action = kickban->addAction(i18n("Kick"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::Kick);
-        action = kickban->addAction(i18n("Kickban"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::KickBan);
-        action = kickban->addAction(i18n("Ban Nickname"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::BanNick);
-        kickban->addSeparator();
-        action = kickban->addAction(i18n("Ban *!*@*.host"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::BanHost);
-        action = kickban->addAction(i18n("Ban *!*@domain"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::BanDomain);
-        action = kickban->addAction(i18n("Ban *!user@*.host"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::BanUserHost);
-        action = kickban->addAction(i18n("Ban *!user@domain"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::BanUserDomain);
-        kickban->addSeparator();
-        action = kickban->addAction(i18n("Kickban *!*@*.host"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::KickBanHost);
-        action = kickban->addAction(i18n("Kickban *!*@domain"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::KickBanDomain);
-        action = kickban->addAction(i18n("Kickban *!user@*.host"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::KickBanUserHost);
-        action = kickban->addAction(i18n("Kickban *!user@domain"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::KickBanUserDomain);
-    }
-
-    m_ignoreAction = new KToggleAction(i18n("Ignore"), this);
-    m_ignoreAction->setCheckedState(KGuiItem(i18n("Unignore")));
-    m_ignoreAction->setData(Konversation::IgnoreNick);
-    m_nickPopup->addAction(m_ignoreAction);
-    connect(m_ignoreAction, SIGNAL(triggered()), this, SLOT(handleContextActions()));
-
-    m_nickPopup->addSeparator();
-
-    action = m_nickPopup->addAction(i18n("Open Query"), this, SLOT(handleContextActions()));
-    action->setData(Konversation::OpenQuery);
-
-    KConfigGroup config = KGlobal::config()->group("KDE Action Restrictions");
-
-    if(config.readEntry<bool>("allow_downloading", true))
-    {
-        action = m_nickPopup->addAction(SmallIcon("arrow-right-double"),i18n("Send &File..."), this, SLOT(handleContextActions()));
-        action->setData(Konversation::DccSend);
-    }
-
-    m_nickPopup->addSeparator();
-
-    m_addNotifyAction = m_nickPopup->addAction(i18n("Add to Watched Nicks"), this, SLOT(handleContextActions()));
-    m_addNotifyAction->setData(Konversation::AddNotify);
-}
-
-void IRCView::updateNickMenuEntries(const QString& nickname)
-{
-    if (Preferences::isIgnored(nickname))
-    {
-        m_ignoreAction->setChecked(true);
-        m_ignoreAction->setData(Konversation::UnignoreNick);
-    }
-    else
-    {
-        m_ignoreAction->setChecked(false);
-        m_ignoreAction->setData(Konversation::IgnoreNick);
-    }
-
-    if (!m_server || !m_server->getServerGroup() || !m_server->isConnected() || !Preferences::hasNotifyList(m_server->getServerGroup()->id())
-        || Preferences::isNotify(m_server->getServerGroup()->id(), nickname))
-    {
-        m_addNotifyAction->setEnabled(false);
-    }
-    else
-    {
-        m_addNotifyAction->setEnabled(true);
-    }
-}
-
-void IRCView::setupChannelPopupMenu()
-{
-    m_channelPopup = new KMenu(this);
-    m_channelPopup->setObjectName("channel_context_menu");
-    m_channelPopup->setTitle(m_currentChannel);
-
-    QAction* action = m_channelPopup->addAction(i18n("&Join Channel..."), this, SLOT(handleContextActions()));
-    action->setData(Konversation::Join);
-    action->setIcon(KIcon("irc-join-channel"));
-    action = m_channelPopup->addAction(i18n("Get &user list"), this, SLOT(handleContextActions()));
-    action->setData(Konversation::Names);
-    action = m_channelPopup->addAction(i18n("Get &topic"), this, SLOT(handleContextActions()));
-    action->setData(Konversation::Topic);
-}
-
 void IRCView::resizeEvent(QResizeEvent *event)
 {
     ScrollBarPin b(verticalScrollBar());
@@ -1584,12 +1360,13 @@ void IRCView::highlightedSlot(const QString& /*_link*/)
             emit clearStatusBarTempText();
             m_lastStatusText.clear();
         }
-    } else
+    }
+    else
     {
         m_lastStatusText = link;
     }
 
-    if(!link.startsWith('#'))
+    if (!link.startsWith('#'))
     {
         m_isOnNick = false;
         m_isOnChannel = false;
@@ -1598,33 +1375,31 @@ void IRCView::highlightedSlot(const QString& /*_link*/)
             //link therefore != m_lastStatusText  so emit with this new text
             emit setStatusBarTempText(link);
         }
+
         if (link.isEmpty() && m_copyUrlMenu)
         {
-                m_copyUrlClipBoard->setVisible( false );
-                m_bookmark->setVisible( false );
-                m_saveUrl->setVisible( false );
-            copyUrlMenuSeparator->setVisible( false );
+            m_copyUrlClipBoard->setVisible(false);
+            m_bookmark->setVisible(false);
+            m_saveUrl->setVisible(false);
+            copyUrlMenuSeparator->setVisible(false);
             m_copyUrlMenu = false;
 
         }
         else if (!link.isEmpty() && !m_copyUrlMenu)
         {
-                copyUrlMenuSeparator->setVisible( true );
-                m_copyUrlClipBoard->setVisible( true );
-                m_bookmark->setVisible( true );
-                m_saveUrl->setVisible( true );
-            m_copyUrlMenu = true;
-//            m_urlToCopy = link;
+           copyUrlMenuSeparator->setVisible(true);
+           m_copyUrlClipBoard->setVisible(true);
+           m_bookmark->setVisible(true);
+           m_saveUrl->setVisible(true);
+           m_copyUrlMenu = true;
         }
     }
     else if (link.startsWith('#') && !link.startsWith(QLatin1String("##")))
     {
         m_currentNick = link.mid(1);
 
-        if(m_nickPopup)
-        {
+        if (m_nickPopup)
             m_nickPopup->setTitle(m_currentNick);
-        }
 
         m_isOnNick = true;
         emit setStatusBarTempText(i18n("Open a query with %1", m_currentNick));
@@ -1674,6 +1449,208 @@ void IRCView::slotBookmark()
     delete dialog;
 }
 
+// Context Menu
+
+KMenu* IRCView::getPopup() const
+{
+    return m_popup;
+}
+
+void IRCView::setupContextMenu()
+{
+    m_popup = new KMenu(this);
+    m_popup->setObjectName("ircview_context_menu");
+
+    m_popup->addSeparator();
+
+    m_copyUrlClipBoard = new KAction(this);
+    m_copyUrlClipBoard->setIcon(KIcon("edit-copy"));
+    m_copyUrlClipBoard->setText(i18n("Copy Link Address"));
+    connect(m_copyUrlClipBoard, SIGNAL(triggered()), SLOT(copyUrl()));
+    m_popup->addAction(m_copyUrlClipBoard);
+    m_copyUrlClipBoard->setVisible( false );
+
+    m_bookmark = new KAction(this);
+    m_bookmark->setIcon(KIcon("bookmark-new"));
+    m_bookmark->setText(i18n("Add to Bookmarks"));
+    connect(m_bookmark, SIGNAL(triggered()), SLOT(slotBookmark()));
+    m_popup->addAction(m_bookmark);
+    m_bookmark->setVisible( false );
+
+    m_saveUrl = new KAction(this);
+    m_saveUrl->setIcon(KIcon("document-save"));
+    m_saveUrl->setText(i18n("Save Link As..."));
+    connect(m_saveUrl, SIGNAL(triggered()), SLOT(saveLinkAs()));
+    m_popup->addAction(m_saveUrl);
+    m_saveUrl->setVisible( false );
+
+    QAction* toggleMenuBarSeparator = m_popup->addSeparator();
+    toggleMenuBarSeparator->setVisible(false);
+    copyUrlMenuSeparator = m_popup->addSeparator();
+    copyUrlMenuSeparator->setVisible( false );
+
+    QAction* copyAct = new KAction(this);
+    copyAct->setIcon(KIcon("edit-copy"));
+    copyAct->setText(i18n("&Copy"));
+    connect(copyAct, SIGNAL(triggered()), SLOT(copy()));
+    m_popup->addAction(copyAct);
+    connect(this, SIGNAL(copyAvailable(bool)), copyAct, SLOT( setEnabled( bool ) ));
+    copyAct->setEnabled( false );
+
+    QAction* selectAllAct = new KAction(this);
+    selectAllAct->setText(i18n("Select All"));
+    connect(selectAllAct, SIGNAL(triggered()), SLOT(selectAll()));
+    m_popup->addAction(selectAllAct);
+
+    QAction* findTextAct = new KAction(this);
+    findTextAct->setIcon(KIcon("edit-find"));
+    findTextAct->setText(i18n("Find Text..."));
+    connect(findTextAct, SIGNAL(triggered()), SLOT(findText()));
+    m_popup->addAction(findTextAct);
+
+    m_webShortcutMenu = new KMenu(this);
+    m_popup->addMenu(m_webShortcutMenu);
+    m_webShortcutMenu->menuAction()->setIcon(KIcon("preferences-web-browser-shortcuts"));
+    m_webShortcutMenu->menuAction()->setVisible(false);
+}
+void IRCView::setupNickPopupMenu(bool isQuery)
+{
+    m_nickPopup = new KMenu(this);
+    m_nickPopup->setObjectName("nicklist_context_menu");
+    m_nickPopup->setTitle(m_currentNick);
+
+    QAction* action = m_nickPopup->addAction(i18n("&Whois"), this, SLOT(handleContextActions()));
+    action->setData(Konversation::Whois);
+    action = m_nickPopup->addAction(i18n("&Version"), this, SLOT(handleContextActions()));
+    action->setData(Konversation::Version);
+    action = m_nickPopup->addAction(i18n("&Ping"), this, SLOT(handleContextActions()));
+    action->setData(Konversation::Ping);
+
+    m_nickPopup->addSeparator();
+
+    if(!isQuery)
+    {
+        QMenu* modes = m_nickPopup->addMenu(i18n("Modes"));
+        action = modes->addAction(i18n("Give Op"), this, SLOT(handleContextActions()));
+        action->setData(Konversation::GiveOp);
+        action->setIcon(KIcon("irc-operator"));
+        action = modes->addAction(i18n("Take Op"), this, SLOT(handleContextActions()));
+        action->setData(Konversation::TakeOp);
+        action->setIcon(KIcon("irc-remove-operator"));
+        action = modes->addAction(i18n("Give Voice"), this, SLOT(handleContextActions()));
+        action->setData(Konversation::GiveVoice);
+        action->setIcon(KIcon("irc-voice"));
+        action = modes->addAction(i18n("Take Voice"), this, SLOT(handleContextActions()));
+        action->setData(Konversation::TakeVoice);
+        action->setIcon(KIcon("irc-unvoice"));
+
+        QMenu* kickban = m_nickPopup->addMenu(i18n("Kick / Ban"));
+        action = kickban->addAction(i18n("Kick"), this, SLOT(handleContextActions()));
+        action->setData(Konversation::Kick);
+        action = kickban->addAction(i18n("Kickban"), this, SLOT(handleContextActions()));
+        action->setData(Konversation::KickBan);
+        action = kickban->addAction(i18n("Ban Nickname"), this, SLOT(handleContextActions()));
+        action->setData(Konversation::BanNick);
+        kickban->addSeparator();
+        action = kickban->addAction(i18n("Ban *!*@*.host"), this, SLOT(handleContextActions()));
+        action->setData(Konversation::BanHost);
+        action = kickban->addAction(i18n("Ban *!*@domain"), this, SLOT(handleContextActions()));
+        action->setData(Konversation::BanDomain);
+        action = kickban->addAction(i18n("Ban *!user@*.host"), this, SLOT(handleContextActions()));
+        action->setData(Konversation::BanUserHost);
+        action = kickban->addAction(i18n("Ban *!user@domain"), this, SLOT(handleContextActions()));
+        action->setData(Konversation::BanUserDomain);
+        kickban->addSeparator();
+        action = kickban->addAction(i18n("Kickban *!*@*.host"), this, SLOT(handleContextActions()));
+        action->setData(Konversation::KickBanHost);
+        action = kickban->addAction(i18n("Kickban *!*@domain"), this, SLOT(handleContextActions()));
+        action->setData(Konversation::KickBanDomain);
+        action = kickban->addAction(i18n("Kickban *!user@*.host"), this, SLOT(handleContextActions()));
+        action->setData(Konversation::KickBanUserHost);
+        action = kickban->addAction(i18n("Kickban *!user@domain"), this, SLOT(handleContextActions()));
+        action->setData(Konversation::KickBanUserDomain);
+    }
+
+    m_ignoreAction = new KToggleAction(i18n("Ignore"), this);
+    m_ignoreAction->setCheckedState(KGuiItem(i18n("Unignore")));
+    m_ignoreAction->setData(Konversation::IgnoreNick);
+    m_nickPopup->addAction(m_ignoreAction);
+    connect(m_ignoreAction, SIGNAL(triggered()), this, SLOT(handleContextActions()));
+
+    m_nickPopup->addSeparator();
+
+    action = m_nickPopup->addAction(i18n("Open Query"), this, SLOT(handleContextActions()));
+    action->setData(Konversation::OpenQuery);
+
+    KConfigGroup config = KGlobal::config()->group("KDE Action Restrictions");
+
+    if(config.readEntry<bool>("allow_downloading", true))
+    {
+        action = m_nickPopup->addAction(SmallIcon("arrow-right-double"),i18n("Send &File..."), this, SLOT(handleContextActions()));
+        action->setData(Konversation::DccSend);
+    }
+
+    m_nickPopup->addSeparator();
+
+    m_addNotifyAction = m_nickPopup->addAction(i18n("Add to Watched Nicks"), this, SLOT(handleContextActions()));
+    m_addNotifyAction->setData(Konversation::AddNotify);
+}
+
+void IRCView::setNickAndChannelContextMenusEnabled(bool enable)
+{
+    if (m_nickPopup) m_nickPopup->setEnabled(enable);
+    if (m_channelPopup) m_channelPopup->setEnabled(enable);
+}
+
+const QString& IRCView::getContextNick() const
+{
+    return m_currentNick;
+}
+
+void IRCView::clearContextNick()
+{
+    m_currentNick.clear();
+}
+
+void IRCView::updateNickMenuEntries(const QString& nickname)
+{
+    if (Preferences::isIgnored(nickname))
+    {
+        m_ignoreAction->setChecked(true);
+        m_ignoreAction->setData(Konversation::UnignoreNick);
+    }
+    else
+    {
+        m_ignoreAction->setChecked(false);
+        m_ignoreAction->setData(Konversation::IgnoreNick);
+    }
+
+    if (!m_server || !m_server->getServerGroup() || !m_server->isConnected() || !Preferences::hasNotifyList(m_server->getServerGroup()->id())
+        || Preferences::isNotify(m_server->getServerGroup()->id(), nickname))
+    {
+        m_addNotifyAction->setEnabled(false);
+    }
+    else
+    {
+        m_addNotifyAction->setEnabled(true);
+    }
+}
+
+void IRCView::setupChannelPopupMenu()
+{
+    m_channelPopup = new KMenu(this);
+    m_channelPopup->setObjectName("channel_context_menu");
+    m_channelPopup->setTitle(m_currentChannel);
+
+    QAction* action = m_channelPopup->addAction(i18n("&Join Channel..."), this, SLOT(handleContextActions()));
+    action->setData(Konversation::Join);
+    action->setIcon(KIcon("irc-join-channel"));
+    action = m_channelPopup->addAction(i18n("Get &user list"), this, SLOT(handleContextActions()));
+    action->setData(Konversation::Names);
+    action = m_channelPopup->addAction(i18n("Get &topic"), this, SLOT(handleContextActions()));
+    action->setData(Konversation::Topic);
+}
+
 void IRCView::contextMenuEvent(QContextMenuEvent* ev)
 {
     if (m_nickPopup && m_server && m_isOnNick && m_nickPopup->isEnabled())
@@ -1719,9 +1696,9 @@ void IRCView::handleContextActions()
     emit popupCommand(action->data().toInt());
 }
 
-// for more information about these RTFM
-//    http://www.unicode.org/reports/tr9/
-//    http://www.w3.org/TR/unicode-xml/
+// For more information about these RTFM
+// http://www.unicode.org/reports/tr9/
+// http://www.w3.org/TR/unicode-xml/
 QChar IRCView::LRM = (ushort)0x200e; // Right-to-Left Mark
 QChar IRCView::RLM = (ushort)0x200f; // Left-to-Right Mark
 QChar IRCView::LRE = (ushort)0x202a; // Left-to-Right Embedding
@@ -1779,8 +1756,3 @@ QChar::Direction IRCView::basicDirection(const QString& string)
     else
         return QChar::DirL;
 }
-
-// **WARNING** the selectionChange signal comes BEFORE the selection has actually been changed, hook cursorPositionChanged too
-
-//void IRCView::mouseDoubleClickEvent(QEvent *e, Qt::MouseButton button, const QPointF &pos)
-
diff --git a/src/viewer/ircview.h b/src/viewer/ircview.h
index 9f82a22..11231d8 100644
--- a/src/viewer/ircview.h
+++ b/src/viewer/ircview.h
@@ -257,8 +257,6 @@ class IRCView : public KTextBrowser
         QString createNickLine(const QString& nick, const QString& defaultColor,
             bool encapsulateNick = true, bool privMsg = false);
 
-
-
         //// Search
         QTextDocument::FindFlags m_searchFlags;
         bool m_forward;
@@ -283,6 +281,7 @@ class IRCView : public KTextBrowser
         Server* m_server; //! FIXME assumes we have a server
 
         //// Popup menus
+        void setupContextMenu();
         KMenu* m_popup; ///< text area context menu
         QAction* copyUrlMenuSeparator;
         QAction* m_copyUrlClipBoard;

commit cf300db6eccbd3d4cd05779258d3ba60054b6f90
Author: Eike Hein <hein@kde.org>
Date:   Thu Aug 26 14:33:01 2010 +0200

    Add support for KDE Web Shortcuts.
    
    There's now a submenu in the context menu for selected text which
    lets you hand over the selected text to any of the enabled search
    providers, with the resulting search URL opening in the default
    web browser. Basically what Konqueror has as well.

diff --git a/ChangeLog b/ChangeLog
index e5e5c45..10ab227 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -137,8 +137,13 @@ Changes since 1.3.1:
   slightly.
 * Fixed bug causing the opening of URLs via the "Open URL" sub-menu in the
   list entry context menu in Channel List tabs not to work.
-* Added Color Picker tool to DCC WHITEBOARD, to select a color from the image
-
+* Added a Color Picker tool to DCC WHITEBOARD, to select a color from the
+  image.
+* Added support for KDE Web Shortcuts: The context menu for selected text
+  in a chat text view now offers a submenu by which the selected text can
+  be used in a web search with any of the enabled search providers. The
+  resulting search URL is opened in the system's default wen browser after
+  clicking on the search provider in the submenu.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/commit.h b/src/commit.h
index 12c89e4..e52c9da 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4071
+#define COMMIT 4072
 #endif
diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index a0faad3..bfb886b 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -44,6 +44,7 @@
 #include <QTextCodec>
 
 #include <KUrl>
+#include <KUriFilter>
 #include <KBookmarkManager>
 #include <kbookmarkdialog.h>
 #include <KMenu>
@@ -51,6 +52,7 @@
 #include <KFileDialog>
 #include <KAuthorized>
 #include <KActionCollection>
+#include <KStringHandler>
 #include <KToggleAction>
 #include <KIO/CopyJob>
 
@@ -1679,6 +1681,8 @@ void IRCView::contextMenuEvent(QContextMenuEvent* ev)
             separator = m_popup->insertSeparator(m_copyUrlClipBoard);
         }
 
+        updateWebShortcutMenu();
+
         m_popup->exec(ev->globalPos());
 
         if(separator)
@@ -1696,6 +1700,70 @@ void IRCView::handleContextActions()
     emit popupCommand(action->data().toInt());
 }
 
+void IRCView::updateWebShortcutMenu()
+{
+    QString selectedText = textCursor().selectedText();
+
+    if (selectedText.isEmpty())
+    {
+        m_webShortcutMenu->menuAction()->setVisible(false);
+
+        return;
+    }
+
+    m_webShortcutMenu->clear();
+
+    KUriFilterData filterData(selectedText.remove('\n').remove('\r'));
+
+    // Unfortunately if we don't do this here, then KUriFilterData::preferredSearchProviders()
+    // will later return an empty list when the user has his default search engine set to
+    // "None" in the Web Shortcuts configuration. I consider this nonsensical coupling between
+    // the default search engine setting and the list of enabled web shortcuts a bug in
+    // the kuriikwsfilter plugin, considering we don't actually have any interest in the default
+    // search engine. I picked Google because I expect that web shortcut to be around for some
+    // time to come.
+    filterData.setAlternateDefaultSearchProvider("google");
+
+    if (KUriFilter::self()->filterUri(filterData, QStringList() << "kuriikwsfilter"))
+    {
+        QStringList searchProviders = filterData.preferredSearchProviders();
+
+        if (!searchProviders.isEmpty())
+        {
+            const QString squeezedText = KStringHandler::rsqueeze(selectedText, 21);
+            m_webShortcutMenu->setTitle(i18n("Search for '%1' with", squeezedText));
+
+            m_webShortcutMenu->menuAction()->setVisible(true);
+
+            foreach(const QString& searchProvider, searchProviders)
+            {
+                KAction* action = new KAction(searchProvider, m_webShortcutMenu);
+                action->setIcon(KIcon(filterData.iconNameForPreferredSearchProvider(searchProvider)));
+                action->setData(filterData.queryForPreferredSearchProvider(searchProvider));
+                connect(action, SIGNAL(triggered()), this, SLOT(handleWebShortcutAction()));
+                m_webShortcutMenu->addAction(action);
+            }
+
+            return;
+        }
+    }
+
+    m_webShortcutMenu->menuAction()->setVisible(false);
+}
+
+void IRCView::handleWebShortcutAction()
+{
+    KAction* action = qobject_cast<KAction*>(sender());
+
+    if (action)
+    {
+        KUriFilterData filterData(action->data().toString());
+
+        if (KUriFilter::self()->filterUri(filterData, QStringList() << "kurisearchfilter"))
+            Application::instance()->openUrl(filterData.uri().url());
+    }
+}
+
 // For more information about these RTFM
 // http://www.unicode.org/reports/tr9/
 // http://www.w3.org/TR/unicode-xml/
diff --git a/src/viewer/ircview.h b/src/viewer/ircview.h
index 11231d8..e5769e0 100644
--- a/src/viewer/ircview.h
+++ b/src/viewer/ircview.h
@@ -25,7 +25,6 @@
 class Server;
 class ChatWindow;
 
-
 class KToggleAction;
 class KMenu;
 
@@ -226,6 +225,7 @@ class IRCView : public KTextBrowser
         void copyUrl();
         void slotBookmark();
         void handleContextActions();
+        void handleWebShortcutAction();
 
     protected:
         void openLink(const QUrl &url);
@@ -282,7 +282,9 @@ class IRCView : public KTextBrowser
 
         //// Popup menus
         void setupContextMenu();
+        void updateWebShortcutMenu();
         KMenu* m_popup; ///< text area context menu
+        KMenu* m_webShortcutMenu;
         QAction* copyUrlMenuSeparator;
         QAction* m_copyUrlClipBoard;
         QAction* m_bookmark;

commit f2618d3d8100ac0b4d88c74d949cfe07b7ddf63d
Author: Eike Hein <hein@kde.org>
Date:   Thu Aug 26 14:49:29 2010 +0200

    Move it below Copy instead.

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index bfb886b..02339b8 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -1499,6 +1499,11 @@ void IRCView::setupContextMenu()
     connect(this, SIGNAL(copyAvailable(bool)), copyAct, SLOT( setEnabled( bool ) ));
     copyAct->setEnabled( false );
 
+    m_webShortcutMenu = new KMenu(this);
+    m_popup->addMenu(m_webShortcutMenu);
+    m_webShortcutMenu->menuAction()->setIcon(KIcon("preferences-web-browser-shortcuts"));
+    m_webShortcutMenu->menuAction()->setVisible(false);
+
     QAction* selectAllAct = new KAction(this);
     selectAllAct->setText(i18n("Select All"));
     connect(selectAllAct, SIGNAL(triggered()), SLOT(selectAll()));
@@ -1509,11 +1514,6 @@ void IRCView::setupContextMenu()
     findTextAct->setText(i18n("Find Text..."));
     connect(findTextAct, SIGNAL(triggered()), SLOT(findText()));
     m_popup->addAction(findTextAct);
-
-    m_webShortcutMenu = new KMenu(this);
-    m_popup->addMenu(m_webShortcutMenu);
-    m_webShortcutMenu->menuAction()->setIcon(KIcon("preferences-web-browser-shortcuts"));
-    m_webShortcutMenu->menuAction()->setVisible(false);
 }
 void IRCView::setupNickPopupMenu(bool isQuery)
 {

commit 62c47e76be2987d86aeada1c8e587d6228565e3d
Author: Eike Hein <hein@kde.org>
Date:   Thu Aug 26 19:01:18 2010 +0200

    Turns out KDE Platform 4.5 just rocks a little more than 4.4 did.

diff --git a/ChangeLog b/ChangeLog
index 10ab227..4ecfa78 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -139,11 +139,12 @@ Changes since 1.3.1:
   list entry context menu in Channel List tabs not to work.
 * Added a Color Picker tool to DCC WHITEBOARD, to select a color from the
   image.
-* Added support for KDE Web Shortcuts: The context menu for selected text
-  in a chat text view now offers a submenu by which the selected text can
-  be used in a web search with any of the enabled search providers. The
-  resulting search URL is opened in the system's default wen browser after
-  clicking on the search provider in the submenu.
+* Added support for KDE Web Shortcuts when built against KDE Platform 4.5
+  or higher: The context menu for selected text in a chat text view then
+  offers a submenu by which the selected text can be used in a web search
+  with any of the enabled search providers. The resulting search URL is
+  opened in the system's default wen browser after clicking on the search
+  provider in the submenu.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 02339b8..fa39686 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -44,7 +44,6 @@
 #include <QTextCodec>
 
 #include <KUrl>
-#include <KUriFilter>
 #include <KBookmarkManager>
 #include <kbookmarkdialog.h>
 #include <KMenu>
@@ -52,10 +51,15 @@
 #include <KFileDialog>
 #include <KAuthorized>
 #include <KActionCollection>
-#include <KStringHandler>
 #include <KToggleAction>
 #include <KIO/CopyJob>
 
+// For the Web Shortcuts context menu sub-menu.
+#if KDE_IS_VERSION(4,5,0)
+#include <KUriFilter>
+#include <KStringHandler>
+#endif
+
 class Server;
 class ChatWindow;
 class SearchBar;
@@ -1681,7 +1685,9 @@ void IRCView::contextMenuEvent(QContextMenuEvent* ev)
             separator = m_popup->insertSeparator(m_copyUrlClipBoard);
         }
 
+#if KDE_IS_VERSION(4,5,0)
         updateWebShortcutMenu();
+#endif
 
         m_popup->exec(ev->globalPos());
 
@@ -1700,6 +1706,7 @@ void IRCView::handleContextActions()
     emit popupCommand(action->data().toInt());
 }
 
+#if KDE_IS_VERSION(4,5,0)
 void IRCView::updateWebShortcutMenu()
 {
     QString selectedText = textCursor().selectedText();
@@ -1763,6 +1770,7 @@ void IRCView::handleWebShortcutAction()
             Application::instance()->openUrl(filterData.uri().url());
     }
 }
+#endif
 
 // For more information about these RTFM
 // http://www.unicode.org/reports/tr9/
diff --git a/src/viewer/ircview.h b/src/viewer/ircview.h
index e5769e0..a4b2b5d 100644
--- a/src/viewer/ircview.h
+++ b/src/viewer/ircview.h
@@ -21,6 +21,7 @@
 
 #include <KTextBrowser>
 #include <KUrl>
+#include <kdeversion.h>
 
 class Server;
 class ChatWindow;
@@ -225,7 +226,9 @@ class IRCView : public KTextBrowser
         void copyUrl();
         void slotBookmark();
         void handleContextActions();
+#if KDE_IS_VERSION(4,5,0)
         void handleWebShortcutAction();
+#endif
 
     protected:
         void openLink(const QUrl &url);
@@ -282,9 +285,7 @@ class IRCView : public KTextBrowser
 
         //// Popup menus
         void setupContextMenu();
-        void updateWebShortcutMenu();
         KMenu* m_popup; ///< text area context menu
-        KMenu* m_webShortcutMenu;
         QAction* copyUrlMenuSeparator;
         QAction* m_copyUrlClipBoard;
         QAction* m_bookmark;
@@ -295,6 +296,10 @@ class IRCView : public KTextBrowser
         KMenu* m_nickPopup; ///<menu to show when context-click on a nickname
         KMenu* m_channelPopup; ///<menu to show when context-click on a channel
 
+#if KDE_IS_VERSION(4,5,0)
+        void updateWebShortcutMenu();
+        KMenu* m_webShortcutMenu;
+#endif
 
         QString m_urlToCopy; ///< the URL we might be about to copy
 

commit e1c4003be4fc18c38df7d4d8525e7d611d7e7b08
Author: Eike Hein <hein@kde.org>
Date:   Thu Aug 26 19:04:04 2010 +0200

    Moar.

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index fa39686..e4407a3 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -1503,10 +1503,12 @@ void IRCView::setupContextMenu()
     connect(this, SIGNAL(copyAvailable(bool)), copyAct, SLOT( setEnabled( bool ) ));
     copyAct->setEnabled( false );
 
+#if KDE_IS_VERSION(4,5,0)
     m_webShortcutMenu = new KMenu(this);
     m_popup->addMenu(m_webShortcutMenu);
     m_webShortcutMenu->menuAction()->setIcon(KIcon("preferences-web-browser-shortcuts"));
     m_webShortcutMenu->menuAction()->setVisible(false);
+#endif
 
     QAction* selectAllAct = new KAction(this);
     selectAllAct->setText(i18n("Select All"));

commit 835dc3241121dba881bbcbaad0929a6bd990d334
Author: Eike Hein <hein@kde.org>
Date:   Fri Aug 27 13:37:25 2010 +0200

    Add an entry point to the Web Shortcuts KCM at the bottom of the submenu.
    
    Also work around a curious behavioral change in Qt 4.7rc moc wrt/ #if'ed
    slots in the header that broke the signal connections.

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index e4407a3..e592732 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -56,8 +56,9 @@
 
 // For the Web Shortcuts context menu sub-menu.
 #if KDE_IS_VERSION(4,5,0)
-#include <KUriFilter>
 #include <KStringHandler>
+#include <KToolInvocation>
+#include <KUriFilter>
 #endif
 
 class Server;
@@ -1708,9 +1709,9 @@ void IRCView::handleContextActions()
     emit popupCommand(action->data().toInt());
 }
 
-#if KDE_IS_VERSION(4,5,0)
 void IRCView::updateWebShortcutMenu()
 {
+#if KDE_IS_VERSION(4,5,0)
     QString selectedText = textCursor().selectedText();
 
     if (selectedText.isEmpty())
@@ -1744,24 +1745,35 @@ void IRCView::updateWebShortcutMenu()
 
             m_webShortcutMenu->menuAction()->setVisible(true);
 
+            KAction* action = 0;
+
             foreach(const QString& searchProvider, searchProviders)
             {
-                KAction* action = new KAction(searchProvider, m_webShortcutMenu);
+                action = new KAction(searchProvider, m_webShortcutMenu);
                 action->setIcon(KIcon(filterData.iconNameForPreferredSearchProvider(searchProvider)));
                 action->setData(filterData.queryForPreferredSearchProvider(searchProvider));
                 connect(action, SIGNAL(triggered()), this, SLOT(handleWebShortcutAction()));
                 m_webShortcutMenu->addAction(action);
             }
 
+            m_webShortcutMenu->addSeparator();
+
+            action = new KAction(i18n("Configure Web Shortcuts..."), m_webShortcutMenu);
+            action->setIcon(KIcon("configure"));
+            connect(action, SIGNAL(triggered()), this, SLOT(configureWebShortcuts()));
+            m_webShortcutMenu->addAction(action);
+
             return;
         }
     }
 
     m_webShortcutMenu->menuAction()->setVisible(false);
+#endif
 }
 
 void IRCView::handleWebShortcutAction()
 {
+#if KDE_IS_VERSION(4,5,0)
     KAction* action = qobject_cast<KAction*>(sender());
 
     if (action)
@@ -1771,8 +1783,13 @@ void IRCView::handleWebShortcutAction()
         if (KUriFilter::self()->filterUri(filterData, QStringList() << "kurisearchfilter"))
             Application::instance()->openUrl(filterData.uri().url());
     }
-}
 #endif
+}
+
+void IRCView::configureWebShortcuts()
+{
+    KToolInvocation::kdeinitExec("kcmshell4", QStringList() << "ebrowsing");
+}
 
 // For more information about these RTFM
 // http://www.unicode.org/reports/tr9/
diff --git a/src/viewer/ircview.h b/src/viewer/ircview.h
index a4b2b5d..4f64089 100644
--- a/src/viewer/ircview.h
+++ b/src/viewer/ircview.h
@@ -226,9 +226,8 @@ class IRCView : public KTextBrowser
         void copyUrl();
         void slotBookmark();
         void handleContextActions();
-#if KDE_IS_VERSION(4,5,0)
         void handleWebShortcutAction();
-#endif
+        void configureWebShortcuts();
 
     protected:
         void openLink(const QUrl &url);

commit fce62013c70b1a0ff04bd3a2ca279e6fd577e58b
Author: Eike Hein <hein@kde.org>
Date:   Fri Aug 27 13:47:41 2010 +0200

    Fix.

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index e592732..bb37863 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -52,12 +52,12 @@
 #include <KAuthorized>
 #include <KActionCollection>
 #include <KToggleAction>
+#include <KToolInvocation>
 #include <KIO/CopyJob>
 
 // For the Web Shortcuts context menu sub-menu.
 #if KDE_IS_VERSION(4,5,0)
 #include <KStringHandler>
-#include <KToolInvocation>
 #include <KUriFilter>
 #endif
 

commit 3e3738fad0bd97748280cb4b671f085213659626
Author: Eike Hein <hein@kde.org>
Date:   Fri Aug 27 13:50:08 2010 +0200

    Or disable this one too, I guess ...

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index bb37863..25c41ef 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -52,12 +52,12 @@
 #include <KAuthorized>
 #include <KActionCollection>
 #include <KToggleAction>
-#include <KToolInvocation>
 #include <KIO/CopyJob>
 
 // For the Web Shortcuts context menu sub-menu.
 #if KDE_IS_VERSION(4,5,0)
 #include <KStringHandler>
+#include <KToolInvocation>
 #include <KUriFilter>
 #endif
 
@@ -1788,7 +1788,9 @@ void IRCView::handleWebShortcutAction()
 
 void IRCView::configureWebShortcuts()
 {
+#if KDE_IS_VERSION(4,5,0)
     KToolInvocation::kdeinitExec("kcmshell4", QStringList() << "ebrowsing");
+#endif
 }
 
 // For more information about these RTFM

commit e2d812bb155e1527f5bd9491ac041cb049a969ad
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Sat Aug 28 11:50:58 2010 +0200

    - Use KCategoryDrawerV3 for >=kde-4.5.0, less deprecated stuff

diff --git a/src/dcc/transferlistmodel.cpp b/src/dcc/transferlistmodel.cpp
index 6fe49c9..9b1b47c 100644
--- a/src/dcc/transferlistmodel.cpp
+++ b/src/dcc/transferlistmodel.cpp
@@ -55,8 +55,11 @@ namespace Konversation
             };
         }
 
-
+#if KDE_IS_VERSION(4, 5, 0)
+        TransferSizeDelegate::TransferSizeDelegate(KCategoryDrawerV3* categoryDrawer, QObject* parent)
+#else
         TransferSizeDelegate::TransferSizeDelegate(KCategoryDrawer* categoryDrawer, QObject* parent)
+#endif
             : QItemDelegate(parent)
         {
             m_categoryDrawer = categoryDrawer;
diff --git a/src/dcc/transferlistmodel.h b/src/dcc/transferlistmodel.h
index b5367e4..b574789 100644
--- a/src/dcc/transferlistmodel.h
+++ b/src/dcc/transferlistmodel.h
@@ -23,10 +23,15 @@
 #include <QSortFilterProxyModel>
 
 #include <kio/global.h>
+#include <kdeversion.h>
 
 #include "transfer.h"
 
+#if KDE_IS_VERSION(4, 5, 0)
+class KCategoryDrawerV3;
+#else
 class KCategoryDrawer;
+#endif
 
 namespace Konversation
 {
@@ -78,11 +83,19 @@ namespace Konversation
         class TransferSizeDelegate : public QItemDelegate
         {
         public:
+#if KDE_IS_VERSION(4, 5, 0)
+            explicit TransferSizeDelegate(KCategoryDrawerV3* categoryDrawer, QObject *parent = 0);
+#else
             explicit TransferSizeDelegate(KCategoryDrawer* categoryDrawer, QObject *parent = 0);
+#endif
 
             virtual QSize sizeHint(const QStyleOptionViewItem & option, const QModelIndex & index) const;
         private:
+#if KDE_IS_VERSION(4, 5, 0)
+            KCategoryDrawerV3* m_categoryDrawer;
+#else
             KCategoryDrawer* m_categoryDrawer;
+#endif
         };
 
         class TransferProgressBarDelegate : public QStyledItemDelegate
diff --git a/src/dcc/transferview.cpp b/src/dcc/transferview.cpp
index 72b9643..685d8f6 100644
--- a/src/dcc/transferview.cpp
+++ b/src/dcc/transferview.cpp
@@ -46,7 +46,11 @@ namespace Konversation
             setRootIsDecorated(false); //not implemented for special items
             setSelectionMode(QAbstractItemView::ExtendedSelection);
 
+#if KDE_IS_VERSION(4, 5, 0)
+            m_categoryDrawer = new KCategoryDrawerV3(0);
+#else
             m_categoryDrawer = new KCategoryDrawer();
+#endif
 
             setItemDelegate(new TransferSizeDelegate(m_categoryDrawer, this));
 
@@ -167,8 +171,8 @@ namespace Konversation
                      this, SLOT(transferStatusChanged(Konversation::DCC::Transfer*,int,int)));
 
             clearSelection();
-            //restore selected
 
+            //restore selected
             QList<int> rows;
             foreach (const QModelIndex &index, rowIndexes())
             {
diff --git a/src/dcc/transferview.h b/src/dcc/transferview.h
index 750657d..158fd20 100644
--- a/src/dcc/transferview.h
+++ b/src/dcc/transferview.h
@@ -17,10 +17,17 @@
 #define TRANSFERVIEW_H
 
 #include <QTreeView>
+
+#include <kdeversion.h>
+
 #include "transferlistmodel.h"
 
 class QKeyEvent;
+#if KDE_IS_VERSION(4, 5, 0)
+class KCategoryDrawerV3;
+#else
 class KCategoryDrawer;
+#endif
 
 namespace Konversation
 {
@@ -108,7 +115,11 @@ namespace Konversation
 
             inline void addItem(Transfer *transfer, TransferItemData::ItemDisplayType type);
 
+#if KDE_IS_VERSION(4, 5, 0)
+            KCategoryDrawerV3 *m_categoryDrawer;
+#else
             KCategoryDrawer *m_categoryDrawer;
+#endif
             TransferListModel *m_dccModel;
             TransferListProxyModel *m_proxyModel;
 

commit d2c114f67f6db1f0eae7edecdaf0486ca317970a
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Sat Aug 28 17:26:31 2010 +0200

    Use KFileMetaDataWidget to show FileInformation for >=kde-4.5

diff --git a/src/dcc/transferpanel.cpp b/src/dcc/transferpanel.cpp
index 46331d9..6f32ef9 100644
--- a/src/dcc/transferpanel.cpp
+++ b/src/dcc/transferpanel.cpp
@@ -555,6 +555,10 @@ namespace Konversation
         {
             if (transfer->getType() == Transfer::Send || transfer->getStatus() == Transfer::Done)
             {
+#if KDE_IS_VERSION(4, 5, 0)
+                FileMetaDataDialog fileDialog(transfer->getFileURL(), this);
+                fileDialog.exec();
+#else
                 QStringList infoList;
 
                 QString path = transfer->getFileURL().path();
@@ -583,26 +587,18 @@ namespace Konversation
                     // display information list if any available
                     if(infoList.count())
                     {
-                        #ifdef USE_INFOLIST
-                        KMessageBox::informationList(
-                            listView(),
-                            i18n("Available information for file %1:", path),
-                            infoList,
-                            i18n("File Information")
-                            );
-                        #else
                         KMessageBox::information(
                             getTransferView(),
                             "<qt>"+infoList.join("<br>")+"</qt>",
                             i18n("File Information")
                             );
-                        #endif
                     }
                 }
                 else
                 {
                     KMessageBox::sorry(getTransferView(), i18n("No detailed information for this file found."), i18n("File Information"));
                 }
+#endif
             }
         }
 
diff --git a/src/dcc/transferpanel.h b/src/dcc/transferpanel.h
index 56188b9..ac928af 100644
--- a/src/dcc/transferpanel.h
+++ b/src/dcc/transferpanel.h
@@ -23,6 +23,15 @@
 #include <QModelIndex>
 #include <QItemSelection>
 
+#include <kdeversion.h>
+
+#if KDE_IS_VERSION(4, 5, 0)
+#   include <KDialog>
+#   include <KLocalizedString>
+#   include <kfilemetadatawidget.h>
+#endif
+#include <KDebug>
+
 class QSplitter;
 class KMenu;
 class KToolBar;
@@ -35,6 +44,38 @@ namespace Konversation
         class TransferView;
         class Transfer;
 
+#if KDE_IS_VERSION(4, 5, 0)
+        class FileMetaDataDialog : public KDialog
+        {
+            public:
+                FileMetaDataDialog(const KUrl& file, QWidget *parent = 0)
+                    : KDialog(parent)
+                {
+                    setCaption( i18nc("File Information for %1", "%1=filename", file.fileName() ) );
+                    setButtons( KDialog::Ok );
+
+                    m_fileMetaDataWidget = new KFileMetaDataWidget(this);
+
+                    KFileItemList fileList;
+                    fileList.append(KFileItem(KFileItem::Unknown, KFileItem::Unknown, file));
+                    m_fileMetaDataWidget->setItems(fileList);
+
+                    setMainWidget(m_fileMetaDataWidget);
+
+                    //known Qt problem, minium size is not set, limitation of X11 window manager
+                    setMinimumSize(QSize(sizeHint().height()*2, sizeHint().width()));
+                }
+
+                ~FileMetaDataDialog()
+                {
+                    delete m_fileMetaDataWidget;
+                }
+
+            private:
+                KFileMetaDataWidget* m_fileMetaDataWidget;
+        };
+#endif
+
         class TransferPanel : public ChatWindow
         {
             Q_OBJECT

commit a76fa0b5b9addc6fe6f4fa0df2db4013b48f870d
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Sun Aug 29 12:59:57 2010 +0200

    Fix krazy2 errors(spelling, crashy, explicit) introduced by
    d2c114f67f6db1f0eae7edecdaf0486ca317970a

diff --git a/src/dcc/transferpanel.cpp b/src/dcc/transferpanel.cpp
index 6f32ef9..78c3af1 100644
--- a/src/dcc/transferpanel.cpp
+++ b/src/dcc/transferpanel.cpp
@@ -556,8 +556,9 @@ namespace Konversation
             if (transfer->getType() == Transfer::Send || transfer->getStatus() == Transfer::Done)
             {
 #if KDE_IS_VERSION(4, 5, 0)
-                FileMetaDataDialog fileDialog(transfer->getFileURL(), this);
-                fileDialog.exec();
+                QPointer<FileMetaDataDialog> fileDialog = new FileMetaDataDialog(transfer->getFileURL(), this);
+                fileDialog->exec();
+                delete fileDialog;
 #else
                 QStringList infoList;
 
diff --git a/src/dcc/transferpanel.h b/src/dcc/transferpanel.h
index ac928af..582e16c 100644
--- a/src/dcc/transferpanel.h
+++ b/src/dcc/transferpanel.h
@@ -48,7 +48,7 @@ namespace Konversation
         class FileMetaDataDialog : public KDialog
         {
             public:
-                FileMetaDataDialog(const KUrl& file, QWidget *parent = 0)
+                explicit FileMetaDataDialog(const KUrl& file, QWidget *parent = 0)
                     : KDialog(parent)
                 {
                     setCaption( i18nc("File Information for %1", "%1=filename", file.fileName() ) );
@@ -62,7 +62,7 @@ namespace Konversation
 
                     setMainWidget(m_fileMetaDataWidget);
 
-                    //known Qt problem, minium size is not set, limitation of X11 window manager
+                    //known Qt problem, minimum size is not set, limitation of X11 window manager
                     setMinimumSize(QSize(sizeHint().height()*2, sizeHint().width()));
                 }
 

commit 94e2087b1828f3609849a5363be9a255ab2492d2
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Sun Aug 29 13:02:26 2010 +0200

    Whoops! wrong i18nc argument order

diff --git a/src/dcc/transferpanel.h b/src/dcc/transferpanel.h
index 582e16c..9042f52 100644
--- a/src/dcc/transferpanel.h
+++ b/src/dcc/transferpanel.h
@@ -51,7 +51,7 @@ namespace Konversation
                 explicit FileMetaDataDialog(const KUrl& file, QWidget *parent = 0)
                     : KDialog(parent)
                 {
-                    setCaption( i18nc("File Information for %1", "%1=filename", file.fileName() ) );
+                    setCaption( i18nc("%1=filename", "File Information for %1",  file.fileName() ) );
                     setButtons( KDialog::Ok );
 
                     m_fileMetaDataWidget = new KFileMetaDataWidget(this);

commit 568ef65204dca154b3f9e758521dbd36599d6c04
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Sun Aug 29 11:52:48 2010 +0200

    added backgroundcolor support for the ircview

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 25c41ef..041c9af 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -1028,6 +1028,22 @@ bool doHighlight, bool parseURL, bool self)
         }
     }
 
+    // parse Urls before replacing color codes with html, as replaced htmlcolors
+    // may cause the url parsing to fail
+    if(parseURL)
+    {
+        if(whoSent.isEmpty())
+            filteredLine = Konversation::tagUrls(filteredLine, m_chatWin->getName());
+        else
+            filteredLine = Konversation::tagUrls(filteredLine, whoSent);
+    }
+    else
+    {
+        // Change & to &amp; to prevent html entities to do strange things to the text
+        filteredLine.replace('&', "&amp;");
+        filteredLine.replace("\x0b", "&");
+    }
+
     // replace \003 and \017 codes with rich text color codes
     // captures          1    2                   23 4                   4 3     1
     QRegExp colorRegExp("(\003([0-9]|0[0-9]|1[0-5]|)(,([0-9]|0[0-9]|1[0-5])|,|)|\017)");
@@ -1036,20 +1052,44 @@ bool doHighlight, bool parseURL, bool self)
     bool allowColors = Preferences::self()->allowColorCodes();
     bool firstColor = true;
     QString colorString;
+    QString lastBgColor;
 
     while((pos=colorRegExp.indexIn(filteredLine))!=-1)
     {
         if(!allowColors)
         {
             colorString.clear();
+            lastBgColor.clear();
         }
         else
         {
-            colorString = (firstColor) ? QString() : QString("</font>");
+            if (firstColor)
+            {
+                colorString.clear();
+            }
+            else
+            {
+                if (lastBgColor.isEmpty())
+                {
+                    colorString = "</font>";
+                }
+                else
+                {
+                    colorString = "</span></font>";
+                }
+            }
 
             // reset colors on \017 to default value
             if(colorRegExp.cap(1) == "\017")
+            {
                 colorString += "<font color=\""+defaultColor+"\">";
+                lastBgColor.clear();
+            }
+            // mirc sends it end-custom-color mark
+            else if (colorRegExp.cap(1) == "\003")
+            {
+                lastBgColor.clear();
+            }
             else
             {
                 if(!colorRegExp.cap(2).isEmpty())
@@ -1063,6 +1103,19 @@ bool doHighlight, bool parseURL, bool self)
                 }
             }
 
+            QString bgColor = colorRegExp.cap(3);
+            if (!bgColor.isEmpty() || (bgColor.length() == 1 && bgColor == ","))
+            {
+                bgColor = bgColor.right(bgColor.length() - 1);
+                int bgColorValue = bgColor.toInt();
+                lastBgColor = Preferences::self()->ircColorCode(bgColorValue).name();
+            }
+
+            if (!lastBgColor.isEmpty())
+            {
+                colorString += "<span style=\"background-color:" + lastBgColor + "\">";
+            }
+
             firstColor = false;
         }
 
@@ -1070,7 +1123,12 @@ bool doHighlight, bool parseURL, bool self)
     }
 
     if(!firstColor)
+    {
+        if (!lastBgColor.isEmpty())
+            filteredLine+="</span>";
+
         filteredLine+="</font>";
+    }
 
     // Replace all text decorations
     // TODO: \017 should reset all text decorations to plain text
@@ -1081,20 +1139,6 @@ bool doHighlight, bool parseURL, bool self)
     replaceDecoration(filteredLine,'\x16','b');   // should be inverse
     replaceDecoration(filteredLine,'\x1f','u');
 
-    if(parseURL)
-    {
-        if(whoSent.isEmpty())
-            filteredLine = Konversation::tagUrls(filteredLine, m_chatWin->getName());
-        else
-            filteredLine = Konversation::tagUrls(filteredLine, whoSent);
-    }
-    else
-    {
-        // Change & to &amp; to prevent html entities to do strange things to the text
-        filteredLine.replace('&', "&amp;");
-        filteredLine.replace("\x0b", "&");
-    }
-
     // Highlight
     QString ownNick;
 

commit da5b1d52eb0dab0fbb4d058b597201a62c413a3d
Author: Eike Hein <hein@kde.org>
Date:   Sun Aug 29 13:50:51 2010 +0200

    Bump

diff --git a/src/commit.h b/src/commit.h
index e52c9da..642fb39 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4072
+#define COMMIT 4073
 #endif

commit 3e419df5055f75fe850dccc86557b535e89590a5
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Sun Aug 29 18:08:15 2010 +0200

    Fix wrong check for invalid backgroundcolor

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 041c9af..36d99f0 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -1104,7 +1104,7 @@ bool doHighlight, bool parseURL, bool self)
             }
 
             QString bgColor = colorRegExp.cap(3);
-            if (!bgColor.isEmpty() || (bgColor.length() == 1 && bgColor == ","))
+            if (!bgColor.isEmpty() && bgColor != ",")
             {
                 bgColor = bgColor.right(bgColor.length() - 1);
                 int bgColorValue = bgColor.toInt();

commit e3cfd3afc46c3b1c0f5443925ed42577e6f99730
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Sun Aug 29 21:28:07 2010 +0200

    Strip colorcodes from our produced link, the a href="..." part

diff --git a/src/common.cpp b/src/common.cpp
index 1f03a4e..f5b9710 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -178,7 +178,7 @@ namespace Konversation
                     urlLen = href.length();
                     pos += chanExp.cap(1).length();
 
-                    insertText = link.arg(href, href);
+                    insertText = link.arg(stripIrcColorCodes(href), href);
                     data.htmlText.replace(pos, urlLen, insertText);
                     pos += insertText.length();
                 }
@@ -221,7 +221,7 @@ namespace Konversation
                 }
 
                 // Use \x0b as a placeholder for & so we can read them after changing all & in the normal text to &amp;
-                insertText = link.arg(protocol, QString(href).replace('&', "\x0b"), href) + append;
+                insertText = link.arg(protocol, QString(stripIrcColorCodes(href)).replace('&', "\x0b"), href) + append;
 
                 data.htmlText.replace(pos, urlLen, insertText);
 
@@ -252,6 +252,13 @@ namespace Konversation
         return urlPattern.exactMatch(text);
     }
 
+    QString stripIrcColorCodes(const QString& text)
+    {
+        static QRegExp colorRegExp("(\003([0-9]|0[0-9]|1[0-5]|)(,([0-9]|0[0-9]|1[0-5])|,|)|\017)");
+        return QString(text).remove(colorRegExp);
+    }
+
+
     QPixmap overlayPixmaps( const QPixmap &under, const QPixmap &over )
     {
         if (over.isNull() && under.isNull())
diff --git a/src/common.h b/src/common.h
index 9140d0f..bb97ebf 100644
--- a/src/common.h
+++ b/src/common.h
@@ -64,6 +64,7 @@ namespace Konversation
     TextUrlData extractUrlData(const QString& text, const QString& fromNick, bool doUrlRanges,
         bool doHyperlinks, bool useCustomHyperlinkColor);
     bool isUrl(const QString& text);
+    QString stripIrcColorCodes(const QString& text);
 
     QPixmap overlayPixmaps(const QPixmap &under, const QPixmap &over);
     bool isUtf8(const QByteArray& text);

commit e0821e4f0ab0f57e5309615d01fcaa2496542faf
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Fri Sep 3 22:31:17 2010 +0200

    - rewrite html generation from irc richtexts,
    (for the example I will use [b] as irc bold char and [i] as italic char)
    In case we got text like:
    "aaa[b]bbb[i]ccc[b]ddd[i]"
    we used to generate
    "aaa<b>bbb<i>ccc</b>ddd</i>"
    which is invalid HTML, as the italic has to be closed before the bold,
    as expected the result also looked wrong(on the screen).
    What I do now is to remember which tag is open and reopen it,
    so I will generate text like:
    "aaa<b>bbb<i>ccc</i></b><i>ddd</i>".
    -move html stuff out of common.cpp/h
    - support the \x16 reverse char, inverts default fore- and back-ground colors

diff --git a/src/common.cpp b/src/common.cpp
index f5b9710..9da2e46 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -25,11 +25,6 @@
 
 namespace Konversation
 {
-
-    static QRegExp colorRegExp("((\003([0-9]|0[0-9]|1[0-5])(,([0-9]|0[0-9]|1[0-5])|)|\017)|\x02|\x09|\x13|\x16|\x1f)");
-    static QRegExp urlPattern(QString("\\b((?:(?:([a-z][\\w-]+:/{1,3})|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|\\}\\]|[^\\s`!()\\[\\]{};:'\".,<>?%1%2%3%4%5%6])|[a-z0-9.\\-+_]+@[a-z0-9.\\-]+[.][a-z]{1,5}[^\\s/`!()\\[\\]{};:'\".,<>?%1%2%3%4%5%6]))").arg(QChar(0x00AB)).arg(QChar(0x00BB)).arg(QChar(0x201C)).arg(QChar(0x201D)).arg(QChar(0x2018)).arg(QChar(0x2019)));
-    static QRegExp chanExp("(^|\\s|^\"|\\s\"|,|'|\\(|\\:|!|@|%|\\+)(#[^,\\s;\\)\\:\\/\\(\\<\\>]*[^.,\\s;\\)\\:\\/\\(\"\''\\<\\>])");
-
     void initChanModesHash()
     {
         QHash<QChar,QString> myHash;
@@ -59,13 +54,10 @@ namespace Konversation
 
     QString removeIrcMarkup(const QString& text)
     {
-        QString escaped = text;
+        QString escaped(text);
         // Escape text decoration
         escaped.remove(colorRegExp);
 
-        // Remove Mirc's 0x03 characters too, they show up as rectangles
-        escaped.remove(QChar(0x03));
-
         return escaped;
     }
 
@@ -130,120 +122,101 @@ namespace Konversation
         return line;
     }
 
-    QString tagUrls(const QString& text, const QString& fromNick, bool useCustomColor)
+    QList<QPair<int, int> > getUrlRanges(const QString& text)
     {
-        TextUrlData data = extractUrlData(text, fromNick, false, true, useCustomColor);
+        TextUrlData data = extractUrlData(text, false);
 
-        return data.htmlText;
+        return data.urlRanges;
     }
 
-    QList<QPair<int, int> > getUrlRanges(const QString& text)
+    QList< QPair< int, int > > getChannelRanges(const QString& text)
     {
-        TextUrlData data = extractUrlData(text, QString(), true, false, false);
+        TextChannelData data = extractChannelData(text, false);
 
-        return data.urlRanges;
+        return data.channelRanges;
     }
 
-    TextUrlData extractUrlData(const QString& text, const QString& fromNick, bool doUrlRanges,
-        bool doHyperlinks, bool useCustomHyperlinkColor)
+    TextUrlData extractUrlData(const QString& text, bool doUrlFixup)
     {
         TextUrlData data;
-        data.htmlText = text;
+        QString htmlText(text);
+        urlPattern.setCaseSensitivity(Qt::CaseInsensitive);
 
         int pos = 0;
         int urlLen = 0;
 
-        QString link;
-        QString insertText;
         QString protocol;
         QString href;
-        QString append;
-
-        urlPattern.setCaseSensitivity(Qt::CaseInsensitive);
-
-        if (doHyperlinks)
-        {
-            QString linkColor = Preferences::self()->color(Preferences::Hyperlink).name();
-
-            if (useCustomHyperlinkColor)
-                link = "<a href=\"#%1\" style=\"color:" + linkColor + "\">%2</a>";
-            else
-                link = "<a href=\"#%1\">%2</a>";
-
-            if (data.htmlText.contains("#"))
-            {
-                while ((pos = chanExp.indexIn(data.htmlText, pos)) >= 0)
-                {
-                    href = chanExp.cap(2);
-                    urlLen = href.length();
-                    pos += chanExp.cap(1).length();
-
-                    insertText = link.arg(stripIrcColorCodes(href), href);
-                    data.htmlText.replace(pos, urlLen, insertText);
-                    pos += insertText.length();
-                }
-            }
-
-            if (useCustomHyperlinkColor)
-                link = "<a href=\"%1%2\" style=\"color:" + linkColor + "\">%3</a>";
-            else
-                link = "<a href=\"%1%2\">%3</a>";
-
-            pos = 0;
-            urlLen = 0;
-        }
 
-        while ((pos = urlPattern.indexIn(data.htmlText, pos)) >= 0)
+        while ((pos = urlPattern.indexIn(htmlText, pos)) >= 0)
         {
             urlLen = urlPattern.matchedLength();
+            href = htmlText.mid(pos, urlLen);
 
-            // check if the matched text is already replaced as a channel
-            if (doHyperlinks && data.htmlText.lastIndexOf("<a", pos ) > data.htmlText.lastIndexOf("</a>", pos))
-            {
-                ++pos;
-                continue;
-            }
+//             kDebug() << "urlPattern.cap(0)" << urlPattern.cap(0);
+//             kDebug() << "urlPattern.cap(1)" << urlPattern.cap(1);
+//             kDebug() << "urlPattern.cap(2)" << urlPattern.cap(2);
+//             kDebug() << "href" << href;
 
-            protocol.clear();
-            href = data.htmlText.mid(pos, urlLen);
-            append.clear();
+            data.urlRanges << QPair<int, int>(pos, href.length());
+            pos += href.length();
 
-            if (doHyperlinks)
+            if (doUrlFixup)
             {
+                protocol.clear();
                 if (urlPattern.cap(2).isEmpty())
                 {
-                    if (urlPattern.cap(1).contains('@'))
+                    QString urlPatternCap1(urlPattern.cap(1));
+                    if (urlPatternCap1.contains('@'))
                         protocol = "mailto:";
-                    else if (urlPattern.cap(1).startsWith(QLatin1String("ftp."), Qt::CaseInsensitive))
+                    else if (urlPatternCap1.startsWith(QLatin1String("ftp."), Qt::CaseInsensitive))
                         protocol = "ftp://";
                     else
                         protocol = "http://";
                 }
 
-                // Use \x0b as a placeholder for & so we can read them after changing all & in the normal text to &amp;
-                insertText = link.arg(protocol, QString(stripIrcColorCodes(href)).replace('&', "\x0b"), href) + append;
-
-                data.htmlText.replace(pos, urlLen, insertText);
-
-                QMetaObject::invokeMethod(Application::instance(), "storeUrl", Qt::QueuedConnection,
-                    Q_ARG(QString, fromNick), Q_ARG(QString, protocol+href), Q_ARG(QDateTime, QDateTime::currentDateTime()));
+                href = protocol + removeIrcMarkup(href);
+                data.fixedUrls.append(href);
             }
-            else
-                insertText = href + append;
+        }
+        return data;
+    }
 
-            if (doUrlRanges)
-                data.urlRanges << QPair<int, int>(pos, href.length());
+    TextChannelData extractChannelData(const QString& text, bool doChannelFixup)
+    {
+        TextChannelData data;
+        QString ircText(text);
 
-            pos += insertText.length();
-        }
+        int pos = 0;
+        int chanLen = 0;
+        QString channel;
 
-        if (doHyperlinks)
+        while ((pos = chanExp.indexIn(ircText, pos)) >= 0)
         {
-            // Change & to &amp; to prevent html entities to do strange things to the text
-            data.htmlText.replace('&', "&amp;");
-            data.htmlText.replace("\x0b", "&");
-        }
+            channel = chanExp.cap(2);
+            chanLen = channel.length();
 
+//             kDebug() << "chanExp.cap(0)" << chanExp.cap(0);
+//             kDebug() << "chanExp.cap(1)" << chanExp.cap(1);
+//             kDebug() << "chanExp.cap(2)" << chanExp.cap(2);
+//             kDebug() << "text.mid(pos, chanLen)" << text.mid(pos, chanLen);
+
+            // we want the pos where #channel starts
+            // indexIn gives us the first match and the first match may be
+            // "#test", " #test" or " \"test", so the first Index is off by some chars
+            pos = chanExp.pos(2);
+
+//             kDebug() << "pos" << pos;
+
+            data.channelRanges << QPair<int, int>(pos, chanLen);
+            pos += chanLen;
+
+            if (doChannelFixup)
+            {
+                channel = removeIrcMarkup(channel);
+                data.fixedChannels.append(channel);
+            }
+        }
         return data;
     }
 
@@ -252,13 +225,21 @@ namespace Konversation
         return urlPattern.exactMatch(text);
     }
 
-    QString stripIrcColorCodes(const QString& text)
+    QString extractColorCodes(const QString& _text)
     {
-        static QRegExp colorRegExp("(\003([0-9]|0[0-9]|1[0-5]|)(,([0-9]|0[0-9]|1[0-5])|,|)|\017)");
-        return QString(text).remove(colorRegExp);
+        QString text(_text);
+        int pos = 0;
+        QString ret;
+        QString match;
+        while ((pos = colorRegExp.indexIn(text, pos)) >= 0)
+        {
+            match = colorRegExp.cap(0);
+            ret += match;
+            text.remove(pos, match.length());
+        }
+        return ret;
     }
 
-
     QPixmap overlayPixmaps( const QPixmap &under, const QPixmap &over )
     {
         if (over.isNull() && under.isNull())
diff --git a/src/common.h b/src/common.h
index bb97ebf..1b728d0 100644
--- a/src/common.h
+++ b/src/common.h
@@ -15,12 +15,18 @@
 
 #include <QByteArray>
 #include <QHash>
+#include <QStringList>
 
 class QString;
 class QPixmap;
 
 namespace Konversation
 {
+    static QRegExp colorRegExp("((\003([0-9]|0[0-9]|1[0-5])(,([0-9]|0[0-9]|1[0-5])|)|\017)|\x02|\x03|\x09|\x13|\x15|\x16|\x1d|\x1f)");
+    static QRegExp colorOnlyRegExp("(\003([0-9]|0[0-9]|1[0-5]|)(,([0-9]|0[0-9]|1[0-5])|,|)|\017)");
+    static QRegExp urlPattern(QString("\\b((?:(?:([a-z][\\w-]+:/{1,3})|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|\\}\\]|[^\\s`!()\\[\\]{};:'\".,<>?%1%2%3%4%5%6])|[a-z0-9.\\-+_]+@[a-z0-9.\\-]+[.][a-z]{1,5}[^\\s/`!()\\[\\]{};:'\".,<>?%1%2%3%4%5%6]))").arg(QChar(0x00AB)).arg(QChar(0x00BB)).arg(QChar(0x201C)).arg(QChar(0x201D)).arg(QChar(0x2018)).arg(QChar(0x2019)));
+    static QRegExp chanExp("(^|\\s|^\"|\\s\"|,|'|\\(|\\:|!|@|%|\\+)(#[^,\\s;\\)\\:\\/\\(\\<\\>]*[^.,\\s;\\)\\:\\/\\(\"\''\\<\\>])");
+
     enum TabNotifyType
     {
         tnfNick,
@@ -52,7 +58,13 @@ namespace Konversation
     struct TextUrlData
     {
         QList<QPair<int, int> > urlRanges;
-        QString htmlText;
+        QStringList fixedUrls;
+    };
+
+    struct TextChannelData
+    {
+        QList<QPair<int, int> > channelRanges;
+        QStringList fixedChannels;
     };
 
     QString removeIrcMarkup(const QString& text);
@@ -60,11 +72,11 @@ namespace Konversation
     QString replaceFormattingCodes(const QString& text);
 
     QList<QPair<int, int> > getUrlRanges(const QString& text);
-    QString tagUrls(const QString& text, const QString& fromNick, bool useCustomColor = true);
-    TextUrlData extractUrlData(const QString& text, const QString& fromNick, bool doUrlRanges,
-        bool doHyperlinks, bool useCustomHyperlinkColor);
+    QList<QPair<int, int> > getChannelRanges(const QString& text);
+    TextUrlData extractUrlData(const QString& string, bool doUrlFixup = true);
+    TextChannelData extractChannelData(const QString& text, bool doChannelFixup = true);
     bool isUrl(const QString& text);
-    QString stripIrcColorCodes(const QString& text);
+    QString extractColorCodes(const QString& text);
 
     QPixmap overlayPixmaps(const QPixmap &under, const QPixmap &over);
     bool isUtf8(const QByteArray& text);
diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 36d99f0..875d1f7 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -1026,118 +1026,14 @@ bool doHighlight, bool parseURL, bool self)
         {
             kapp->beep();
         }
+        //remove char after beep
+        filteredLine.remove('\x07');
     }
 
-    // parse Urls before replacing color codes with html, as replaced htmlcolors
-    // may cause the url parsing to fail
-    if(parseURL)
-    {
-        if(whoSent.isEmpty())
-            filteredLine = Konversation::tagUrls(filteredLine, m_chatWin->getName());
-        else
-            filteredLine = Konversation::tagUrls(filteredLine, whoSent);
-    }
-    else
-    {
-        // Change & to &amp; to prevent html entities to do strange things to the text
-        filteredLine.replace('&', "&amp;");
-        filteredLine.replace("\x0b", "&");
-    }
-
-    // replace \003 and \017 codes with rich text color codes
-    // captures          1    2                   23 4                   4 3     1
-    QRegExp colorRegExp("(\003([0-9]|0[0-9]|1[0-5]|)(,([0-9]|0[0-9]|1[0-5])|,|)|\017)");
-
-    int pos;
-    bool allowColors = Preferences::self()->allowColorCodes();
-    bool firstColor = true;
-    QString colorString;
-    QString lastBgColor;
-
-    while((pos=colorRegExp.indexIn(filteredLine))!=-1)
-    {
-        if(!allowColors)
-        {
-            colorString.clear();
-            lastBgColor.clear();
-        }
-        else
-        {
-            if (firstColor)
-            {
-                colorString.clear();
-            }
-            else
-            {
-                if (lastBgColor.isEmpty())
-                {
-                    colorString = "</font>";
-                }
-                else
-                {
-                    colorString = "</span></font>";
-                }
-            }
-
-            // reset colors on \017 to default value
-            if(colorRegExp.cap(1) == "\017")
-            {
-                colorString += "<font color=\""+defaultColor+"\">";
-                lastBgColor.clear();
-            }
-            // mirc sends it end-custom-color mark
-            else if (colorRegExp.cap(1) == "\003")
-            {
-                lastBgColor.clear();
-            }
-            else
-            {
-                if(!colorRegExp.cap(2).isEmpty())
-                {
-                    int foregroundColor = colorRegExp.cap(2).toInt();
-                    colorString += "<font color=\"" + Preferences::self()->ircColorCode(foregroundColor).name() + "\">";
-                }
-                else
-                {
-                    colorString += "<font color=\""+defaultColor+"\">";
-                }
-            }
-
-            QString bgColor = colorRegExp.cap(3);
-            if (!bgColor.isEmpty() && bgColor != ",")
-            {
-                bgColor = bgColor.right(bgColor.length() - 1);
-                int bgColorValue = bgColor.toInt();
-                lastBgColor = Preferences::self()->ircColorCode(bgColorValue).name();
-            }
-
-            if (!lastBgColor.isEmpty())
-            {
-                colorString += "<span style=\"background-color:" + lastBgColor + "\">";
-            }
-
-            firstColor = false;
-        }
-
-        filteredLine.replace(pos, colorRegExp.cap(0).length(), colorString);
-    }
-
-    if(!firstColor)
-    {
-        if (!lastBgColor.isEmpty())
-            filteredLine+="</span>";
-
-        filteredLine+="</font>";
-    }
-
-    // Replace all text decorations
-    // TODO: \017 should reset all text decorations to plain text
-    replaceDecoration(filteredLine,'\x02','b');
-    replaceDecoration(filteredLine,'\x1d','i');
-    replaceDecoration(filteredLine,'\x13','s');
-    replaceDecoration(filteredLine,'\x15','u');
-    replaceDecoration(filteredLine,'\x16','b');   // should be inverse
-    replaceDecoration(filteredLine,'\x1f','u');
+    QTime time;
+    time.start();
+    filteredLine = ircTextToHtml(filteredLine,  parseURL, defaultColor, whoSent, true);
+    kDebug() << "took" << QString::number(time.elapsed());
 
     // Highlight
     QString ownNick;
@@ -1241,9 +1137,672 @@ bool doHighlight, bool parseURL, bool self)
 
     // Replace pairs of spaces with "<space>&nbsp;" to preserve some semblance of text wrapping
     filteredLine.replace("  "," \xA0");
+//     kDebug() << "filteredLine-final" << filteredLine;
     return filteredLine;
 }
 
+QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString& defaultColor, const QString& whoSent, bool closeAllTags)
+{
+    TextHtmlData data;
+    data.defaultColor = defaultColor;
+    QString htmlText(text);
+    /// NOTE: it is important to copy it, do not use colorRegExp from common.h directly
+    /// as multiple indexIn may be executed at the same time
+    QRegExp ircRichtextRegExp(colorRegExp);
+
+    int pos = 0;
+    int urlPos = -1;
+    bool allowColors = Preferences::self()->allowColorCodes();
+    QString linkColor = Preferences::self()->color(Preferences::Hyperlink).name();
+    int urlCount = 0;
+    int channelCount = 0;
+
+    QString fromNick;
+    TextUrlData urlData;
+    TextChannelData channelData;
+    if (parseURL)
+    {
+        // mark urls and channels, we can not replace it afterwards, we have to
+        // generate valid html in one run, as we need to know which tags we have to close
+        // and which ones we must reopen
+        // I use \x11(for urls) and \x12(for channels) for this job, as they are unused
+        //TODO find a less hacky solution
+        QString strippedText(removeIrcMarkup(htmlText));
+        urlData = extractUrlData(strippedText);
+        if (!urlData.urlRanges.isEmpty())
+        {
+            // we detected the urls on a clean richtext-char-less text
+            // to make 100% sure we get the correct urls, but as a result
+            // we have to map them back to the original url
+            adjustUrlRanges(&urlData, htmlText, strippedText);
+
+            insertMarkers(htmlText, urlData.urlRanges, "\x11");
+
+            //Only set fromNick if we actually have a url,
+            //yes this is a ultra-minor-optimization
+            if (whoSent.isEmpty())
+                fromNick = m_chatWin->getName();
+            else
+                fromNick = whoSent;
+        }
+
+        channelData = extractChannelData(htmlText);
+        insertMarkers(htmlText, channelData.channelRanges, "\x12");
+    }
+    else
+    {
+        // Change & to &amp; to prevent html entities to do strange things to the text
+        htmlText.replace('&', "&amp;");
+        htmlText.replace("\x0b", "&");
+    }
+
+//     kDebug() << "prehtmlText" << htmlText;
+
+    QRegExp urlAndChannelMarker("(\x11|\x12)");
+
+//     // find the next most relevant position, for urls or ircrichtexts
+    if (parseURL)
+        urlPos = urlAndChannelMarker.indexIn(htmlText, pos);
+    pos = ircRichtextRegExp.indexIn(htmlText, pos);
+    if (pos > -1 && urlPos > -1)
+    {
+        pos = qMin(pos, urlPos);
+    }
+    else
+    {
+        pos = qMax(pos, urlPos);
+    }
+//     kDebug() << "pos" << pos;
+
+    while (pos > -1 && pos < htmlText.length())
+    {
+//         kDebug() << "htmlText" << htmlText;
+//         kDebug() << "pos:" << pos;
+//         kDebug() << "irc richtext:" << QString::number(htmlText.at(pos).toAscii(), 16);
+        switch (htmlText.at(pos).toAscii())
+        {
+            case '\x02': //bold
+                pos += defaultHtmlReplace(htmlText, &data, pos, "b");
+                break;
+            case '\x1d': //italic
+                pos += defaultHtmlReplace(htmlText, &data, pos, "i");
+                break;
+            case '\x15': //mirc underline
+            case '\x1f': //kvirc underline
+                pos += defaultHtmlReplace(htmlText, &data, pos, "u");
+                break;
+            case '\x13': //strikethru
+                pos += defaultHtmlReplace(htmlText, &data, pos, "s");
+                break;
+            case '\x03': //color
+                {
+                    //NOTE: copy is important as colorOnlyRegExp static from common.h
+                    // and in a subtoutine the indexIn could be used again which leads
+                    // to different cap() and matchedLength() results
+                    QRegExp ircColorRegExp(colorOnlyRegExp);
+                    int index = ircColorRegExp.indexIn(htmlText, pos);
+                    Q_UNUSED(index);
+                    QString colorMatch(ircColorRegExp.cap(0));
+                    if (!allowColors)
+                    {
+                        int colorLen = colorMatch.length();
+                        htmlText.remove(pos, colorLen);
+                        break;
+                    }
+                    QString colorString;
+
+//                     kDebug() << "colorMatch" << colorMatch;
+                    //TODO check if \x11 \017 is really valid here
+                    // check for color reset conditions
+                    if (colorMatch == "\x03" || colorMatch == "\x11")
+                    {
+                        //in reverse mode, just reset both colors
+                        //color tags are already closed before the reverse start
+                        if (data.reverse)
+                        {
+                            data.lastFgColor.clear();
+                            data.lastBgColor.clear();
+                        }
+                        else
+                        {
+                            if (data.openHtmlTags.contains("font") &&
+                                data.openHtmlTags.contains("span"))
+                            {
+                                colorString += closeToTagString(&data, "span");
+                                data.lastBgColor.clear();
+                                colorString += closeToTagString(&data, "font");
+                                data.lastFgColor.clear();
+                            }
+                            else if (data.openHtmlTags.contains("font"))
+                            {
+                                colorString += closeToTagString(&data, "font");
+                                data.lastFgColor.clear();
+                            }
+                        }
+                        htmlText.replace(pos, colorMatch.length(), colorString);
+                        pos += colorString.length();
+                        break;
+                    }
+
+                    //extract foreground and background Color
+                    QString fgColor(ircColorRegExp.cap(2)), bgColor(ircColorRegExp.cap(3));
+                    if (!fgColor.isEmpty())
+                    {
+                        int foregroundColor = fgColor.toInt();
+                        fgColor = Preferences::self()->ircColorCode(foregroundColor).name();
+                    }
+                    if (!bgColor.isEmpty())
+                    {
+                        if (bgColor == ",")
+                        {
+                            bgColor.clear();
+                        }
+                        else
+                        {
+                            bgColor = bgColor.right(bgColor.length() - 1);
+                            int backgroundColor = bgColor.toInt();
+                            bgColor = Preferences::self()->ircColorCode(backgroundColor).name();
+                        }
+                    }
+
+//                     kDebug() << "fgColor" << fgColor;
+//                     kDebug() << "bgColor" << bgColor;
+
+                    // if we are in reverse mode, just remember the new colors
+                    if (data.reverse)
+                    {
+                        if (!fgColor.isEmpty())
+                        {
+                            data.lastFgColor = fgColor;
+                            if (!bgColor.isEmpty())
+                            {
+                                data.lastBgColor = bgColor;
+                            }
+                        }
+                    }
+                    // do we have a new fgColor?
+                    // NOTE: there is no new bgColor is there is no fgColor
+                    else if (!fgColor.isEmpty())
+                    {
+                        if (data.openHtmlTags.contains("font") &&
+                            data.openHtmlTags.contains("span"))
+                        {
+                            colorString += closeToTagString(&data, "span");
+                            colorString += closeToTagString(&data, "font");
+                        }
+                        else if (data.openHtmlTags.contains("font"))
+                        {
+                            colorString += closeToTagString(&data, "font");
+                        }
+                        data.lastFgColor = fgColor;
+                        if (!bgColor.isEmpty())
+                            data.lastBgColor = bgColor;
+
+                        if (!data.lastFgColor.isEmpty())
+                        {
+                            colorString += fontColorOpenTag(data.lastFgColor);
+                            data.openHtmlTags.append("font");
+                            if (!data.lastBgColor.isEmpty())
+                            {
+                                colorString += spanColorOpenTag(data.lastBgColor);
+                                data.openHtmlTags.append("span");
+                            }
+                        }
+                    }
+                    htmlText.replace(pos, colorMatch.length(), colorString);
+                    pos += colorString.length();
+                    break;
+                }
+                break;
+            case '\x0f': //reset to default
+                {
+                    QString closeText;
+                    while (!data.openHtmlTags.isEmpty())
+                    {
+                        closeText += "</" + data.openHtmlTags.takeLast() + '>';
+                    }
+                    data.lastBgColor.clear();
+                    data.lastFgColor.clear();
+                    data.reverse = false;
+//                     kDebug() << "closeText" << closeText;
+//                     kDebug() << "replace length" << ircRichtextRegExp.cap(0).length();
+//                     kDebug() << "replace text" << ircRichtextRegExp.cap(0);
+                    htmlText.replace(pos, 1, closeText);
+                    kDebug() << "closeText.length();" << closeText.length();
+                    pos += closeText.length();
+                }
+                break;
+            case '\x16': //reverse
+                {
+                    // treat inverse as color and block it if colors are not allowed
+                    if (!allowColors)
+                    {
+//                         kDebug() << "replace length" << ircRichtextRegExp.cap(0).length();
+//                         kDebug() << "replace text" << ircRichtextRegExp.cap(0);
+                        htmlText.remove(pos, ircRichtextRegExp.cap(0).length());
+                        break;
+                    }
+
+                    QString colorString;
+
+                    // close current color strings and open reverse tags
+                    if (!data.reverse)
+                    {
+                        if (data.openHtmlTags.contains("span"))
+                        {
+                            colorString += closeToTagString(&data, "span");
+                        }
+                        if (data.openHtmlTags.contains("font"))
+                        {
+                            colorString += closeToTagString(&data, "font");
+                        }
+                        data.reverse = true;
+                        colorString += fontColorOpenTag(Preferences::self()->color(Preferences::TextViewBackground).name());
+                        data.openHtmlTags.append("font");
+                        colorString += spanColorOpenTag(defaultColor);
+                        data.openHtmlTags.append("span");
+                    }
+                    else
+                    {
+                        // if reset reverse, close reverse and set old fore- and
+                        // back-groundcolor if set in data
+                        colorString += closeToTagString(&data, "span");
+                        colorString += closeToTagString(&data, "font");
+                        data.reverse = false;
+                        if (!data.lastFgColor.isEmpty())
+                        {
+                            colorString += fontColorOpenTag(data.lastFgColor);
+                            data.openHtmlTags.append("font");
+                            if (!data.lastBgColor.isEmpty())
+                            {
+                                colorString += spanColorOpenTag(data.lastBgColor);
+                                data.openHtmlTags.append("span");
+                            }
+                        }
+                    }
+                    htmlText.replace(pos, 1, colorString);
+                    pos += colorString.length();
+                }
+                break;
+            case '\x11': //url start
+                {
+                    QString fixedUrl = urlData.fixedUrls.at(urlCount);
+                    // if a channel is also an url, like #www.test.de
+                    // we inserted a special marker to find the url again,
+                    // remove the marker and skip the channel, as the text is now cleary marked as url or channel
+                    fixedUrl.remove('\x12');
+
+                    const QPair<int, int>& range = urlData.urlRanges.at(urlCount);
+                    QString oldUrl = htmlText.mid(pos+1, range.second);
+//                     kDebug() << "oldUrl" << oldUrl;
+                    QString strippedUrl = removeIrcMarkup(oldUrl).remove('\x12');
+                    if (strippedUrl.contains('\x12'))
+                    {
+                        ++channelCount;
+                        strippedUrl.remove('\x12');
+                    }
+
+                    QString closeTagsString(closeTags(&data));
+                    QString colorCodes = extractColorCodes(oldUrl);
+                    colorCodes = removeDuplicateCodes(colorCodes, &data);
+
+                    QString link("%1<a href=\"%2\" style=\"color:" + linkColor + "\">%3</a>%4%5");
+
+                    link = link.arg(closeTagsString, fixedUrl, strippedUrl, openTags(&data, 0), colorCodes);
+//                     kDebug() << link;
+                    htmlText.replace(pos, oldUrl.length() + 1, link);
+
+                    QMetaObject::invokeMethod(Application::instance(), "storeUrl", Qt::QueuedConnection,
+                                              Q_ARG(QString, fromNick), Q_ARG(QString, fixedUrl), Q_ARG(QDateTime, QDateTime::currentDateTime()));
+
+                    pos += link.length() - colorCodes.length();
+//                     kDebug()  << "pos";
+                    ++urlCount;
+                }
+                break;
+            case '\x12': //channel start
+                {
+                    QString fixedChannel = channelData.fixedChannels.at(channelCount);
+                    // if a channel is also an url, like #www.test.de
+                    // we inserted a special marker to find the url again,
+                    // remove the marker and skip the url, as the text is now cleary marked as url or channel
+                    fixedChannel.remove('\x11');
+
+                    const QPair<int, int>& range = channelData.channelRanges.at(channelCount);
+                    QString oldChannel = htmlText.mid(pos+1, range.second);
+                    QString strippedChannel = removeIrcMarkup(oldChannel);
+                    if (strippedChannel.contains('\x11'))
+                    {
+                        ++urlCount;
+                        strippedChannel.remove('\x11');
+                    }
+                    QString colorCodes = extractColorCodes(oldChannel);
+
+                    QString link("%1<a href=\"#%2\" style=\"color:" + linkColor + "\">%3</a>%4%5");
+
+                    link = link.arg(closeTags(&data), fixedChannel, strippedChannel, openTags(&data, 0), colorCodes);
+                    htmlText.replace(pos, oldChannel.length() + 1, link);
+                    pos += link.length() - colorCodes.length();
+                    ++channelCount;
+                }
+                break;
+            default:
+//                 kDebug() << "unhandled irc richtext:" << QString::number(htmlText.at(pos).toAscii(), 16);
+//                 kDebug() << "match" << ircRichtextRegExp.cap(0);
+//                 kDebug() << "length" << ircRichtextRegExp.cap(0).length();
+                htmlText.remove(pos, ircRichtextRegExp.cap(0).length());
+        }
+
+//         find the next most relevant position, for urls or ircrichtexts
+        if (parseURL)
+            urlPos = urlAndChannelMarker.indexIn(htmlText, pos);
+        pos = ircRichtextRegExp.indexIn(htmlText, pos);
+        if (pos > -1 && urlPos > -1)
+        {
+            pos = qMin(pos, urlPos);
+        }
+        else
+        {
+            pos = qMax(pos, urlPos);
+        }
+//         kDebug() << "pos" << pos;
+    }
+
+    if (parseURL)
+    {
+        // Change & to &amp; to prevent html entities to do strange things to the text
+        htmlText.replace('&', "&amp;");
+        htmlText.replace("\x0b", "&");
+    }
+
+    if (closeAllTags)
+    {
+        htmlText += closeTags(&data);
+    }
+
+    //data.htmlText = htmlText;
+//     kDebug() << "afthtmlText" << htmlText;
+    return htmlText;
+}
+
+int IRCView::defaultHtmlReplace(QString& htmlText, TextHtmlData* data, int pos, const QString& tag)
+{
+    QString replace;
+    if (data->openHtmlTags.contains(tag))
+    {
+        replace = closeToTagString(data, tag);
+    }
+    else
+    {
+        data->openHtmlTags.append(tag);
+        replace = '<'+tag+'>';
+    }
+    htmlText.replace(pos, 1, replace);
+    kDebug() << "length -1" << replace.length() - 1;
+    return replace.length();
+}
+
+QString IRCView::closeToTagString(TextHtmlData* data, const QString& _tag)
+{
+    QString ret;
+    QString tag;
+    int i = data->openHtmlTags.count() - 1;
+    //close all tags to _tag
+    for ( ; i >= 0 ; --i)
+    {
+        tag = data->openHtmlTags.at(i);
+        ret += "</" + tag + '>';
+        if (tag == _tag)
+        {
+            data->openHtmlTags.removeAt(i);
+            break;
+        }
+    }
+
+    // reopen relevant tags
+    ret += openTags(data, i);
+
+    return ret;
+}
+
+QString IRCView::openTags(TextHtmlData* data, int from)
+{
+    QString ret, tag;
+    int i = from;
+    for ( ;  i < data->openHtmlTags.count(); ++i)
+    {
+        tag = data->openHtmlTags.at(i);
+        if (tag == "font")
+        {
+            if (data->reverse)
+            {
+                ret += fontColorOpenTag(Preferences::self()->color(Preferences::TextViewBackground).name());
+            }
+            else
+            {
+                ret += fontColorOpenTag(data->lastFgColor);
+            }
+        }
+        else if (tag == "span")
+        {
+            if (data->reverse)
+            {
+                ret += spanColorOpenTag(data->defaultColor);
+            }
+            else
+            {
+                ret += spanColorOpenTag(data->lastBgColor);
+            }
+        }
+        else
+        {
+            ret += '<' + tag + '>';
+        }
+    }
+    return ret;
+}
+
+QString IRCView::closeTags(TextHtmlData* data)
+{
+    QString ret;
+    QListIterator< QString > i(data->openHtmlTags);
+    i.toBack();
+    while (i.hasPrevious())
+    {
+        ret += "</" + i.previous() + '>';
+    }
+    return ret;
+}
+
+QString IRCView::fontColorOpenTag(const QString& fgColor)
+{
+    return "<font color=\"" + fgColor + "\">";
+}
+
+QString IRCView::spanColorOpenTag(const QString& bgColor)
+{
+    return "<span style=\"background-color:" + bgColor + "\">";
+}
+
+QString& IRCView::insertMarkers(QString& text, QList< QPair< int, int > > ranges, const QString& marker)
+{
+    QListIterator< QPair< int, int > > i(ranges);
+    i.toBack();
+    while (i.hasPrevious())
+    {
+        text.insert(i.previous().first, marker);
+    }
+    return text;
+}
+
+QString IRCView::removeDuplicateCodes(const QString& _codes, TextHtmlData* data)
+{
+    int pos = 0;
+    QString ret;
+    QString codes(_codes);
+    // NOTE:copy me, do not use me directly from common.h
+    QRegExp ircRichtextRegExp(colorRegExp);
+    while ((pos = ircRichtextRegExp.indexIn(codes)) >= 0)
+    {
+        switch (codes.at(pos).toAscii())
+        {
+            case '\x02': //bold
+                defaultRemoveDuplicateHandling(data, codes, pos, ircRichtextRegExp.matchedLength(), "b");
+                break;
+            case '\x1d': //italic
+                defaultRemoveDuplicateHandling(data, codes, pos, ircRichtextRegExp.matchedLength(), "i");
+                break;
+            case '\x15': //mirc underline
+            case '\x1f': //kvirc underline
+                defaultRemoveDuplicateHandling(data, codes, pos, ircRichtextRegExp.matchedLength(), "u");
+                break;
+            case '\x13': //strikethru
+                defaultRemoveDuplicateHandling(data, codes, pos, ircRichtextRegExp.matchedLength(), "s");
+                break;
+            case '\x0f': //reset to default
+                data->openHtmlTags.clear();
+                data->lastBgColor.clear();
+                data->lastFgColor.clear();
+                data->reverse = false;
+                codes.remove(pos, ircRichtextRegExp.matchedLength());
+                break;
+
+                // FIXME is not going to work like this, as we we need at least
+                // one tag in out list
+//             case '\x16': //reverse
+//                 data->reverse = !data->reverse;
+//                 codes.remove(pos, colorRegExp.matchedLength());
+//                 break;
+            case '\x03': //color
+                {
+                    //NOTE: copy is important as colorOnlyRegExp static from common.h
+                    // and in a subtoutine the indexIn could be used again which leads
+                    // to different cap() and matchedLength() results
+                    QRegExp ircColorRegExp(colorOnlyRegExp);
+                    int index = ircColorRegExp.indexIn(codes);
+                    Q_UNUSED(index);
+
+                    QString colorMatch(ircColorRegExp.cap(0));
+//                     kDebug() << "colorMatch" << colorMatch;
+                    //TODO check if \x11 \017 is really valid here
+                    // check for color reset conditions
+                    if (colorMatch == "\x03" || colorMatch == "\x11")
+                    {
+//                         kDebug() << "color is reset thing";
+                        if (!data->lastBgColor.isEmpty())
+                        {
+                            data->lastBgColor.clear();
+                            data->openHtmlTags.removeOne("span");
+                        }
+                        if (!data->lastFgColor.isEmpty())
+                        {
+                            data->lastFgColor.clear();
+                            data->openHtmlTags.removeOne("font");
+                        }
+//                         kDebug() << "removelength" << ircRichtextRegExp.matchedLength();
+                        codes.remove(pos, ircRichtextRegExp.matchedLength());
+                        break;
+                    }
+
+                    //extract foreground and background Color
+                    QString fgColor(ircColorRegExp.cap(2)), bgColor(ircColorRegExp.cap(3));
+                    if (!fgColor.isEmpty())
+                    {
+                        int foregroundColor = fgColor.toInt();
+                        fgColor = Preferences::self()->ircColorCode(foregroundColor).name();
+                    }
+                    if (!bgColor.isEmpty())
+                    {
+                        if (bgColor == ",")
+                        {
+                            bgColor.clear();
+                        }
+                        else
+                        {
+                            bgColor = bgColor.right(bgColor.length() - 1);
+                            int backgroundColor = bgColor.toInt();
+                            bgColor = Preferences::self()->ircColorCode(backgroundColor).name();
+                        }
+                    }
+
+                    if (!fgColor.isEmpty())
+                    {
+                        data->lastFgColor = fgColor;
+                        data->openHtmlTags.append("font");
+                        if (!bgColor.isEmpty())
+                        {
+                            data->lastBgColor = bgColor;
+                            data->openHtmlTags.append("span");
+                        }
+                    }
+
+                    codes.remove(pos, ircRichtextRegExp.matchedLength());
+                }
+                break;
+            default:
+//                 kDebug() << "unsupported duplicate code:" << QString::number(codes.at(pos).toAscii(), 16);
+                ret += codes.mid(pos, ircRichtextRegExp.matchedLength());
+                codes.remove(pos, ircRichtextRegExp.matchedLength());
+        }
+    }
+
+    return ret;
+}
+
+void IRCView::defaultRemoveDuplicateHandling(TextHtmlData* data, QString& codes, int pos, int length, const QString& tag)
+{
+    if (data->openHtmlTags.contains(tag))
+    {
+//         kDebug() << "removing tag" << tag;
+        data->openHtmlTags.removeOne(tag);
+    }
+    else
+    {
+//         kDebug() << "adding tag" << tag;
+        data->openHtmlTags.append(tag);
+    }
+    codes.remove(pos, length);
+}
+
+void IRCView::adjustUrlRanges(TextUrlData* urlData, const QString& richtext, const QString& strippedText)
+{
+    QRegExp ircRichtextRegExp(colorRegExp);
+    int start = 0, j;
+    int i = 0;
+    QString url;
+    int htmlTextLength = richtext.length(), urlRanges = urlData->urlRanges.count();
+    for (int x = 0; x < urlRanges; ++x)
+    {
+        j = 0;
+        const QPair<int, int>& range = urlData->urlRanges.at(x);
+        url = strippedText.mid(range.first, range.second);
+        for ( ; i < htmlTextLength; ++i)
+        {
+            if (richtext.at(i) == url.at(j))
+            {
+                if (j == 0)
+                    start = i;
+                ++j;
+                if (j == url.length())
+                {
+                    urlData->urlRanges[x].first = start;
+                    urlData->urlRanges[x].second = i - start + 1;
+                    break;
+                }
+            }
+            else if (ircRichtextRegExp.exactMatch(richtext.at(i)))
+            {
+                ircRichtextRegExp.indexIn(richtext, i);
+                i += ircRichtextRegExp.matchedLength() - 1;
+            }
+            else
+            {
+                j = 0;
+            }
+        }
+    }
+}
+
 void IRCView::resizeEvent(QResizeEvent *event)
 {
     ScrollBarPin b(verticalScrollBar());
diff --git a/src/viewer/ircview.h b/src/viewer/ircview.h
index 4f64089..e7b8b83 100644
--- a/src/viewer/ircview.h
+++ b/src/viewer/ircview.h
@@ -43,6 +43,22 @@ class IrcViewMarkerLine: public QObject, public QTextObjectInterface
         virtual QSizeF intrinsicSize(QTextDocument *doc, int posInDocument, const QTextFormat &format);
 };
 
+/// Helper struct which remembers the openHtmlTags, the fore and
+/// background color, if the reverse char is set and the defaultcolor (for reverse)
+/// while the ircrichtext -> html generation is in progress
+struct TextHtmlData
+{
+    TextHtmlData()
+        : reverse(false)
+    {
+    }
+
+    QList<QString> openHtmlTags;
+    QString lastFgColor;
+    QString lastBgColor;
+    bool reverse;
+    QString defaultColor;
+};
 
 class IRCView : public KTextBrowser
 {
@@ -236,6 +252,62 @@ class IRCView : public KTextBrowser
 
         void replaceDecoration(QString& line,char decoration,char replacement);
 
+    private:
+
+        /// Returns a string where all irc-richtext chars are replaced with proper
+        /// html tags and all urls are parsed if parseURL is true
+        inline QString ircTextToHtml(const QString& text, bool parseURL, const QString& defaultColor, const QString& whoSent, bool closeAllTags = true);
+
+        /// Returns a string that closes all open html tags to <parm>tag</parm>
+        /// The closed tag is removed from opentagList in data
+        inline QString closeToTagString(TextHtmlData* data, const QString& tag);
+
+        /// Returns a html open span line with given backgroundcolor style
+        inline QString spanColorOpenTag(const QString& bgColor);
+
+        /// Returns a html open font line with given foregroundcolor
+        inline QString fontColorOpenTag(const QString& fgColor);
+
+        /// Insert a string that closes as open html tags to <parm>tag</parm> and reopen the remaining ones.
+        /// For the next example I will use [b] as boldchar and [i] as italic char
+        /// If are currently working on text like
+        /// "aa<b>bb<i>cc[b]dd[i]ee"
+        /// it would generate for the next [b], "</i></b><i>".
+        /// <i> is reopened as it is still relevant
+        /// Returns the Length of the inserted String - replaced char(s)
+        inline int defaultHtmlReplace(QString& htmlText, TextHtmlData* data, int pos, const QString& tag);
+
+        /// Injects a given <parm>marker</parm> at the beginning of each range in the text.
+        inline QString& insertMarkers(QString& text, QList< QPair< int, int > > ranges, const QString& marker);
+
+        /// Returns a string that opens all tags starting from index <parm>from</parm>
+        inline QString openTags(TextHtmlData* data, int from = 0);
+
+        /// Returns a string that closes all open tags
+        /// but does not remove them from the opentaglist in data
+        inline QString closeTags(TextHtmlData* data);
+
+        /// This function looks in <parm>codes</parm> which tags it open/closes
+        /// and appends/removes them from opentagList in <parm>data</parm>.
+        /// This way we avoid pointless empty tags after the url like "<b></b>"
+        /// The returned string consists of all codes that this function could not deal with,
+        /// which is the best case empty.
+        QString removeDuplicateCodes(const QString& codes, TextHtmlData* data);
+
+        /// Helperfunction for removeDuplicateCodes, for dealing with simple irc richtext
+        /// chars as bold, italic, underline and strikethrou.
+        /// The default behaivor is to look if the <parm>tag</parm> is already in the
+        /// opentagList in <parm>data</parm> and remove it if in case if is in, or
+        /// append it in case it is not.
+        /// And remove the ircchar from <parm>codec</parm>
+        inline void defaultRemoveDuplicateHandling(TextHtmlData* data, QString& codes, int pos, int length, const QString& tag);
+
+        /// Changes the ranges in <parm>urlData</parm>, that are found in
+        /// <parm>strippedText</parm>, to match in <parm>richText</parm>.
+        /// This is needed for cases were the url is tainted by ircrichtext chars
+        inline void adjustUrlRanges(Konversation::TextUrlData* urlData, const QString& richtext, const QString& strippedText);
+
+    protected:
         virtual void resizeEvent(QResizeEvent *event);
         virtual void mouseReleaseEvent(QMouseEvent* ev);
         virtual void mousePressEvent(QMouseEvent* ev);
diff --git a/src/viewer/topiclabel.cpp b/src/viewer/topiclabel.cpp
index 5dc333b..e99993c 100644
--- a/src/viewer/topiclabel.cpp
+++ b/src/viewer/topiclabel.cpp
@@ -173,7 +173,7 @@ namespace Konversation
         text.replace('<', "\x0blt;"). // tagUrls will replace \x0b with &
             replace('>', "\x0bgt;");
 
-        text = tagUrls(text, m_channelName, false);
+        text = tagUrls(text, m_channelName);
 
         if(height() < (fontMetrics().lineSpacing() * 2))
         {
@@ -332,6 +332,43 @@ namespace Konversation
 
         KIO::copy(srcUrl, saveUrl);
     }
+
+    QString TopicLabel::tagUrls(const QString& text, const QString& sender)
+    {
+        QString htmlText(removeIrcMarkup(text));
+        QString link("<a href=\"#%1\">%2</a>");
+
+        QString original;
+        TextChannelData channelData = extractChannelData(htmlText);
+
+        for (int i = channelData.channelRanges.count()-1; i >= 0 ; --i)
+        {
+            const QPair <int, int>& range = channelData.channelRanges.at(i);
+            original = htmlText.mid(range.first, range.second);
+            htmlText.replace(range.first, range.second, link.arg(channelData.fixedChannels.at(i), original));
+        }
+
+        link = "<a href=\"%1\">%2</a>";
+        TextUrlData urlData = extractUrlData(htmlText);
+        for (int i = urlData.urlRanges.count()-1; i >= 0 ; --i)
+        {
+            const QPair <int, int>& range = urlData.urlRanges.at(i);
+
+            int pos = range.first;
+            // check if the matched text is already replaced as a channel
+            if (htmlText.lastIndexOf("<a", pos ) > htmlText.lastIndexOf("</a>", pos))
+            {
+                continue;
+            }
+            original = htmlText.mid(range.first, range.second);
+            QString fixedUrl = urlData.fixedUrls.at(i);
+            htmlText.replace(range.first, range.second, link.arg(fixedUrl, original));
+
+            QMetaObject::invokeMethod(Application::instance(), "storeUrl", Qt::QueuedConnection,
+                Q_ARG(QString, sender), Q_ARG(QString, fixedUrl), Q_ARG(QDateTime, QDateTime::currentDateTime()));
+        }
+        return htmlText;
+    }
 }
 
 #include "topiclabel.moc"
diff --git a/src/viewer/topiclabel.h b/src/viewer/topiclabel.h
index 99e1347..be6e7d3 100644
--- a/src/viewer/topiclabel.h
+++ b/src/viewer/topiclabel.h
@@ -63,6 +63,8 @@ namespace Konversation
             void saveLinkAs();
 
         private:
+            inline QString tagUrls(const QString& text, const QString& sender);
+
             Server* m_server;
             QString m_channelName;
 

commit 318b21d7d3911c97d9998343c330af90d7b6fb8c
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Fri Sep 3 22:35:15 2010 +0200

    In Qt4.7 in QSortFilterProxy the DynamicSortFilter behavior changed,
    a bug in the code caused dynamicSortFilter to be default true, but this bug
    is fixed with qt4.7 and so the sorting is disabled by default.
    Note: the doc always said default is false, so this is more or less my fault

diff --git a/src/dcc/transferview.cpp b/src/dcc/transferview.cpp
index 685d8f6..83a239f 100644
--- a/src/dcc/transferview.cpp
+++ b/src/dcc/transferview.cpp
@@ -35,6 +35,7 @@ namespace Konversation
             m_categorieFlags = None;
             m_dccModel = new TransferListModel(this);
             m_proxyModel = new TransferListProxyModel(this);
+            m_proxyModel->setDynamicSortFilter(true);
             m_proxyModel->setSourceModel(m_dccModel);
             setModel(m_proxyModel);
 

commit 0fc09d23a4cfb7c71fb237ec8c1f4fe378fcf50d
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Sat Sep 4 16:54:15 2010 +0200

    - handle \x16 reverse in removeDuplicateCodes
    - merge IRCView::basicDirection into IRCView::filter/ircTextToHtml
    - Switch ircchar finding from QRegExp to for (...) in ircTextToHtml and also handle the baseicDirection
    + QRegExp seems to be very slow on long lines with very many matches, a simple for (...) is up to
      2 times faster in this case
    + baseicDirection check now skips urls, as they are not part of the spoken language
    - remove temporary url marker hack

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 875d1f7..e80972d 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -588,8 +588,10 @@ void IRCView::append(const QString& nick, const QString& message)
 
     QString nickLine = createNickLine(nick, channelColor);
 
+    QChar::Direction dir;
+    QString text(filter(message, channelColor, nick, true, true, false, &dir));
     QString line;
-    bool rtl = (basicDirection(message) == QChar::DirR);
+    bool rtl = (dir == QChar::DirR);
 
     if(rtl)
     {
@@ -605,7 +607,7 @@ void IRCView::append(const QString& nick, const QString& message)
         line += "<font color=\"" + channelColor + "\">%1" + nickLine + " %3</font>";
     }
 
-    line = line.arg(timeStamp(), nick, filter(message, channelColor, nick, true));
+    line = line.arg(timeStamp(), nick, text);
 
     emit textToLog(QString("<%1>\t%2").arg(nick).arg(message));
 
@@ -645,7 +647,9 @@ void IRCView::appendQuery(const QString& nick, const QString& message, bool inCh
     QString nickLine = createNickLine(nick, queryColor, true, inChannel);
 
     QString line;
-    bool rtl = (basicDirection(message) == QChar::DirR);
+    QChar::Direction dir;
+    QString text(filter(message, queryColor, nick, true, true, false, &dir));
+    bool rtl = (dir == QChar::DirR);
 
     if(rtl)
     {
@@ -661,7 +665,7 @@ void IRCView::appendQuery(const QString& nick, const QString& message, bool inCh
         line += "<font color=\"" + queryColor + "\">%1 " + nickLine + " %3</font>";
     }
 
-    line = line.arg(timeStamp(), nick, filter(message, queryColor, nick, true));
+    line = line.arg(timeStamp(), nick, text);
 
     emit textToLog(QString("<%1>\t%2").arg(nick).arg(message));
 
@@ -703,7 +707,9 @@ void IRCView::appendAction(const QString& nick, const QString& message)
     }
     else
     {
-        bool rtl = (basicDirection(message) == QChar::DirR);
+        QChar::Direction dir;
+        QString text(filter(message, actionColor, nick, true,true, false, &dir));
+        bool rtl = (dir == QChar::DirR);
 
         if (rtl)
         {
@@ -719,7 +725,7 @@ void IRCView::appendAction(const QString& nick, const QString& message)
             line += "<font color=\"" + actionColor + "\">%1 * " + nickLine + " %3</font>";
         }
 
-        line = line.arg(timeStamp(), nick, filter(message, actionColor, nick, true));
+        line = line.arg(timeStamp(), nick, text);
 
         emit textToLog(QString("\t * %1 %2").arg(nick).arg(message));
 
@@ -741,7 +747,9 @@ void IRCView::appendServerMessage(const QString& type, const QString& message, b
     }
 
     QString line;
-    bool rtl = (basicDirection(message) == QChar::DirR);
+    QChar::Direction dir;
+    QString text(filter(message, serverColor, 0 , true, parseURL, false, &dir));
+    bool rtl = (dir == QChar::DirR);
 
     if(rtl)
     {
@@ -758,7 +766,7 @@ void IRCView::appendServerMessage(const QString& type, const QString& message, b
     }
 
     if(type != i18n("Notify"))
-        line = line.arg(timeStamp(), type, filter(message, serverColor, 0 , true, parseURL));
+        line = line.arg(timeStamp(), type, text);
     else
     {
         // See Server::setWatchedNickOnline() for the originating call site.
@@ -793,7 +801,9 @@ void IRCView::appendCommandMessage(const QString& type,const QString& message, b
     prefix=Qt::escape(prefix);
 
     QString line;
-    bool rtl = (basicDirection(message) == QChar::DirR);
+    QChar::Direction dir;
+    QString text(filter(message, commandColor, 0, true, parseURL, self, &dir));
+    bool rtl = (dir == QChar::DirR);
 
     if(rtl)
     {
@@ -809,7 +819,7 @@ void IRCView::appendCommandMessage(const QString& type,const QString& message, b
         line += "<font color=\"" + commandColor + "\">%1 %2 %3</font>";
     }
 
-    line = line.arg(timeStamp(), prefix, filter(message, commandColor, 0, true, parseURL, self));
+    line = line.arg(timeStamp(), prefix, text);
 
     emit textToLog(QString("%1\t%2").arg(type).arg(message));
 
@@ -839,7 +849,9 @@ void IRCView::appendBacklogMessage(const QString& firstColumn,const QString& raw
     nick.replace('>',"&gt;");
 
     QString line;
-    bool rtl = (basicDirection(message) == QChar::DirR);
+    QChar::Direction dir;
+    QString text(filter(message, backlogColor, NULL, false, false, false, &dir));
+    bool rtl = (dir == QChar::DirR);
 
     if(rtl)
     {
@@ -855,7 +867,7 @@ void IRCView::appendBacklogMessage(const QString& firstColumn,const QString& raw
         line += "<font color=\"" + backlogColor + "\">%1 %2 %3</font>";
     }
 
-    line = line.arg(time, nick, filter(message, backlogColor, NULL, false, false));
+    line = line.arg(time, nick, text);
 
     doAppend(line, rtl);
 }
@@ -1002,7 +1014,7 @@ void IRCView::replaceDecoration(QString& line, char decoration, char replacement
 }
 
 QString IRCView::filter(const QString& line, const QString& defaultColor, const QString& whoSent,
-bool doHighlight, bool parseURL, bool self)
+bool doHighlight, bool parseURL, bool self, QChar::Direction* direction)
 {
     QString filteredLine(line);
     Application* konvApp = static_cast<Application*>(kapp);
@@ -1032,7 +1044,7 @@ bool doHighlight, bool parseURL, bool self)
 
     QTime time;
     time.start();
-    filteredLine = ircTextToHtml(filteredLine,  parseURL, defaultColor, whoSent, true);
+    filteredLine = ircTextToHtml(filteredLine,  parseURL, defaultColor, whoSent, true, direction);
     kDebug() << "took" << QString::number(time.elapsed());
 
     // Highlight
@@ -1141,42 +1153,33 @@ bool doHighlight, bool parseURL, bool self)
     return filteredLine;
 }
 
-QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString& defaultColor, const QString& whoSent, bool closeAllTags)
+QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString& defaultColor,
+                               const QString& whoSent, bool closeAllTags, QChar::Direction* direction)
 {
     TextHtmlData data;
     data.defaultColor = defaultColor;
     QString htmlText(text);
-    /// NOTE: it is important to copy it, do not use colorRegExp from common.h directly
-    /// as multiple indexIn may be executed at the same time
-    QRegExp ircRichtextRegExp(colorRegExp);
 
-    int pos = 0;
-    int urlPos = -1;
     bool allowColors = Preferences::self()->allowColorCodes();
     QString linkColor = Preferences::self()->color(Preferences::Hyperlink).name();
-    int urlCount = 0;
-    int channelCount = 0;
+
+    unsigned int rtl_chars = 0;
+    unsigned int ltr_chars = 0;
 
     QString fromNick;
     TextUrlData urlData;
     TextChannelData channelData;
     if (parseURL)
     {
-        // mark urls and channels, we can not replace it afterwards, we have to
-        // generate valid html in one run, as we need to know which tags we have to close
-        // and which ones we must reopen
-        // I use \x11(for urls) and \x12(for channels) for this job, as they are unused
-        //TODO find a less hacky solution
         QString strippedText(removeIrcMarkup(htmlText));
         urlData = extractUrlData(strippedText);
         if (!urlData.urlRanges.isEmpty())
         {
+            //kDebug() << "fixing url ranges";
             // we detected the urls on a clean richtext-char-less text
             // to make 100% sure we get the correct urls, but as a result
             // we have to map them back to the original url
-            adjustUrlRanges(&urlData, htmlText, strippedText);
-
-            insertMarkers(htmlText, urlData.urlRanges, "\x11");
+            adjustUrlRanges(urlData.urlRanges, urlData.fixedUrls, htmlText, strippedText);
 
             //Only set fromNick if we actually have a url,
             //yes this is a ultra-minor-optimization
@@ -1186,8 +1189,9 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                 fromNick = whoSent;
         }
 
-        channelData = extractChannelData(htmlText);
-        insertMarkers(htmlText, channelData.channelRanges, "\x12");
+        channelData = extractChannelData(strippedText);
+        //kDebug() << "fixing channel ranges";
+        adjustUrlRanges(channelData.channelRanges, channelData.fixedChannels , htmlText, strippedText);
     }
     else
     {
@@ -1196,43 +1200,180 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
         htmlText.replace("\x0b", "&");
     }
 
-//     kDebug() << "prehtmlText" << htmlText;
-
-    QRegExp urlAndChannelMarker("(\x11|\x12)");
-
-//     // find the next most relevant position, for urls or ircrichtexts
+    int linkPos = -1;
+    int linkOffset = 0;
+    bool doChannel = false;
     if (parseURL)
-        urlPos = urlAndChannelMarker.indexIn(htmlText, pos);
-    pos = ircRichtextRegExp.indexIn(htmlText, pos);
-    if (pos > -1 && urlPos > -1)
     {
-        pos = qMin(pos, urlPos);
-    }
-    else
-    {
-        pos = qMax(pos, urlPos);
+        if (!urlData.urlRanges.isEmpty() && !channelData.channelRanges.isEmpty())
+        {
+            if (urlData.urlRanges.first() < channelData.channelRanges.first())
+            {
+                doChannel = false;
+                linkPos = urlData.urlRanges.first().first;
+            }
+            else
+            {
+                doChannel = true;
+                linkPos = channelData.channelRanges.first().first;
+            }
+        }
+        else if (!urlData.urlRanges.isEmpty() && channelData.channelRanges.isEmpty())
+        {
+            doChannel = false;
+            linkPos = urlData.urlRanges.first().first;
+        }
+        else if (urlData.urlRanges.isEmpty() && !channelData.channelRanges.isEmpty())
+        {
+            doChannel = true;
+            linkPos = channelData.channelRanges.first().first;
+        }
+        else
+        {
+            linkPos = -1;
+        }
     }
-//     kDebug() << "pos" << pos;
 
-    while (pos > -1 && pos < htmlText.length())
+    int offset;
+    for (int pos = 0; pos < htmlText.length(); ++pos)
     {
+        offset = 0;
 //         kDebug() << "htmlText" << htmlText;
 //         kDebug() << "pos:" << pos;
 //         kDebug() << "irc richtext:" << QString::number(htmlText.at(pos).toAscii(), 16);
+//         kDebug() << "htmlText.at(pos)" << htmlText.at(pos);
+//         kDebug() << "pos" << pos;
+// 
+//         kDebug() << "linkOffset" << linkOffset;
+//         kDebug() << "linkPos" << linkPos;
+
+        //check for next relevant url or channel link to insert
+        if (parseURL && pos == linkPos+linkOffset)
+        {
+            if (doChannel)
+            {
+                QString fixedChannel = channelData.fixedChannels.takeFirst();
+                const QPair<int, int>& range = channelData.channelRanges.takeFirst();
+
+                QString oldChannel = htmlText.mid(pos, range.second);
+                QString strippedChannel = removeIrcMarkup(oldChannel);
+                QString colorCodes = extractColorCodes(oldChannel);
+
+                QString link("%1<a href=\"#%2\" style=\"color:" + linkColor + "\">%3</a>%4%5");
+
+                link = link.arg(closeTags(&data), fixedChannel, strippedChannel, openTags(&data, 0), colorCodes);
+                htmlText.replace(pos, oldChannel.length(), link);
+
+                pos += link.length() - colorCodes.length() - 1;
+                linkOffset += link.length() - oldChannel.length();
+            }
+            else
+            {
+                QString fixedUrl = urlData.fixedUrls.takeFirst();
+                const QPair<int, int>& range = urlData.urlRanges.takeFirst();
+
+                QString oldUrl = htmlText.mid(pos, range.second);
+                QString strippedUrl = removeIrcMarkup(oldUrl);
+
+                QString closeTagsString(closeTags(&data));
+                QString colorCodes = extractColorCodes(oldUrl);
+                colorCodes = removeDuplicateCodes(colorCodes, &data);
+
+                QString link("%1<a href=\"%2\" style=\"color:" + linkColor + "\">%3</a>%4%5");
+
+                link = link.arg(closeTagsString, fixedUrl, strippedUrl, openTags(&data, 0), colorCodes);
+                htmlText.replace(pos, oldUrl.length(), link);
+
+                QMetaObject::invokeMethod(Application::instance(), "storeUrl", Qt::QueuedConnection,
+                                          Q_ARG(QString, fromNick), Q_ARG(QString, fixedUrl), Q_ARG(QDateTime, QDateTime::currentDateTime()));
+
+                pos += link.length() - colorCodes.length() - 1;
+                linkOffset += link.length() - oldUrl.length();
+            }
+
+            bool invalidNextLink = false;
+            do
+            {
+
+                if (!urlData.urlRanges.isEmpty() && !channelData.channelRanges.isEmpty())
+                {
+                    if (urlData.urlRanges.first() < channelData.channelRanges.first())
+                    {
+                        doChannel = false;
+                        linkPos = urlData.urlRanges.first().first;
+                    }
+                    else
+                    {
+                        doChannel = true;
+                        linkPos = channelData.channelRanges.first().first;
+                    }
+                }
+                else if (!urlData.urlRanges.isEmpty() && channelData.channelRanges.isEmpty())
+                {
+                    doChannel = false;
+                    linkPos = urlData.urlRanges.first().first;
+                }
+                else if (urlData.urlRanges.isEmpty() && !channelData.channelRanges.isEmpty())
+                {
+                    doChannel = true;
+                    linkPos = channelData.channelRanges.first().first;
+                }
+                else
+                {
+                    linkPos = -1;
+                }
+
+                //for cases like "#www.some.url" we get first channel
+                //and also url, the channel->clickable-channel replace we are
+                //already after the url, so just forget it, as a clickable
+                //channel is correct in this case
+                if (linkPos > -1 && linkPos+linkOffset < pos)
+                {
+                    invalidNextLink = true;
+                    kDebug() << "INVALID NEXT LINK, NEEDS FIXING!";
+                    if (doChannel)
+                    {
+                        channelData.channelRanges.removeFirst();
+                        channelData.fixedChannels.removeFirst();
+                    }
+                    else
+                    {
+                        urlData.urlRanges.removeFirst();
+                        urlData.fixedUrls.removeFirst();
+                    }
+                }
+                else
+                {
+                    invalidNextLink = false;
+                }
+            } while (invalidNextLink);
+
+            continue;
+        }
+
+
         switch (htmlText.at(pos).toAscii())
         {
             case '\x02': //bold
-                pos += defaultHtmlReplace(htmlText, &data, pos, "b");
+                offset = defaultHtmlReplace(htmlText, &data, pos, "b");
+                pos += offset -1;
+                linkOffset += offset -1;
                 break;
             case '\x1d': //italic
-                pos += defaultHtmlReplace(htmlText, &data, pos, "i");
+                offset = defaultHtmlReplace(htmlText, &data, pos, "i");
+                pos += offset -1;
+                linkOffset += offset -1;
                 break;
             case '\x15': //mirc underline
             case '\x1f': //kvirc underline
-                pos += defaultHtmlReplace(htmlText, &data, pos, "u");
+                offset = defaultHtmlReplace(htmlText, &data, pos, "u");
+                pos += offset -1;
+                linkOffset += offset -1;
                 break;
             case '\x13': //strikethru
-                pos += defaultHtmlReplace(htmlText, &data, pos, "s");
+                offset = defaultHtmlReplace(htmlText, &data, pos, "s");
+                pos += offset -1;
+                linkOffset += offset -1;
                 break;
             case '\x03': //color
                 {
@@ -1245,15 +1386,12 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                     QString colorMatch(ircColorRegExp.cap(0));
                     if (!allowColors)
                     {
-                        int colorLen = colorMatch.length();
-                        htmlText.remove(pos, colorLen);
+                        htmlText.remove(pos, colorMatch.length());
                         break;
                     }
                     QString colorString;
-
-//                     kDebug() << "colorMatch" << colorMatch;
-                    //TODO check if \x11 \017 is really valid here
                     // check for color reset conditions
+                    //TODO check if \x11 \017 is really valid here
                     if (colorMatch == "\x03" || colorMatch == "\x11")
                     {
                         //in reverse mode, just reset both colors
@@ -1280,7 +1418,10 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                             }
                         }
                         htmlText.replace(pos, colorMatch.length(), colorString);
-                        pos += colorString.length();
+//                        offset += colorString.length() - 1;
+
+                        pos += colorString.length() - 1;
+                        linkOffset += colorString.length() -colorMatch.length();
                         break;
                     }
 
@@ -1350,7 +1491,9 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                         }
                     }
                     htmlText.replace(pos, colorMatch.length(), colorString);
-                    pos += colorString.length();
+                    //offset += colorString.length();
+                    pos += colorString.length() - 1;
+                    linkOffset += colorString.length() -colorMatch.length();
                     break;
                 }
                 break;
@@ -1368,8 +1511,10 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
 //                     kDebug() << "replace length" << ircRichtextRegExp.cap(0).length();
 //                     kDebug() << "replace text" << ircRichtextRegExp.cap(0);
                     htmlText.replace(pos, 1, closeText);
-                    kDebug() << "closeText.length();" << closeText.length();
-                    pos += closeText.length();
+                    //kDebug() << "closeText.length();" << closeText.length();
+                    //-1 for the ++pos
+                    pos += closeText.length() - 1;
+                    linkOffset += closeText.length() - 1;
                 }
                 break;
             case '\x16': //reverse
@@ -1379,7 +1524,7 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                     {
 //                         kDebug() << "replace length" << ircRichtextRegExp.cap(0).length();
 //                         kDebug() << "replace text" << ircRichtextRegExp.cap(0);
-                        htmlText.remove(pos, ircRichtextRegExp.cap(0).length());
+                        htmlText.remove(pos, 1);
                         break;
                     }
 
@@ -1421,91 +1566,45 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                         }
                     }
                     htmlText.replace(pos, 1, colorString);
-                    pos += colorString.length();
+                    pos += colorString.length() -1;
+                    linkOffset += colorString.length() -1;
                 }
                 break;
-            case '\x11': //url start
-                {
-                    QString fixedUrl = urlData.fixedUrls.at(urlCount);
-                    // if a channel is also an url, like #www.test.de
-                    // we inserted a special marker to find the url again,
-                    // remove the marker and skip the channel, as the text is now cleary marked as url or channel
-                    fixedUrl.remove('\x12');
-
-                    const QPair<int, int>& range = urlData.urlRanges.at(urlCount);
-                    QString oldUrl = htmlText.mid(pos+1, range.second);
-//                     kDebug() << "oldUrl" << oldUrl;
-                    QString strippedUrl = removeIrcMarkup(oldUrl).remove('\x12');
-                    if (strippedUrl.contains('\x12'))
-                    {
-                        ++channelCount;
-                        strippedUrl.remove('\x12');
-                    }
-
-                    QString closeTagsString(closeTags(&data));
-                    QString colorCodes = extractColorCodes(oldUrl);
-                    colorCodes = removeDuplicateCodes(colorCodes, &data);
-
-                    QString link("%1<a href=\"%2\" style=\"color:" + linkColor + "\">%3</a>%4%5");
-
-                    link = link.arg(closeTagsString, fixedUrl, strippedUrl, openTags(&data, 0), colorCodes);
-//                     kDebug() << link;
-                    htmlText.replace(pos, oldUrl.length() + 1, link);
-
-                    QMetaObject::invokeMethod(Application::instance(), "storeUrl", Qt::QueuedConnection,
-                                              Q_ARG(QString, fromNick), Q_ARG(QString, fixedUrl), Q_ARG(QDateTime, QDateTime::currentDateTime()));
-
-                    pos += link.length() - colorCodes.length();
-//                     kDebug()  << "pos";
-                    ++urlCount;
-                }
-                break;
-            case '\x12': //channel start
+            default:
                 {
-                    QString fixedChannel = channelData.fixedChannels.at(channelCount);
-                    // if a channel is also an url, like #www.test.de
-                    // we inserted a special marker to find the url again,
-                    // remove the marker and skip the url, as the text is now cleary marked as url or channel
-                    fixedChannel.remove('\x11');
-
-                    const QPair<int, int>& range = channelData.channelRanges.at(channelCount);
-                    QString oldChannel = htmlText.mid(pos+1, range.second);
-                    QString strippedChannel = removeIrcMarkup(oldChannel);
-                    if (strippedChannel.contains('\x11'))
+                    const QChar& dirChar = htmlText.at(pos);
+                    //kDebug() << dirChar;
+                    if (!(dirChar.isNumber() || dirChar.isSymbol() ||
+                        dirChar.isSpace()  || dirChar.isPunct()  ||
+                        dirChar.isMark()))
                     {
-                        ++urlCount;
-                        strippedChannel.remove('\x11');
+                        switch(dirChar.direction())
+                        {
+                            case QChar::DirL:
+                            case QChar::DirLRO:
+                            case QChar::DirLRE:
+                                ltr_chars++;
+                                break;
+                            case QChar::DirR:
+                            case QChar::DirAL:
+                            case QChar::DirRLO:
+                            case QChar::DirRLE:
+                                rtl_chars++;
+                                break;
+                            default:
+                                break;
+                        }
                     }
-                    QString colorCodes = extractColorCodes(oldChannel);
-
-                    QString link("%1<a href=\"#%2\" style=\"color:" + linkColor + "\">%3</a>%4%5");
-
-                    link = link.arg(closeTags(&data), fixedChannel, strippedChannel, openTags(&data, 0), colorCodes);
-                    htmlText.replace(pos, oldChannel.length() + 1, link);
-                    pos += link.length() - colorCodes.length();
-                    ++channelCount;
                 }
-                break;
-            default:
-//                 kDebug() << "unhandled irc richtext:" << QString::number(htmlText.at(pos).toAscii(), 16);
-//                 kDebug() << "match" << ircRichtextRegExp.cap(0);
-//                 kDebug() << "length" << ircRichtextRegExp.cap(0).length();
-                htmlText.remove(pos, ircRichtextRegExp.cap(0).length());
         }
+    }
 
-//         find the next most relevant position, for urls or ircrichtexts
-        if (parseURL)
-            urlPos = urlAndChannelMarker.indexIn(htmlText, pos);
-        pos = ircRichtextRegExp.indexIn(htmlText, pos);
-        if (pos > -1 && urlPos > -1)
-        {
-            pos = qMin(pos, urlPos);
-        }
+    if (direction)
+    {
+        if (rtl_chars > ltr_chars)
+            *direction = QChar::DirR;
         else
-        {
-            pos = qMax(pos, urlPos);
-        }
-//         kDebug() << "pos" << pos;
+            *direction = QChar::DirL;
     }
 
     if (parseURL)
@@ -1520,7 +1619,6 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
         htmlText += closeTags(&data);
     }
 
-    //data.htmlText = htmlText;
 //     kDebug() << "afthtmlText" << htmlText;
     return htmlText;
 }
@@ -1538,7 +1636,6 @@ int IRCView::defaultHtmlReplace(QString& htmlText, TextHtmlData* data, int pos,
         replace = '<'+tag+'>';
     }
     htmlText.replace(pos, 1, replace);
-    kDebug() << "length -1" << replace.length() - 1;
     return replace.length();
 }
 
@@ -1635,60 +1732,78 @@ QString& IRCView::insertMarkers(QString& text, QList< QPair< int, int > > ranges
     return text;
 }
 
-QString IRCView::removeDuplicateCodes(const QString& _codes, TextHtmlData* data)
+QString IRCView::removeDuplicateCodes(const QString& codes, TextHtmlData* data)
 {
     int pos = 0;
     QString ret;
-    QString codes(_codes);
-    // NOTE:copy me, do not use me directly from common.h
-    QRegExp ircRichtextRegExp(colorRegExp);
-    while ((pos = ircRichtextRegExp.indexIn(codes)) >= 0)
+    while (pos < codes.length())
     {
         switch (codes.at(pos).toAscii())
         {
             case '\x02': //bold
-                defaultRemoveDuplicateHandling(data, codes, pos, ircRichtextRegExp.matchedLength(), "b");
+                defaultRemoveDuplicateHandling(data, "b");
+                ++pos;
                 break;
             case '\x1d': //italic
-                defaultRemoveDuplicateHandling(data, codes, pos, ircRichtextRegExp.matchedLength(), "i");
+                defaultRemoveDuplicateHandling(data, "i");
+                ++pos;
                 break;
             case '\x15': //mirc underline
             case '\x1f': //kvirc underline
-                defaultRemoveDuplicateHandling(data, codes, pos, ircRichtextRegExp.matchedLength(), "u");
+                defaultRemoveDuplicateHandling(data, "u");
+                ++pos;
                 break;
             case '\x13': //strikethru
-                defaultRemoveDuplicateHandling(data, codes, pos, ircRichtextRegExp.matchedLength(), "s");
+                defaultRemoveDuplicateHandling(data, "s");
+                ++pos;
                 break;
             case '\x0f': //reset to default
                 data->openHtmlTags.clear();
                 data->lastBgColor.clear();
                 data->lastFgColor.clear();
                 data->reverse = false;
-                codes.remove(pos, ircRichtextRegExp.matchedLength());
+                ++pos;
                 break;
 
-                // FIXME is not going to work like this, as we we need at least
-                // one tag in out list
-//             case '\x16': //reverse
-//                 data->reverse = !data->reverse;
-//                 codes.remove(pos, colorRegExp.matchedLength());
-//                 break;
+            case '\x16': //reverse
+                if (data->reverse)
+                {
+                    data->openHtmlTags.removeOne("span");
+                    data->openHtmlTags.removeOne("font");
+                    data->reverse = false;
+                    if (!data->lastFgColor.isEmpty())
+                    {
+                        data->openHtmlTags.append("font");
+                        if (!data->lastBgColor.isEmpty())
+                        {
+                            data->openHtmlTags.append("span");
+                        }
+                    }
+                }
+                else
+                {
+                    data->openHtmlTags.removeOne("span");
+                    data->openHtmlTags.removeOne("font");
+                    data->reverse = true;
+                    data->openHtmlTags.append("font");
+                    data->openHtmlTags.append("span");
+                }
+                ++pos;
+                break;
             case '\x03': //color
                 {
                     //NOTE: copy is important as colorOnlyRegExp static from common.h
                     // and in a subtoutine the indexIn could be used again which leads
                     // to different cap() and matchedLength() results
                     QRegExp ircColorRegExp(colorOnlyRegExp);
-                    int index = ircColorRegExp.indexIn(codes);
+                    int index = ircColorRegExp.indexIn(codes, pos);
                     Q_UNUSED(index);
 
                     QString colorMatch(ircColorRegExp.cap(0));
-//                     kDebug() << "colorMatch" << colorMatch;
-                    //TODO check if \x11 \017 is really valid here
                     // check for color reset conditions
+                    //TODO check if \x11 \017 is really valid here
                     if (colorMatch == "\x03" || colorMatch == "\x11")
                     {
-//                         kDebug() << "color is reset thing";
                         if (!data->lastBgColor.isEmpty())
                         {
                             data->lastBgColor.clear();
@@ -1699,8 +1814,7 @@ QString IRCView::removeDuplicateCodes(const QString& _codes, TextHtmlData* data)
                             data->lastFgColor.clear();
                             data->openHtmlTags.removeOne("font");
                         }
-//                         kDebug() << "removelength" << ircRichtextRegExp.matchedLength();
-                        codes.remove(pos, ircRichtextRegExp.matchedLength());
+                        pos += ircColorRegExp.matchedLength();
                         break;
                     }
 
@@ -1736,20 +1850,20 @@ QString IRCView::removeDuplicateCodes(const QString& _codes, TextHtmlData* data)
                         }
                     }
 
-                    codes.remove(pos, ircRichtextRegExp.matchedLength());
+                    pos += colorMatch.length();
                 }
                 break;
             default:
 //                 kDebug() << "unsupported duplicate code:" << QString::number(codes.at(pos).toAscii(), 16);
-                ret += codes.mid(pos, ircRichtextRegExp.matchedLength());
-                codes.remove(pos, ircRichtextRegExp.matchedLength());
+                ret += codes.at(pos);
+                ++pos;
         }
     }
 
     return ret;
 }
 
-void IRCView::defaultRemoveDuplicateHandling(TextHtmlData* data, QString& codes, int pos, int length, const QString& tag)
+void IRCView::defaultRemoveDuplicateHandling(TextHtmlData* data, const QString& tag)
 {
     if (data->openHtmlTags.contains(tag))
     {
@@ -1761,20 +1875,20 @@ void IRCView::defaultRemoveDuplicateHandling(TextHtmlData* data, QString& codes,
 //         kDebug() << "adding tag" << tag;
         data->openHtmlTags.append(tag);
     }
-    codes.remove(pos, length);
 }
 
-void IRCView::adjustUrlRanges(TextUrlData* urlData, const QString& richtext, const QString& strippedText)
+void IRCView::adjustUrlRanges(QList< QPair<int, int> >& urlRanges, const QStringList& fixedUrls,  QString& richtext, const QString& strippedText)
 {
+    Q_UNUSED(fixedUrls);
     QRegExp ircRichtextRegExp(colorRegExp);
     int start = 0, j;
     int i = 0;
     QString url;
-    int htmlTextLength = richtext.length(), urlRanges = urlData->urlRanges.count();
-    for (int x = 0; x < urlRanges; ++x)
+    int htmlTextLength = richtext.length(), urlCount = urlRanges.count();
+    for (int x = 0; x < urlCount; ++x)
     {
         j = 0;
-        const QPair<int, int>& range = urlData->urlRanges.at(x);
+        const QPair<int, int>& range = urlRanges.at(x);
         url = strippedText.mid(range.first, range.second);
         for ( ; i < htmlTextLength; ++i)
         {
@@ -1785,8 +1899,9 @@ void IRCView::adjustUrlRanges(TextUrlData* urlData, const QString& richtext, con
                 ++j;
                 if (j == url.length())
                 {
-                    urlData->urlRanges[x].first = start;
-                    urlData->urlRanges[x].second = i - start + 1;
+                    urlRanges[x].first = start;
+                    urlRanges[x].second = i - start + 1;
+                    //kDebug() << "new range" << urlRanges[x].first << urlRanges[x].second;
                     break;
                 }
             }
diff --git a/src/viewer/ircview.h b/src/viewer/ircview.h
index e7b8b83..5080f69 100644
--- a/src/viewer/ircview.h
+++ b/src/viewer/ircview.h
@@ -248,15 +248,15 @@ class IRCView : public KTextBrowser
     protected:
         void openLink(const QUrl &url);
 
-        QString filter(const QString& line, const QString& defaultColor, const QString& who=NULL, bool doHighlight=true, bool parseURL=true, bool self=false);
+        QString filter(const QString& line, const QString& defaultColor, const QString& who=NULL, bool doHighlight=true, bool parseURL=true, bool self=false, QChar::Direction* direction = 0);
 
-        void replaceDecoration(QString& line,char decoration,char replacement);
+        void replaceDecoration(QString& line, char decoration, char replacement);
 
     private:
 
         /// Returns a string where all irc-richtext chars are replaced with proper
         /// html tags and all urls are parsed if parseURL is true
-        inline QString ircTextToHtml(const QString& text, bool parseURL, const QString& defaultColor, const QString& whoSent, bool closeAllTags = true);
+        inline QString ircTextToHtml(const QString& text, bool parseURL, const QString& defaultColor, const QString& whoSent, bool closeAllTags = true, QChar::Direction* direction = 0);
 
         /// Returns a string that closes all open html tags to <parm>tag</parm>
         /// The closed tag is removed from opentagList in data
@@ -274,7 +274,7 @@ class IRCView : public KTextBrowser
         /// "aa<b>bb<i>cc[b]dd[i]ee"
         /// it would generate for the next [b], "</i></b><i>".
         /// <i> is reopened as it is still relevant
-        /// Returns the Length of the inserted String - replaced char(s)
+        /// Returns the Length of the inserted String
         inline int defaultHtmlReplace(QString& htmlText, TextHtmlData* data, int pos, const QString& tag);
 
         /// Injects a given <parm>marker</parm> at the beginning of each range in the text.
@@ -299,13 +299,12 @@ class IRCView : public KTextBrowser
         /// The default behaivor is to look if the <parm>tag</parm> is already in the
         /// opentagList in <parm>data</parm> and remove it if in case if is in, or
         /// append it in case it is not.
-        /// And remove the ircchar from <parm>codec</parm>
-        inline void defaultRemoveDuplicateHandling(TextHtmlData* data, QString& codes, int pos, int length, const QString& tag);
+        inline void defaultRemoveDuplicateHandling(TextHtmlData* data, const QString& tag);
 
-        /// Changes the ranges in <parm>urlData</parm>, that are found in
+        /// Changes the ranges in <parm>urlRanges</parm>, that are found in
         /// <parm>strippedText</parm>, to match in <parm>richText</parm>.
         /// This is needed for cases were the url is tainted by ircrichtext chars
-        inline void adjustUrlRanges(Konversation::TextUrlData* urlData, const QString& richtext, const QString& strippedText);
+        inline void adjustUrlRanges(QList< QPair< int, int > >& urlRanges, const QStringList& fixedUrls, QString& richtext, const QString& strippedText);
 
     protected:
         virtual void resizeEvent(QResizeEvent *event);

commit f8b95c267d4b1286a17f2d159fc20a2e79483d36
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Sat Sep 4 21:22:51 2010 +0200

    Handle invalid colors codes like mirc and reset the value to default color.
    For cases like "text[k]17text" we used to get "text[k1]7text", now the
    second text is just black, as value 17 is reseted to the default color(black)
    and the visible text is just "texttext"

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index e80972d..1dd2029 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -1377,13 +1377,10 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                 break;
             case '\x03': //color
                 {
-                    //NOTE: copy is important as colorOnlyRegExp static from common.h
-                    // and in a subtoutine the indexIn could be used again which leads
-                    // to different cap() and matchedLength() results
-                    QRegExp ircColorRegExp(colorOnlyRegExp);
-                    int index = ircColorRegExp.indexIn(htmlText, pos);
-                    Q_UNUSED(index);
-                    QString colorMatch(ircColorRegExp.cap(0));
+                    QString fgColor, bgColor;
+                    bool fgOK = true, bgOK = true;
+                    QString colorMatch(getColors(htmlText, pos, fgColor, bgColor, &fgOK, &bgOK));
+
                     if (!allowColors)
                     {
                         htmlText.remove(pos, colorMatch.length());
@@ -1392,7 +1389,8 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                     QString colorString;
                     // check for color reset conditions
                     //TODO check if \x11 \017 is really valid here
-                    if (colorMatch == "\x03" || colorMatch == "\x11")
+                    if (colorMatch == "\x03" || colorMatch == "\x11" ||
+                        (fgColor.isEmpty() && bgColor.isEmpty()) || (!fgOK && !bgOK))
                     {
                         //in reverse mode, just reset both colors
                         //color tags are already closed before the reverse start
@@ -1425,30 +1423,15 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                         break;
                     }
 
-                    //extract foreground and background Color
-                    QString fgColor(ircColorRegExp.cap(2)), bgColor(ircColorRegExp.cap(3));
-                    if (!fgColor.isEmpty())
+                    if (!fgOK)
                     {
-                        int foregroundColor = fgColor.toInt();
-                        fgColor = Preferences::self()->ircColorCode(foregroundColor).name();
+                        fgColor = defaultColor;
                     }
-                    if (!bgColor.isEmpty())
+                    if (!bgOK)
                     {
-                        if (bgColor == ",")
-                        {
-                            bgColor.clear();
-                        }
-                        else
-                        {
-                            bgColor = bgColor.right(bgColor.length() - 1);
-                            int backgroundColor = bgColor.toInt();
-                            bgColor = Preferences::self()->ircColorCode(backgroundColor).name();
-                        }
+                        bgColor = fontColorOpenTag(Preferences::self()->color(Preferences::TextViewBackground).name());
                     }
 
-//                     kDebug() << "fgColor" << fgColor;
-//                     kDebug() << "bgColor" << bgColor;
-
                     // if we are in reverse mode, just remember the new colors
                     if (data.reverse)
                     {
@@ -1792,17 +1775,14 @@ QString IRCView::removeDuplicateCodes(const QString& codes, TextHtmlData* data)
                 break;
             case '\x03': //color
                 {
-                    //NOTE: copy is important as colorOnlyRegExp static from common.h
-                    // and in a subtoutine the indexIn could be used again which leads
-                    // to different cap() and matchedLength() results
-                    QRegExp ircColorRegExp(colorOnlyRegExp);
-                    int index = ircColorRegExp.indexIn(codes, pos);
-                    Q_UNUSED(index);
-
-                    QString colorMatch(ircColorRegExp.cap(0));
+                    QString fgColor, bgColor;
+                    bool fgOK = true, bgOK = true;
+                    QString colorMatch(getColors(codes, pos, fgColor, bgColor, &fgOK, &bgOK));
+
                     // check for color reset conditions
                     //TODO check if \x11 \017 is really valid here
-                    if (colorMatch == "\x03" || colorMatch == "\x11")
+                    if (colorMatch == "\x03" || colorMatch == "\x11" ||
+                        (fgColor.isEmpty() && bgColor.isEmpty()) || (!fgOK && !bgOK))
                     {
                         if (!data->lastBgColor.isEmpty())
                         {
@@ -1814,29 +1794,17 @@ QString IRCView::removeDuplicateCodes(const QString& codes, TextHtmlData* data)
                             data->lastFgColor.clear();
                             data->openHtmlTags.removeOne("font");
                         }
-                        pos += ircColorRegExp.matchedLength();
+                        pos += colorMatch.length();
                         break;
                     }
 
-                    //extract foreground and background Color
-                    QString fgColor(ircColorRegExp.cap(2)), bgColor(ircColorRegExp.cap(3));
-                    if (!fgColor.isEmpty())
+                    if (!fgOK)
                     {
-                        int foregroundColor = fgColor.toInt();
-                        fgColor = Preferences::self()->ircColorCode(foregroundColor).name();
+                        fgColor = data->defaultColor;
                     }
-                    if (!bgColor.isEmpty())
+                    if (!bgOK)
                     {
-                        if (bgColor == ",")
-                        {
-                            bgColor.clear();
-                        }
-                        else
-                        {
-                            bgColor = bgColor.right(bgColor.length() - 1);
-                            int backgroundColor = bgColor.toInt();
-                            bgColor = Preferences::self()->ircColorCode(backgroundColor).name();
-                        }
+                        bgColor = fontColorOpenTag(Preferences::self()->color(Preferences::TextViewBackground).name());
                     }
 
                     if (!fgColor.isEmpty())
@@ -1887,6 +1855,9 @@ void IRCView::adjustUrlRanges(QList< QPair<int, int> >& urlRanges, const QString
     int htmlTextLength = richtext.length(), urlCount = urlRanges.count();
     for (int x = 0; x < urlCount; ++x)
     {
+        if (x == 0)
+            i = urlRanges.first().first;
+
         j = 0;
         const QPair<int, int>& range = urlRanges.at(x);
         url = strippedText.mid(range.first, range.second);
@@ -1918,6 +1889,60 @@ void IRCView::adjustUrlRanges(QList< QPair<int, int> >& urlRanges, const QString
     }
 }
 
+QString IRCView::getColors(const QString text, int start, QString& _fgColor, QString& _bgColor, bool* fgValueOK, bool* bgValueOK)
+{
+    QRegExp ircColorRegExp("(\003([0-9][0-9]|[0-9]|)(,([0-9][0-9]|[0-9]|)|,|)|\017)");
+    if (ircColorRegExp.indexIn(text,start) == -1)
+        return QString();
+
+    QString ret(ircColorRegExp.cap(0));
+
+    QString fgColor(ircColorRegExp.cap(2)), bgColor(ircColorRegExp.cap(4));
+    if (!fgColor.isEmpty())
+    {
+        int foregroundColor = fgColor.toInt();
+        if (foregroundColor > -1 && foregroundColor < 16)
+        {
+            _fgColor = Preferences::self()->ircColorCode(foregroundColor).name();
+            if (fgValueOK)
+                *fgValueOK = true;
+        }
+        else
+        {
+            if (fgValueOK)
+                *fgValueOK = false;
+        }
+    }
+    else
+    {
+        if (fgValueOK)
+            *fgValueOK = true;
+    }
+
+    if (!bgColor.isEmpty())
+    {
+        int backgroundColor = bgColor.toInt();
+        if (backgroundColor > -1 && backgroundColor < 16)
+        {
+            _bgColor = Preferences::self()->ircColorCode(backgroundColor).name();
+            if (bgValueOK)
+                *bgValueOK = true;
+        }
+        else
+        {
+            if (bgValueOK)
+                *bgValueOK = false;
+        }
+    }
+    else
+    {
+        if (bgValueOK)
+            *bgValueOK = true;
+    }
+
+    return ret;
+}
+
 void IRCView::resizeEvent(QResizeEvent *event)
 {
     ScrollBarPin b(verticalScrollBar());
diff --git a/src/viewer/ircview.h b/src/viewer/ircview.h
index 5080f69..4db8ec9 100644
--- a/src/viewer/ircview.h
+++ b/src/viewer/ircview.h
@@ -306,6 +306,8 @@ class IRCView : public KTextBrowser
         /// This is needed for cases were the url is tainted by ircrichtext chars
         inline void adjustUrlRanges(QList< QPair< int, int > >& urlRanges, const QStringList& fixedUrls, QString& richtext, const QString& strippedText);
 
+        inline QString getColors(const QString text, int start, QString& _fgColor, QString& _bgColor, bool* invalidFgVal, bool* invalidBgValue);
+
     protected:
         virtual void resizeEvent(QResizeEvent *event);
         virtual void mouseReleaseEvent(QMouseEvent* ev);

commit 79f959fc7a2332a842c7a916146100894679d063
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Sat Sep 4 21:39:35 2010 +0200

    Fix IRCColorChooser only showing 15 colors,
    we have colorvalues >= 0 and <=15 (16)

diff --git a/src/viewer/irccolorchooser.cpp b/src/viewer/irccolorchooser.cpp
index 8bfd6bc..28d9223 100644
--- a/src/viewer/irccolorchooser.cpp
+++ b/src/viewer/irccolorchooser.cpp
@@ -80,7 +80,7 @@ void IRCColorChooser::initColors(KComboBox* combo)
 
     QPixmap pix(combo->width(), combo->fontMetrics().height());
 
-    for (int i =0; i < 15; i++)
+    for (int i =0; i < 16; i++)
     {
         pix.fill(Preferences::self()->ircColorCode(i));
         combo->insertItem(i, QIcon(pix), QString());

commit 5cc73ebca0f65beb310cc4ed5f21a6aff7598970
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Sat Sep 4 22:06:12 2010 +0200

    Cleanup...

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 1dd2029..b0b1d75 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -1042,10 +1042,7 @@ bool doHighlight, bool parseURL, bool self, QChar::Direction* direction)
         filteredLine.remove('\x07');
     }
 
-    QTime time;
-    time.start();
     filteredLine = ircTextToHtml(filteredLine,  parseURL, defaultColor, whoSent, true, direction);
-    kDebug() << "took" << QString::number(time.elapsed());
 
     // Highlight
     QString ownNick;
@@ -1149,7 +1146,6 @@ bool doHighlight, bool parseURL, bool self, QChar::Direction* direction)
 
     // Replace pairs of spaces with "<space>&nbsp;" to preserve some semblance of text wrapping
     filteredLine.replace("  "," \xA0");
-//     kDebug() << "filteredLine-final" << filteredLine;
     return filteredLine;
 }
 
@@ -1175,7 +1171,6 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
         urlData = extractUrlData(strippedText);
         if (!urlData.urlRanges.isEmpty())
         {
-            //kDebug() << "fixing url ranges";
             // we detected the urls on a clean richtext-char-less text
             // to make 100% sure we get the correct urls, but as a result
             // we have to map them back to the original url
@@ -1190,7 +1185,6 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
         }
 
         channelData = extractChannelData(strippedText);
-        //kDebug() << "fixing channel ranges";
         adjustUrlRanges(channelData.channelRanges, channelData.fixedChannels , htmlText, strippedText);
     }
     else
@@ -1205,6 +1199,7 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
     bool doChannel = false;
     if (parseURL)
     {
+        //get next recent channel or link pos
         if (!urlData.urlRanges.isEmpty() && !channelData.channelRanges.isEmpty())
         {
             if (urlData.urlRanges.first() < channelData.channelRanges.first())
@@ -1238,14 +1233,6 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
     for (int pos = 0; pos < htmlText.length(); ++pos)
     {
         offset = 0;
-//         kDebug() << "htmlText" << htmlText;
-//         kDebug() << "pos:" << pos;
-//         kDebug() << "irc richtext:" << QString::number(htmlText.at(pos).toAscii(), 16);
-//         kDebug() << "htmlText.at(pos)" << htmlText.at(pos);
-//         kDebug() << "pos" << pos;
-// 
-//         kDebug() << "linkOffset" << linkOffset;
-//         kDebug() << "linkPos" << linkPos;
 
         //check for next relevant url or channel link to insert
         if (parseURL && pos == linkPos+linkOffset)
@@ -1284,6 +1271,7 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                 link = link.arg(closeTagsString, fixedUrl, strippedUrl, openTags(&data, 0), colorCodes);
                 htmlText.replace(pos, oldUrl.length(), link);
 
+                //url catcher
                 QMetaObject::invokeMethod(Application::instance(), "storeUrl", Qt::QueuedConnection,
                                           Q_ARG(QString, fromNick), Q_ARG(QString, fixedUrl), Q_ARG(QDateTime, QDateTime::currentDateTime()));
 
@@ -1330,7 +1318,6 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                 if (linkPos > -1 && linkPos+linkOffset < pos)
                 {
                     invalidNextLink = true;
-                    kDebug() << "INVALID NEXT LINK, NEEDS FIXING!";
                     if (doChannel)
                     {
                         channelData.channelRanges.removeFirst();
@@ -1416,7 +1403,6 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                             }
                         }
                         htmlText.replace(pos, colorMatch.length(), colorString);
-//                        offset += colorString.length() - 1;
 
                         pos += colorString.length() - 1;
                         linkOffset += colorString.length() -colorMatch.length();
@@ -1474,7 +1460,7 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                         }
                     }
                     htmlText.replace(pos, colorMatch.length(), colorString);
-                    //offset += colorString.length();
+
                     pos += colorString.length() - 1;
                     linkOffset += colorString.length() -colorMatch.length();
                     break;
@@ -1490,12 +1476,8 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                     data.lastBgColor.clear();
                     data.lastFgColor.clear();
                     data.reverse = false;
-//                     kDebug() << "closeText" << closeText;
-//                     kDebug() << "replace length" << ircRichtextRegExp.cap(0).length();
-//                     kDebug() << "replace text" << ircRichtextRegExp.cap(0);
                     htmlText.replace(pos, 1, closeText);
-                    //kDebug() << "closeText.length();" << closeText.length();
-                    //-1 for the ++pos
+
                     pos += closeText.length() - 1;
                     linkOffset += closeText.length() - 1;
                 }
@@ -1505,8 +1487,6 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                     // treat inverse as color and block it if colors are not allowed
                     if (!allowColors)
                     {
-//                         kDebug() << "replace length" << ircRichtextRegExp.cap(0).length();
-//                         kDebug() << "replace text" << ircRichtextRegExp.cap(0);
                         htmlText.remove(pos, 1);
                         break;
                     }
@@ -1556,7 +1536,6 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
             default:
                 {
                     const QChar& dirChar = htmlText.at(pos);
-                    //kDebug() << dirChar;
                     if (!(dirChar.isNumber() || dirChar.isSymbol() ||
                         dirChar.isSpace()  || dirChar.isPunct()  ||
                         dirChar.isMark()))
@@ -1584,6 +1563,9 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
 
     if (direction)
     {
+        // in case we found no right or left direction chars both
+        // values are 0, but rtl_chars > ltr_chars is still false and QChar::DirL
+        // is returned as default.
         if (rtl_chars > ltr_chars)
             *direction = QChar::DirR;
         else
@@ -1602,7 +1584,6 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
         htmlText += closeTags(&data);
     }
 
-//     kDebug() << "afthtmlText" << htmlText;
     return htmlText;
 }
 
@@ -1704,17 +1685,6 @@ QString IRCView::spanColorOpenTag(const QString& bgColor)
     return "<span style=\"background-color:" + bgColor + "\">";
 }
 
-QString& IRCView::insertMarkers(QString& text, QList< QPair< int, int > > ranges, const QString& marker)
-{
-    QListIterator< QPair< int, int > > i(ranges);
-    i.toBack();
-    while (i.hasPrevious())
-    {
-        text.insert(i.previous().first, marker);
-    }
-    return text;
-}
-
 QString IRCView::removeDuplicateCodes(const QString& codes, TextHtmlData* data)
 {
     int pos = 0;
@@ -1835,12 +1805,10 @@ void IRCView::defaultRemoveDuplicateHandling(TextHtmlData* data, const QString&
 {
     if (data->openHtmlTags.contains(tag))
     {
-//         kDebug() << "removing tag" << tag;
         data->openHtmlTags.removeOne(tag);
     }
     else
     {
-//         kDebug() << "adding tag" << tag;
         data->openHtmlTags.append(tag);
     }
 }
@@ -1872,7 +1840,6 @@ void IRCView::adjustUrlRanges(QList< QPair<int, int> >& urlRanges, const QString
                 {
                     urlRanges[x].first = start;
                     urlRanges[x].second = i - start + 1;
-                    //kDebug() << "new range" << urlRanges[x].first << urlRanges[x].second;
                     break;
                 }
             }
diff --git a/src/viewer/ircview.h b/src/viewer/ircview.h
index 4db8ec9..3fbd35a 100644
--- a/src/viewer/ircview.h
+++ b/src/viewer/ircview.h
@@ -277,9 +277,6 @@ class IRCView : public KTextBrowser
         /// Returns the Length of the inserted String
         inline int defaultHtmlReplace(QString& htmlText, TextHtmlData* data, int pos, const QString& tag);
 
-        /// Injects a given <parm>marker</parm> at the beginning of each range in the text.
-        inline QString& insertMarkers(QString& text, QList< QPair< int, int > > ranges, const QString& marker);
-
         /// Returns a string that opens all tags starting from index <parm>from</parm>
         inline QString openTags(TextHtmlData* data, int from = 0);
 
@@ -306,6 +303,9 @@ class IRCView : public KTextBrowser
         /// This is needed for cases were the url is tainted by ircrichtext chars
         inline void adjustUrlRanges(QList< QPair< int, int > >& urlRanges, const QStringList& fixedUrls, QString& richtext, const QString& strippedText);
 
+        /// Parses the colors in <parm>text</parm> starting from <parm>start</parm>
+        /// and returns them in the given fg and bg string, as well as information
+        /// if the values are valid
         inline QString getColors(const QString text, int start, QString& _fgColor, QString& _bgColor, bool* invalidFgVal, bool* invalidBgValue);
 
     protected:

commit 661d3ccff4b830c6a527151348611d60f00c3960
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Sat Sep 4 22:06:50 2010 +0200

    Bump

diff --git a/src/commit.h b/src/commit.h
index 642fb39..c3d3b2e 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4073
+#define COMMIT 4074
 #endif

commit 543ff66595a50cd32fff2a6c5ba8ed0a51df32b9
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Mon Sep 6 13:32:23 2010 +0200

    Restore old tagUrls behavior in topiclabel and add html replaces again
    - fixes regression showing "gt;" instead of ">" in topiclabel

diff --git a/src/viewer/topiclabel.cpp b/src/viewer/topiclabel.cpp
index e99993c..e219199 100644
--- a/src/viewer/topiclabel.cpp
+++ b/src/viewer/topiclabel.cpp
@@ -367,6 +367,10 @@ namespace Konversation
             QMetaObject::invokeMethod(Application::instance(), "storeUrl", Qt::QueuedConnection,
                 Q_ARG(QString, sender), Q_ARG(QString, fixedUrl), Q_ARG(QDateTime, QDateTime::currentDateTime()));
         }
+
+        // Change & to &amp; to prevent html entities to do strange things to the text
+        htmlText.replace('&', "&amp;");
+        htmlText.replace("\x0b", "&");
         return htmlText;
     }
 }

commit f196653436fd1aacc60ed6eeb068cc248d8f77f1
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Wed Sep 8 00:54:36 2010 +0200

    changelog++

diff --git a/ChangeLog b/ChangeLog
index 4ecfa78..1ef051b 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -145,6 +145,18 @@ Changes since 1.3.1:
   with any of the enabled search providers. The resulting search URL is
   opened in the system's default wen browser after clicking on the search
   provider in the submenu.
+* Improved File Information Dialog for DCC Transfers with KDE 4.5
+* Fixed a bug that prevents DCC Transfers from being sorted with Qt 4.7.
+* Fixed IRC Color Chooser Dialog only showing 15 of 16 Colors.
+* Rewrite IRC Markup displaying with several bug fixes and improvements:
+  - Backgroundcolor is now supported
+  - Reverse Color Formatting is now supported
+  - Fixed Bugs were formatting is lost when using more than one IRC Formatting
+    Markup
+  - Unify displaying of links, always use Hyperlinkcolor and default
+    Backgroundcolor
+  - Improve link detection of links with IRC Markups
+  - Handle invalid Colorcodes
 
 
 Changes from 1.3 to 1.3.1:

commit 71d83c97d73b58e7e18c7cf7e41a24f7dece4707
Author: Eike Hein <hein@kde.org>
Date:   Wed Sep 8 07:04:13 2010 +0200

    Remove idiotic and unhelpful comment.

diff --git a/src/connectionmanager.cpp b/src/connectionmanager.cpp
index e34d38d..88ae9d0 100644
--- a/src/connectionmanager.cpp
+++ b/src/connectionmanager.cpp
@@ -537,7 +537,6 @@ bool ConnectionManager::reuseExistingConnection(ConnectionSettings& settings, bo
         {
             int result = KMessageBox::warningContinueCancel(
                 mainWindow,
-                //my, isn't this fucking ugly
                 i18n("You are presently connected to %1 via '%2' (port <numid>%3</numid>). Do you want to switch to '%4' (port <numid>%5</numid>) instead?",
                     dupe->getDisplayName(),
                     dupe->getServerName(),

commit e4d7d56a44bb7be7eaa206e297ff7f39b94266ac
Author: eli mackenzie <argonel@gmail.com>
Date:   Wed Sep 8 02:53:45 2010 -0400

    stop the auto-who timer when the server is not connected
    CCBUG:249675

diff --git a/src/irc/channel.cpp b/src/irc/channel.cpp
index 85b8c9d..3a53e9c 100644
--- a/src/irc/channel.cpp
+++ b/src/irc/channel.cpp
@@ -2689,6 +2689,7 @@ void Channel::setActive(bool active)
         topicLine->clear();
         clearModeList();
         clearBanList();
+        m_whoTimer.stop();
     }
 }
 

commit 0a19c2109f7c8b514240d3f29fa8e2ab43a7355e
Author: eli mackenzie <argonel@gmail.com>
Date:   Wed Sep 8 03:15:21 2010 -0400

    stop the lag timer when disconnected
    CCBUG:249675

diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index 315f54b..f0a6263 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -651,6 +651,7 @@ void Server::broken(KTcpSocket::Error error)
     resetQueues();
 
     m_notifyTimer.stop();
+    m_pingSendTimer.stop();
     m_pingResponseTimer.stop();
     m_inputFilter.setLagMeasuring(false);
     m_currentLag = -1;

commit 291f652a11f379a170928d0eb3ee27cd306828db
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Wed Sep 8 16:52:11 2010 +0200

    Fix compile with kde-4.4
    konversation/src/viewer/ircview.cpp:2422: error: no ‘void IRCView::updateWebShortcutMenu()’ member function declared in class ‘IRCView’

diff --git a/src/viewer/ircview.h b/src/viewer/ircview.h
index 3fbd35a..96121c9 100644
--- a/src/viewer/ircview.h
+++ b/src/viewer/ircview.h
@@ -368,8 +368,8 @@ class IRCView : public KTextBrowser
         KMenu* m_nickPopup; ///<menu to show when context-click on a nickname
         KMenu* m_channelPopup; ///<menu to show when context-click on a channel
 
-#if KDE_IS_VERSION(4,5,0)
         void updateWebShortcutMenu();
+#if KDE_IS_VERSION(4,5,0)
         KMenu* m_webShortcutMenu;
 #endif
 

commit 57abec5ee9a43bf3d7fde6e67b3c43c96020aaec
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Tue Sep 7 19:50:28 2010 +0200

    Don't strip irc markups from topic in inputfilter.
    If we strip it here '/topic' will always be colorless.
    NOTE: If we changed the topic with the topiceditor, the
    topic history always had irc markes in it.
    CCBUG:232675

diff --git a/src/irc/inputfilter.cpp b/src/irc/inputfilter.cpp
index 7948c63..240d850 100644
--- a/src/irc/inputfilter.cpp
+++ b/src/irc/inputfilter.cpp
@@ -1092,7 +1092,7 @@ void InputFilter::parseServerCommand(const QString &prefix, const QString &comma
             {
                 if (plHas(3))
                 {
-                    QString topic = Konversation::removeIrcMarkup(trailing);
+                    QString topic(trailing);
 
                     // FIXME: This is an abuse of the automaticRequest system: We're
                     // using it in an inverted manner, i.e. the automaticRequest is

commit 8bafc781fea090a81dbdcda708c0bc945db82d82
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Thu Sep 9 00:02:13 2010 +0200

    Replace ircchars with our variables in topiceditor
    (\x02 -> %B, for example)
    to make topicediting easier

diff --git a/src/common.cpp b/src/common.cpp
index 9da2e46..590934a 100644
--- a/src/common.cpp
+++ b/src/common.cpp
@@ -122,6 +122,25 @@ namespace Konversation
         return line;
     }
 
+    QString replaceIRCMarkups(const QString& text)
+    {
+        QString line(text);
+
+        line.replace('\x02', "%B");      // replace bold char with %B
+        line.replace('\x03', "%C");       // replace color char with %C
+        line.replace('\x07', "%G");       // replace ASCII BEL 0x07 with %G
+        line.replace('\x1d', "%I");       // replace italics char with %I
+        line.replace('\x0f', "%O");       // replace reset to default char with %O
+        line.replace('\x13', "%S");       // replace strikethru char with %S
+        line.replace('\x16', "%R");       // replace reverse char with %R
+        // underline char send by kvirc
+        line.replace('\x1f', "%U");       // replace underline char with %U
+        // underline char send by mirc
+        line.replace('\x15', "%U");       // replace underline char with %U
+
+        return line;
+    }
+
     QList<QPair<int, int> > getUrlRanges(const QString& text)
     {
         TextUrlData data = extractUrlData(text, false);
@@ -153,11 +172,6 @@ namespace Konversation
             urlLen = urlPattern.matchedLength();
             href = htmlText.mid(pos, urlLen);
 
-//             kDebug() << "urlPattern.cap(0)" << urlPattern.cap(0);
-//             kDebug() << "urlPattern.cap(1)" << urlPattern.cap(1);
-//             kDebug() << "urlPattern.cap(2)" << urlPattern.cap(2);
-//             kDebug() << "href" << href;
-
             data.urlRanges << QPair<int, int>(pos, href.length());
             pos += href.length();
 
@@ -196,18 +210,11 @@ namespace Konversation
             channel = chanExp.cap(2);
             chanLen = channel.length();
 
-//             kDebug() << "chanExp.cap(0)" << chanExp.cap(0);
-//             kDebug() << "chanExp.cap(1)" << chanExp.cap(1);
-//             kDebug() << "chanExp.cap(2)" << chanExp.cap(2);
-//             kDebug() << "text.mid(pos, chanLen)" << text.mid(pos, chanLen);
-
             // we want the pos where #channel starts
             // indexIn gives us the first match and the first match may be
             // "#test", " #test" or " \"test", so the first Index is off by some chars
             pos = chanExp.pos(2);
 
-//             kDebug() << "pos" << pos;
-
             data.channelRanges << QPair<int, int>(pos, chanLen);
             pos += chanLen;
 
diff --git a/src/common.h b/src/common.h
index 1b728d0..e594b77 100644
--- a/src/common.h
+++ b/src/common.h
@@ -70,6 +70,7 @@ namespace Konversation
     QString removeIrcMarkup(const QString& text);
     QString doVarExpansion(const QString& text);
     QString replaceFormattingCodes(const QString& text);
+    QString replaceIRCMarkups(const QString& text);
 
     QList<QPair<int, int> > getUrlRanges(const QString& text);
     QList<QPair<int, int> > getChannelRanges(const QString& text);
diff --git a/src/irc/channel.cpp b/src/irc/channel.cpp
index 3a53e9c..b8e7dd9 100644
--- a/src/irc/channel.cpp
+++ b/src/irc/channel.cpp
@@ -1622,13 +1622,13 @@ void Channel::setTopic(const QString &newTopic)
     QString topic = Konversation::removeIrcMarkup(newTopic);
     topicLine->setText(topic);
     topicAuthorUnknown=true; // if we only get called with a topic, it was a 332, which usually has a 333 next
-
+    topic = replaceIRCMarkups(newTopic);
     // cut off "nickname" and "time_t" portion of the topic before comparing, otherwise the history
     // list will fill up with the same entries while the user only requests the topic to be seen.
 
-    if(m_topicHistory.isEmpty() || (m_topicHistory.first().section(' ', 2) != newTopic))
+    if(m_topicHistory.isEmpty() || (m_topicHistory.first().section(' ', 2) != topic))
     {
-        m_topicHistory.prepend(QString("%1 "+i18n("unknown")+" %2").arg(QDateTime::currentDateTime().toTime_t()).arg(newTopic));
+        prependTopicHistory(topic);
         emit topicHistoryChanged();
     }
 }
@@ -1644,13 +1644,19 @@ void Channel::setTopic(const QString &nickname, const QString &newTopic) // Over
         appendCommandMessage(i18n("Topic"), i18n("%1 sets the channel topic to \"%2\".", nickname, newTopic));
     }
 
-    m_topicHistory.prepend(QString("%1 %2 %3").arg(QDateTime::currentDateTime().toTime_t()).arg(nickname).arg(newTopic));
+    prependTopicHistory(newTopic, nickname);
     QString topic = Konversation::removeIrcMarkup(newTopic);
     topicLine->setText(topic);
 
     emit topicHistoryChanged();
 }
 
+void Channel::prependTopicHistory(const QString& topic, const QString nickname, uint time)
+{
+    QString newTopic(replaceIRCMarkups(topic));
+    m_topicHistory.prepend(QString("%1 %2 %3").arg(time).arg(nickname).arg(newTopic));
+}
+
 QStringList Channel::getTopicHistory()
 {
     return m_topicHistory;
diff --git a/src/irc/channel.h b/src/irc/channel.h
index 25ca6fc..8e0e859 100644
--- a/src/irc/channel.h
+++ b/src/irc/channel.h
@@ -179,6 +179,9 @@ class Channel : public ChatWindow
         void setTopic(const QString& nickname, const QString& topic);
         void setTopicAuthor(const QString& author, QDateTime t);
 
+    private:
+        inline void prependTopicHistory(const QString& topic, const QString nickname = "unknown", uint time = QDateTime::currentDateTime().toTime_t());
+
     signals:
         void topicHistoryChanged();
         void joined(Channel* channel);

commit b71468ace65005f9c36aac5f32a59710c845b5f8
Author: Eike Hein <hein@kde.org>
Date:   Thu Sep 9 03:27:57 2010 +0200

    Pimp the changelog.

diff --git a/ChangeLog b/ChangeLog
index 1ef051b..cb1885f 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -145,6 +145,37 @@ Changes since 1.3.1:
   with any of the enabled search providers. The resulting search URL is
   opened in the system's default wen browser after clicking on the search
   provider in the submenu.
+* A better version of the information dialog for DCC file transfers is
+  shown when Konversation is built against KDE Platform 4.5 or higher.
+* Fixed a bug causing newly-added DCC file transfers to the list in the DCC
+  Status tab not to be sorted when using Qt 4.7.
+* Fixed bug causing the IRC Color Chooser dialog to only show 15 colors in-
+  stead of the available 16.
+* IRC formatting markup (colors, bold, italic, etc.) support in chat text
+  views and the topic editor has been improved significantly:
+  - Background colors are now supported.
+  - The reverse color formatting character is now supported.
+  - To emphasize usability, links are now consistently displayed using the
+    link and background colors from the configuration dialog, irregardless
+    of preceding formatting markup or formatting markup located within the
+    link.
+  - Formatting markup located within links in incoming messages no longer
+    results in those links being broken.
+  - Fixed bugs resulting in incorrect display of messages containing mul-
+    tiple formatting characters.
+  - Improved robustness in the face of invalid color codes.
+  - Formatting markup in the topic editor's topic history listing is now
+    shown in the human-readable format that is also used for entry, making
+    it much easier to derive a new topic from an old one that contains for-
+    matting markup.
+  - Fixed a bug causing '/topic <channel>' to display the topic of <channel>
+    with formatting markup stripped.
+  - Fixed bugs causing the automatic user information lookup, the periodic
+    WHO-on-self and the periodic PING for a given connection not to be sus-
+    pended properly after a disconnect, causing unnecessary wakeups and the
+    potential for these messages to be sent at inappropriate times in the
+    early phase of a reconnection attempt.
+
 * Improved File Information Dialog for DCC Transfers with KDE 4.5
 * Fixed a bug that prevents DCC Transfers from being sorted with Qt 4.7.
 * Fixed IRC Color Chooser Dialog only showing 15 of 16 Colors.

commit e06eadb95ec8d3c65c6181b34cdcd2c78fce31fd
Author: Eike Hein <hein@kde.org>
Date:   Thu Sep 9 03:29:33 2010 +0200

    Whoops, remove the old stuff.

diff --git a/ChangeLog b/ChangeLog
index cb1885f..f7ed98f 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -176,19 +176,6 @@ Changes since 1.3.1:
     potential for these messages to be sent at inappropriate times in the
     early phase of a reconnection attempt.
 
-* Improved File Information Dialog for DCC Transfers with KDE 4.5
-* Fixed a bug that prevents DCC Transfers from being sorted with Qt 4.7.
-* Fixed IRC Color Chooser Dialog only showing 15 of 16 Colors.
-* Rewrite IRC Markup displaying with several bug fixes and improvements:
-  - Backgroundcolor is now supported
-  - Reverse Color Formatting is now supported
-  - Fixed Bugs were formatting is lost when using more than one IRC Formatting
-    Markup
-  - Unify displaying of links, always use Hyperlinkcolor and default
-    Backgroundcolor
-  - Improve link detection of links with IRC Markups
-  - Handle invalid Colorcodes
-
 
 Changes from 1.3 to 1.3.1:
 Konversation 1.3.1 is a maintenance release that improves program behavior

commit abbac157051a77db26b55ea00ee77beaeec725af
Author: Eike Hein <hein@kde.org>
Date:   Thu Sep 9 03:44:36 2010 +0200

    Fix formatting.

diff --git a/ChangeLog b/ChangeLog
index f7ed98f..b672905 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -170,11 +170,11 @@ Changes since 1.3.1:
     matting markup.
   - Fixed a bug causing '/topic <channel>' to display the topic of <channel>
     with formatting markup stripped.
-  - Fixed bugs causing the automatic user information lookup, the periodic
-    WHO-on-self and the periodic PING for a given connection not to be sus-
-    pended properly after a disconnect, causing unnecessary wakeups and the
-    potential for these messages to be sent at inappropriate times in the
-    early phase of a reconnection attempt.
+* Fixed bugs causing the automatic user information lookup, the periodic
+  WHO-on-self and the periodic PING for a given connection not to be sus-
+  pended properly after a disconnect, causing unnecessary wakeups and the
+  potential for these messages to be sent at inappropriate times in the
+  early phase of a reconnection attempt.
 
 
 Changes from 1.3 to 1.3.1:

commit d4f56e162ee27c3eee8e2719c3962ece9af7114d
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Thu Sep 9 11:26:03 2010 +0200

    Typo, should be a const ref

diff --git a/src/irc/channel.cpp b/src/irc/channel.cpp
index b8e7dd9..bb33217 100644
--- a/src/irc/channel.cpp
+++ b/src/irc/channel.cpp
@@ -1651,7 +1651,7 @@ void Channel::setTopic(const QString &nickname, const QString &newTopic) // Over
     emit topicHistoryChanged();
 }
 
-void Channel::prependTopicHistory(const QString& topic, const QString nickname, uint time)
+void Channel::prependTopicHistory(const QString& topic, const QString& nickname, uint time)
 {
     QString newTopic(replaceIRCMarkups(topic));
     m_topicHistory.prepend(QString("%1 %2 %3").arg(time).arg(nickname).arg(newTopic));
diff --git a/src/irc/channel.h b/src/irc/channel.h
index 8e0e859..3af9d01 100644
--- a/src/irc/channel.h
+++ b/src/irc/channel.h
@@ -180,7 +180,7 @@ class Channel : public ChatWindow
         void setTopicAuthor(const QString& author, QDateTime t);
 
     private:
-        inline void prependTopicHistory(const QString& topic, const QString nickname = "unknown", uint time = QDateTime::currentDateTime().toTime_t());
+        inline void prependTopicHistory(const QString& topic, const QString& nickname = "unknown", uint time = QDateTime::currentDateTime().toTime_t());
 
     signals:
         void topicHistoryChanged();

commit 97753a0dadf9b6cb1f18e0c428f703be7f913c61
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 10 04:34:58 2010 +0200

    Use the improved API on 4.5.57+.
    
    Looking forward to when I can remove the 4.5 compat stuff ...

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index b0b1d75..db87886 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -2435,6 +2435,11 @@ void IRCView::updateWebShortcutMenu()
 
     KUriFilterData filterData(selectedText.remove('\n').remove('\r'));
 
+#if KDE_IS_VERSION(4,5,57)
+    filterData.setSearchFilteringOptions(KUriFilterData::RetrievePreferredSearchProvidersOnly);
+
+    if (KUriFilter::self()->filterSearchUri(filterData, KUriFilter::NormalTextFilter))
+#else
     // Unfortunately if we don't do this here, then KUriFilterData::preferredSearchProviders()
     // will later return an empty list when the user has his default search engine set to
     // "None" in the Web Shortcuts configuration. I consider this nonsensical coupling between
@@ -2445,6 +2450,7 @@ void IRCView::updateWebShortcutMenu()
     filterData.setAlternateDefaultSearchProvider("google");
 
     if (KUriFilter::self()->filterUri(filterData, QStringList() << "kuriikwsfilter"))
+#endif
     {
         QStringList searchProviders = filterData.preferredSearchProviders();
 

commit cbfa5ffabf36690f0ce4d97df0bd7096b7f3ab2a
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 10 04:36:17 2010 +0200

    Arf, it's .67 of course.

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index db87886..504a888 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -2435,7 +2435,7 @@ void IRCView::updateWebShortcutMenu()
 
     KUriFilterData filterData(selectedText.remove('\n').remove('\r'));
 
-#if KDE_IS_VERSION(4,5,57)
+#if KDE_IS_VERSION(4,5,67)
     filterData.setSearchFilteringOptions(KUriFilterData::RetrievePreferredSearchProvidersOnly);
 
     if (KUriFilter::self()->filterSearchUri(filterData, KUriFilter::NormalTextFilter))

commit 76694eab6e3ef1990ab74956f6e4fec308f0cd3e
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 10 07:05:32 2010 +0200

    'cause we don't have enough preprocessor directives yet.

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 504a888..6cecaa1 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -2496,7 +2496,11 @@ void IRCView::handleWebShortcutAction()
     {
         KUriFilterData filterData(action->data().toString());
 
+#if KDE_IS_VERSION(4,5,67)
+        if (KUriFilter::self()->filterSearchUri(filterData, KUriFilter::WebShortcutFilter))
+#else
         if (KUriFilter::self()->filterUri(filterData, QStringList() << "kurisearchfilter"))
+#endif
             Application::instance()->openUrl(filterData.uri().url());
     }
 #endif

commit 430ad2d8a307d53cf60abf0335eabc924a465051
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 10 08:17:43 2010 +0200

    Fix a typo and remove some unused cruft.

diff --git a/src/irc/server.h b/src/irc/server.h
index 12db06b..0d83967 100644
--- a/src/irc/server.h
+++ b/src/irc/server.h
@@ -673,11 +673,6 @@ class Server : public QObject
         QStringList getAutoJoinCommands() const { return m_autoJoinCommands; }
         void setAutoJoinCommands(const QStringList& commands) { m_autoJoinCommands = commands; }
 
-        /** Quit the server connection with a given connection state
-         * @param state In what connection state was the quit done.
-         */
-        void quitConnection(Konversation::ConnectionState state);
-
         unsigned int m_completeQueryPosition;
         QList<int> m_nickIndices;
         QStringList m_referenceNicklist;
@@ -698,7 +693,6 @@ class Server : public QObject
 
         KTcpSocket* m_socket;
 
-        QTimer m_reconnectTimer;
         QTimer m_incomingTimer;
         QTimer m_notifyTimer;
         QStringList m_notifyCache;                  // List of users found with ISON
@@ -809,7 +803,7 @@ class Server : public QObject
 
         ConnectionSettings m_connectionSettings;
 
-        /// Used by ConnectionManaer to schedule a reconnect; stopped by /disconnect
+        /// Used by ConnectionManager to schedule a reconnect; stopped by /disconnect
         /// and /quit.
         QTimer* m_delayedConnectTimer;
 

commit c9c530662cbf1296d0c150bb4a41d5095f48faf7
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 10 08:22:44 2010 +0200

    Fix a regression in the reconnect logic.
    
    Issueing a reconnect oder to an established connection could result
    in an endless loop of reconnection attempts if the time needed to
    establish the new connection was longer than the configured recon-
    nection delay. It would also result in confus connection status tab
    messages.

diff --git a/ChangeLog b/ChangeLog
index b672905..e873d4a 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -175,6 +175,11 @@ Changes since 1.3.1:
   pended properly after a disconnect, causing unnecessary wakeups and the
   potential for these messages to be sent at inappropriate times in the
   early phase of a reconnection attempt.
+* Fixed a regression that could cause an endless loop of reconnection
+  attempts when issueing a reconnect order to an established connection
+  and the time needed to establish the new connection was longer than the
+  configured reconnection delay. It would also cause confusing status mes-
+  sages to be shown in the connection status tab.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index f0a6263..0d85d15 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -74,6 +74,8 @@ Server::Server(QObject* parent, ConnectionSettings& settings) : QObject(parent)
     m_delayedConnectTimer->setSingleShot(true);
     connect(m_delayedConnectTimer, SIGNAL(timeout()), this, SLOT(connectToIRCServer()));
 
+    m_reconnectImmediately = false;
+
     for (int i=0; i <= Application::instance()->countOfQueues(); i++)
     {
         //QList<int> r=Preferences::queueRate(i);
@@ -673,7 +675,16 @@ void Server::broken(KTcpSocket::Error error)
 
     updateAutoJoin();
 
-    if (getConnectionState() != Konversation::SSDeliberatelyDisconnected)
+    if (getConnectionState() == Konversation::SSDeliberatelyDisconnected)
+    {
+        if (m_reconnectImmediately)
+        {
+            m_reconnectImmediately = false;
+
+            QMetaObject::invokeMethod(this, "connectToIRCServer", Qt::QueuedConnection);
+        }
+    }
+    else
     {
         static_cast<Application*>(kapp)->notificationHandler()->connectionFailure(getStatusView(), getServerName());
 
@@ -834,13 +845,14 @@ void Server::updateConnectionState(Konversation::ConnectionState state)
 
 void Server::reconnectServer(const QString& quitMessage)
 {
-    if (isConnecting() || isSocketConnected()) quitServer(quitMessage);
+    if (isConnecting() || isSocketConnected())
+    {
+        m_reconnectImmediately = true;
 
-    // Use asynchronous invocation so that the broken() that the above
-    // quitServer might cause is delivered before connectToIRCServer
-    // sets SSConnecting and broken() announces a deliberate disconnect
-    // due to the failure allegedly occurring during SSConnecting.
-    QTimer::singleShot(0, this, SLOT(connectToIRCServer()));
+        quitServer(quitMessage);
+    }
+    else
+        QMetaObject::invokeMethod(this, "connectToIRCServer", Qt::QueuedConnection);
 }
 
 void Server::disconnectServer(const QString& quitMessage)
diff --git a/src/irc/server.h b/src/irc/server.h
index 0d83967..63923ca 100644
--- a/src/irc/server.h
+++ b/src/irc/server.h
@@ -807,6 +807,8 @@ class Server : public QObject
         /// and /quit.
         QTimer* m_delayedConnectTimer;
 
+        bool m_reconnectImmediately;
+
         static int m_availableConnectionId;
         int m_connectionId;
 

commit 053646c94f6655a8c0abdca9c568677ab8f98710
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 10 08:42:21 2010 +0200

    Fix order of DNS lookup messages.
    
    "Server found" could be shown before "Looking for server" if the DNS
    response was already cached.
    
    Also removed the whitespace before the trailing ellipsis in the latter
    for consistency.

diff --git a/ChangeLog b/ChangeLog
index e873d4a..249e558 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -180,6 +180,9 @@ Changes since 1.3.1:
   and the time needed to establish the new connection was longer than the
   configured reconnection delay. It would also cause confusing status mes-
   sages to be shown in the connection status tab.
+* Fixed a bug that could cause the "Server found" message to be shown in
+  the connection status tab before the "Looking for server" message if the
+  DNS response was already cached.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index 0d85d15..388bf76 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -453,6 +453,10 @@ void Server::connectToIRCServer()
 
         connect(m_socket, SIGNAL(hostFound()), SLOT (hostFound()));
 
+        getStatusView()->appendServerMessage(i18n("Info"),i18n("Looking for server %1 (port <numid>%2</numid>)...",
+            getConnectionSettings().server().host(),
+            QString::number(getConnectionSettings().server().port())));
+
         // connect() will do a async lookup too
         if(!getConnectionSettings().server().SSLEnabled())
         {
@@ -469,9 +473,6 @@ void Server::connectToIRCServer()
 
         // set up the connection details
         setPrefixes(m_serverNickPrefixModes, m_serverNickPrefixes);
-        getStatusView()->appendServerMessage(i18n("Info"),i18n("Looking for server %1 (port <numid>%2</numid>) ...",
-            getConnectionSettings().server().host(),
-            QString::number(getConnectionSettings().server().port())));
         // reset InputFilter (auto request info, /WHO request info)
         m_inputFilter.reset();
     }

commit 3f398f1e406ab62b810d958a7aed476fe6155430
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 10 08:45:53 2010 +0200

    Bump.

diff --git a/src/commit.h b/src/commit.h
index c3d3b2e..4695001 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4074
+#define COMMIT 4075
 #endif

commit b212cef71ca28d9884e015e559888838ea84a74f
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 10 10:58:15 2010 +0200

    Add support for the 475 numeric.

diff --git a/ChangeLog b/ChangeLog
index 249e558..dcf085d 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -183,6 +183,7 @@ Changes since 1.3.1:
 * Fixed a bug that could cause the "Server found" message to be shown in
   the connection status tab before the "Looking for server" message if the
   DNS response was already cached.
+* Added support for the 475 numeric (ERR_BADCHANNELKEY).
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/irc/inputfilter.cpp b/src/irc/inputfilter.cpp
index 240d850..466298b 100644
--- a/src/irc/inputfilter.cpp
+++ b/src/irc/inputfilter.cpp
@@ -2072,6 +2072,14 @@ void InputFilter::parseServerCommand(const QString &prefix, const QString &comma
                 }
                 break;
             }
+            case ERR_BADCHANNELKEY:
+            {
+                if (plHas(2))
+                {
+                    server->appendMessageToFrontmost(i18n("Error"), i18n("Cannot join %1: The channel is password-protected and either a wrong or no password was given.", parameterList.value(1)));
+                }
+                break;
+            }
             default:
             {
                 // All yet unknown messages go into the frontmost window without the

commit c0491dc653337f7b40a8e4cb88835e745fde7968
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Fri Sep 10 14:08:58 2010 +0200

    Set backgroundimage with Qt Style Sheets as they seems
    to be more eager in repainting the whole image
    as the QPalette background brush.
    Tested on my intel-gfx laptop with current git drivers
    (where it always happened) and on my desktop gf8800gt
    with nvidia-260.19.04(where it only happens with my test login).
    BUG:224033

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 6cecaa1..90c2bf6 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -557,25 +557,19 @@ void IRCView::updateAppearance()
 
     setVerticalScrollBarPolicy(Preferences::self()->showIRCViewScrollBar() ? Qt::ScrollBarAlwaysOn : Qt::ScrollBarAlwaysOff);
 
-    QPalette p;
-
-    p.setColor(QPalette::Base, Preferences::self()->color(Preferences::TextViewBackground));
-
     if (Preferences::self()->showBackgroundImage())
     {
         KUrl url = Preferences::self()->backgroundImage();
 
         if (!url.isEmpty())
         {
-            QBrush brush;
-
-            brush.setTexture(QPixmap(url.path()));
-
-            p.setBrush(QPalette::Base, brush);
+            setStyleSheet("QTextBrowser { background-image: url("+url.path()+");background-attachment: fixed }");
         }
     }
-
-    setPalette(p);
+    else
+    {
+        setStyleSheet("QTextBrowser { background-color:" + Preferences::self()->color(Preferences::TextViewBackground).name() + " }");
+    }
 }
 
 // Data insertion

commit b32fc66d769d24736bcba8eb033f0dca56c4dfaa
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Fri Sep 10 14:52:21 2010 +0200

    Only use Qt Style Sheets when needed

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 90c2bf6..4d55bd8 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -557,6 +557,7 @@ void IRCView::updateAppearance()
 
     setVerticalScrollBarPolicy(Preferences::self()->showIRCViewScrollBar() ? Qt::ScrollBarAlwaysOn : Qt::ScrollBarAlwaysOff);
 
+    bool bgImageSet = false;
     if (Preferences::self()->showBackgroundImage())
     {
         KUrl url = Preferences::self()->backgroundImage();
@@ -564,11 +565,19 @@ void IRCView::updateAppearance()
         if (!url.isEmpty())
         {
             setStyleSheet("QTextBrowser { background-image: url("+url.path()+");background-attachment: fixed }");
+            bgImageSet = true;
         }
     }
-    else
+
+    if (!bgImageSet)
     {
-        setStyleSheet("QTextBrowser { background-color:" + Preferences::self()->color(Preferences::TextViewBackground).name() + " }");
+        if (!styleSheet().isEmpty())
+        {
+            setStyleSheet("");
+        }
+        QPalette p;
+        p.setColor(QPalette::Base, Preferences::self()->color(Preferences::TextViewBackground));
+        setPalette(p);
     }
 }
 

commit c5da3e3f4e8c527f7e77aa4abef7eabbacfe4158
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Fri Sep 10 16:47:33 2010 +0200

    Revert Qt Style Sheet solution, as it breaks scrollbar drawing
    CCBUG:224033

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 4d55bd8..33bf88b 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -557,28 +557,24 @@ void IRCView::updateAppearance()
 
     setVerticalScrollBarPolicy(Preferences::self()->showIRCViewScrollBar() ? Qt::ScrollBarAlwaysOn : Qt::ScrollBarAlwaysOff);
 
-    bool bgImageSet = false;
+    QPalette p;
+
+    p.setColor(QPalette::Base, Preferences::self()->color(Preferences::TextViewBackground));
+
     if (Preferences::self()->showBackgroundImage())
     {
         KUrl url = Preferences::self()->backgroundImage();
 
         if (!url.isEmpty())
         {
-            setStyleSheet("QTextBrowser { background-image: url("+url.path()+");background-attachment: fixed }");
-            bgImageSet = true;
-        }
-    }
+            QBrush brush;
 
-    if (!bgImageSet)
-    {
-        if (!styleSheet().isEmpty())
-        {
-            setStyleSheet("");
+            brush.setTexture(QPixmap(url.path()));
+
+            p.setBrush(QPalette::Base, brush);
         }
-        QPalette p;
-        p.setColor(QPalette::Base, Preferences::self()->color(Preferences::TextViewBackground));
-        setPalette(p);
     }
+    setPalette(p);
 }
 
 // Data insertion

commit 01e0349a8e6ee2d1ed6bfa81daaaa5ecdb77f7b4
Author: Eike Hein <hein@kde.org>
Date:   Sat Sep 11 09:06:06 2010 +0200

    Rejig ircview background image code.
    
    Back to the stylesheet approach, but set it only on the
    viewport. Plus better sanity checking on the wallpaper
    path.
    
    BUG:224033

diff --git a/ChangeLog b/ChangeLog
index dcf085d..82861d4 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -184,6 +184,8 @@ Changes since 1.3.1:
   the connection status tab before the "Looking for server" message if the
   DNS response was already cached.
 * Added support for the 475 numeric (ERR_BADCHANNELKEY).
+* Rewrote chat text view wallpaper image support to avoid rendering pro-
+  blems some users were experiencing.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 33bf88b..5928ce6 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -557,26 +557,27 @@ void IRCView::updateAppearance()
 
     setVerticalScrollBarPolicy(Preferences::self()->showIRCViewScrollBar() ? Qt::ScrollBarAlwaysOn : Qt::ScrollBarAlwaysOff);
 
-    QPalette p;
-
-    p.setColor(QPalette::Base, Preferences::self()->color(Preferences::TextViewBackground));
-
     if (Preferences::self()->showBackgroundImage())
     {
         KUrl url = Preferences::self()->backgroundImage();
 
-        if (!url.isEmpty())
+        if (url.hasPath())
         {
-            QBrush brush;
-
-            brush.setTexture(QPixmap(url.path()));
+            viewport()->setStyleSheet("QWidget { background-image: url("+url.path()+"); background-attachment:fixed; }");
 
-            p.setBrush(QPalette::Base, brush);
+            return;
         }
     }
+
+    if (!viewport()->styleSheet().isEmpty())
+        viewport()->setStyleSheet("");
+
+    QPalette p;
+    p.setColor(QPalette::Base, Preferences::self()->color(Preferences::TextViewBackground));
     setPalette(p);
 }
 
+
 // Data insertion
 
 void IRCView::append(const QString& nick, const QString& message)

commit 5e5a8536cb4eeaa70fabb50ecda9cdb91e38129c
Author: Eike Hein <hein@kde.org>
Date:   Sat Sep 11 14:12:32 2010 +0200

    Generate search text from selected text better.

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 5928ce6..64d1f18 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -2433,7 +2433,7 @@ void IRCView::updateWebShortcutMenu()
 
     m_webShortcutMenu->clear();
 
-    KUriFilterData filterData(selectedText.remove('\n').remove('\r'));
+    KUriFilterData filterData(selectedText.replace('\n', ' ').replace('\r', ' ').simplified());
 
 #if KDE_IS_VERSION(4,5,67)
     filterData.setSearchFilteringOptions(KUriFilterData::RetrievePreferredSearchProvidersOnly);

commit ada670e14e27cc57aafa03a5971ba7c26f50939b
Author: Eike Hein <hein@kde.org>
Date:   Sat Sep 11 14:28:06 2010 +0200

    A little cleanup.

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 64d1f18..30a5f28 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -2422,18 +2422,18 @@ void IRCView::handleContextActions()
 void IRCView::updateWebShortcutMenu()
 {
 #if KDE_IS_VERSION(4,5,0)
-    QString selectedText = textCursor().selectedText();
-
-    if (selectedText.isEmpty())
-    {
-        m_webShortcutMenu->menuAction()->setVisible(false);
+    m_webShortcutMenu->menuAction()->setVisible(false);
+    m_webShortcutMenu->clear();
 
+    if (textCursor().selectedText().isEmpty())
         return;
-    }
 
-    m_webShortcutMenu->clear();
+    QString selectedText = textCursor().selectedText().replace('\n', ' ').replace('\r', ' ').simplified();
+
+    if (selectedText.isEmpty())
+        return;
 
-    KUriFilterData filterData(selectedText.replace('\n', ' ').replace('\r', ' ').simplified());
+    KUriFilterData filterData(selectedText);
 
 #if KDE_IS_VERSION(4,5,67)
     filterData.setSearchFilteringOptions(KUriFilterData::RetrievePreferredSearchProvidersOnly);
@@ -2456,10 +2456,7 @@ void IRCView::updateWebShortcutMenu()
 
         if (!searchProviders.isEmpty())
         {
-            const QString squeezedText = KStringHandler::rsqueeze(selectedText, 21);
-            m_webShortcutMenu->setTitle(i18n("Search for '%1' with", squeezedText));
-
-            m_webShortcutMenu->menuAction()->setVisible(true);
+            m_webShortcutMenu->setTitle(i18n("Search for '%1' with",  KStringHandler::rsqueeze(selectedText, 21)));
 
             KAction* action = 0;
 
@@ -2479,11 +2476,9 @@ void IRCView::updateWebShortcutMenu()
             connect(action, SIGNAL(triggered()), this, SLOT(configureWebShortcuts()));
             m_webShortcutMenu->addAction(action);
 
-            return;
+            m_webShortcutMenu->menuAction()->setVisible(true);
         }
     }
-
-    m_webShortcutMenu->menuAction()->setVisible(false);
 #endif
 }
 

commit 81d40ae811f10040e891021c9435d5f4a2ed0ba4
Author: Eike Hein <hein@kde.org>
Date:   Sat Sep 11 14:40:50 2010 +0200

    Move below the standard stuff, feels better.

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 30a5f28..6122ca3 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -2214,13 +2214,6 @@ void IRCView::setupContextMenu()
     connect(this, SIGNAL(copyAvailable(bool)), copyAct, SLOT( setEnabled( bool ) ));
     copyAct->setEnabled( false );
 
-#if KDE_IS_VERSION(4,5,0)
-    m_webShortcutMenu = new KMenu(this);
-    m_popup->addMenu(m_webShortcutMenu);
-    m_webShortcutMenu->menuAction()->setIcon(KIcon("preferences-web-browser-shortcuts"));
-    m_webShortcutMenu->menuAction()->setVisible(false);
-#endif
-
     QAction* selectAllAct = new KAction(this);
     selectAllAct->setText(i18n("Select All"));
     connect(selectAllAct, SIGNAL(triggered()), SLOT(selectAll()));
@@ -2231,6 +2224,13 @@ void IRCView::setupContextMenu()
     findTextAct->setText(i18n("Find Text..."));
     connect(findTextAct, SIGNAL(triggered()), SLOT(findText()));
     m_popup->addAction(findTextAct);
+
+#if KDE_IS_VERSION(4,5,0)
+    m_webShortcutMenu = new KMenu(this);
+    m_popup->addMenu(m_webShortcutMenu);
+    m_webShortcutMenu->menuAction()->setIcon(KIcon("preferences-web-browser-shortcuts"));
+    m_webShortcutMenu->menuAction()->setVisible(false);
+#endif
 }
 void IRCView::setupNickPopupMenu(bool isQuery)
 {

commit cba932541bf5f80a2bbf0427abb732f05dc200b6
Author: Eike Hein <hein@kde.org>
Date:   Sat Sep 11 15:33:53 2010 +0200

    constify

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 6122ca3..0d56b96 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -2452,7 +2452,7 @@ void IRCView::updateWebShortcutMenu()
     if (KUriFilter::self()->filterUri(filterData, QStringList() << "kuriikwsfilter"))
 #endif
     {
-        QStringList searchProviders = filterData.preferredSearchProviders();
+        const QStringList searchProviders = filterData.preferredSearchProviders();
 
         if (!searchProviders.isEmpty())
         {

commit 4295581f468cbb73a50c1b3ccedac448ce2fe757
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Sat Sep 11 14:42:03 2010 +0200

    Make WhiteBoard QT_NO_CAST_FROM_ASCII+QT_NO_CAST_TO_ASCII safe

diff --git a/src/dcc/whiteboardglobals.h b/src/dcc/whiteboardglobals.h
index a78b32c..3731d0d 100644
--- a/src/dcc/whiteboardglobals.h
+++ b/src/dcc/whiteboardglobals.h
@@ -82,24 +82,24 @@ namespace Konversation
                     {
                         return wboardCommands;
                     }
-                    wboardCommands.insert("BLT", BLT);
-                    wboardCommands.insert("CAN", CAN);
-                    wboardCommands.insert("CANT", CANT);
-                    wboardCommands.insert("CLIP", CLIP);
-                    wboardCommands.insert("CLS", CLS);
-                    wboardCommands.insert("DR", DR);
-                    wboardCommands.insert("DO", DO);
-                    wboardCommands.insert("DONT", DONT); //krazy:exclude=spelling
-                    wboardCommands.insert("ENTRY", ENTRY);
-                    wboardCommands.insert("IMG", IMG);
-                    wboardCommands.insert("IMGDATE", IMGDATA);
-                    wboardCommands.insert("MAKEIMG", MAKEIMG);
-                    wboardCommands.insert("NOCLIP", NOCLIP);
-                    wboardCommands.insert("SETSTAMP", SETSTAMP);
-                    wboardCommands.insert("SETTOOL", SETTOOL);
-                    wboardCommands.insert("STAMP", STAMP);
-                    wboardCommands.insert("TXT", TXT);
-                    wboardCommands.insert("TXTEX", TXTEX);
+                    wboardCommands.insert(QLatin1String("BLT"), BLT);
+                    wboardCommands.insert(QLatin1String("CAN"), CAN);
+                    wboardCommands.insert(QLatin1String("CANT"), CANT);
+                    wboardCommands.insert(QLatin1String("CLIP"), CLIP);
+                    wboardCommands.insert(QLatin1String("CLS"), CLS);
+                    wboardCommands.insert(QLatin1String("DR"), DR);
+                    wboardCommands.insert(QLatin1String("DO"), DO);
+                    wboardCommands.insert(QLatin1String("DONT"), DONT); //krazy:exclude=spelling
+                    wboardCommands.insert(QLatin1String("ENTRY"), ENTRY);
+                    wboardCommands.insert(QLatin1String("IMG"), IMG);
+                    wboardCommands.insert(QLatin1String("IMGDATE"), IMGDATA);
+                    wboardCommands.insert(QLatin1String("MAKEIMG"), MAKEIMG);
+                    wboardCommands.insert(QLatin1String("NOCLIP"), NOCLIP);
+                    wboardCommands.insert(QLatin1String("SETSTAMP"), SETSTAMP);
+                    wboardCommands.insert(QLatin1String("SETTOOL"), SETTOOL);
+                    wboardCommands.insert(QLatin1String("STAMP"), STAMP);
+                    wboardCommands.insert(QLatin1String("TXT"), TXT);
+                    wboardCommands.insert(QLatin1String("TXTEX"), TXTEX);
                     return wboardCommands;
                 }
 

commit 6411e26066d23995f0742d45782cbd654a89d60c
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Sat Sep 11 15:35:20 2010 +0200

    Make HTML in IRCView QT_NO_CAST_FROM_ASCII safe, as it is guaranteed just Latin1

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 0d56b96..55bfa73 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -940,7 +940,7 @@ QString IRCView::timeStamp()
 
         if(!Preferences::self()->showDate())
         {
-            timeString = QString("<font color=\"" + timeColor + "\">[%1]</font> ").arg(time.toString(timeFormat));
+            timeString = QString(QLatin1String("<font color=\"") + timeColor + QLatin1String("\">[%1]</font> ")).arg(time.toString(timeFormat));
         }
         else
         {
@@ -984,19 +984,19 @@ QString IRCView::createNickLine(const QString& nick, const QString& defaultColor
     else
         nickColor = defaultColor;
 
-    nickLine = "<font color=\"" + nickColor + "\">"+nickLine+"</font>";
+    nickLine = QLatin1String("<font color=\"") + nickColor + QLatin1String("\">") + nickLine + QLatin1String("</font>");
 
     if (Preferences::self()->useClickableNicks())
         nickLine = "<a class=\"nick\" href=\"#" + nick + "\">" + nickLine + "</a>";
 
     if (privMsg)
-        nickLine.prepend ("-&gt; ");
+        nickLine.prepend(QLatin1String("-&gt; "));
 
     if(encapsulateNick)
-        nickLine = "&lt;" + nickLine + "&gt;";
+        nickLine = QLatin1String("&lt;") + nickLine + QLatin1String("&gt;");
 
     if(Preferences::self()->useBoldNicks())
-        nickLine = "<b>" + nickLine + "</b>";
+        nickLine = QLatin1String("<b>") + nickLine + QLatin1String("</b>");
 
     return nickLine;
 }
@@ -1132,14 +1132,14 @@ bool doHighlight, bool parseURL, bool self, QChar::Direction* direction)
         // apply found highlight color to line
         if(!highlightColor.isEmpty())
         {
-            filteredLine = "<font color=\"" + highlightColor + "\">" + filteredLine + "</font>";
+            filteredLine = QLatin1String("<font color=\"") + highlightColor + QLatin1String("\">") + filteredLine + QLatin1String("</font>");
         }
     }
     else if(doHighlight && (whoSent == ownNick) && Preferences::self()->highlightOwnLines())
     {
         // highlight own lines
-        filteredLine = "<font color=\"" + Preferences::self()->highlightOwnLinesColor().name() +
-            "\">" + filteredLine + "</font>";
+        filteredLine = QLatin1String("<font color=\"") + Preferences::self()->highlightOwnLinesColor().name() +
+            QLatin1String("\">") + filteredLine + QLatin1String("</font>");
     }
 
     filteredLine = Konversation::Emoticons::parseEmoticons(filteredLine);
@@ -1342,23 +1342,23 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
         switch (htmlText.at(pos).toAscii())
         {
             case '\x02': //bold
-                offset = defaultHtmlReplace(htmlText, &data, pos, "b");
+                offset = defaultHtmlReplace(htmlText, &data, pos, QLatin1String("b"));
                 pos += offset -1;
                 linkOffset += offset -1;
                 break;
             case '\x1d': //italic
-                offset = defaultHtmlReplace(htmlText, &data, pos, "i");
+                offset = defaultHtmlReplace(htmlText, &data, pos, QLatin1String("i"));
                 pos += offset -1;
                 linkOffset += offset -1;
                 break;
             case '\x15': //mirc underline
             case '\x1f': //kvirc underline
-                offset = defaultHtmlReplace(htmlText, &data, pos, "u");
+                offset = defaultHtmlReplace(htmlText, &data, pos, QLatin1String("u"));
                 pos += offset -1;
                 linkOffset += offset -1;
                 break;
             case '\x13': //strikethru
-                offset = defaultHtmlReplace(htmlText, &data, pos, "s");
+                offset = defaultHtmlReplace(htmlText, &data, pos, QLatin1String("s"));
                 pos += offset -1;
                 linkOffset += offset -1;
                 break;
@@ -1376,7 +1376,7 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                     QString colorString;
                     // check for color reset conditions
                     //TODO check if \x11 \017 is really valid here
-                    if (colorMatch == "\x03" || colorMatch == "\x11" ||
+                    if (colorMatch == QLatin1String("\x03") || colorMatch == QLatin1String("\x11") ||
                         (fgColor.isEmpty() && bgColor.isEmpty()) || (!fgOK && !bgOK))
                     {
                         //in reverse mode, just reset both colors
@@ -1388,17 +1388,17 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                         }
                         else
                         {
-                            if (data.openHtmlTags.contains("font") &&
-                                data.openHtmlTags.contains("span"))
+                            if (data.openHtmlTags.contains(QLatin1String("font")) &&
+                                data.openHtmlTags.contains(QLatin1String("span")))
                             {
-                                colorString += closeToTagString(&data, "span");
+                                colorString += closeToTagString(&data, QLatin1String("span"));
                                 data.lastBgColor.clear();
-                                colorString += closeToTagString(&data, "font");
+                                colorString += closeToTagString(&data, QLatin1String("font"));
                                 data.lastFgColor.clear();
                             }
                             else if (data.openHtmlTags.contains("font"))
                             {
-                                colorString += closeToTagString(&data, "font");
+                                colorString += closeToTagString(&data, QLatin1String("font"));
                                 data.lastFgColor.clear();
                             }
                         }
@@ -1434,15 +1434,15 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                     // NOTE: there is no new bgColor is there is no fgColor
                     else if (!fgColor.isEmpty())
                     {
-                        if (data.openHtmlTags.contains("font") &&
-                            data.openHtmlTags.contains("span"))
+                        if (data.openHtmlTags.contains(QLatin1String("font")) &&
+                            data.openHtmlTags.contains(QLatin1String("span")))
                         {
-                            colorString += closeToTagString(&data, "span");
-                            colorString += closeToTagString(&data, "font");
+                            colorString += closeToTagString(&data, QLatin1String("span"));
+                            colorString += closeToTagString(&data, QLatin1String("font"));
                         }
-                        else if (data.openHtmlTags.contains("font"))
+                        else if (data.openHtmlTags.contains(QLatin1String("font")))
                         {
-                            colorString += closeToTagString(&data, "font");
+                            colorString += closeToTagString(&data, QLatin1String("font"));
                         }
                         data.lastFgColor = fgColor;
                         if (!bgColor.isEmpty())
@@ -1451,11 +1451,11 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                         if (!data.lastFgColor.isEmpty())
                         {
                             colorString += fontColorOpenTag(data.lastFgColor);
-                            data.openHtmlTags.append("font");
+                            data.openHtmlTags.append(QLatin1String("font"));
                             if (!data.lastBgColor.isEmpty())
                             {
                                 colorString += spanColorOpenTag(data.lastBgColor);
-                                data.openHtmlTags.append("span");
+                                data.openHtmlTags.append(QLatin1String("span"));
                             }
                         }
                     }
@@ -1471,7 +1471,7 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                     QString closeText;
                     while (!data.openHtmlTags.isEmpty())
                     {
-                        closeText += "</" + data.openHtmlTags.takeLast() + '>';
+                        closeText += QLatin1String("</") + data.openHtmlTags.takeLast() + QLatin1Char('>');
                     }
                     data.lastBgColor.clear();
                     data.lastFgColor.clear();
@@ -1496,35 +1496,35 @@ QString IRCView::ircTextToHtml(const QString& text, bool parseURL, const QString
                     // close current color strings and open reverse tags
                     if (!data.reverse)
                     {
-                        if (data.openHtmlTags.contains("span"))
+                        if (data.openHtmlTags.contains(QLatin1String("span")))
                         {
-                            colorString += closeToTagString(&data, "span");
+                            colorString += closeToTagString(&data, QLatin1String("span"));
                         }
-                        if (data.openHtmlTags.contains("font"))
+                        if (data.openHtmlTags.contains(QLatin1String("font")))
                         {
-                            colorString += closeToTagString(&data, "font");
+                            colorString += closeToTagString(&data, QLatin1String("font"));
                         }
                         data.reverse = true;
                         colorString += fontColorOpenTag(Preferences::self()->color(Preferences::TextViewBackground).name());
-                        data.openHtmlTags.append("font");
+                        data.openHtmlTags.append(QLatin1String("font"));
                         colorString += spanColorOpenTag(defaultColor);
-                        data.openHtmlTags.append("span");
+                        data.openHtmlTags.append(QLatin1String("span"));
                     }
                     else
                     {
                         // if reset reverse, close reverse and set old fore- and
                         // back-groundcolor if set in data
-                        colorString += closeToTagString(&data, "span");
-                        colorString += closeToTagString(&data, "font");
+                        colorString += closeToTagString(&data, QLatin1String("span"));
+                        colorString += closeToTagString(&data, QLatin1String("font"));
                         data.reverse = false;
                         if (!data.lastFgColor.isEmpty())
                         {
                             colorString += fontColorOpenTag(data.lastFgColor);
-                            data.openHtmlTags.append("font");
+                            data.openHtmlTags.append(QLatin1String("font"));
                             if (!data.lastBgColor.isEmpty())
                             {
                                 colorString += spanColorOpenTag(data.lastBgColor);
-                                data.openHtmlTags.append("span");
+                                data.openHtmlTags.append(QLatin1String("span"));
                             }
                         }
                     }
@@ -1597,7 +1597,7 @@ int IRCView::defaultHtmlReplace(QString& htmlText, TextHtmlData* data, int pos,
     else
     {
         data->openHtmlTags.append(tag);
-        replace = '<'+tag+'>';
+        replace = QLatin1Char('<') + tag + QLatin1Char('>');
     }
     htmlText.replace(pos, 1, replace);
     return replace.length();
@@ -1612,7 +1612,7 @@ QString IRCView::closeToTagString(TextHtmlData* data, const QString& _tag)
     for ( ; i >= 0 ; --i)
     {
         tag = data->openHtmlTags.at(i);
-        ret += "</" + tag + '>';
+        ret += QLatin1String("</") + tag + QLatin1Char('>');
         if (tag == _tag)
         {
             data->openHtmlTags.removeAt(i);
@@ -1633,7 +1633,7 @@ QString IRCView::openTags(TextHtmlData* data, int from)
     for ( ;  i < data->openHtmlTags.count(); ++i)
     {
         tag = data->openHtmlTags.at(i);
-        if (tag == "font")
+        if (tag == QLatin1String("font"))
         {
             if (data->reverse)
             {
@@ -1644,7 +1644,7 @@ QString IRCView::openTags(TextHtmlData* data, int from)
                 ret += fontColorOpenTag(data->lastFgColor);
             }
         }
-        else if (tag == "span")
+        else if (tag == QLatin1String("span"))
         {
             if (data->reverse)
             {
@@ -1657,7 +1657,7 @@ QString IRCView::openTags(TextHtmlData* data, int from)
         }
         else
         {
-            ret += '<' + tag + '>';
+            ret += QLatin1Char('<') + tag + QLatin1Char('>');
         }
     }
     return ret;
@@ -1670,19 +1670,19 @@ QString IRCView::closeTags(TextHtmlData* data)
     i.toBack();
     while (i.hasPrevious())
     {
-        ret += "</" + i.previous() + '>';
+        ret += QLatin1String("</") + i.previous() + QLatin1Char('>');
     }
     return ret;
 }
 
 QString IRCView::fontColorOpenTag(const QString& fgColor)
 {
-    return "<font color=\"" + fgColor + "\">";
+    return QLatin1String("<font color=\"") + fgColor + QLatin1String("\">");
 }
 
 QString IRCView::spanColorOpenTag(const QString& bgColor)
 {
-    return "<span style=\"background-color:" + bgColor + "\">";
+    return QLatin1String("<span style=\"background-color:") + bgColor + QLatin1String("\">");
 }
 
 QString IRCView::removeDuplicateCodes(const QString& codes, TextHtmlData* data)
@@ -1694,20 +1694,20 @@ QString IRCView::removeDuplicateCodes(const QString& codes, TextHtmlData* data)
         switch (codes.at(pos).toAscii())
         {
             case '\x02': //bold
-                defaultRemoveDuplicateHandling(data, "b");
+                defaultRemoveDuplicateHandling(data, QLatin1String("b"));
                 ++pos;
                 break;
             case '\x1d': //italic
-                defaultRemoveDuplicateHandling(data, "i");
+                defaultRemoveDuplicateHandling(data, QLatin1String("i"));
                 ++pos;
                 break;
             case '\x15': //mirc underline
             case '\x1f': //kvirc underline
-                defaultRemoveDuplicateHandling(data, "u");
+                defaultRemoveDuplicateHandling(data, QLatin1String("u"));
                 ++pos;
                 break;
             case '\x13': //strikethru
-                defaultRemoveDuplicateHandling(data, "s");
+                defaultRemoveDuplicateHandling(data, QLatin1String("s"));
                 ++pos;
                 break;
             case '\x0f': //reset to default
@@ -1721,25 +1721,25 @@ QString IRCView::removeDuplicateCodes(const QString& codes, TextHtmlData* data)
             case '\x16': //reverse
                 if (data->reverse)
                 {
-                    data->openHtmlTags.removeOne("span");
-                    data->openHtmlTags.removeOne("font");
+                    data->openHtmlTags.removeOne(QLatin1String("span"));
+                    data->openHtmlTags.removeOne(QLatin1String("font"));
                     data->reverse = false;
                     if (!data->lastFgColor.isEmpty())
                     {
-                        data->openHtmlTags.append("font");
+                        data->openHtmlTags.append(QLatin1String("font"));
                         if (!data->lastBgColor.isEmpty())
                         {
-                            data->openHtmlTags.append("span");
+                            data->openHtmlTags.append(QLatin1String("span"));
                         }
                     }
                 }
                 else
                 {
-                    data->openHtmlTags.removeOne("span");
-                    data->openHtmlTags.removeOne("font");
+                    data->openHtmlTags.removeOne(QLatin1String("span"));
+                    data->openHtmlTags.removeOne(QLatin1String("font"));
                     data->reverse = true;
-                    data->openHtmlTags.append("font");
-                    data->openHtmlTags.append("span");
+                    data->openHtmlTags.append(QLatin1String("font"));
+                    data->openHtmlTags.append(QLatin1String("span"));
                 }
                 ++pos;
                 break;
@@ -1751,18 +1751,18 @@ QString IRCView::removeDuplicateCodes(const QString& codes, TextHtmlData* data)
 
                     // check for color reset conditions
                     //TODO check if \x11 \017 is really valid here
-                    if (colorMatch == "\x03" || colorMatch == "\x11" ||
+                    if (colorMatch == QLatin1String("\x03") || colorMatch == QLatin1String("\x11") ||
                         (fgColor.isEmpty() && bgColor.isEmpty()) || (!fgOK && !bgOK))
                     {
                         if (!data->lastBgColor.isEmpty())
                         {
                             data->lastBgColor.clear();
-                            data->openHtmlTags.removeOne("span");
+                            data->openHtmlTags.removeOne(QLatin1String("span"));
                         }
                         if (!data->lastFgColor.isEmpty())
                         {
                             data->lastFgColor.clear();
-                            data->openHtmlTags.removeOne("font");
+                            data->openHtmlTags.removeOne(QLatin1String("font"));
                         }
                         pos += colorMatch.length();
                         break;
@@ -1780,11 +1780,11 @@ QString IRCView::removeDuplicateCodes(const QString& codes, TextHtmlData* data)
                     if (!fgColor.isEmpty())
                     {
                         data->lastFgColor = fgColor;
-                        data->openHtmlTags.append("font");
+                        data->openHtmlTags.append(QLatin1String("font"));
                         if (!bgColor.isEmpty())
                         {
                             data->lastBgColor = bgColor;
-                            data->openHtmlTags.append("span");
+                            data->openHtmlTags.append(QLatin1String("span"));
                         }
                     }
 
@@ -2083,7 +2083,7 @@ void IRCView::highlightedSlot(const QString& /*_link*/)
         m_lastStatusText = link;
     }
 
-    if (!link.startsWith('#'))
+    if (!link.startsWith(QLatin1Char('#')))
     {
         m_isOnNick = false;
         m_isOnChannel = false;
@@ -2111,7 +2111,7 @@ void IRCView::highlightedSlot(const QString& /*_link*/)
            m_copyUrlMenu = true;
         }
     }
-    else if (link.startsWith('#') && !link.startsWith(QLatin1String("##")))
+    else if (link.startsWith(QLatin1Char('#')) && !link.startsWith(QLatin1String("##")))
     {
         m_currentNick = link.mid(1);
 

commit e06393ba40413e2feb977ca3adfca33af5bd9c5d
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Sat Sep 11 16:32:00 2010 +0200

    - Remove some superfluous QString::number() from .arg()
    - Replace some QString.arg(QString).arg(QString) with QString.arg(QString, QString) for effectiveness

diff --git a/src/dcc/whiteboard.cpp b/src/dcc/whiteboard.cpp
index c4435dc..a47f807 100644
--- a/src/dcc/whiteboard.cpp
+++ b/src/dcc/whiteboard.cpp
@@ -484,7 +484,7 @@ namespace Konversation
             //TXT x,y,text
             static const QString txtLineCommand("\x01""TXT %1,%2,%3\x01");
 
-            emit rawWhiteBoardCommand(txtLineCommand.arg(QString::number(x)).arg(QString::number(y)).arg(text));
+            emit rawWhiteBoardCommand(txtLineCommand.arg(x).arg(y).arg(text));
         }
 
         void WhiteBoard::usedTextExtended(int x, int y, const QFont& font, const QColor& textColor, const QColor& background, const QString& text)
@@ -496,7 +496,7 @@ namespace Konversation
             QString fontSize = QString::number(font.pointSize());
             QString fontStyle = QString::number(fontToStyle(font));
 
-            emit rawWhiteBoardCommand(txtexLineCommand.arg(QString::number(x)).arg(QString::number(y)).arg(
+            emit rawWhiteBoardCommand(txtexLineCommand.arg(x).arg(y).arg(
                                                            fontname).arg(fontSize).arg(fontStyle).arg(colorToString(textColor)).arg(
                                                            colorToString(background)).arg(text));
         }
@@ -564,9 +564,9 @@ namespace Konversation
             }
 
             QString drLineCommand("\x01""DR %2,%3,%4,%5,%6,%7,%8,%9\x01");
-            drLineCommand = drLineCommand.arg(QString::number(tool)).arg(
-                                          QString::number(lineWidth)).arg(colorToString(penColor)).arg(colorToString(brushColor)).arg(
-                                          QString::number(xFrom)).arg(QString::number(yFrom)).arg(QString::number(xTo)).arg(QString::number(yTo));
+            drLineCommand = drLineCommand.arg(tool).arg(
+                                          lineWidth).arg(colorToString(penColor)).arg(colorToString(brushColor)).arg(
+                                          xFrom).arg(yFrom).arg(xTo).arg(yTo);
             // kDebug() << drLineCommand;
             emit rawWhiteBoardCommand(drLineCommand);
         }
diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 55bfa73..d27ebe1 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -609,7 +609,7 @@ void IRCView::append(const QString& nick, const QString& message)
 
     line = line.arg(timeStamp(), nick, text);
 
-    emit textToLog(QString("<%1>\t%2").arg(nick).arg(message));
+    emit textToLog(QString("<%1>\t%2").arg(nick, message));
 
     doAppend(line, rtl);
 }
@@ -667,7 +667,7 @@ void IRCView::appendQuery(const QString& nick, const QString& message, bool inCh
 
     line = line.arg(timeStamp(), nick, text);
 
-    emit textToLog(QString("<%1>\t%2").arg(nick).arg(message));
+    emit textToLog(QString("<%1>\t%2").arg(nick, message));
 
     doAppend(line, rtl);
 }
@@ -727,7 +727,7 @@ void IRCView::appendAction(const QString& nick, const QString& message)
 
         line = line.arg(timeStamp(), nick, text);
 
-        emit textToLog(QString("\t * %1 %2").arg(nick).arg(message));
+        emit textToLog(QString("\t * %1 %2").arg(nick, message));
 
         doAppend(line, rtl);
     }
@@ -774,7 +774,7 @@ void IRCView::appendServerMessage(const QString& type, const QString& message, b
             +line.arg(timeStamp(), type, message.section(' ', 1))+"</a></font>";
     }
 
-    emit textToLog(QString("%1\t%2").arg(type).arg(message));
+    emit textToLog(QString("%1\t%2").arg(type, message));
 
     doAppend(line, rtl);
 }
@@ -821,7 +821,7 @@ void IRCView::appendCommandMessage(const QString& type,const QString& message, b
 
     line = line.arg(timeStamp(), prefix, text);
 
-    emit textToLog(QString("%1\t%2").arg(type).arg(message));
+    emit textToLog(QString("%1\t%2").arg(type, message));
 
     doAppend(line, rtl, self);
 }

commit 943f980047adccd2f3c1a04bc1b3ebc5125e89a2
Author: Script Kiddy <scripty@kde.org>
Date:   Sun Sep 12 10:31:04 2010 +0200

    SVN_SILENT made messages (.desktop file)

diff --git a/data/konversation.notifyrc b/data/konversation.notifyrc
index b3fcb2b..de29853 100644
--- a/data/konversation.notifyrc
+++ b/data/konversation.notifyrc
@@ -207,7 +207,7 @@ Comment[pl]=Ktoś użył Twojego pseudonimu w wiadomości
 Comment[pt]=Alguém escrever a sua alcunha numa mensagem
 Comment[pt_BR]=Alguém escreveu o seu apelido em uma mensagem
 Comment[ro]=Cineva v-a scris porecla într-un mesaj
-Comment[ru]=Кто-то написал ваше имя в своём собщении
+Comment[ru]=Кто-то написал ваше имя в своём сообщении
 Comment[si]=යමෙක් ඔබගේ සුරතල් නම පණිවිඩයක ලියා ඇත
 Comment[sr]=Неко је написао ваш надимак у поруци
 Comment[sr@ijekavian]=Неко је написао ваш надимак у поруци

commit 4a7634fb374fbdf3653ccbf2c10c1ba83ba01619
Author: Eike Hein <hein@kde.org>
Date:   Sun Sep 12 15:01:46 2010 +0200

    Make the order match Konq and use KStandardAction for Select All.

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index d27ebe1..9bf98b2 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -2214,23 +2214,21 @@ void IRCView::setupContextMenu()
     connect(this, SIGNAL(copyAvailable(bool)), copyAct, SLOT( setEnabled( bool ) ));
     copyAct->setEnabled( false );
 
-    QAction* selectAllAct = new KAction(this);
-    selectAllAct->setText(i18n("Select All"));
-    connect(selectAllAct, SIGNAL(triggered()), SLOT(selectAll()));
+    KAction* selectAllAct = KStandardAction::selectAll(this, SLOT(selectAll()), this);
     m_popup->addAction(selectAllAct);
 
-    QAction* findTextAct = new KAction(this);
-    findTextAct->setIcon(KIcon("edit-find"));
-    findTextAct->setText(i18n("Find Text..."));
-    connect(findTextAct, SIGNAL(triggered()), SLOT(findText()));
-    m_popup->addAction(findTextAct);
-
 #if KDE_IS_VERSION(4,5,0)
     m_webShortcutMenu = new KMenu(this);
     m_popup->addMenu(m_webShortcutMenu);
     m_webShortcutMenu->menuAction()->setIcon(KIcon("preferences-web-browser-shortcuts"));
     m_webShortcutMenu->menuAction()->setVisible(false);
 #endif
+
+    QAction* findTextAct = new KAction(this);
+    findTextAct->setIcon(KIcon("edit-find"));
+    findTextAct->setText(i18n("Find Text..."));
+    connect(findTextAct, SIGNAL(triggered()), SLOT(findText()));
+    m_popup->addAction(findTextAct);
 }
 void IRCView::setupNickPopupMenu(bool isQuery)
 {

commit 2eb33b4158ea3a69a7d87cbf5a44b1f54b06fd7c
Author: Eike Hein <hein@kde.org>
Date:   Sun Sep 12 15:14:02 2010 +0200

    More use of KStandardAction.

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 9bf98b2..ad9a79b 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -2187,32 +2187,32 @@ void IRCView::setupContextMenu()
     m_popup->addAction(m_copyUrlClipBoard);
     m_copyUrlClipBoard->setVisible( false );
 
+    // Not using KStandardAction is intentional here since the Ctrl+B
+    // shortcut it would show in the menu is already used by our IRC
+    // wide bookmarking feature.
     m_bookmark = new KAction(this);
     m_bookmark->setIcon(KIcon("bookmark-new"));
     m_bookmark->setText(i18n("Add to Bookmarks"));
     connect(m_bookmark, SIGNAL(triggered()), SLOT(slotBookmark()));
     m_popup->addAction(m_bookmark);
-    m_bookmark->setVisible( false );
+    m_bookmark->setVisible(false);
 
     m_saveUrl = new KAction(this);
     m_saveUrl->setIcon(KIcon("document-save"));
     m_saveUrl->setText(i18n("Save Link As..."));
     connect(m_saveUrl, SIGNAL(triggered()), SLOT(saveLinkAs()));
     m_popup->addAction(m_saveUrl);
-    m_saveUrl->setVisible( false );
+    m_saveUrl->setVisible(false);
 
     QAction* toggleMenuBarSeparator = m_popup->addSeparator();
     toggleMenuBarSeparator->setVisible(false);
     copyUrlMenuSeparator = m_popup->addSeparator();
-    copyUrlMenuSeparator->setVisible( false );
+    copyUrlMenuSeparator->setVisible(false);
 
-    QAction* copyAct = new KAction(this);
-    copyAct->setIcon(KIcon("edit-copy"));
-    copyAct->setText(i18n("&Copy"));
-    connect(copyAct, SIGNAL(triggered()), SLOT(copy()));
+    KAction* copyAct = KStandardAction::copy(this, SLOT(copy()), this);
     m_popup->addAction(copyAct);
-    connect(this, SIGNAL(copyAvailable(bool)), copyAct, SLOT( setEnabled( bool ) ));
-    copyAct->setEnabled( false );
+    connect(this, SIGNAL(copyAvailable(bool)), copyAct, SLOT(setEnabled(bool)));
+    copyAct->setEnabled(false);
 
     KAction* selectAllAct = KStandardAction::selectAll(this, SLOT(selectAll()), this);
     m_popup->addAction(selectAllAct);
@@ -2224,10 +2224,8 @@ void IRCView::setupContextMenu()
     m_webShortcutMenu->menuAction()->setVisible(false);
 #endif
 
-    QAction* findTextAct = new KAction(this);
-    findTextAct->setIcon(KIcon("edit-find"));
-    findTextAct->setText(i18n("Find Text..."));
-    connect(findTextAct, SIGNAL(triggered()), SLOT(findText()));
+    KActionCollection* actionCollection = Application::instance()->getMainWindow()->actionCollection();
+    QAction* findTextAct = actionCollection->action(KStandardAction::name(KStandardAction::Find));
     m_popup->addAction(findTextAct);
 }
 void IRCView::setupNickPopupMenu(bool isQuery)

commit b32bbb444d097db5ab82cf7bb478eece97f66a21
Author: Eike Hein <hein@kde.org>
Date:   Sun Sep 12 15:43:58 2010 +0200

    Cleanup.

diff --git a/src/dcc/chatcontainer.cpp b/src/dcc/chatcontainer.cpp
index e9d50f1..14c9550 100644
--- a/src/dcc/chatcontainer.cpp
+++ b/src/dcc/chatcontainer.cpp
@@ -58,7 +58,7 @@ namespace Konversation
                 connect(m_chat, SIGNAL(connected()), m_whiteBoard, SLOT(connected()));
                 //chatSplitter->setStretchFactor(chatSplitter->indexOf(paintLabel), 1);
 
-                IRCViewBox *ircViewBox = new IRCViewBox(chatSplitter, 0);
+                IRCViewBox *ircViewBox = new IRCViewBox(chatSplitter);
                 //chatSplitter->setStretchFactor(chatSplitter->indexOf(ircViewBox), 1);
                 setTextView(ircViewBox->ircView());
 
@@ -66,7 +66,7 @@ namespace Konversation
             }
             else //(m_chat->extension() == Chat::SimpleChat || m_chat->extension() == Chat::Unknown)
             {
-                IRCViewBox *ircViewBox = new IRCViewBox(m_headerSplitter, 0);
+                IRCViewBox *ircViewBox = new IRCViewBox(m_headerSplitter);
                 m_headerSplitter->setStretchFactor(m_headerSplitter->indexOf(ircViewBox), 1);
                 setTextView(ircViewBox->ircView());
             }
diff --git a/src/irc/channel.cpp b/src/irc/channel.cpp
index bb33217..12cdbe9 100644
--- a/src/irc/channel.cpp
+++ b/src/irc/channel.cpp
@@ -205,7 +205,7 @@ Channel::Channel(QWidget* parent, QString _name) : ChatWindow(parent)
     m_horizSplitter->setOpaqueResize( KGlobalSettings::opaqueResize() );
 
     // Server will be set later in setServer()
-    IRCViewBox* ircViewBox = new IRCViewBox(m_horizSplitter, NULL);
+    IRCViewBox* ircViewBox = new IRCViewBox(m_horizSplitter);
     m_horizSplitter->setStretchFactor(m_horizSplitter->indexOf(ircViewBox), 1);
     setTextView(ircViewBox->ircView());
     connect(textView,SIGNAL(popupCommand(int)),this,SLOT(popupChannelCommand(int)));
diff --git a/src/irc/query.cpp b/src/irc/query.cpp
index c56f251..ec700ee 100644
--- a/src/irc/query.cpp
+++ b/src/irc/query.cpp
@@ -68,7 +68,7 @@ Query::Query(QWidget* parent, QString _name) : ChatWindow(parent)
     addresseelogoimage->setWhatsThis(whatsthis);
     queryHostmask->setWhatsThis(whatsthis);
 
-    IRCViewBox* ircBox = new IRCViewBox(m_headerSplitter,0);
+    IRCViewBox* ircBox = new IRCViewBox(m_headerSplitter);
     m_headerSplitter->setStretchFactor(m_headerSplitter->indexOf(ircBox), 1);
     setTextView(ircBox->ircView());               // Server will be set later in setServer();
     textView->setAcceptDrops(true);
diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index ad9a79b..7b9d54f 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -124,7 +124,7 @@ class SelectionPin
 };
 
 
-IRCView::IRCView(QWidget* parent, Server* newServer) : KTextBrowser(parent), m_nextCullIsMarker(false), m_rememberLinePosition(-1), m_rememberLineDirtyBit(false), markerFormatObject(this)
+IRCView::IRCView(QWidget* parent) : KTextBrowser(parent), m_nextCullIsMarker(false), m_rememberLinePosition(-1), m_rememberLineDirtyBit(false), markerFormatObject(this)
 {
     m_copyUrlMenu = false;
     m_resetScrollbar = true;
@@ -167,8 +167,6 @@ IRCView::IRCView(QWidget* parent, Server* newServer) : KTextBrowser(parent), m_n
 
     setupContextMenu();
 
-    setServer(newServer);
-
     if (Preferences::self()->useParagraphSpacing()) enableParagraphSpacing();
 
     //HACK to workaround an issue with the QTextDocument
@@ -2377,7 +2375,7 @@ void IRCView::contextMenuEvent(QContextMenuEvent* ev)
 
         m_isOnNick = false;
     }
-    else if(m_channelPopup && m_server && m_isOnChannel && m_channelPopup->isEnabled())
+    else if (m_channelPopup && m_server && m_isOnChannel && m_channelPopup->isEnabled())
     {
         m_channelPopup->exec(ev->globalPos());
         m_isOnChannel = false;
@@ -2388,7 +2386,7 @@ void IRCView::contextMenuEvent(QContextMenuEvent* ev)
         KToggleAction* toggleMenuBarAction = static_cast<KToggleAction*>(actionCollection->action("options_show_menubar"));
         QAction* separator = NULL;
 
-        if(toggleMenuBarAction && !toggleMenuBarAction->isChecked())
+        if (toggleMenuBarAction && !toggleMenuBarAction->isChecked())
         {
             m_popup->insertAction(m_copyUrlClipBoard, toggleMenuBarAction);
             separator = m_popup->insertSeparator(m_copyUrlClipBoard);
diff --git a/src/viewer/ircview.h b/src/viewer/ircview.h
index 96121c9..0db5670 100644
--- a/src/viewer/ircview.h
+++ b/src/viewer/ircview.h
@@ -65,7 +65,7 @@ class IRCView : public KTextBrowser
     Q_OBJECT
 
     public:
-        IRCView(QWidget* parent,Server* newServer);
+        IRCView(QWidget* parent);
         ~IRCView();
 
         //void clear();
diff --git a/src/viewer/ircviewbox.cpp b/src/viewer/ircviewbox.cpp
index c86f0b7..792012d 100644
--- a/src/viewer/ircviewbox.cpp
+++ b/src/viewer/ircviewbox.cpp
@@ -17,10 +17,10 @@
 #include <QPixmap>
 #include <KVBox>
 
-IRCViewBox::IRCViewBox(QWidget* parent, Server* newServer)
+IRCViewBox::IRCViewBox(QWidget* parent)
 : KVBox(parent)
 {
-    m_ircView = new IRCView(this, newServer);
+    m_ircView = new IRCView(this);
     m_searchBar = new SearchBar(this);
     m_searchBar->hide();
     m_matchedOnce = false;
diff --git a/src/viewer/ircviewbox.h b/src/viewer/ircviewbox.h
index 29a9868..b6aabc3 100644
--- a/src/viewer/ircviewbox.h
+++ b/src/viewer/ircviewbox.h
@@ -24,7 +24,7 @@ class IRCViewBox : public KVBox
 
         public:
 
-        IRCViewBox(QWidget* parent, Server* newServer);
+        IRCViewBox(QWidget* parent);
         ~IRCViewBox();
 
         IRCView*   ircView() const;
diff --git a/src/viewer/logfilereader.cpp b/src/viewer/logfilereader.cpp
index 67f4f8c..a0625a1 100644
--- a/src/viewer/logfilereader.cpp
+++ b/src/viewer/logfilereader.cpp
@@ -57,7 +57,7 @@ LogfileReader::LogfileReader(QWidget* parent, const QString& log) : ChatWindow(p
     sizeSpin->installEventFilter(this);
     toolBar->addWidget(sizeSpin);
 
-    IRCViewBox* ircBox = new IRCViewBox(this, 0);
+    IRCViewBox* ircBox = new IRCViewBox(this);
     setTextView(ircBox->ircView());
     getTextView()->setWhatsThis(i18n("The messages in the log file are displayed here. The oldest messages are at the top and the most recent are at the bottom."));
 
diff --git a/src/viewer/rawlog.cpp b/src/viewer/rawlog.cpp
index 39717cd..aa355f0 100644
--- a/src/viewer/rawlog.cpp
+++ b/src/viewer/rawlog.cpp
@@ -24,7 +24,7 @@ RawLog::RawLog(QWidget* parent) : ChatWindow(parent)
 {
     setName(i18n("Raw Log"));
     setType(ChatWindow::RawLog);
-    IRCViewBox* ircBox = new IRCViewBox(this, 0);
+    IRCViewBox* ircBox = new IRCViewBox(this);
     setTextView(ircBox->ircView());               // Server will be set later in setServer()
 
     updateAppearance();
diff --git a/src/viewer/statuspanel.cpp b/src/viewer/statuspanel.cpp
index 4fdf503..f885b44 100644
--- a/src/viewer/statuspanel.cpp
+++ b/src/viewer/statuspanel.cpp
@@ -35,7 +35,7 @@ StatusPanel::StatusPanel(QWidget* parent) : ChatWindow(parent)
     awayState=false;
 
     // set up text view, will automatically take care of logging
-    IRCViewBox* ircBox = new IRCViewBox(this, 0); // Server will be set later in setServer()
+    IRCViewBox* ircBox = new IRCViewBox(this); // Server will be set later in setServer()
     setTextView(ircBox->ircView());
 
     KHBox* commandLineBox=new KHBox(this);

commit b45626a73c312b8129ca568b5c813eab7faf2b12
Author: Eike Hein <hein@kde.org>
Date:   Sun Sep 12 16:02:48 2010 +0200

    Don't show the Channel Settings context menu item in tabs that aren't channels.

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 7b9d54f..280c9a9 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -181,18 +181,23 @@ IRCView::~IRCView()
 
 void IRCView::setServer(Server* newServer)
 {
+    if (m_server == newServer)
+        return;
+
     m_server = newServer;
 
     if (newServer)
     {
-        QAction *action = newServer->getViewContainer()->actionCollection()->action("open_logfile");
-        if(action)
+        KActionCollection* actionCollection = Application::instance()->getMainWindow()->actionCollection();
+
+        QAction* action = actionCollection->action("open_logfile");
+
+        if (action)
         {
-                m_popup->addSeparator();
-                m_popup->addAction( action );
-                action = newServer->getViewContainer()->actionCollection()->action("channel_settings");
-                if ( action )
-                        m_popup->addAction( action );
+            m_popup->insertAction(actionCollection->action("channel_settings"), action);
+            QAction* separator = new QAction(m_popup);
+            separator->setSeparator(true);
+            m_popup->insertAction(action, separator);
         }
     }
 
@@ -202,8 +207,14 @@ void IRCView::setChatWin(ChatWindow* chatWin)
 {
     m_chatWin = chatWin;
 
-    if(m_chatWin->getType()==ChatWindow::Channel)
+    if (m_chatWin->getType()==ChatWindow::Channel)
+    {
         setupNickPopupMenu(false);
+
+        KActionCollection* actionCollection = Application::instance()->getMainWindow()->actionCollection();
+        QAction* action = actionCollection->action("channel_settings");
+        if (action) m_popup->addAction(action);
+    }
     else
         setupNickPopupMenu(true);
 

commit 6c27e7c3362dc0942a677bdf0d0dfe97762929ed
Author: Eike Hein <hein@kde.org>
Date:   Sun Sep 12 16:03:05 2010 +0200

    This isn't a signal.

diff --git a/src/viewer/chatwindow.cpp b/src/viewer/chatwindow.cpp
index 785cc9e..f119b0b 100644
--- a/src/viewer/chatwindow.cpp
+++ b/src/viewer/chatwindow.cpp
@@ -162,7 +162,7 @@ void ChatWindow::setServer(Server* newServer)
             else kDebug() << "textView==0!";
         }
 
-        emit serverOnline(m_server->isConnected());
+        serverOnline(m_server->isConnected());
     }
 }
 

commit 91986a6a00c2fd45ded46bf813fc7b9f98fddef7
Author: Eike Hein <hein@kde.org>
Date:   Sun Sep 12 16:03:16 2010 +0200

    Bump.

diff --git a/src/commit.h b/src/commit.h
index 4695001..187d4ef 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4075
+#define COMMIT 4076
 #endif

commit 5ae5be579011ff7f2fb174890876e159b1fb59fa
Author: Eike Hein <hein@kde.org>
Date:   Sun Sep 12 16:04:58 2010 +0200

    Update.

diff --git a/ChangeLog b/ChangeLog
index 82861d4..46b9da4 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -186,6 +186,7 @@ Changes since 1.3.1:
 * Added support for the 475 numeric (ERR_BADCHANNELKEY).
 * Rewrote chat text view wallpaper image support to avoid rendering pro-
   blems some users were experiencing.
+* Minor UI improvements to the chat text view context menu.
 
 
 Changes from 1.3 to 1.3.1:

commit c800f9a5e7951ecf93dee6a923a76e26f41a88d9
Author: Script Kiddy <scripty@kde.org>
Date:   Mon Sep 13 10:28:03 2010 +0200

    SVN_SILENT made messages (.desktop file)

diff --git a/data/konversation.notifyrc b/data/konversation.notifyrc
index de29853..3131f1a 100644
--- a/data/konversation.notifyrc
+++ b/data/konversation.notifyrc
@@ -918,7 +918,7 @@ Comment[gl]=Modificouse un usuario ou modo da canle
 Comment[hu]=Egy felhasználó vagy egy csatornamód megváltozott
 Comment[it]=Una modalità utente o canale è stata cambiata
 Comment[km]=អ្នកប្រើ ឬ​របៀប​ប៉ុស្ដិ៍​ត្រូវ​បាន​ផ្លាស់ប្ដូរ
-Comment[lt]=Pasikeitė naudotojo arba kanalo būsena
+Comment[lt]=Pasikeitė vartotojo arba kanalo būsena
 Comment[nb]=En bruker- eller kanalmodus ble endret
 Comment[nds]=En Bruker- oder Klöönruumtyp wöör ännert
 Comment[nl]=Een gebruiker- of kanaalmodus is gewijzigd
@@ -1003,7 +1003,7 @@ Comment[gl]=Un usuario na súa lista de alcumes a vixilar acaba de conectarse
 Comment[hu]=Az értesítési listán szereplő egyik felhasználó elérhető módba váltott
 Comment[it]=Si è collegato un utente nella tua lista di nick sorvegliati
 Comment[km]=អ្នកប្រើ​នៅ​លើ​បញ្ជី​សមត្ថិនាម​ដែល​បាន​ឃ្លាំមើល​របស់​អ្នក​ បាន​នៅលើ​បណ្ដាញ
-Comment[lt]=Prisijungė naudotojas iš stebimų slapyvardžių sąrašo
+Comment[lt]=Prisijungė vartotojas iš stebimų slapyvardžių sąrašo
 Comment[nb]=En bruker er tilkoblet som er på din liste over overvåkede kallenavn
 Comment[nds]=En Bruker op Dien List mit beluert Ökelnaams hett sik tokoppelt
 Comment[nl]=Een gebruiker op uw gevolgdebijnamenlijst is online

commit 7b54608e9008855d2019c3cdce5284d1822e6a5b
Author: Martin Blumenstingl <darklight.xdarklight@googlemail.com>
Date:   Tue Sep 14 18:27:51 2010 +0200

    Remove an unused file (this should have been removed when the trayicon implementation was split).

diff --git a/src/viewer/trayicon.cpp b/src/viewer/trayicon.cpp
deleted file mode 100644
index e69de29..0000000

commit 7404e4bed16a7fdcab37a0f2f883450c550e3113
Author: Eike Hein <hein@kde.org>
Date:   Thu Sep 16 21:54:48 2010 +0200

    Land a rewrite of the context menu code ...
    
    ... for ircview, topiclabel and nicklistview, resulting in a monstrous
    commit message listing the many improvements. And you thought I couldn't
    do it with git! Enjoy:
    
    * Numerous consistency problems in the area of which actions are avail-
      able in which context menus have been addressed. For example, the chat
      text nick context menu used to lack many of the actions available in
      the nickname list context menu.
    * Numerous actions that require an established connection (e.g. everything
      in the "Modes" submenu of nick context menus or the DCC actions) used to
      not get disabled when loss of connection occured. Others did get dis-
      abled, but not consistently in all menus in which they are available.
      Still others, such as the "Add to Watched Nicks" action, used to get
      disabled unnecessarily. All of this has been addressed.
    * Toggle actions used to appear and behave inconsistently: The nickname
      list context menu showed either "Ignore" or "Unignore" actions as applic-
      able, while the chat text view nick context menu used a checkable item.
      Meanwhile, the "Add to Watched Nicknames" action had no corresponding
      action to remove a nick from the Watched Nicks Online list at all. All
      of this has been fixed, going with the "Ignore"/"Unignore" style of the
      nickname list context menu (i.e. there's now a "Remove from Watched
      Nicks").
    BUG:243430
    * If built against Qt 4.7, the topic area now uses the same context menus
      as the chat text view (with the exception of the inappropriate "Find
      Text.." action in the basic context menu), enabling a lot of functiona-
      lity missing otherwise.
    * Some actions used to be shown in menus inappropriately, e.g. the "Chan-
      nel Settings" action in the chat text view context menu of a connection
      status tab or the "Open Logfile" action in the same context menu of a
      raw log tab. This has been addressed.
    * The behavior of many of the actions is now more consistent with their
      input line equivalents. For example, clicking "Join Channel" in a link
      to an already-joined channel will now focus the existing channel tab,
      the same as the /join command would do. Previously, nothing would hap-
      pen.
    * Fixed a bug causing the nick and channel link context menus in the chat
      text view of a channel tab to get disabled after having been kicked from
      the channel.
    * Fixed a bug causing the "Send Email..." action to always be disabled,
      even when any of the associated address book entries did have an email
      address on file.
    * The display of helpful titles repeating the nick/channel at the top of
      the chat text view nick and channel link context menus has been fixed -
      it previously got broken in the KDE 4 port.
    * The nick and channel link context menus now mark the action that occurs
      when clicking either as the default action of the context menu, impro-
      ving the appearance with UI styles that visually distinguish the default
      action.
    * General improvements to the layout of menus, often with an aim for
      improved consistency with other KDE applications.
    * Numerous actions that were missing icons now have them.
    * The consistency of keyboard accelerators between the various menus has
      been improved.
    * Various actions in the nickname list context menu now appropriately use
      a singular or plural form for their text label depending on the number
      of selected nicks the menu operates on.
    * Improved memory efficiency by using single global instances of the
      various menus, rather than for example having two separate instances of
      the nick context menu - one for the chat text view, one for the nickname
      list view - for every channel tab.
    * The code implementing the various actions was in many cases redundantly
      implemented in three different places, for some even in four. This stag-
      gering code duplication has been done away with.

diff --git a/ChangeLog b/ChangeLog
index 46b9da4..b75fb64 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -186,7 +186,70 @@ Changes since 1.3.1:
 * Added support for the 475 numeric (ERR_BADCHANNELKEY).
 * Rewrote chat text view wallpaper image support to avoid rendering pro-
   blems some users were experiencing.
-* Minor UI improvements to the chat text view context menu.
+* The code handling the context menus of chat text views (including the con-
+  text menus for nicks and channel links), channel nickname list views and
+  topic areas has been rewritten from scratch, resulting in a long list of
+  bug fixes and consistency and efficiency improvements:
+  - Numerous consistency problems in the area of which actions are avail-
+    able in which context menus have been addressed. For example, the chat
+    text nick context menu used to lack many of the actions available in
+    the nickname list context menu.
+  - Numerous actions that require an established connection (e.g. everything
+    in the "Modes" submenu of nick context menus or the DCC actions) used to
+    not get disabled when loss of connection occured. Others did get dis-
+    abled, but not consistently in all menus in which they are available.
+    Still others, such as the "Add to Watched Nicks" action, used to get
+    disabled unnecessarily. All of this has been addressed.
+  - Toggle actions used to appear and behave inconsistently: The nickname
+    list context menu showed either "Ignore" or "Unignore" actions as applic-
+    able, while the chat text view nick context menu used a checkable item.
+    Meanwhile, the "Add to Watched Nicknames" action had no corresponding
+    action to remove a nick from the Watched Nicks Online list at all. All
+    of this has been fixed, going with the "Ignore"/"Unignore" style of the
+    nickname list context menu (i.e. there's now a "Remove from Watched
+    Nicks").
+  - If built against Qt 4.7, the topic area now uses the same context menus
+    as the chat text view (with the exception of the inappropriate "Find
+    Text.." action in the basic context menu), enabling a lot of functiona-
+    lity missing otherwise.
+  - Some actions used to be shown in menus inappropriately, e.g. the "Chan-
+    nel Settings" action in the chat text view context menu of a connection
+    status tab or the "Open Logfile" action in the same context menu of a
+    raw log tab. This has been addressed.
+  - The behavior of many of the actions is now more consistent with their
+    input line equivalents. For example, clicking "Join Channel" in a link
+    to an already-joined channel will now focus the existing channel tab,
+    the same as the /join command would do. Previously, nothing would hap-
+    pen.
+  - Fixed a bug causing the nick and channel link context menus in the chat
+    text view of a channel tab to get disabled after having been kicked from
+    the channel.
+  - Fixed a bug causing the "Send Email..." action to always be disabled,
+    even when any of the associated address book entries did have an email
+    address on file.
+  - The display of helpful titles repeating the nick/channel at the top of
+    the chat text view nick and channel link context menus has been fixed -
+    it previously got broken in the KDE 4 port.
+  - The nick and channel link context menus now mark the action that occurs
+    when clicking either as the default action of the context menu, impro-
+    ving the appearance with UI styles that visually distinguish the default
+    action.
+  - General improvements to the layout of menus, often with an aim for
+    improved consistency with other KDE applications.
+  - Numerous actions that were missing icons now have them.
+  - The consistency of keyboard accelerators between the various menus has
+    been improved.
+  - Various actions in the nickname list context menu now appropriately use
+    a singular or plural form for their text label depending on the number
+    of selected nicks the menu operates on.
+  - Improved memory efficiency by using single global instances of the
+    various menus, rather than for example having two separate instances of
+    the nick context menu - one for the chat text view, one for the nickname
+    list view - for every channel tab.
+  - The code implementing the various actions was in many cases redundantly
+    implemented in three different places, for some even in four. This stag-
+    gering code duplication has been done away with.
+
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 380bb35..dce48bc 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -146,6 +146,7 @@ set(viewer_SRCS
     viewer/images.cpp
     viewer/quickbutton.cpp
     viewer/searchbar.cpp
+    viewer/irccontextmenus.cpp
 )
 
 kde4_add_ui_files(viewer_SRCS
diff --git a/src/application.h b/src/application.h
index f6fb56b..88a7656 100644
--- a/src/application.h
+++ b/src/application.h
@@ -45,19 +45,6 @@ namespace Konversation
     {
         class TransferManager;
     }
-
-    // Shared between NickListView and IRCView
-    enum PopupIDs
-    {
-        GiveOp,TakeOp,GiveHalfOp,TakeHalfOp,GiveVoice,TakeVoice,
-        IgnoreNick,UnignoreNick,
-        Kick,KickBan,BanNick,BanHost,BanDomain,BanUserHost,BanUserDomain,
-        KickBanHost,KickBanDomain,KickBanUserHost,KickBanUserDomain,
-        Whois,Version,Ping,OpenQuery,DccSend,Join,Names,Topic,
-        CustomID, AddressbookChange, AddressbookNew, AddressbookDelete,
-        AddressbookEdit, SendEmail, StartDccChat, AddNotify, StartDccWhiteboard
-    };
-
 }
 
 namespace KWallet
@@ -189,8 +176,6 @@ class Application : public KUniqueApplication
 
         Konversation::NotificationHandler* m_notificationHandler;
 
-        QStringList colorList;
-
         KWallet::Wallet* m_wallet;
 };
 
diff --git a/src/commit.h b/src/commit.h
index 187d4ef..e4f5d97 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4076
+#define COMMIT 4077
 #endif
diff --git a/src/config/preferences.cpp b/src/config/preferences.cpp
index 19a7b8b..5c42b75 100644
--- a/src/config/preferences.cpp
+++ b/src/config/preferences.cpp
@@ -325,14 +325,6 @@ bool Preferences::isNotify(int serverGroupId, const QString& pattern)
     return false;
 }
 
-bool Preferences::hasNotifyList(int serverGroupId)
-{
-    if (self()->mNotifyList.find(serverGroupId) != self()->mNotifyList.end())
-        return true;
-    else
-        return false;
-}
-
 // Default identity functions
 void Preferences::addIdentity(IdentityPtr identity) { self()->mIdentityList.append(identity); }
 void Preferences::removeIdentity(IdentityPtr identity) { self()->mIdentityList.removeOne(identity); }
diff --git a/src/config/preferences.h b/src/config/preferences.h
index 01f9792..0d0cc93 100644
--- a/src/config/preferences.h
+++ b/src/config/preferences.h
@@ -74,7 +74,6 @@ class Preferences : public PreferencesBase
         static bool addNotify(int serverGroupId, const QString& newPattern);
         static bool removeNotify(int serverGroupId, const QString& pattern);
         static bool isNotify(int serverGroupId, const QString& pattern);
-        static bool hasNotifyList(int serverGroupId);
 
         static const QList<Highlight*> highlightList();
         static void setHighlightList(QList<Highlight*> newList);
diff --git a/src/dcc/chatcontainer.cpp b/src/dcc/chatcontainer.cpp
index 14c9550..8501936 100644
--- a/src/dcc/chatcontainer.cpp
+++ b/src/dcc/chatcontainer.cpp
@@ -23,7 +23,6 @@
 #include <QSplitter>
 
 #include <KLocalizedString>
-#include <KMenu>
 #include <KActionCollection>
 #include <KMessageBox>
 #include <KStandardGuiItem>
@@ -87,17 +86,6 @@ namespace Konversation
             connect(getTextView(), SIGNAL(gotFocus()), m_dccChatInput, SLOT(setFocus()));
             connect(getTextView(), SIGNAL(autoText(const QString&)), this, SLOT(textPasted(const QString&)));
 
-            KMenu *popup = textView->getPopup();
-            if (popup)
-            {
-                QAction *action = Application::instance()->getMainWindow()->actionCollection()->action("open_logfile");
-
-                if (action)
-                {
-                    popup->addSeparator();
-                    action->setMenu(popup);
-                }
-            }
             updateAppearance();
         }
 
diff --git a/src/irc/channel.cpp b/src/irc/channel.cpp
index 12cdbe9..520a2e2 100644
--- a/src/irc/channel.cpp
+++ b/src/irc/channel.cpp
@@ -24,14 +24,10 @@
 #include "ircinput.h"
 #include "ircviewbox.h"
 #include "ircview.h"
-#include <kabc/addressbook.h>
-#include <kabc/stdaddressbook.h>
 #include "common.h"
 #include "topiclabel.h"
 #include "notificationhandler.h"
 #include "viewcontainer.h"
-#include "linkaddressbook/linkaddressbookui.h"
-#include "linkaddressbook/addressbook.h"
 
 #include <QEvent>
 #include <QSizePolicy>
@@ -95,7 +91,6 @@ Channel::Channel(QWidget* parent, QString _name) : ChatWindow(parent)
     ops = 0;
     completionPosition = 0;
     nickChangeDialog = 0;
-    channelCommand = false;
     m_nicknameListViewTextChanged = 0;
 
     m_joined = false;
@@ -146,6 +141,7 @@ Channel::Channel(QWidget* parent, QString _name) : ChatWindow(parent)
     connect(m_topicButton, SIGNAL(clicked()), this, SLOT(showOptionsDialog()));
 
     topicLine = new Konversation::TopicLabel(topicWidget);
+    topicLine->setContextMenuOptions(IrcContextMenus::ShowChannelActions | IrcContextMenus::ShowLogAction, true);
     topicLine->setChannelName(getName());
     topicLine->setWordWrap(true);
     topicLine->setWhatsThis(i18n("<qt><p>Every channel on IRC has a topic associated with it.  This is simply a message that everybody can see.</p><p>If you are an operator, or the channel mode <em>'T'</em> has not been set, then you can change the topic by clicking the Edit Channel Properties button to the left of the topic.  You can also view the history of topics there.</p></qt>"));
@@ -208,7 +204,7 @@ Channel::Channel(QWidget* parent, QString _name) : ChatWindow(parent)
     IRCViewBox* ircViewBox = new IRCViewBox(m_horizSplitter);
     m_horizSplitter->setStretchFactor(m_horizSplitter->indexOf(ircViewBox), 1);
     setTextView(ircViewBox->ircView());
-    connect(textView,SIGNAL(popupCommand(int)),this,SLOT(popupChannelCommand(int)));
+    ircViewBox->ircView()->setContextMenuOptions(IrcContextMenus::ShowChannelActions, true);
 
     // The box that holds the Nick List and the quick action buttons
     nickListButtons = new KVBox(m_horizSplitter);
@@ -290,7 +286,6 @@ Channel::Channel(QWidget* parent, QString _name) : ChatWindow(parent)
     connect(getTextView(),SIGNAL (sendFile()),this,SLOT (sendFileMenu()) );
     connect(getTextView(),SIGNAL (autoText(const QString&)),this,SLOT (sendChannelText(const QString&)) );
 
-    connect(nicknameListView,SIGNAL (popupCommand(int)),this,SLOT (popupCommand(int)) );
     connect(nicknameListView,SIGNAL (itemDoubleClicked(QTreeWidgetItem*,int)),this,SLOT (doubleClickCommand(QTreeWidgetItem*,int)) );
     connect(nicknameCombobox,SIGNAL (activated(int)),this,SLOT(nicknameComboboxChanged()));
 
@@ -480,293 +475,6 @@ void Channel::textPasted(const QString& text)
     }
 }
 
-// Will be connected to IRCView::popupCommand(int)
-void Channel::popupChannelCommand(int id)
-{
-    channelCommand = true; // Context menu executed from ircview
-    popupCommand(id);
-    textView->clearContextNick();
-    channelCommand = false;
-}
-
-// Will be connected to NickListView::popupCommand(int)
-void Channel::popupCommand(int id)
-{
-    QString pattern;
-    QString cc = Preferences::self()->commandChar();
-    QString args;
-    QString question;
-    bool raw=false;
-    QString mode;
-    QStringList nickList = getSelectedNickList();
-
-    switch(id)
-    {
-        case Konversation::AddressbookEdit:
-        {
-            ChannelNickList nickList=getSelectedChannelNicks();
-            for(ChannelNickList::ConstIterator it=nickList.constBegin();it!=nickList.constEnd();++it)
-            {
-                KABC::Addressee addressee = (*it)->getNickInfo()->getAddressee();
-                if(addressee.isEmpty()) break;
-
-                Konversation::Addressbook::self()->editAddressee(addressee.uid());
-            }
-            break;
-        }
-        case Konversation::AddressbookNew:
-        case Konversation::AddressbookDelete:
-        {
-            Konversation::Addressbook *addressbook = Konversation::Addressbook::self();
-            ChannelNickList nickList=getSelectedChannelNicks();
-            //Handle all the selected nicks in one go.  Either they all save, or none do.
-            if(addressbook->getAndCheckTicket())
-            {
-                for(ChannelNickList::ConstIterator it=nickList.constBegin();it!=nickList.constEnd();++it)
-                {
-                    if(id == Konversation::AddressbookDelete)
-                    {
-                        KABC::Addressee addr = (*it)->getNickInfo()->getAddressee();
-                        addressbook->unassociateNick(addr, (*it)->getNickname(), m_server->getServerName(), m_server->getDisplayName());
-                    }
-                    else
-                    {
-                        //make new addressbook contact
-                        KABC::Addressee addr;
-                        NickInfoPtr nickInfo = (*it)->getNickInfo();
-                        if(nickInfo->getRealName().isEmpty())
-                            addr.setGivenName(nickInfo->getNickname());
-                        else
-                            addr.setGivenName(nickInfo->getRealName());
-                        addr.setNickName(nickInfo->getNickname());
-                        addressbook->associateNickAndUnassociateFromEveryoneElse(addr, (*it)->getNickname(), m_server->getServerName(), m_server->getDisplayName());
-                    }
-                }
-                addressbook->saveTicket(); // This will refresh the nicks automatically for us. At least, if it doesn't, it's a bug :)
-            }
-            break;
-        }
-        case Konversation::AddressbookChange:
-        {
-            ChannelNickList nickList=getSelectedChannelNicks();
-            for(ChannelNickList::ConstIterator it=nickList.constBegin();it!=nickList.constEnd();++it)
-            {
-                LinkAddressbookUI *linkaddressbookui = new LinkAddressbookUI(this, (*it)->getNickInfo()->getNickname(), m_server->getServerName(),
-                                                                             m_server->getDisplayName(), (*it)->getNickInfo()->getRealName());
-                linkaddressbookui->show();
-            }
-            break;
-        }
-        case Konversation::SendEmail:
-        {
-            Konversation::Addressbook::self()->sendEmail(getSelectedChannelNicks());
-            break;
-        }
-        case Konversation::GiveOp:
-            pattern="MODE %c +%m %l";
-            mode='o';
-            raw=true;
-            break;
-        case Konversation::TakeOp:
-            pattern="MODE %c -%m %l";
-            mode='o';
-            raw=true;
-            break;
-        case Konversation::GiveHalfOp:
-            pattern="MODE %c +%m %l";
-            mode='h';
-            raw=true;
-            break;
-        case Konversation::TakeHalfOp:
-            pattern="MODE %c -%m %l";
-            mode='h';
-            raw=true;
-            break;
-        case Konversation::GiveVoice:
-            pattern="MODE %c +%m %l";
-            mode='v';
-            raw=true;
-            break;
-        case Konversation::TakeVoice:
-            pattern="MODE %c -%m %l";
-            mode='v';
-            raw=true;
-            break;
-        case Konversation::Version:
-            pattern=cc+"CTCP %u VERSION";
-            break;
-        case Konversation::Whois:
-            pattern="WHOIS %u %u";
-            raw=true;
-            break;
-        case Konversation::Topic:
-            m_server->requestTopic(getTextView()->currentChannel());
-            break;
-        case Konversation::Names:
-            m_server->queue("NAMES " + getTextView()->currentChannel(), Server::LowPriority);
-            break;
-        case Konversation::Join:
-            m_server->queue("JOIN " + getTextView()->currentChannel());
-            break;
-        case Konversation::Ping:
-        {
-            unsigned int time_t = QDateTime::currentDateTime().toTime_t();
-            pattern=QString(cc+"CTCP %u PING %1").arg(time_t);
-        }
-        break;
-        case Konversation::Kick:
-            pattern=cc+"KICK %u";
-            break;
-        case Konversation::KickBan:
-            pattern=cc+"BAN %u\n"+
-                cc+"KICK %u";
-            break;
-        case Konversation::BanNick:
-            pattern=cc+"BAN %u";
-            break;
-        case Konversation::BanHost:
-            pattern=cc+"BAN -HOST %u";
-            break;
-        case Konversation::BanDomain:
-            pattern=cc+"BAN -DOMAIN %u";
-            break;
-        case Konversation::BanUserHost:
-            pattern=cc+"BAN -USERHOST %u";
-            break;
-        case Konversation::BanUserDomain:
-            pattern=cc+"BAN -USERDOMAIN %u";
-            break;
-        case Konversation::KickBanHost:
-            pattern=cc+"KICKBAN -HOST %u";
-            break;
-        case Konversation::KickBanDomain:
-            pattern=cc+"KICKBAN -DOMAIN %u";
-            break;
-        case Konversation::KickBanUserHost:
-            pattern=cc+"KICKBAN -USERHOST %u";
-            break;
-        case Konversation::KickBanUserDomain:
-            pattern=cc+"KICKBAN -USERDOMAIN %u";
-            break;
-        case Konversation::OpenQuery:
-            pattern=cc+"QUERY %u";
-            break;
-        case Konversation::StartDccChat:
-            pattern=cc+"DCC CHAT %u";
-            break;
-        case Konversation::StartDccWhiteboard:
-            pattern=cc+"DCC WHITEBOARD %u";
-            break;
-        case Konversation::DccSend:
-            pattern=cc+"DCC SEND %u";
-            break;
-        case Konversation::IgnoreNick:
-            if (nickList.size() == 1)
-                question=i18n("Do you want to ignore %1?", nickList.first());
-            else
-                question = i18n("Do you want to ignore the selected users?");
-            if (KMessageBox::warningContinueCancel(
-                this,
-                question,
-                i18n("Ignore"),
-                KGuiItem(i18n("Ignore")),
-                KStandardGuiItem::cancel(),
-                "IgnoreNick"
-                ) ==
-                KMessageBox::Continue)
-                pattern = cc+"IGNORE -ALL %l";
-            break;
-        case Konversation::UnignoreNick:
-        {
-            QStringList selectedIgnoredNicks;
-
-            for (QStringList::Iterator it=nickList.begin(); it!=nickList.end(); ++it)
-            {
-                if (Preferences::isIgnored((*it)))
-                    selectedIgnoredNicks.append((*it));
-            }
-
-            if (selectedIgnoredNicks.count() == 1)
-                question=i18n("Do you want to stop ignoring %1?", selectedIgnoredNicks.first());
-            else
-                question = i18n("Do you want to stop ignoring the selected users?");
-            if (KMessageBox::warningContinueCancel(
-                this,
-                question,
-                i18n("Unignore"),
-                KGuiItem(i18n("Unignore")),
-                KStandardGuiItem::cancel(),
-                "UnignoreNick") ==
-                KMessageBox::Continue)
-            {
-                sendChannelText(cc+"UNIGNORE "+selectedIgnoredNicks.join(" "));
-            }
-            break;
-        }
-        case Konversation::AddNotify:
-        {
-            if (m_server->getServerGroup())
-            {
-                for (QStringList::Iterator it=nickList.begin(); it!=nickList.end(); ++it)
-                {
-                    if (!Preferences::isNotify(m_server->getServerGroup()->id(), (*it)))
-                        Preferences::addNotify(m_server->getServerGroup()->id(), (*it));
-                }
-            }
-            break;
-        }
-    } // switch
-
-    if (!pattern.isEmpty())
-    {
-        pattern.replace("%c",getName());
-
-        QString command;
-
-        if (pattern.contains("%l"))
-        {
-            QStringList list, partialList;
-            int modesCount = m_server->getModesCount();
-
-            for (QStringList::Iterator it=nickList.begin(); it!=nickList.end(); ++it)
-                list.append((*it));
-
-            for (int index = 0; index<list.count(); index+=modesCount)
-            {
-                command = pattern;
-                partialList = list.mid(index, modesCount);
-                command = command.replace("%l", partialList.join(" "));
-                const QString repeatedMode = mode.repeated(partialList.count());
-
-                command = command.replace("%m", repeatedMode);
-                if (raw)
-                    m_server->queue(command);
-                else
-                    sendChannelText(command);
-            }
-
-        }
-        else
-        {
-            QStringList patternList = pattern.split('\n', QString::SkipEmptyParts);
-
-            for (QStringList::Iterator it=nickList.begin(); it!=nickList.end(); ++it)
-            {
-                for (int index = 0; index<patternList.count(); index++)
-                {
-                    command = patternList[index];
-                    command.replace("%u", (*it));
-
-                    if (raw)
-                        m_server->queue(command);
-                    else
-                        sendChannelText(command);
-                }
-            }
-        }
-    }
-}
-
 // Will be connected to NickListView::doubleClicked()
 void Channel::doubleClickCommand(QTreeWidgetItem *item, int column)
 {
@@ -1152,41 +860,15 @@ void Channel::setNickname(const QString& newNickname)
 
 QStringList Channel::getSelectedNickList()
 {
-    QStringList result;
-
-    if (channelCommand)
-        result.append(textView->getContextNick());
-    else
-    {
-        foreach (Nick* nick, nicknameList)
-        {
-            if(nick->isSelected()) result.append(nick->getChannelNick()->getNickname());
-        }
-    }
-
-    return result;
-}
-
-ChannelNickList Channel::getSelectedChannelNicks()
-{
-    ChannelNickList result;
+    QStringList selectedNicks;
 
     foreach (Nick* nick, nicknameList)
     {
-        if(channelCommand)
-        {
-            if(nick->getChannelNick()->getNickname() == textView->getContextNick())
-            {
-                result.append(nick->getChannelNick());
-                return result;
-            }
-        }
-        else if(nick->isSelected())
-            result.append(nick->getChannelNick());
+        if (nick->isSelected())
+            selectedNicks << nick->getChannelNick()->getNickname();
     }
 
-    return result;
-
+    return selectedNicks;;
 }
 
 void Channel::channelLimitChanged()
@@ -2683,14 +2365,10 @@ void Channel::serverOnline(bool online)
 void Channel::setActive(bool active)
 {
     if (active)
-    {
-        getTextView()->setNickAndChannelContextMenusEnabled(true);
         nicknameCombobox->setEnabled(true);
-    }
     else
     {
         purgeNicks();
-        getTextView()->setNickAndChannelContextMenusEnabled(false);
         nicknameCombobox->setEnabled(false);
         topicLine->clear();
         clearModeList();
diff --git a/src/irc/channel.h b/src/irc/channel.h
index 3af9d01..98c28d2 100644
--- a/src/irc/channel.h
+++ b/src/irc/channel.h
@@ -238,8 +238,6 @@ class Channel : public ChatWindow
 
         bool autoJoin();
 
-        ChannelNickList getSelectedChannelNicks();
-        ///TODO: this looks like a half-arsed overload.
         QStringList getSelectedNickList();
 
         NickListView* getNickListView() const { return nicknameListView; }
@@ -275,8 +273,6 @@ class Channel : public ChatWindow
         void modeButtonClicked(int id,bool on);
         void channelLimitChanged();
 
-        void popupChannelCommand(int id);         ///< Connected to IRCView::popupCommand()
-        void popupCommand(int id);                ///< Connected to NickListView::popupCommand()
         void doubleClickCommand(QTreeWidgetItem *item,int column);  ///< Connected to NickListView::itemDoubleClicked()
         // Dialogs
         void changeNickname(const QString& newNickname);
@@ -301,8 +297,6 @@ class Channel : public ChatWindow
         /// Called from ChatWindow adjustFocus
         virtual void childAdjustFocus();
 
-        bool channelCommand;///< True if nick context menu is executed from IRCView
-
         // to take care of redraw problem if hidden
         bool quickButtonsChanged;
         bool quickButtonsState;
diff --git a/src/irc/nicklistview.cpp b/src/irc/nicklistview.cpp
index 173d2e9..1988b60 100644
--- a/src/irc/nicklistview.cpp
+++ b/src/irc/nicklistview.cpp
@@ -16,15 +16,13 @@
 #include "nick.h"
 #include "application.h"
 #include "images.h"
-#include "linkaddressbook/addressbook.h"
+#include "irccontextmenus.h"
 
-#include <QContextMenuEvent>
 #include <QHeaderView>
 #include <QDropEvent>
 #include <QToolTip>
 #include <QStyledItemDelegate>
 
-#include <KAuthorized>
 
 class NickItemDelegate : public QStyledItemDelegate
 {
@@ -48,51 +46,10 @@ QSize NickItemDelegate::sizeHint(const QStyleOptionViewItem& option, const QMode
 int NickListView::s_minimumRowHeight = 0;
 
 
-NickListView::NickListView(QWidget* parent, Channel *chan) :
-QTreeWidget(parent),
-    m_whoisAction(0),
-    m_versionAction(0),
-    m_pingAction(0),
-    m_giveOpAction(0),
-    m_takeOpAction(0),
-    m_giveHalfOpAction(0),
-    m_takeHalfOpAction(0),
-    m_giveVoiceAction(0),
-    m_takeVoiceAction(0),
-    m_ignoreAction(0),
-    m_unIgnoreAction(0),
-    m_kickAction(0),
-    m_kickBanAction(0),
-    m_banNickAction(0),
-    m_banHostAction(0),
-    m_banDomainAction(0),
-    m_banUserHostAction(0),
-    m_banUserDomainAction(0),
-    m_kickBanHostAction(0),
-    m_kickBanDomainAction(0),
-    m_kickBanUserHostAction(0),
-    m_kickBanUserDomainAction(0),
-    m_addNotifyAction(0),
-    m_sendMailAction(0),
-    m_AddressbookNewAction(0),
-    m_AddressbookChangeAction(0),
-    m_AddressbookEditAction(0),
-    m_AddressbookDeleteAction(0),
-    m_openQueryAction(0),
-    m_startDccChatAction(0),
-    m_startDccWBoardAction(0),
-    m_dccSendAction(0)
+NickListView::NickListView(QWidget* parent, Channel *chan) : QTreeWidget(parent)
 {
     setWhatsThis();
     channel=chan;
-    popup=new KMenu(this);
-    popup->setObjectName("nicklist_context_menu");
-    modes=new KMenu(this);
-    modes->setObjectName("nicklist_modes_context_submenu");
-    kickban=new KMenu(this);
-    kickban->setObjectName("nicklist_kick_ban_context_submenu");
-    addressbook= new KMenu(this);
-    addressbook->setObjectName("nicklist_addressbook_context_submenu");
 
     // Enable Drag & Drop
     viewport()->setAcceptDrops(true);
@@ -107,89 +64,6 @@ QTreeWidget(parent),
     delete prevDelegate;
     updateMinimumRowHeight();
 
-    m_actionGroup = new QActionGroup(this);
-    connect(m_actionGroup, SIGNAL(triggered(QAction*)), this, SLOT(slotActionTriggered(QAction*)));
-
-    if (popup)
-    {
-        m_whoisAction = createAction(popup,i18n("&Whois"),Konversation::Whois);
-        m_versionAction = createAction(popup,i18n("&Version"),Konversation::Version);
-        m_pingAction = createAction(popup,i18n("&Ping"),Konversation::Ping);
-
-        popup->addSeparator();
-
-        if (modes)
-        {
-            m_giveOpAction = createAction(modes,i18n("Give Op"),Konversation::GiveOp);
-            m_giveOpAction->setIcon(KIcon("irc-operator"));
-            m_takeOpAction = createAction(modes,i18n("Take Op"),Konversation::TakeOp);
-            m_takeOpAction->setIcon(KIcon("irc-remove-operator"));
-            m_giveHalfOpAction = createAction(modes,i18n("Give HalfOp"),Konversation::GiveHalfOp);
-            m_takeHalfOpAction = createAction(modes,i18n("Take HalfOp"),Konversation::TakeHalfOp);
-            m_giveVoiceAction = createAction(modes,i18n("Give Voice"),Konversation::GiveVoice);
-            m_giveVoiceAction->setIcon(KIcon("irc-voice"));
-            m_takeVoiceAction = createAction(modes,i18n("Take Voice"),Konversation::TakeVoice);
-            m_takeVoiceAction->setIcon(KIcon("irc-unvoice"));
-            KAction* modeAction = new KAction(i18n("Modes"), popup);
-            popup->addAction(modeAction);
-            modeAction->setMenu(modes);
-        }
-
-        if (kickban)
-        {
-            m_kickAction = createAction(kickban,i18n("Kick"),Konversation::Kick);
-            m_kickBanAction = createAction(kickban,i18n("Kickban"),Konversation::KickBan);
-            m_banNickAction = createAction(kickban,i18n("Ban Nickname"),Konversation::BanNick);
-            kickban->addSeparator();
-            m_banHostAction = createAction(kickban,i18n("Ban *!*@*.host"),Konversation::BanHost);
-            m_banDomainAction = createAction(kickban,i18n("Ban *!*@domain"),Konversation::BanDomain);
-            m_banUserHostAction = createAction(kickban,i18n("Ban *!user@*.host"),Konversation::BanUserHost);
-            m_banUserDomainAction = createAction(kickban,i18n("Ban *!user@domain"),Konversation::BanUserDomain);
-            kickban->addSeparator();
-            m_kickBanHostAction = createAction(kickban,i18n("Kickban *!*@*.host"),Konversation::KickBanHost);
-            m_kickBanDomainAction = createAction(kickban,i18n("Kickban *!*@domain"),Konversation::KickBanDomain);
-            m_kickBanUserHostAction = createAction(kickban,i18n("Kickban *!user@*.host"),Konversation::KickBanUserHost);
-            m_kickBanUserDomainAction = createAction(kickban,i18n("Kickban *!user@domain"),Konversation::KickBanUserDomain);
-            KAction* kickBanSubAction = new KAction(i18n("Kick / Ban"), popup);
-            popup->addAction(kickBanSubAction);
-            kickBanSubAction->setMenu(kickban);
-        }
-
-        m_ignoreAction = createAction(popup,i18n("Ignore"),Konversation::IgnoreNick);
-        m_unIgnoreAction = createAction(popup,i18n("Unignore"),Konversation::UnignoreNick);
-
-        popup->addSeparator();
-
-        m_openQueryAction = createAction(popup,i18n("Open &Query"),Konversation::OpenQuery);
-        m_openQueryAction->setWhatsThis(i18n("<qt><p>Start a private chat between you and this person.</p><p><em>Technical note:</em><br />The conversation between you and this person will be sent via the server.  This means that the conversation will be affected by server lag, server stability, and will be terminated when you disconnect from the server.</p></qt>"));
-        m_startDccChatAction = createAction(popup,i18n("Open DCC &Chat"),Konversation::StartDccChat);
-        m_startDccChatAction->setWhatsThis(i18n("<qt><p>Start a private <em>D</em>irect <em>C</em>lient <em>C</em>onnection chat between you and this person.</p><p><em>Technical note:</em><br />The conversation between you and this person will be sent directly.  This means it is independent from the server - so if the server connection fails, or use disconnect, your DCC Chat will be unaffected.  It also means that no irc server admin can view or spy on this chat.</p></qt>"));
-        m_startDccWBoardAction = createAction(popup,i18n("Open DCC &Whiteboard"), Konversation::StartDccWhiteboard);
-        m_startDccWBoardAction->setWhatsThis(i18n("<qt><p>Start a private <em>D</em>irect <em>C</em>lient <em>C</em>onnection whiteboard between you and this person.</p><p><em>Technical note:</em><br />The conversation between you and this person will be sent directly. This means it is independent from the server - so if the server connection fails, or use disconnect, your DCC Whiteboard will be unaffected.  It also means that no irc server admin can view or spy on this chat.</p></qt>"));
-        if (KAuthorized::authorizeKAction("allow_downloading"))
-        {
-            m_dccSendAction = createAction(popup,i18n("Send &File..."),Konversation::DccSend);
-            m_dccSendAction->setIcon(KIcon("arrow-right-double"));
-            m_dccSendAction->setWhatsThis(i18n("<qt>Send a file to this person.  If you are having problem sending files, or they are sending slowly, see the Konversation Handbook and DCC preferences page.</qt>"));
-        }
-        m_sendMailAction = createAction(popup,i18n("&Send Email..."),Konversation::SendEmail);
-        m_sendMailAction->setIcon(KIcon("mail-send"));
-
-        popup->addSeparator();
-
-        if (addressbook) {
-            KAction* addressbookSubAction = new KAction(i18n("Address Book Associations"), popup);
-            popup->addAction(addressbookSubAction);
-            addressbookSubAction->setMenu(addressbook);
-        }
-
-        m_addNotifyAction = createAction(popup,i18n("Add to Watched Nicks"),Konversation::AddNotify);
-    }
-    else
-    {
-        kWarning() << "Could not create popup!" ;
-    }
-
     // General layout
     setRootIsDecorated(false); // single level view
     setColumnCount(2);
@@ -370,116 +244,15 @@ int NickListView::findLowerBound(const QTreeWidgetItem& item) const
     return start;
 }
 
-void NickListView::contextMenuEvent(QContextMenuEvent* ce)
+void NickListView::contextMenuEvent(QContextMenuEvent* ev)
 {
-    ce->accept();
-
     if (selectedItems().count())
     {
-        insertAssociationSubMenu();
-        updateActions();
-        popup->popup(ce->globalPos());
+        IrcContextMenus::nickMenu(ev->globalPos(), IrcContextMenus::ShowChannelActions,
+            channel->getServer(), channel->getSelectedNickList(), channel->getName());
     }
 }
 
-void NickListView::updateActions()
-{
-    int ignoreCounter = 0;
-    int unignoreCounter = 0;
-    int notifyCounter = 0;
-
-    int serverGroupId = -1;
-
-    if (channel->getServer()->getServerGroup())
-        serverGroupId = channel->getServer()->getServerGroup()->id();
-
-    ChannelNickList nickList=channel->getSelectedChannelNicks();
-    ChannelNickList::ConstIterator it;
-
-    for (it = nickList.constBegin(); it != nickList.constEnd(); ++it)
-    {
-        if (Preferences::isIgnored((*it)->getNickname()))
-            ++unignoreCounter;
-        else
-            ++ignoreCounter;
-
-        if (serverGroupId != -1 && Preferences::isNotify(serverGroupId, (*it)->getNickname()))
-            ++notifyCounter;
-    }
-
-    if (ignoreCounter)
-        m_ignoreAction->setVisible(true);
-    else
-        m_ignoreAction->setVisible(false);
-
-    if (unignoreCounter)
-        m_unIgnoreAction->setVisible(true);
-    else
-        m_unIgnoreAction->setVisible(false);
-
-    if (notifyCounter || !Preferences::hasNotifyList(serverGroupId))
-        m_addNotifyAction->setEnabled(false);
-    else
-        m_addNotifyAction->setEnabled(true);
-}
-
-void NickListView::insertAssociationSubMenu()
-{
-
-    bool existingAssociation = false;
-    bool noAssociation = false;
-    bool emailAddress = false;
-
-    addressbook->clear();
-
-    ChannelNickList nickList=channel->getSelectedChannelNicks();
-    for(ChannelNickList::ConstIterator it=nickList.constBegin();it!=nickList.constEnd();++it)
-    {
-        KABC::Addressee addr = (*it)->getNickInfo()->getAddressee();
-        if(addr.isEmpty())
-        {
-            noAssociation=true;
-            if(existingAssociation && emailAddress) break;
-        }
-        else
-        {
-            if(!emailAddress && !addr.preferredEmail().isEmpty())
-                emailAddress = true;
-            existingAssociation=true;
-            if(noAssociation && emailAddress) break;
-        }
-    }
-
-    if(!noAssociation && existingAssociation)
-    {
-        m_AddressbookEditAction = createAction(addressbook,i18n("Edit Contact..."),Konversation::AddressbookEdit);
-        m_AddressbookEditAction->setIcon(KIcon("document-edit"));
-        addressbook->addSeparator();
-    }
-
-    if(noAssociation && existingAssociation)
-        m_AddressbookChangeAction = createAction(addressbook,i18n("Choose/Change Associations..."),Konversation::AddressbookChange);
-    else if(noAssociation)
-        m_AddressbookChangeAction = createAction(addressbook,i18n("Choose Contact..."),Konversation::AddressbookChange);
-    else
-        m_AddressbookChangeAction = createAction(addressbook,i18n("Change Association..."),Konversation::AddressbookChange);
-
-    if(noAssociation && !existingAssociation)
-        m_AddressbookNewAction = createAction(addressbook,i18n("Create New Contact..."),Konversation::AddressbookNew);
-
-    if(existingAssociation)
-    {
-        m_AddressbookDeleteAction = createAction(addressbook,i18n("Delete Association"),Konversation::AddressbookDelete);
-        m_AddressbookDeleteAction->setIcon(KIcon("edit-delete"));
-    }
-
-    if(!emailAddress)
-        m_sendMailAction->setEnabled(false);
-    else
-        m_sendMailAction->setEnabled(true);
-
-}
-
 QStringList NickListView::mimeTypes () const
 {
     return KUrl::List::mimeDataTypes();
@@ -542,20 +315,4 @@ bool NickListView::dropMimeData(QTreeWidgetItem *parent, int index, const QMimeD
     return false;
 }
 
-Q_DECLARE_METATYPE(Konversation::PopupIDs)
-
-KAction* NickListView::createAction(QMenu* menu, const QString& text, Konversation::PopupIDs id)
-{
-    KAction* action = new KAction(text, menu);
-    menu->addAction(action);
-    action->setData(QVariant::fromValue(id));
-    m_actionGroup->addAction(action);
-    return action;
-}
-
-void NickListView::slotActionTriggered(QAction* action)
-{
-    popupCommand(action->data().value<Konversation::PopupIDs>());
-}
-
 #include "nicklistview.moc"
diff --git a/src/irc/nicklistview.h b/src/irc/nicklistview.h
index 55fa693..87f5cc7 100644
--- a/src/irc/nicklistview.h
+++ b/src/irc/nicklistview.h
@@ -18,18 +18,11 @@
 #include "channel.h"
 #include "images.h"
 #include "common.h"
-#include "application.h" // for PopupIDs...
-
-#include <KMenu>
 
 #include <QTreeWidget>
 
-class QActionGroup;
-class QMenu;
-class QContextMenuEvent;
-class QTimer;
 
-class KAction;
+class QTimer;
 
 
 class NickListView : public QTreeWidget
@@ -75,17 +68,10 @@ class NickListView : public QTreeWidget
          */
         void resort();
 
-        signals:
-        /* Will be connected to Channel::popupCommand(int) */
-        void popupCommand(int id);
-
-        protected slots:
-        void slotActionTriggered(QAction* action);
-
     protected:
         //! Reimplemented for dynamic tooltips
-        virtual bool event(QEvent *ev);
-        virtual void contextMenuEvent(QContextMenuEvent* ce);
+        virtual bool event(QEvent* ev);
+        virtual void contextMenuEvent(QContextMenuEvent* ev);
 
         // Drag & Drop support
         virtual QStringList mimeTypes () const;
@@ -94,54 +80,11 @@ class NickListView : public QTreeWidget
         virtual void dragEnterEvent(QDragEnterEvent *event);
         virtual void dragMoveEvent(QDragMoveEvent *event);
 
-        void insertAssociationSubMenu();
-        void updateActions();
-        KMenu* popup;
-        KMenu* modes;
-        KMenu* kickban;
-        KMenu* addressbook;
         Channel *channel;
         QTimer *m_resortTimer;
 
     private:
         static int s_minimumRowHeight;
         static void updateMinimumRowHeight();
-
-        // TODO use a more specific enum for just our actions?
-        KAction* createAction(QMenu* menu, const QString& text, Konversation::PopupIDs);
-
-        QActionGroup* m_actionGroup;
-        KAction* m_whoisAction;
-        KAction* m_versionAction;
-        KAction* m_pingAction;
-        KAction* m_giveOpAction;
-        KAction* m_takeOpAction;
-        KAction* m_giveHalfOpAction;
-        KAction* m_takeHalfOpAction;
-        KAction* m_giveVoiceAction;
-        KAction* m_takeVoiceAction;
-        KAction* m_ignoreAction;
-        KAction* m_unIgnoreAction;
-        KAction* m_kickAction;
-        KAction* m_kickBanAction;
-        KAction* m_banNickAction;
-        KAction* m_banHostAction;
-        KAction* m_banDomainAction;
-        KAction* m_banUserHostAction;
-        KAction* m_banUserDomainAction;
-        KAction* m_kickBanHostAction;
-        KAction* m_kickBanDomainAction;
-        KAction* m_kickBanUserHostAction;
-        KAction* m_kickBanUserDomainAction;
-        KAction* m_addNotifyAction;
-        KAction* m_sendMailAction;
-        KAction* m_AddressbookNewAction;
-        KAction* m_AddressbookChangeAction;
-        KAction* m_AddressbookEditAction;
-        KAction* m_AddressbookDeleteAction;
-        KAction* m_openQueryAction;
-        KAction* m_startDccChatAction;
-        KAction* m_startDccWBoardAction;
-        KAction* m_dccSendAction;
 };
 #endif
diff --git a/src/irc/query.cpp b/src/irc/query.cpp
index ec700ee..e36591d 100644
--- a/src/irc/query.cpp
+++ b/src/irc/query.cpp
@@ -21,16 +21,12 @@
 #include "ircview.h"
 #include "ircviewbox.h"
 #include "common.h"
-#include "topiclabel.h"
 
 #include <QSplitter>
 
+#include <KHBox>
 #include <KMessageBox>
 #include <KSqueezedTextLabel>
-#include <KStandardGuiItem>
-#include <KMenu>
-#include <KHBox>
-#include <KAuthorized>
 
 using namespace Konversation;
 
@@ -68,34 +64,12 @@ Query::Query(QWidget* parent, QString _name) : ChatWindow(parent)
     addresseelogoimage->setWhatsThis(whatsthis);
     queryHostmask->setWhatsThis(whatsthis);
 
-    IRCViewBox* ircBox = new IRCViewBox(m_headerSplitter);
-    m_headerSplitter->setStretchFactor(m_headerSplitter->indexOf(ircBox), 1);
-    setTextView(ircBox->ircView());               // Server will be set later in setServer();
+    IRCViewBox* ircViewBox = new IRCViewBox(m_headerSplitter);
+    m_headerSplitter->setStretchFactor(m_headerSplitter->indexOf(ircViewBox), 1);
+    setTextView(ircViewBox->ircView());               // Server will be set later in setServer();
+    ircViewBox->ircView()->setContextMenuOptions(IrcContextMenus::ShowNickActions, true);
     textView->setAcceptDrops(true);
     connect(textView,SIGNAL(urlsDropped(const KUrl::List)),this,SLOT(urlsDropped(const KUrl::List)));
-    connect(textView,SIGNAL(popupCommand(int)),this,SLOT(popup(int)));
-
-    // link "Whois", "Ignore" ... menu items into ircview popup
-    m_actionGroup = new QActionGroup(this);
-    connect(m_actionGroup, SIGNAL(triggered(QAction*)), this, SLOT(slotActionTriggered(QAction*)));
-
-    KMenu* popup=textView->getPopup();
-    popup->addSeparator();
-    m_whoisAction = createAction(popup,i18n("&Whois"),Konversation::Whois);
-    m_versionAction = createAction(popup,i18n("&Version"),Konversation::Version);
-    m_pingAction = createAction(popup,i18n("&Ping"),Konversation::Ping);
-    popup->addSeparator();
-
-    m_ignoreNickAction = createAction(popup,i18n("Ignore"), Konversation::IgnoreNick);
-    m_unignoreNickAction = createAction(popup,i18n("Unignore"), Konversation::UnignoreNick);
-    m_ignoreNickAction->setVisible(false);
-    m_unignoreNickAction->setVisible(false);
-
-    m_dccAction = createAction(popup,i18n("Send &File..."),Konversation::DccSend);
-    m_dccAction->setIcon(KIcon("arrow-right-double"));
-    m_dccAction->setEnabled(KAuthorized::authorizeKAction("allow_downloading"));
-
-    m_addNotifyAction = createAction(popup,i18n("Add to Watched Nicks"), Konversation::AddNotify);
 
     // This box holds the input line
     KHBox* inputBox=new KHBox(this);
@@ -120,7 +94,6 @@ Query::Query(QWidget* parent, QString _name) : ChatWindow(parent)
     connect(getTextView(),SIGNAL (gotFocus()),queryInput,SLOT (setFocus()) );
 
     connect(textView,SIGNAL (sendFile()),this,SLOT (sendFileMenu()) );
-    connect(textView,SIGNAL (extendedPopup(int)),this,SLOT (popup(int)) );
     connect(textView,SIGNAL (autoText(const QString&)),this,SLOT (sendQueryText(const QString&)) );
 
     updateAppearance();
@@ -348,99 +321,6 @@ void Query::showEvent(QShowEvent*)
     }
 }
 
-void Query::popup(int id)
-{
-    QString name = getName();
-
-    switch (id)
-    {
-        case Konversation::Whois:
-            sendQueryText(Preferences::self()->commandChar()+"WHOIS "+name+' '+name);
-            break;
-
-        case Konversation::IgnoreNick:
-        {
-            if (KMessageBox::warningContinueCancel(
-                this,
-                i18n("Do you want to ignore %1?",name),
-                i18n("Ignore"),
-                KGuiItem(i18n("Ignore")),
-                KStandardGuiItem::cancel(),
-                "IgnoreNick")
-                == KMessageBox::Continue)
-            {
-                sendQueryText(Preferences::self()->commandChar()+"IGNORE -ALL "+name);
-
-                int rc = KMessageBox::questionYesNo(this,
-                i18n("Do you want to close this query after ignoring this nickname?"),
-                i18n("Close This Query"),
-                KGuiItem(i18n("Close")),
-                KGuiItem(i18n("Keep Open")),
-                "CloseQueryAfterIgnore");
-
-                if (rc == KMessageBox::Yes && m_server)
-                    closeYourself(false);
-            }
-
-            break;
-        }
-        case Konversation::UnignoreNick:
-        {
-            if (KMessageBox::warningContinueCancel(
-                this,
-                i18n("Do you want to stop ignoring %1?", name),
-                i18n("Unignore"),
-                KGuiItem(i18n("Unignore")),
-                KStandardGuiItem::cancel(),
-                "UnignoreNick")
-                ==
-                KMessageBox::Continue)
-            {
-                sendQueryText(Preferences::self()->commandChar()+"UNIGNORE "+name);
-            }
-
-            break;
-        }
-        case Konversation::AddNotify:
-        {
-            if (m_server->getServerGroup())
-            {
-                if (!Preferences::isNotify(m_server->getServerGroup()->id(), name))
-                    Preferences::addNotify(m_server->getServerGroup()->id(),name);
-            }
-            break;
-        }
-        case Konversation::DccSend:
-            sendQueryText(Preferences::self()->commandChar()+"DCC SEND "+name);
-            break;
-
-        case Konversation::Version:
-            sendQueryText(Preferences::self()->commandChar()+"CTCP "+name+" VERSION");
-            break;
-
-        case Konversation::Ping:
-            sendQueryText(Preferences::self()->commandChar()+"CTCP "+name+" PING");
-            break;
-
-        case Konversation::Topic:
-            m_server->requestTopic(getTextView()->currentChannel());
-            break;
-        case Konversation::Names:
-            m_server->queue("NAMES " + getTextView()->currentChannel(), Server::LowPriority);
-            break;
-        case Konversation::Join:
-            m_server->queue("JOIN " + getTextView()->currentChannel());
-            break;
-
-        default:
-            kDebug() << "Popup id " << id << " does not belong to me!";
-            break;
-    }
-
-    // delete context menu nickname
-    textView->clearContextNick();
-}
-
 void Query::sendFileMenu()
 {
     emit sendFile(getName());
@@ -616,24 +496,6 @@ void Query::urlsDropped(const KUrl::List urls)
     m_server->sendURIs(urls, getName());
 }
 
-void Query::serverOnline(bool online)
-{
-    //queryInput->setEnabled(online);
-    getTextView()->setNickAndChannelContextMenusEnabled(online);
-
-    KMenu* popup = getTextView()->getPopup();
-
-    if (popup)
-    {
-        m_whoisAction->setEnabled(online);
-        m_versionAction->setEnabled(online);
-        m_ignoreNickAction->setEnabled(online);
-        m_unignoreNickAction->setEnabled(online);
-        m_addNotifyAction->setEnabled(online);
-        m_dccAction->setEnabled(online && KAuthorized::authorizeKAction("allow_downloading"));
-    }
-}
-
 void Query::emitUpdateInfo()
 {
     QString info;
@@ -665,22 +527,6 @@ void Query::quitNick(const QString& reason)
     }
 }
 
-Q_DECLARE_METATYPE(Konversation::PopupIDs)
-
-KAction* Query::createAction(QMenu* menu, const QString& text, Konversation::PopupIDs id)
-{
-    KAction* action = new KAction(text, menu);
-    menu->addAction(action);
-    action->setData(QVariant::fromValue(id));
-    m_actionGroup->addAction(action);
-    return action;
-}
-
-void Query::slotActionTriggered(QAction* action)
-{
-    popup(action->data().value<Konversation::PopupIDs>());
-}
-
 #ifdef HAVE_QCA2
 Konversation::Cipher* Query::getCipher()
 {
diff --git a/src/irc/query.h b/src/irc/query.h
index 310ca37..d6bd52c 100644
--- a/src/irc/query.h
+++ b/src/irc/query.h
@@ -15,7 +15,6 @@
 
 #include "chatwindow.h"
 #include "nickinfo.h"
-#include "application.h" // for PopupIDs...
 
 #include <config-konversation.h>
 
@@ -30,9 +29,6 @@
 
 class IRCInput;
 
-class QActionGroup;
-class QMenu;
-class KAction;
 class QLabel;
 class QSplitter;
 
@@ -97,11 +93,8 @@ class Query : public ChatWindow
         void urlsDropped(const KUrl::List urls);
         // connected to IRCInput::textPasted() - used to handle large/multiline pastes
         void textPasted(const QString& text);
-        void popup(int id);
         void nickInfoChanged();
         void updateNickInfo(Server* server, NickInfoPtr nickInfo);
-        virtual void serverOnline(bool online);
-        void slotActionTriggered(QAction* action);
 
     protected:
         void setName(const QString& newName);
@@ -110,25 +103,12 @@ class Query : public ChatWindow
         virtual void childAdjustFocus();
 
     private:
-        // TODO use a more specific enum for just our actions?
-        KAction* createAction(QMenu* menu, const QString& text, Konversation::PopupIDs);
-
-        QActionGroup* m_actionGroup;
         bool awayChanged;
         bool awayState;
 
         QString queryName;
         QString buffer;
 
-        KAction* m_whoisAction;
-        KAction* m_versionAction;
-        KAction* m_pingAction;
-        KAction* m_ignoreNickAction;
-        KAction* m_unignoreNickAction;
-        KAction* m_dccAction;
-        KAction* m_watchAction;
-        KAction* m_addNotifyAction;
-
         QSplitter* m_headerSplitter;
         KSqueezedTextLabel* queryHostmask;
         QLabel* addresseeimage;
diff --git a/src/linkaddressbook/addressbook_base.cpp b/src/linkaddressbook/addressbook_base.cpp
index 00a2b8d..ca8a60c 100644
--- a/src/linkaddressbook/addressbook_base.cpp
+++ b/src/linkaddressbook/addressbook_base.cpp
@@ -416,18 +416,22 @@ namespace Konversation
         return true;
 
     }
-    bool AddressbookBase::sendEmail(const ChannelNickList &nickList)
+    bool AddressbookBase::sendEmail(const NickInfoList& nicks)
     {
-        if(nickList.isEmpty()) return false;
+        if(nicks.isEmpty())
+            return false;
+
         QString mailto;
 
         QStringList nicksWithoutAddressee;
         QStringList nicksWithoutEmails;
         QStringList nicksWithEmails;
-        for(ChannelNickList::ConstIterator it=nickList.begin();it!=nickList.end();++it)
+
+        foreach(NickInfoPtr nickInfo, nicks)
         {
-            NickInfoPtr nickInfo = (*it)->getNickInfo();
-            Q_ASSERT(nickInfo);  if(!nickInfo) return false;
+            if (nickInfo.isNull())
+                continue;
+
             KABC::Addressee addr = nickInfo->getAddressee();
             if(addr.isEmpty())
             {
@@ -443,7 +447,6 @@ namespace Konversation
                 if(!mailto.isEmpty())
                     mailto += ", ";
                 mailto += addr.fullEmail();
-
             }
         }
         if(!nicksWithoutAddressee.isEmpty() || !nicksWithoutEmails.isEmpty())
diff --git a/src/linkaddressbook/addressbook_base.h b/src/linkaddressbook/addressbook_base.h
index 157ed1f..4294661 100644
--- a/src/linkaddressbook/addressbook_base.h
+++ b/src/linkaddressbook/addressbook_base.h
@@ -88,7 +88,7 @@ namespace Konversation
              *  email address associated, and gives the user the option to continue
              *  with the contacts that did have email addresses.
              */
-            bool sendEmail(const ChannelNickList &nicklist);
+            bool sendEmail(const NickInfoList& nicks);
             /**
              *  Run kmail (or whatever the users email client is)
              *  to create a single email addressed to the addressee passed in.
diff --git a/src/viewer/chatwindow.cpp b/src/viewer/chatwindow.cpp
index f119b0b..4133004 100644
--- a/src/viewer/chatwindow.cpp
+++ b/src/viewer/chatwindow.cpp
@@ -280,6 +280,9 @@ void ChatWindow::setLogfileName(const QString& name)
     // Only change name of logfile if the window was new.
     if(firstLog)
     {
+        if (getTextView())
+            getTextView()->setContextMenuOptions(IrcContextMenus::ShowLogAction, true);
+
         // status panels get special treatment here, since they have no server at the beginning
         if (getType() == Status || getType() == DccChat)
         {
diff --git a/src/viewer/irccontextmenus.cpp b/src/viewer/irccontextmenus.cpp
new file mode 100644
index 0000000..a26f66d
--- /dev/null
+++ b/src/viewer/irccontextmenus.cpp
@@ -0,0 +1,1044 @@
+/*
+  This program is free software; you can redistribute it and/or
+  modify it under the terms of the GNU General Public License as
+  published by the Free Software Foundation; either version 2 of
+  the License or (at your option) version 3 or any later version
+  accepted by the membership of KDE e.V. (or its successor appro-
+  ved by the membership of KDE e.V.), which shall act as a proxy
+  defined in Section 14 of version 3 of the license.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program. If not, see http://www.gnu.org/licenses/.
+*/
+
+/*
+  Copyright (C) 2010 Eike Hein <hein@kde.org>
+*/
+
+#include "irccontextmenus.h"
+#include "application.h"
+#include "nick.h"
+#include "server.h"
+#include "linkaddressbook/addressbook.h"
+#include "linkaddressbook/linkaddressbookui.h"
+
+#include <QClipboard>
+
+#include <KAction>
+#include <KActionCollection>
+#include <KAuthorized>
+#include <KBookmarkDialog>
+#include <KBookmarkManager>
+#include <KFileDialog>
+#include <KGlobal>
+#include <KIO/CopyJob>
+#include <KLocale>
+#include <KMenu>
+#include <KMessageBox>
+#include <KStandardAction>
+#include <KToggleAction>
+
+// For the Web Shortcuts context menu sub-menu.
+#if KDE_IS_VERSION(4, 5, 0)
+#include <KStringHandler>
+#include <KToolInvocation>
+#include <KUriFilter>
+#endif
+
+
+class IrcContextMenusPrivate
+{
+    public:
+        IrcContextMenusPrivate();
+        ~IrcContextMenusPrivate();
+
+        IrcContextMenus instance;
+};
+
+K_GLOBAL_STATIC(IrcContextMenusPrivate, s_ircContextMenusPrivate);
+
+IrcContextMenusPrivate::IrcContextMenusPrivate()
+{
+    qAddPostRoutine(s_ircContextMenusPrivate.destroy);
+}
+
+IrcContextMenusPrivate::~IrcContextMenusPrivate()
+{
+    qRemovePostRoutine(s_ircContextMenusPrivate.destroy);
+}
+
+
+IrcContextMenus::IrcContextMenus()
+{
+    createSharedBasicNickActions();
+    createSharedNickSettingsActions();
+    createSharedDccActions();
+
+    setupTextMenu();
+    setupChannelMenu();
+    setupNickMenu();
+
+#if !(QT_VERSION >= QT_VERSION_CHECK(4, 7, 0))
+    setupLinkMenu();
+#endif
+}
+
+IrcContextMenus::~IrcContextMenus()
+{
+    delete m_textMenu;
+    delete m_channelMenu;
+    delete m_nickMenu;
+    delete m_addressBookMenu;
+
+#if !(QT_VERSION >= QT_VERSION_CHECK(4, 7, 0))
+    delete m_linkMenu;
+#endif
+}
+
+IrcContextMenus* IrcContextMenus::self()
+{
+    return &s_ircContextMenusPrivate->instance;
+}
+
+void IrcContextMenus::setupTextMenu()
+{
+    m_textMenu = new KMenu();
+
+    m_textMenu->addSeparator();
+
+    m_linkActions << createAction(m_textMenu, LinkCopy, KIcon("edit-copy"), i18n("Copy Link Address"));
+    // Not using KStandardAction is intentional here since the Ctrl+B
+    // shortcut it would show in the menu is already used by our IRC
+    // wide bookmarking feature.
+    m_linkActions << createAction(m_textMenu, LinkBookmark, KIcon("bookmark-new"), i18n("Add to Bookmarks"));
+    m_linkActions << createAction(m_textMenu, LinkSaveAs, KIcon("document-save"), i18n("Save Link As..."));
+
+    m_textMenu->addSeparator();
+
+    m_textCopyAction = KStandardAction::copy(0, 0, this);
+    m_textCopyAction->setData(TextCopy);
+    m_textMenu->addAction(m_textCopyAction);
+    m_textCopyAction->setEnabled(false);
+
+    QAction* action = KStandardAction::selectAll(0, 0, this);
+    action->setData(TextSelectAll);
+    m_textMenu->addAction(action);
+
+#if KDE_IS_VERSION(4, 5, 0)
+    m_webShortcutsMenu = new KMenu(m_textMenu);
+    m_webShortcutsMenu->menuAction()->setIcon(KIcon("preferences-web-browser-shortcuts"));
+    m_webShortcutsMenu->menuAction()->setVisible(false);
+    m_textMenu->addMenu(m_webShortcutsMenu);
+#endif
+
+    m_textActionsSeparator = m_textMenu->addSeparator();
+
+    foreach(QAction* action, m_sharedBasicNickActions)
+        m_textMenu->addAction(action);
+
+    m_textMenu->addSeparator();
+
+    foreach(QAction* action, m_sharedNickSettingsActions)
+        m_textMenu->addAction(action);
+
+    m_textMenu->addSeparator();
+
+    foreach(QAction* action, m_sharedDccActions)
+        m_textMenu->addAction(action);
+
+    m_textMenu->addSeparator();
+}
+
+int IrcContextMenus::textMenu(const QPoint& pos, MenuOptions options, Server* server,
+    const QString& selectedText, const QString& link, const QString& nick)
+{
+    KMenu* textMenu = self()->m_textMenu;
+
+    KActionCollection* actionCollection = Application::instance()->getMainWindow()->actionCollection();
+
+    KToggleAction* toggleMenuBarAction = static_cast<KToggleAction*>(actionCollection->action("options_show_menubar"));
+
+    if (toggleMenuBarAction && !toggleMenuBarAction->isChecked())
+        textMenu->insertAction(textMenu->actions().first(), toggleMenuBarAction);
+
+    bool showLinkActions = options.testFlag(ShowLinkActions);
+
+    foreach(QAction* action, self()->m_linkActions)
+        action->setVisible(showLinkActions);
+
+    self()->m_textCopyAction->setEnabled(!selectedText.isEmpty());
+
+    self()->updateWebShortcutsMenu(selectedText);
+
+    bool showNickActions = options.testFlag(ShowNickActions);
+
+    foreach(QAction* action, self()->m_sharedBasicNickActions)
+        action->setVisible(showNickActions);
+
+    if (showNickActions)
+    {
+        bool connected = server->isConnected();
+
+        foreach(QAction* action, self()->m_sharedBasicNickActions)
+            action->setEnabled(connected);
+
+        updateSharedNickSettingsActions(server, QStringList() << nick);
+
+        foreach(QAction* action, self()->m_sharedDccActions)
+            action->setEnabled(connected);
+    }
+    else
+    {
+        foreach(QAction* action, self()->m_sharedNickSettingsActions)
+            action->setVisible(false);
+    }
+
+    foreach(QAction* action, self()->m_sharedDccActions)
+        action->setVisible(showNickActions);
+
+    if (options.testFlag(ShowFindAction))
+        textMenu->insertAction(self()->m_textActionsSeparator, actionCollection->action(KStandardAction::name(KStandardAction::Find)));
+
+    if (options.testFlag(ShowLogAction))
+        textMenu->addAction(actionCollection->action("open_logfile"));
+
+    if (options.testFlag(ShowChannelActions))
+        textMenu->addAction(actionCollection->action("channel_settings"));
+
+    QAction* action = textMenu->exec(pos);
+
+    int actionId = extractActionId(action);
+
+    if (showLinkActions)
+        processLinkAction(actionId, link);
+
+    textMenu->removeAction(toggleMenuBarAction);
+    textMenu->removeAction(actionCollection->action(KStandardAction::name(KStandardAction::Find)));
+    textMenu->removeAction(actionCollection->action("open_logfile"));
+    textMenu->removeAction(actionCollection->action("channel_settings"));
+
+    return actionId;
+}
+
+void IrcContextMenus::updateWebShortcutsMenu(const QString& selectedText)
+{
+#if KDE_IS_VERSION(4, 5, 0)
+    m_webShortcutsMenu->menuAction()->setVisible(false);
+    m_webShortcutsMenu->clear();
+
+    if (selectedText.isEmpty())
+        return;
+
+    QString searchText = selectedText;
+    searchText = searchText.replace('\n', ' ').replace('\r', ' ').simplified();
+
+    if (searchText.isEmpty())
+        return;
+
+    KUriFilterData filterData(searchText);
+
+#if KDE_IS_VERSION(4, 5, 67)
+    filterData.setSearchFilteringOptions(KUriFilterData::RetrievePreferredSearchProvidersOnly);
+
+    if (KUriFilter::self()->filterSearchUri(filterData, KUriFilter::NormalTextFilter))
+#else
+    filterData.setAlternateDefaultSearchProvider("google");
+
+    if (KUriFilter::self()->filterUri(filterData, QStringList() << "kuriikwsfilter"))
+#endif
+    {
+        const QStringList searchProviders = filterData.preferredSearchProviders();
+
+        if (!searchProviders.isEmpty())
+        {
+            m_webShortcutsMenu->setTitle(i18n("Search for '%1' with",  KStringHandler::rsqueeze(searchText, 21)));
+
+            KAction* action = 0;
+
+            foreach(const QString& searchProvider, searchProviders)
+            {
+                action = new KAction(searchProvider, m_webShortcutsMenu);
+                action->setIcon(KIcon(filterData.iconNameForPreferredSearchProvider(searchProvider)));
+                action->setData(filterData.queryForPreferredSearchProvider(searchProvider));
+                connect(action, SIGNAL(triggered()), this, SLOT(handleWebShortcutAction()));
+                m_webShortcutsMenu->addAction(action);
+            }
+
+            m_webShortcutsMenu->addSeparator();
+
+            action = new KAction(i18n("Configure Web Shortcuts..."), m_webShortcutsMenu);
+            action->setIcon(KIcon("configure"));
+            connect(action, SIGNAL(triggered()), this, SLOT(configureWebShortcuts()));
+            m_webShortcutsMenu->addAction(action);
+
+            m_webShortcutsMenu->menuAction()->setVisible(true);
+        }
+    }
+#endif
+}
+
+void IrcContextMenus::handleWebShortcutAction()
+{
+#if KDE_IS_VERSION(4, 5, 0)
+    KAction* action = qobject_cast<KAction*>(sender());
+
+    if (action)
+    {
+        KUriFilterData filterData(action->data().toString());
+
+#if KDE_IS_VERSION(4, 5, 67)
+        if (KUriFilter::self()->filterSearchUri(filterData, KUriFilter::WebShortcutFilter))
+#else
+        if (KUriFilter::self()->filterUri(filterData, QStringList() << "kurisearchfilter"))
+#endif
+            Application::instance()->openUrl(filterData.uri().url());
+    }
+#endif
+}
+
+void IrcContextMenus::configureWebShortcuts()
+{
+#if KDE_IS_VERSION(4, 5, 0)
+    KToolInvocation::kdeinitExec("kcmshell4", QStringList() << "ebrowsing");
+#endif
+}
+
+void IrcContextMenus::setupChannelMenu()
+{
+    m_channelMenu = new KMenu();
+
+    QAction* defaultAction = createAction(m_channelMenu, Join, KIcon("irc-join-channel"), i18n("&Join Channel..."));
+    m_channelMenu->setDefaultAction(defaultAction);
+
+    createAction(m_channelMenu, Topic, i18n("Get &topic"));
+    createAction(m_channelMenu, Names, i18n("Get &user list"));
+}
+
+void IrcContextMenus::channelMenu(const QPoint& pos, Server* server, const QString& channel)
+{
+    KMenu* channelMenu = self()->m_channelMenu;
+
+    QAction* title = 0;
+
+    if (!channel.isEmpty())
+        title = channelMenu->addTitle(KStringHandler::rsqueeze(channel, 15), channelMenu->actions().first());
+
+    bool connected = server->isConnected();
+
+    foreach(QAction* action, channelMenu->actions())
+        action->setEnabled(connected);
+
+    QAction* action = channelMenu->exec(pos);
+
+    if (title)
+    {
+        channelMenu->removeAction(title);
+
+        delete title;
+    }
+
+    switch (extractActionId(action))
+    {
+        case Join:
+            commandToServer(server, "join " + channel);
+            break;
+        case Topic:
+            server->requestTopic(channel);
+            break;
+        case Names:
+            commandToServer(server, "names " + channel);
+            break;
+        default:
+            break;
+    }
+}
+
+void IrcContextMenus::setupNickMenu()
+{
+    m_nickMenu = new KMenu();
+
+    QAction* defaultAction = createAction(m_nickMenu, OpenQuery, i18n("Open Query"));
+    m_nickMenu->setDefaultAction(defaultAction);
+
+    foreach(QAction* action, m_sharedBasicNickActions)
+        m_nickMenu->addAction(action);
+
+    m_nickMenu->addSeparator();
+
+    m_modesMenu = new KMenu(m_nickMenu);
+    m_nickMenu->addMenu(m_modesMenu);
+    m_modesMenu->setTitle(i18n("Modes"));
+    createAction(m_modesMenu, GiveOp, KIcon("irc-operator"), i18n("Give Op"));
+    createAction(m_modesMenu, TakeOp, KIcon("irc-remove-operator"), i18n("Take Op"));
+    createAction(m_modesMenu, GiveHalfOp, i18n("Give HalfOp"));
+    createAction(m_modesMenu, TakeHalfOp, i18n("Take HalfOp"));
+    createAction(m_modesMenu, GiveVoice, KIcon("irc-voice"), i18n("Give Voice"));
+    createAction(m_modesMenu, TakeVoice, KIcon("irc-unvoice"), i18n("Take Voice"));
+
+    m_kickBanMenu = new KMenu(m_nickMenu);
+    m_nickMenu->addMenu(m_kickBanMenu);
+    m_kickBanMenu->setTitle(i18n("Kick / Ban"));
+    createAction(m_kickBanMenu, Kick, i18n("Kick"));
+    createAction(m_kickBanMenu, KickBan, i18n("Kickban"));
+    createAction(m_kickBanMenu, BanNick, i18n("Ban Nickname"));
+    m_kickBanMenu->addSeparator();
+    createAction(m_kickBanMenu, BanHost, i18n("Ban *!*@*.host"));
+    createAction(m_kickBanMenu, BanDomain, i18n("Ban *!*@domain"));
+    createAction(m_kickBanMenu, BanUserHost, i18n("Ban *!user@*.host"));
+    createAction(m_kickBanMenu, BanUserDomain, i18n("Ban *!user@domain"));
+    m_kickBanMenu->addSeparator();
+    createAction(m_kickBanMenu, KickBanHost, i18n("Kickban *!*@*.host"));
+    createAction(m_kickBanMenu, KickBanDomain, i18n("Kickban *!*@domain"));
+    createAction(m_kickBanMenu, KickBanUserHost, i18n("Kickban *!user@*.host"));
+    createAction(m_kickBanMenu, KickBanUserDomain, i18n("Kickban *!user@domain"));
+
+    m_nickMenu->addSeparator();
+
+    foreach(QAction* action, m_sharedNickSettingsActions)
+        m_nickMenu->addAction(action);
+
+    m_nickMenu->addSeparator();
+
+    foreach(QAction* action, m_sharedDccActions)
+        m_nickMenu->addAction(action);
+}
+
+void IrcContextMenus::createSharedBasicNickActions()
+{
+    m_sharedBasicNickActions << createAction(Whois, i18n("&Whois"));
+    m_sharedBasicNickActions << createAction(Version, i18n("&Version"));
+    m_sharedBasicNickActions << createAction(Ping, i18n("&Ping"));
+}
+
+void IrcContextMenus::createSharedNickSettingsActions()
+{
+    m_ignoreAction = createAction(IgnoreNick, i18n("Ignore"));
+    m_sharedNickSettingsActions << m_ignoreAction;
+    m_unignoreAction = createAction(UnignoreNick, i18n("Unignore"));
+    m_sharedNickSettingsActions << m_unignoreAction;
+
+    m_addNotifyAction = createAction(AddNotify, KIcon("list-add-user"), i18n("Add to Watched Nicks"));
+    m_sharedNickSettingsActions << m_addNotifyAction;
+    m_removeNotifyAction = createAction(RemoveNotify, KIcon("list-remove-user"), i18n("Remove From Watched Nicks"));
+    m_sharedNickSettingsActions << m_removeNotifyAction;
+
+    m_addressBookMenu = new KMenu();
+    m_addressBookMenu->setIcon(KIcon("office-address-book"));
+    m_sharedNickSettingsActions << m_addressBookMenu->menuAction();
+    m_addressBookNewAction = createAction(AddressbookNew, KIcon("contact-new"));
+    m_addressBookChangeAction = createAction(AddressbookChange, KIcon("office-address-book"));
+    m_addressBookEditAction = createAction(AddressbookEdit, KIcon("document-edit"));
+    m_addressBookDeleteAction = createAction(AddressbookDelete, KIcon("edit-delete"));
+
+    m_sendMailAction = createAction(SendEmail, KIcon("mail-send"), ("&Send Email..."));
+    m_sharedNickSettingsActions << m_sendMailAction;
+}
+
+void IrcContextMenus::createSharedDccActions()
+{
+    if (KAuthorized::authorizeKAction("allow_downloading"))
+        m_sharedDccActions << createAction(DccSend, KIcon("arrow-right-double"), i18n("Send &File..."));
+
+    m_sharedDccActions << createAction(StartDccChat, i18n("Open DCC Chat"));
+    m_sharedDccActions << createAction(StartDccWhiteboard, i18n("Open DCC Whiteboard"));
+}
+
+void IrcContextMenus::nickMenu(const QPoint& pos, MenuOptions options, Server* server,
+    const QStringList& nicks, const QString& channel)
+{
+    KMenu* nickMenu = self()->m_nickMenu;
+
+    QAction* title = 0;
+
+    if (options.testFlag(ShowTitle) && nicks.count() == 1)
+        title = nickMenu->addTitle(KStringHandler::rsqueeze(nicks.first(), 15), nickMenu->actions().first());
+
+    foreach(QAction* action, nickMenu->actions())
+        action->setVisible(true);
+
+    self()->m_modesMenu->menuAction()->setVisible(options.testFlag(ShowChannelActions));
+    self()->m_kickBanMenu->menuAction()->setVisible(options.testFlag(ShowChannelActions));
+
+    bool connected = server->isConnected();
+
+    foreach(QAction* action, self()->m_sharedBasicNickActions)
+        action->setEnabled(connected);
+
+    foreach(QAction* action, self()->m_sharedDccActions)
+        action->setEnabled(connected);
+
+    self()->m_modesMenu->menuAction()->setEnabled(connected);
+    self()->m_kickBanMenu->menuAction()->setEnabled(connected);
+
+    updateSharedNickSettingsActions(server, nicks);
+
+    QAction* action = nickMenu->exec(pos);
+
+    if (title)
+    {
+        nickMenu->removeAction(title);
+
+        delete title;
+    }
+
+    processNickAction(extractActionId(action), server, nicks, channel);
+}
+
+void IrcContextMenus::processNickAction(int actionId, Server* server, const QStringList& nicks,
+    const QString& channel)
+{
+    QString pattern;
+    QString mode;
+
+    switch (actionId)
+    {
+        case OpenQuery:
+            commandToServer(server, "query %1", nicks);
+            break;
+        case Whois:
+            commandToServer(server, "whois %1 %1", nicks);
+            break;
+        case Version:
+            commandToServer(server, "ctcp %1 VERSION", nicks);
+            break;
+        case Ping:
+            commandToServer(server, "ctcp %1 PING", nicks);
+            break;
+        case GiveOp:
+            if (channel.isEmpty()) break;
+            pattern = "MODE %c +%m %l";
+            mode = 'o';
+            break;
+        case TakeOp:
+            if (channel.isEmpty()) break;
+            pattern = "MODE %c -%m %l";
+            mode = 'o';
+            break;
+        case GiveHalfOp:
+            if (channel.isEmpty()) break;
+            pattern = "MODE %c +%m %l";
+            mode = 'h';
+            break;
+        case TakeHalfOp:
+            if (channel.isEmpty()) break;
+            pattern = "MODE %c -%m %l";
+            mode = 'h';
+            break;
+        case GiveVoice:
+            if (channel.isEmpty()) break;
+            pattern = "MODE %c +%m %l";
+            mode = 'v';
+            break;
+        case TakeVoice:
+            if (channel.isEmpty()) break;
+            pattern = "MODE %c -%m %l";
+            mode = 'v';
+            break;
+        case Kick:
+            commandToServer(server, "kick %1", nicks, channel);
+            break;
+        case KickBan:
+            commandToServer(server, "kickban %1", nicks, channel);
+            break;
+        case BanNick:
+            commandToServer(server, "ban %1", nicks, channel);
+            break;
+        case BanHost:
+            commandToServer(server, "ban -HOST %1", nicks, channel);
+            break;
+        case BanDomain:
+            commandToServer(server, "ban -DOMAIN %1", nicks, channel);
+            break;
+        case BanUserHost:
+            commandToServer(server, "ban -USERHOST %1", nicks, channel);
+            break;
+        case BanUserDomain:
+            commandToServer(server, "ban -USERDOMAIN %1", nicks, channel);
+            break;
+        case KickBanHost:
+            commandToServer(server, "kickban -HOST %1", nicks, channel);
+            break;
+        case KickBanDomain:
+            commandToServer(server, "kickban -DOMAIN %1", nicks, channel);
+            break;
+        case KickBanUserHost:
+            commandToServer(server, "kickban -USERHOST %1", nicks, channel);
+            break;
+        case KickBanUserDomain:
+            commandToServer(server, "kickban -USERDOMAIN %1", nicks, channel);
+            break;
+        case IgnoreNick:
+        {
+            QString question;
+
+            if (nicks.size() == 1)
+                question = i18n("Do you want to ignore %1?", nicks.first());
+            else
+                question = i18n("Do you want to ignore the selected users?");
+
+            if (KMessageBox::warningContinueCancel(
+                Application::instance()->getMainWindow(),
+                question,
+                i18n("Ignore"),
+                KGuiItem(i18n("Ignore")),
+                KStandardGuiItem::cancel(),
+                "IgnoreNick"
+                ) ==
+                KMessageBox::Continue)
+            {
+                commandToServer(server, "ignore -ALL " + nicks.join(" "));
+            }
+
+            break;
+        }
+        case UnignoreNick:
+        {
+            QString question;
+            QStringList selectedIgnoredNicks;
+
+            foreach(const QString& nick, nicks)
+            {
+                if (Preferences::isIgnored(nick))
+                    selectedIgnoredNicks << nick;
+            }
+
+            if (selectedIgnoredNicks.count() == 1)
+                question = i18n("Do you want to stop ignoring %1?", selectedIgnoredNicks.first());
+            else
+                question = i18n("Do you want to stop ignoring the selected users?");
+
+            if (KMessageBox::warningContinueCancel(
+                Application::instance()->getMainWindow(),
+                question,
+                i18n("Unignore"),
+                KGuiItem(i18n("Unignore")),
+                KStandardGuiItem::cancel(),
+                "UnignoreNick") ==
+                KMessageBox::Continue)
+            {
+                commandToServer(server, "unignore " + selectedIgnoredNicks.join(" "));
+            }
+
+            break;
+        }
+        case AddNotify:
+        {
+            if (!server->getServerGroup()) break;
+
+            foreach(const QString& nick, nicks)
+            {
+                if (!Preferences::isNotify(server->getServerGroup()->id(), nick))
+                    Preferences::addNotify(server->getServerGroup()->id(), nick);
+            }
+
+            break;
+        }
+        case RemoveNotify:
+        {
+            if (!server->getServerGroup()) break;
+
+            foreach(const QString& nick, nicks)
+            {
+                if (Preferences::isNotify(server->getServerGroup()->id(), nick))
+                    Preferences::removeNotify(server->getServerGroup()->id(), nick);
+            }
+
+            break;
+        }
+        case DccSend:
+            commandToServer(server, "dcc send %1", nicks);
+            break;
+        case StartDccChat:
+            commandToServer(server, "dcc chat %1", nicks);
+            break;
+        case StartDccWhiteboard:
+            commandToServer(server, "dcc whiteboard %1", nicks);
+            break;
+        case AddressbookEdit:
+        {
+            foreach(const QString& nick, nicks)
+            {
+                NickInfoPtr nickInfo = server->getNickInfo(nick);
+
+                if (nickInfo.isNull())
+                    continue;
+
+                KABC::Addressee addressee = nickInfo->getAddressee();
+
+                if(addressee.isEmpty())
+                    break;
+
+                Konversation::Addressbook::self()->editAddressee(addressee.uid());
+            }
+
+            break;
+        }
+        case AddressbookNew:
+        case AddressbookDelete:
+        {
+            Konversation::Addressbook* addressbook = Konversation::Addressbook::self();
+
+            // Handle all the selected nicks in one go. Either they all save, or none do.
+            if (addressbook->getAndCheckTicket())
+            {
+                foreach(const QString& nick, nicks)
+                {
+                    NickInfoPtr nickInfo = server->getNickInfo(nick);
+
+                    if (nickInfo.isNull())
+                        continue;
+
+                    if (actionId == AddressbookDelete)
+                    {
+                        KABC::Addressee addr = nickInfo->getAddressee();
+
+                        addressbook->unassociateNick(addr, nick, server->getServerName(), server->getDisplayName());
+                    }
+                    else
+                    {
+                        // Make new addressbook contact.
+                        KABC::Addressee addr;
+
+                        if (nickInfo->getRealName().isEmpty())
+                            addr.setGivenName(nickInfo->getNickname());
+                        else
+                            addr.setGivenName(nickInfo->getRealName());
+
+                        addr.setNickName(nick);
+
+                        addressbook->associateNickAndUnassociateFromEveryoneElse(addr, nick, server->getServerName(),
+                            server->getDisplayName());
+                    }
+                }
+
+                // This will refresh the nicks automatically for us. At least, if it doesn't, it's a bug :)
+                addressbook->saveTicket();
+            }
+
+            break;
+        }
+        case AddressbookChange:
+        {
+            foreach(const QString& nick, nicks)
+            {
+                NickInfoPtr nickInfo = server->getNickInfo(nick);
+
+                if (nickInfo.isNull())
+                    continue;
+
+                LinkAddressbookUI* linkaddressbookui = new LinkAddressbookUI(Application::instance()->getMainWindow(),
+                    nick, server->getServerName(), server->getDisplayName(), nickInfo->getRealName());
+
+                linkaddressbookui->show();
+            }
+            break;
+        }
+        case SendEmail:
+        {
+            NickInfoList nickInfos;
+
+            foreach(const QString& nick, nicks)
+            {
+                NickInfoPtr nickInfo = server->getNickInfo(nick);
+
+                if (nickInfo.isNull())
+                    continue;
+
+                nickInfos.append(nickInfo);
+            }
+
+            if (!nickInfos.isEmpty())
+                Konversation::Addressbook::self()->sendEmail(nickInfos);
+
+            break;
+        }
+        default:
+            break;
+    }
+
+    if (!pattern.isEmpty())
+    {
+        pattern.replace("%c", channel);
+
+        QString command;
+        QStringList partialList;
+        int modesCount = server->getModesCount();
+
+        for (int index = 0; index < nicks.count(); index += modesCount)
+        {
+            command = pattern;
+            partialList = nicks.mid(index, modesCount);
+            command = command.replace("%l", partialList.join(" "));
+            const QString repeatedMode = mode.repeated(partialList.count());
+
+            command = command.replace("%m", repeatedMode);
+
+            server->queue(command);
+        }
+    }
+}
+
+void IrcContextMenus::updateSharedNickSettingsActions(Server* server, const QStringList& nicks)
+{
+    int ignoreCounter = 0;
+    int unignoreCounter = 0;
+    int addNotifyCounter = 0;
+    int removeNotifyCounter = 0;
+
+    int serverGroupId = -1;
+
+    if (server->getServerGroup())
+        serverGroupId = server->getServerGroup()->id();
+
+    foreach(const QString& nick, nicks)
+    {
+        if (Preferences::isIgnored(nick))
+            ++unignoreCounter;
+        else
+            ++ignoreCounter;
+
+        if (serverGroupId != -1)
+        {
+            if (Preferences::isNotify(serverGroupId, nick))
+                ++removeNotifyCounter;
+            else
+                ++addNotifyCounter;
+        }
+    }
+
+    self()->m_ignoreAction->setVisible(ignoreCounter);
+    self()->m_unignoreAction->setVisible(unignoreCounter);
+
+    self()->m_addNotifyAction->setVisible(serverGroupId == -1 || addNotifyCounter);
+    self()->m_addNotifyAction->setEnabled(serverGroupId != -1);
+    self()->m_removeNotifyAction->setVisible(removeNotifyCounter);
+
+    updateAddressBookActions(server, nicks);
+}
+
+void IrcContextMenus::updateAddressBookActions(Server* server, const QStringList& nicks)
+{
+    KMenu* addressBookMenu = self()->m_addressBookMenu;
+
+    addressBookMenu->setTitle(i18np("Address Book Association", "Address Book Associations", nicks.count()));
+
+    addressBookMenu->clear();
+
+    bool existingAssociation = false;
+    bool noAssociation = false;
+    bool emailAddress = false;
+
+    foreach(const QString& nick, nicks)
+    {
+        NickInfoPtr nickInfo =  server->getNickInfo(nick);
+
+        if (nickInfo.isNull())
+            continue;
+
+        KABC::Addressee addr = nickInfo->getAddressee();
+
+        if (addr.isEmpty())
+        {
+            noAssociation = true;
+
+            if (existingAssociation && emailAddress)
+                break;
+        }
+        else
+        {
+            if (!emailAddress && !addr.preferredEmail().isEmpty())
+                emailAddress = true;
+
+            existingAssociation = true;
+
+            if (noAssociation && emailAddress)
+                break;
+        }
+    }
+    if (!noAssociation && existingAssociation)
+    {
+       self()->m_addressBookEditAction->setText(i18np("Edit Contact...",
+            "Edit Contacts...", nicks.count()));
+        addressBookMenu->addAction(self()->m_addressBookEditAction);
+        addressBookMenu->addSeparator();
+    }
+
+    if (noAssociation && existingAssociation)
+    {
+        self()->m_addressBookChangeAction->setText(i18np("Choose/Change Association...",
+            "Choose/Change Associations...", nicks.count()));
+        addressBookMenu->addAction(self()->m_addressBookChangeAction);
+    }
+    else if (noAssociation)
+    {
+        self()->m_addressBookChangeAction->setText(i18np("Choose Contact...",
+            "Choose Contacts...", nicks.count()));
+        addressBookMenu->addAction(self()->m_addressBookChangeAction);
+    }
+    else
+    {
+        self()->m_addressBookChangeAction->setText(i18np("Change Association...",
+            "Change Associations...", nicks.count()));
+        addressBookMenu->addAction(self()->m_addressBookChangeAction);
+    }
+
+    if (noAssociation && !existingAssociation)
+    {
+        self()->m_addressBookNewAction->setText(i18np("Create New Contact...",
+            "Create New Contacts...", nicks.count()));
+        addressBookMenu->addAction(self()->m_addressBookNewAction);
+    }
+
+    if (existingAssociation)
+    {
+        self()->m_addressBookDeleteAction->setText(i18np("Delete Association",
+            "Delete Associations", nicks.count()));
+        addressBookMenu->addAction(self()->m_addressBookDeleteAction);
+    }
+
+    self()->m_sendMailAction->setEnabled(emailAddress);
+
+    addressBookMenu->menuAction()->setVisible(true);
+}
+
+#if !(QT_VERSION >= QT_VERSION_CHECK(4, 7, 0))
+void IrcContextMenus::setupLinkMenu()
+{
+    m_linkMenu = new KMenu();
+
+    foreach(QAction* action, m_linkActions)
+        m_linkMenu->addAction(action);
+}
+
+void IrcContextMenus::linkMenu(const QPoint& pos, const QString& link)
+{
+    QAction* action = self()->m_linkMenu->exec(pos);
+
+    processLinkAction(extractActionId(action), link);
+}
+#endif
+
+void IrcContextMenus::processLinkAction(int  actionId, const QString& link)
+{
+   if (actionId == -1 || link.isEmpty())
+       return;
+
+    switch (actionId)
+    {
+        case LinkCopy:
+        {
+            QClipboard* clipboard = qApp->clipboard();
+            clipboard->setText(link, QClipboard::Selection);
+            clipboard->setText(link, QClipboard::Clipboard);
+
+            break;
+        }
+        case LinkBookmark:
+        {
+            KBookmarkManager* manager = KBookmarkManager::userBookmarksManager();
+            KBookmarkDialog* dialog = new KBookmarkDialog(manager, Application::instance()->getMainWindow());
+
+            dialog->addBookmark(link, link);
+
+            delete dialog;
+
+            break;
+        }
+        case LinkSaveAs:
+        {
+            KUrl srcUrl(link);
+
+            KUrl saveUrl = KFileDialog::getSaveUrl(srcUrl.fileName(KUrl::ObeyTrailingSlash), QString(),
+                Application::instance()->getMainWindow(), i18n("Save link as"));
+
+            if (saveUrl.isEmpty() || !saveUrl.isValid())
+                break;
+
+            KIO::copy(srcUrl, saveUrl);
+
+            break;
+        }
+        default:
+            break;
+    }
+}
+
+QAction* IrcContextMenus::createAction(ActionId id, const QString& text)
+{
+    QAction* action = new QAction(text, this);
+
+    action->setData(id);
+
+    return action;
+}
+
+QAction* IrcContextMenus::createAction(ActionId id, const QIcon& icon)
+{
+    QAction* action = new QAction(this);
+
+    action->setData(id);
+    action->setIcon(icon);
+
+    return action;
+}
+
+QAction* IrcContextMenus::createAction(ActionId id, const QIcon& icon, const QString& text)
+{
+    QAction* action = new QAction(icon, text, this);
+
+    action->setData(id);
+
+    return action;
+}
+
+QAction* IrcContextMenus::createAction(KMenu* menu, ActionId id, const QString& text)
+{
+    QAction* action = createAction(id, text);
+
+    menu->addAction(action);
+
+    return action;
+}
+
+QAction* IrcContextMenus::createAction(KMenu* menu, ActionId id, const QIcon& icon, const QString& text)
+{
+    QAction* action = createAction(id, text);
+
+    action->setIcon(icon);
+
+    menu->addAction(action);
+
+    return action;
+}
+
+int IrcContextMenus::extractActionId(QAction* action)
+{
+    if (action)
+    {
+        bool ok = false;
+
+        int actionId = action->data().toInt(&ok);
+
+        if (ok)
+            return actionId;
+    }
+
+    return -1;
+}
+
+void IrcContextMenus::commandToServer(Server* server, const QString& command, const QString& destination)
+{
+    server->queue(server->getOutputFilter()->parse("", Preferences::self()->commandChar()+command, destination).toServer);
+}
+
+void IrcContextMenus::commandToServer(Server* server, const QString& command,
+    const QStringList& arguments, const QString& destination)
+{
+    foreach(const QString& argument, arguments)
+        commandToServer(server, command.arg(argument), destination);
+}
diff --git a/src/viewer/irccontextmenus.h b/src/viewer/irccontextmenus.h
new file mode 100644
index 0000000..4b3765d
--- /dev/null
+++ b/src/viewer/irccontextmenus.h
@@ -0,0 +1,161 @@
+/*
+  This program is free software; you can redistribute it and/or
+  modify it under the terms of the GNU General Public License as
+  published by the Free Software Foundation; either version 2 of
+  the License or (at your option) version 3 or any later version
+  accepted by the membership of KDE e.V. (or its successor appro-
+  ved by the membership of KDE e.V.), which shall act as a proxy
+  defined in Section 14 of version 3 of the license.
+
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+  GNU General Public License for more details.
+
+  You should have received a copy of the GNU General Public License
+  along with this program. If not, see http://www.gnu.org/licenses/.
+*/
+
+/*
+  Copyright (C) 2010 Eike Hein <hein@kde.org>
+*/
+
+#ifndef IRCCONTEXTMENUS_H
+#define IRCCONTEXTMENUS_H
+
+#include <QIcon>
+#include <QObject>
+#include <QPoint>
+
+#include <kdeversion.h>
+
+
+class Server;
+
+class QAction;
+
+class KMenu;
+
+
+class IrcContextMenus : public QObject
+{
+    Q_OBJECT
+
+    public:
+        enum ActionId
+        {
+            TextCopy, TextSelectAll,
+            LinkCopy, LinkBookmark, LinkSaveAs,
+            Join, Topic, Names,
+            OpenQuery,
+            Whois, Version, Ping,
+            GiveOp, TakeOp, GiveHalfOp, TakeHalfOp, GiveVoice, TakeVoice,
+            Kick, KickBan, BanNick, BanHost, BanDomain, BanUserHost, BanUserDomain,
+            KickBanHost, KickBanDomain, KickBanUserHost, KickBanUserDomain,
+            IgnoreNick, UnignoreNick,
+            AddNotify, RemoveNotify,
+            DccSend, StartDccChat, StartDccWhiteboard,
+            AddressbookNew, AddressbookChange, AddressbookEdit, AddressbookDelete, SendEmail
+        };
+
+        enum MenuOption
+        {
+            NoOptions            = 0x00000000,
+            ShowTitle            = 0x00000001,
+            ShowLinkActions      = 0x00000002,
+            ShowFindAction       = 0x00000004,
+            ShowNickActions      = 0x00000008,
+            ShowChannelActions   = 0x00000010,
+            ShowLogAction        = 0x00000020
+
+        };
+        Q_DECLARE_FLAGS(MenuOptions, MenuOption)
+
+        ~IrcContextMenus();
+
+        static IrcContextMenus* self();
+
+        static int textMenu(const QPoint& pos, MenuOptions options, Server* server,
+            const QString& selectedText, const QString& link, const QString& nick = QString());
+
+        static void channelMenu(const QPoint& pos, Server* server, const QString& channel);
+
+        static void nickMenu(const QPoint& pos, MenuOptions options, Server* server,
+            const QStringList& nicks, const QString& channel);
+        static void processNickAction(int actionId, Server* server, const QStringList& nicks,
+            const QString& channel);
+
+#if !(QT_VERSION >= QT_VERSION_CHECK(4, 7, 0))
+        static void linkMenu(const QPoint& pos, const QString& link);
+#endif
+        static void processLinkAction(int actionId, const QString& link);
+
+
+    protected slots:
+        void handleWebShortcutAction();
+        void configureWebShortcuts();
+
+
+    protected:
+        explicit IrcContextMenus();
+        friend class IrcContextMenusPrivate;
+
+        void setupTextMenu();
+        KMenu* m_textMenu;
+        QAction* m_textCopyAction;
+        QAction* m_textActionsSeparator;
+        QList<QAction*> m_linkActions;
+        void updateWebShortcutsMenu(const QString& selectedText);
+#if KDE_IS_VERSION(4, 5, 0)
+        KMenu* m_webShortcutsMenu;
+#endif
+
+        void setupChannelMenu();
+        KMenu* m_channelMenu;
+
+        void setupNickMenu();
+        KMenu* m_nickMenu;
+        void createSharedBasicNickActions();
+        QList<QAction*> m_sharedBasicNickActions;
+        KMenu* m_modesMenu;
+        KMenu* m_kickBanMenu;
+        void createSharedNickSettingsActions();
+        static void updateSharedNickSettingsActions(Server* server, const QStringList& nicks);
+        QList<QAction*> m_sharedNickSettingsActions;
+        QAction* m_ignoreAction;
+        QAction* m_unignoreAction;
+        QAction* m_addNotifyAction;
+        QAction* m_removeNotifyAction;
+        static void updateAddressBookActions(Server* server, const QStringList& nicks);
+        KMenu* m_addressBookMenu;
+        QAction* m_addressBookNewAction;
+        QAction* m_addressBookChangeAction;
+        QAction* m_addressBookEditAction;
+        QAction* m_addressBookDeleteAction;
+        QAction* m_sendMailAction;
+        void createSharedDccActions();
+        QList<QAction*> m_sharedDccActions;
+
+#if !(QT_VERSION >= QT_VERSION_CHECK(4, 7, 0))
+        void setupLinkMenu();
+        KMenu* m_linkMenu;
+#endif
+
+        inline QAction* createAction(ActionId id, const QString& text);
+        inline QAction* createAction(ActionId id, const QIcon& icon);
+        inline QAction* createAction(ActionId id, const QIcon& icon, const QString& text);
+        inline QAction* createAction(KMenu* menu, ActionId id, const QString& text);
+        inline QAction* createAction(KMenu* menu, ActionId id, const QIcon& icon,
+            const QString& text);
+
+        static int extractActionId(QAction* action);
+
+        static inline void commandToServer(Server* server, const QString& command,
+            const QString& destination = QString());
+        static inline void commandToServer(Server* server, const QString& command,
+            const QStringList& arguments, const QString& destination = QString());
+};
+
+Q_DECLARE_OPERATORS_FOR_FLAGS(IrcContextMenus::MenuOptions)
+
+#endif
diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 280c9a9..7e3d8b0 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -27,10 +27,9 @@
 #include "common.h"
 #include "emoticons.h"
 #include "notificationhandler.h"
+#include "irccontextmenus.h"
 
-#include <QStringList>
 #include <QRegExp>
-#include <QClipboard>
 #include <QBrush>
 #include <QEvent>
 #include <QColor>
@@ -43,34 +42,7 @@
 #include <QTextDocumentFragment>
 #include <QTextCodec>
 
-#include <KUrl>
-#include <KBookmarkManager>
-#include <kbookmarkdialog.h>
-#include <KMenu>
-#include <KGlobalSettings>
-#include <KFileDialog>
-#include <KAuthorized>
-#include <KActionCollection>
-#include <KToggleAction>
-#include <KIO/CopyJob>
-
-// For the Web Shortcuts context menu sub-menu.
-#if KDE_IS_VERSION(4,5,0)
-#include <KStringHandler>
-#include <KToolInvocation>
-#include <KUriFilter>
-#endif
-
-class Server;
-class ChatWindow;
-class SearchBar;
-
-class QPixmap;
-class QDropEvent;
-class QDragEnterEvent;
-class QEvent;
-
-class KMenu;
+#include <KStandardShortcut>
 
 using namespace Konversation;
 
@@ -126,15 +98,11 @@ class SelectionPin
 
 IRCView::IRCView(QWidget* parent) : KTextBrowser(parent), m_nextCullIsMarker(false), m_rememberLinePosition(-1), m_rememberLineDirtyBit(false), markerFormatObject(this)
 {
-    m_copyUrlMenu = false;
     m_resetScrollbar = true;
-    m_offset = 0;
     m_mousePressed = false;
     m_isOnNick = false;
     m_isOnChannel = false;
     m_chatWin = 0;
-    m_nickPopup = 0;
-    m_channelPopup = 0;
 
     setAcceptDrops(false);
 
@@ -165,14 +133,14 @@ IRCView::IRCView(QWidget* parent) : KTextBrowser(parent), m_nextCullIsMarker(fal
     setTextInteractionFlags(Qt::TextBrowserInteraction);
     viewport()->setMouseTracking(true);
 
-    setupContextMenu();
-
     if (Preferences::self()->useParagraphSpacing()) enableParagraphSpacing();
 
     //HACK to workaround an issue with the QTextDocument
     //doing a relayout/scrollbar over and over resulting in 100%
     //proc usage. See bug 215256
     setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);
+
+    setContextMenuOptions(IrcContextMenus::ShowTitle | IrcContextMenus::ShowFindAction, true);
 }
 
 IRCView::~IRCView()
@@ -185,40 +153,11 @@ void IRCView::setServer(Server* newServer)
         return;
 
     m_server = newServer;
-
-    if (newServer)
-    {
-        KActionCollection* actionCollection = Application::instance()->getMainWindow()->actionCollection();
-
-        QAction* action = actionCollection->action("open_logfile");
-
-        if (action)
-        {
-            m_popup->insertAction(actionCollection->action("channel_settings"), action);
-            QAction* separator = new QAction(m_popup);
-            separator->setSeparator(true);
-            m_popup->insertAction(action, separator);
-        }
-    }
-
 }
 
 void IRCView::setChatWin(ChatWindow* chatWin)
 {
     m_chatWin = chatWin;
-
-    if (m_chatWin->getType()==ChatWindow::Channel)
-    {
-        setupNickPopupMenu(false);
-
-        KActionCollection* actionCollection = Application::instance()->getMainWindow()->actionCollection();
-        QAction* action = actionCollection->action("channel_settings");
-        if (action) m_popup->addAction(action);
-    }
-    else
-        setupNickPopupMenu(true);
-
-    setupChannelPopupMenu();
 }
 
 void IRCView::findText()
@@ -1984,7 +1923,7 @@ void IRCView::mouseReleaseEvent(QMouseEvent *ev)
     }
     else if (ev->button() == Qt::MidButton)
     {
-        if (m_copyUrlMenu)
+        if (m_contextMenuOptions.testFlag(IrcContextMenus::ShowLinkActions))
         {
             openLink(QUrl (m_urlToCopy));
             return;
@@ -2052,20 +1991,6 @@ void IRCView::openLink(const QUrl& url)
     }
 }
 
-void IRCView::saveLinkAs()
-{
-    if(m_urlToCopy.isEmpty())
-        return;
-
-    KUrl srcUrl (m_urlToCopy);
-    KUrl saveUrl = KFileDialog::getSaveUrl(srcUrl.fileName(KUrl::ObeyTrailingSlash), QString(), this, i18n("Save link as"));
-
-    if (saveUrl.isEmpty() || !saveUrl.isValid())
-        return;
-
-    KIO::copy(srcUrl, saveUrl);
-}
-
 void IRCView::highlightedSlot(const QString& /*_link*/)
 {
     QString link = m_urlToCopy;
@@ -2076,9 +2001,6 @@ void IRCView::highlightedSlot(const QString& /*_link*/)
     if (link == m_lastStatusText && !link.isEmpty())
         return;
 
-    // remember current URL to overcome link clicking problems in KTextBrowser
-    //m_highlightedURL = link;
-
     if (link.isEmpty())
     {
         if (!m_lastStatusText.isEmpty())
@@ -2102,32 +2024,17 @@ void IRCView::highlightedSlot(const QString& /*_link*/)
             emit setStatusBarTempText(link);
         }
 
-        if (link.isEmpty() && m_copyUrlMenu)
-        {
-            m_copyUrlClipBoard->setVisible(false);
-            m_bookmark->setVisible(false);
-            m_saveUrl->setVisible(false);
-            copyUrlMenuSeparator->setVisible(false);
-            m_copyUrlMenu = false;
-
-        }
-        else if (!link.isEmpty() && !m_copyUrlMenu)
-        {
-           copyUrlMenuSeparator->setVisible(true);
-           m_copyUrlClipBoard->setVisible(true);
-           m_bookmark->setVisible(true);
-           m_saveUrl->setVisible(true);
-           m_copyUrlMenu = true;
-        }
+        if (link.isEmpty() && m_contextMenuOptions.testFlag(IrcContextMenus::ShowLinkActions))
+            setContextMenuOptions(IrcContextMenus::ShowLinkActions, false);
+        else if (!link.isEmpty() && !m_contextMenuOptions.testFlag(IrcContextMenus::ShowLinkActions))
+            setContextMenuOptions(IrcContextMenus::ShowLinkActions, true);
     }
     else if (link.startsWith(QLatin1Char('#')) && !link.startsWith(QLatin1String("##")))
     {
         m_currentNick = link.mid(1);
 
-        if (m_nickPopup)
-            m_nickPopup->setTitle(m_currentNick);
-
         m_isOnNick = true;
+
         emit setStatusBarTempText(i18n("Open a query with %1", m_currentNick));
     }
     else
@@ -2135,382 +2042,65 @@ void IRCView::highlightedSlot(const QString& /*_link*/)
         // link.startsWith("##")
         m_currentChannel = link.mid(1);
 
-        if(m_channelPopup)
-        {
-            QString prettyId = m_currentChannel;
-
-            if (prettyId.length()>15)
-            {
-                prettyId.truncate(15);
-                prettyId.append("...");
-            }
-
-            m_channelPopup->setTitle(prettyId);
-        }
-
         m_isOnChannel = true;
-        emit setStatusBarTempText(i18n("Join the channel %1", m_currentChannel));
-    }
-}
-
-void IRCView::copyUrl()
-{
-        if ( !m_urlToCopy.isEmpty() )
-        {
-                QClipboard *cb = qApp->clipboard();
-                cb->setText(m_urlToCopy,QClipboard::Selection);
-                cb->setText(m_urlToCopy,QClipboard::Clipboard);
-        }
-
-}
-
-void IRCView::slotBookmark()
-{
-    if (m_urlToCopy.isEmpty())
-        return;
-
-    KBookmarkManager* bm = KBookmarkManager::userBookmarksManager();
-    KBookmarkDialog* dialog = new KBookmarkDialog(bm, this);
-    dialog->addBookmark(m_urlToCopy, m_urlToCopy);
-    delete dialog;
-}
-
-// Context Menu
-
-KMenu* IRCView::getPopup() const
-{
-    return m_popup;
-}
-
-void IRCView::setupContextMenu()
-{
-    m_popup = new KMenu(this);
-    m_popup->setObjectName("ircview_context_menu");
-
-    m_popup->addSeparator();
-
-    m_copyUrlClipBoard = new KAction(this);
-    m_copyUrlClipBoard->setIcon(KIcon("edit-copy"));
-    m_copyUrlClipBoard->setText(i18n("Copy Link Address"));
-    connect(m_copyUrlClipBoard, SIGNAL(triggered()), SLOT(copyUrl()));
-    m_popup->addAction(m_copyUrlClipBoard);
-    m_copyUrlClipBoard->setVisible( false );
-
-    // Not using KStandardAction is intentional here since the Ctrl+B
-    // shortcut it would show in the menu is already used by our IRC
-    // wide bookmarking feature.
-    m_bookmark = new KAction(this);
-    m_bookmark->setIcon(KIcon("bookmark-new"));
-    m_bookmark->setText(i18n("Add to Bookmarks"));
-    connect(m_bookmark, SIGNAL(triggered()), SLOT(slotBookmark()));
-    m_popup->addAction(m_bookmark);
-    m_bookmark->setVisible(false);
-
-    m_saveUrl = new KAction(this);
-    m_saveUrl->setIcon(KIcon("document-save"));
-    m_saveUrl->setText(i18n("Save Link As..."));
-    connect(m_saveUrl, SIGNAL(triggered()), SLOT(saveLinkAs()));
-    m_popup->addAction(m_saveUrl);
-    m_saveUrl->setVisible(false);
-
-    QAction* toggleMenuBarSeparator = m_popup->addSeparator();
-    toggleMenuBarSeparator->setVisible(false);
-    copyUrlMenuSeparator = m_popup->addSeparator();
-    copyUrlMenuSeparator->setVisible(false);
-
-    KAction* copyAct = KStandardAction::copy(this, SLOT(copy()), this);
-    m_popup->addAction(copyAct);
-    connect(this, SIGNAL(copyAvailable(bool)), copyAct, SLOT(setEnabled(bool)));
-    copyAct->setEnabled(false);
-
-    KAction* selectAllAct = KStandardAction::selectAll(this, SLOT(selectAll()), this);
-    m_popup->addAction(selectAllAct);
-
-#if KDE_IS_VERSION(4,5,0)
-    m_webShortcutMenu = new KMenu(this);
-    m_popup->addMenu(m_webShortcutMenu);
-    m_webShortcutMenu->menuAction()->setIcon(KIcon("preferences-web-browser-shortcuts"));
-    m_webShortcutMenu->menuAction()->setVisible(false);
-#endif
-
-    KActionCollection* actionCollection = Application::instance()->getMainWindow()->actionCollection();
-    QAction* findTextAct = actionCollection->action(KStandardAction::name(KStandardAction::Find));
-    m_popup->addAction(findTextAct);
-}
-void IRCView::setupNickPopupMenu(bool isQuery)
-{
-    m_nickPopup = new KMenu(this);
-    m_nickPopup->setObjectName("nicklist_context_menu");
-    m_nickPopup->setTitle(m_currentNick);
-
-    QAction* action = m_nickPopup->addAction(i18n("&Whois"), this, SLOT(handleContextActions()));
-    action->setData(Konversation::Whois);
-    action = m_nickPopup->addAction(i18n("&Version"), this, SLOT(handleContextActions()));
-    action->setData(Konversation::Version);
-    action = m_nickPopup->addAction(i18n("&Ping"), this, SLOT(handleContextActions()));
-    action->setData(Konversation::Ping);
-
-    m_nickPopup->addSeparator();
-
-    if(!isQuery)
-    {
-        QMenu* modes = m_nickPopup->addMenu(i18n("Modes"));
-        action = modes->addAction(i18n("Give Op"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::GiveOp);
-        action->setIcon(KIcon("irc-operator"));
-        action = modes->addAction(i18n("Take Op"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::TakeOp);
-        action->setIcon(KIcon("irc-remove-operator"));
-        action = modes->addAction(i18n("Give Voice"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::GiveVoice);
-        action->setIcon(KIcon("irc-voice"));
-        action = modes->addAction(i18n("Take Voice"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::TakeVoice);
-        action->setIcon(KIcon("irc-unvoice"));
-
-        QMenu* kickban = m_nickPopup->addMenu(i18n("Kick / Ban"));
-        action = kickban->addAction(i18n("Kick"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::Kick);
-        action = kickban->addAction(i18n("Kickban"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::KickBan);
-        action = kickban->addAction(i18n("Ban Nickname"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::BanNick);
-        kickban->addSeparator();
-        action = kickban->addAction(i18n("Ban *!*@*.host"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::BanHost);
-        action = kickban->addAction(i18n("Ban *!*@domain"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::BanDomain);
-        action = kickban->addAction(i18n("Ban *!user@*.host"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::BanUserHost);
-        action = kickban->addAction(i18n("Ban *!user@domain"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::BanUserDomain);
-        kickban->addSeparator();
-        action = kickban->addAction(i18n("Kickban *!*@*.host"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::KickBanHost);
-        action = kickban->addAction(i18n("Kickban *!*@domain"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::KickBanDomain);
-        action = kickban->addAction(i18n("Kickban *!user@*.host"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::KickBanUserHost);
-        action = kickban->addAction(i18n("Kickban *!user@domain"), this, SLOT(handleContextActions()));
-        action->setData(Konversation::KickBanUserDomain);
-    }
-
-    m_ignoreAction = new KToggleAction(i18n("Ignore"), this);
-    m_ignoreAction->setCheckedState(KGuiItem(i18n("Unignore")));
-    m_ignoreAction->setData(Konversation::IgnoreNick);
-    m_nickPopup->addAction(m_ignoreAction);
-    connect(m_ignoreAction, SIGNAL(triggered()), this, SLOT(handleContextActions()));
 
-    m_nickPopup->addSeparator();
-
-    action = m_nickPopup->addAction(i18n("Open Query"), this, SLOT(handleContextActions()));
-    action->setData(Konversation::OpenQuery);
-
-    KConfigGroup config = KGlobal::config()->group("KDE Action Restrictions");
-
-    if(config.readEntry<bool>("allow_downloading", true))
-    {
-        action = m_nickPopup->addAction(SmallIcon("arrow-right-double"),i18n("Send &File..."), this, SLOT(handleContextActions()));
-        action->setData(Konversation::DccSend);
+        emit setStatusBarTempText(i18n("Join the channel %1", m_currentChannel));
     }
-
-    m_nickPopup->addSeparator();
-
-    m_addNotifyAction = m_nickPopup->addAction(i18n("Add to Watched Nicks"), this, SLOT(handleContextActions()));
-    m_addNotifyAction->setData(Konversation::AddNotify);
 }
 
-void IRCView::setNickAndChannelContextMenusEnabled(bool enable)
+void IRCView::setContextMenuOptions(IrcContextMenus::MenuOptions options, bool on)
 {
-    if (m_nickPopup) m_nickPopup->setEnabled(enable);
-    if (m_channelPopup) m_channelPopup->setEnabled(enable);
-}
-
-const QString& IRCView::getContextNick() const
-{
-    return m_currentNick;
-}
-
-void IRCView::clearContextNick()
-{
-    m_currentNick.clear();
-}
-
-void IRCView::updateNickMenuEntries(const QString& nickname)
-{
-    if (Preferences::isIgnored(nickname))
-    {
-        m_ignoreAction->setChecked(true);
-        m_ignoreAction->setData(Konversation::UnignoreNick);
-    }
+    if (on)
+        m_contextMenuOptions |= options;
     else
-    {
-        m_ignoreAction->setChecked(false);
-        m_ignoreAction->setData(Konversation::IgnoreNick);
-    }
-
-    if (!m_server || !m_server->getServerGroup() || !m_server->isConnected() || !Preferences::hasNotifyList(m_server->getServerGroup()->id())
-        || Preferences::isNotify(m_server->getServerGroup()->id(), nickname))
-    {
-        m_addNotifyAction->setEnabled(false);
-    }
-    else
-    {
-        m_addNotifyAction->setEnabled(true);
-    }
-}
-
-void IRCView::setupChannelPopupMenu()
-{
-    m_channelPopup = new KMenu(this);
-    m_channelPopup->setObjectName("channel_context_menu");
-    m_channelPopup->setTitle(m_currentChannel);
-
-    QAction* action = m_channelPopup->addAction(i18n("&Join Channel..."), this, SLOT(handleContextActions()));
-    action->setData(Konversation::Join);
-    action->setIcon(KIcon("irc-join-channel"));
-    action = m_channelPopup->addAction(i18n("Get &user list"), this, SLOT(handleContextActions()));
-    action->setData(Konversation::Names);
-    action = m_channelPopup->addAction(i18n("Get &topic"), this, SLOT(handleContextActions()));
-    action->setData(Konversation::Topic);
+        m_contextMenuOptions &= ~options;
 }
 
 void IRCView::contextMenuEvent(QContextMenuEvent* ev)
 {
-    if (m_nickPopup && m_server && m_isOnNick && m_nickPopup->isEnabled())
+    if (m_isOnChannel && m_server)
     {
-        updateNickMenuEntries(getContextNick());
+        IrcContextMenus::channelMenu(ev->globalPos(), m_server, m_currentChannel);
 
-        if(m_nickPopup->exec(ev->globalPos()) == 0)
-            clearContextNick();
-
-        m_isOnNick = false;
-    }
-    else if (m_channelPopup && m_server && m_isOnChannel && m_channelPopup->isEnabled())
-    {
-        m_channelPopup->exec(ev->globalPos());
         m_isOnChannel = false;
-    }
-    else
-    {
-        KActionCollection* actionCollection = Application::instance()->getMainWindow()->actionCollection();
-        KToggleAction* toggleMenuBarAction = static_cast<KToggleAction*>(actionCollection->action("options_show_menubar"));
-        QAction* separator = NULL;
-
-        if (toggleMenuBarAction && !toggleMenuBarAction->isChecked())
-        {
-            m_popup->insertAction(m_copyUrlClipBoard, toggleMenuBarAction);
-            separator = m_popup->insertSeparator(m_copyUrlClipBoard);
-        }
-
-#if KDE_IS_VERSION(4,5,0)
-        updateWebShortcutMenu();
-#endif
 
-        m_popup->exec(ev->globalPos());
-
-        if(separator)
-        {
-            m_popup->removeAction(toggleMenuBarAction);
-            m_popup->removeAction(separator);
-        }
+        return;
     }
-}
-
-void IRCView::handleContextActions()
-{
-    QAction* action = qobject_cast<QAction*>(sender());
-
-    emit popupCommand(action->data().toInt());
-}
 
-void IRCView::updateWebShortcutMenu()
-{
-#if KDE_IS_VERSION(4,5,0)
-    m_webShortcutMenu->menuAction()->setVisible(false);
-    m_webShortcutMenu->clear();
+    if (m_isOnNick && m_server)
+    {
+        IrcContextMenus::nickMenu(ev->globalPos(), m_contextMenuOptions, m_server, QStringList() << m_currentNick,
+            m_contextMenuOptions.testFlag(IrcContextMenus::ShowChannelActions) ? m_chatWin->getName() : QString());
 
-    if (textCursor().selectedText().isEmpty())
-        return;
+        m_currentNick.clear();
 
-    QString selectedText = textCursor().selectedText().replace('\n', ' ').replace('\r', ' ').simplified();
+        m_isOnNick = false;
 
-    if (selectedText.isEmpty())
         return;
+    }
 
-    KUriFilterData filterData(selectedText);
-
-#if KDE_IS_VERSION(4,5,67)
-    filterData.setSearchFilteringOptions(KUriFilterData::RetrievePreferredSearchProvidersOnly);
-
-    if (KUriFilter::self()->filterSearchUri(filterData, KUriFilter::NormalTextFilter))
-#else
-    // Unfortunately if we don't do this here, then KUriFilterData::preferredSearchProviders()
-    // will later return an empty list when the user has his default search engine set to
-    // "None" in the Web Shortcuts configuration. I consider this nonsensical coupling between
-    // the default search engine setting and the list of enabled web shortcuts a bug in
-    // the kuriikwsfilter plugin, considering we don't actually have any interest in the default
-    // search engine. I picked Google because I expect that web shortcut to be around for some
-    // time to come.
-    filterData.setAlternateDefaultSearchProvider("google");
+    int contextMenuActionId = IrcContextMenus::textMenu(ev->globalPos(), m_contextMenuOptions, m_server,
+        textCursor().selectedText(), m_urlToCopy,
+        m_contextMenuOptions.testFlag(IrcContextMenus::ShowNickActions) ? m_chatWin->getName() : QString());
 
-    if (KUriFilter::self()->filterUri(filterData, QStringList() << "kuriikwsfilter"))
-#endif
+    switch (contextMenuActionId)
     {
-        const QStringList searchProviders = filterData.preferredSearchProviders();
-
-        if (!searchProviders.isEmpty())
-        {
-            m_webShortcutMenu->setTitle(i18n("Search for '%1' with",  KStringHandler::rsqueeze(selectedText, 21)));
-
-            KAction* action = 0;
-
-            foreach(const QString& searchProvider, searchProviders)
+        case -1:
+            break;
+        case IrcContextMenus::TextCopy:
+            copy();
+            break;
+        case IrcContextMenus::TextSelectAll:
+            selectAll();
+            break;
+        default:
+            if (m_contextMenuOptions.testFlag(IrcContextMenus::ShowNickActions))
             {
-                action = new KAction(searchProvider, m_webShortcutMenu);
-                action->setIcon(KIcon(filterData.iconNameForPreferredSearchProvider(searchProvider)));
-                action->setData(filterData.queryForPreferredSearchProvider(searchProvider));
-                connect(action, SIGNAL(triggered()), this, SLOT(handleWebShortcutAction()));
-                m_webShortcutMenu->addAction(action);
+                IrcContextMenus::processNickAction(contextMenuActionId, m_server, QStringList() << m_chatWin->getName(),
+                    m_contextMenuOptions.testFlag(IrcContextMenus::ShowChannelActions) ? m_chatWin->getName() : QString());
             }
-
-            m_webShortcutMenu->addSeparator();
-
-            action = new KAction(i18n("Configure Web Shortcuts..."), m_webShortcutMenu);
-            action->setIcon(KIcon("configure"));
-            connect(action, SIGNAL(triggered()), this, SLOT(configureWebShortcuts()));
-            m_webShortcutMenu->addAction(action);
-
-            m_webShortcutMenu->menuAction()->setVisible(true);
-        }
-    }
-#endif
-}
-
-void IRCView::handleWebShortcutAction()
-{
-#if KDE_IS_VERSION(4,5,0)
-    KAction* action = qobject_cast<KAction*>(sender());
-
-    if (action)
-    {
-        KUriFilterData filterData(action->data().toString());
-
-#if KDE_IS_VERSION(4,5,67)
-        if (KUriFilter::self()->filterSearchUri(filterData, KUriFilter::WebShortcutFilter))
-#else
-        if (KUriFilter::self()->filterUri(filterData, QStringList() << "kurisearchfilter"))
-#endif
-            Application::instance()->openUrl(filterData.uri().url());
+            break;
     }
-#endif
-}
-
-void IRCView::configureWebShortcuts()
-{
-#if KDE_IS_VERSION(4,5,0)
-    KToolInvocation::kdeinitExec("kcmshell4", QStringList() << "ebrowsing");
-#endif
 }
 
 // For more information about these RTFM
diff --git a/src/viewer/ircview.h b/src/viewer/ircview.h
index 0db5670..a56351c 100644
--- a/src/viewer/ircview.h
+++ b/src/viewer/ircview.h
@@ -15,21 +15,18 @@
 #define IRCVIEW_H
 
 #include "common.h"
+#include "irccontextmenus.h"
 
+#include <QAbstractTextDocumentLayout>
 #include <QFontDatabase>
-#include <QList>
 
 #include <KTextBrowser>
 #include <KUrl>
-#include <kdeversion.h>
+
 
 class Server;
 class ChatWindow;
 
-class KToggleAction;
-class KMenu;
-
-#include <QAbstractTextDocumentLayout>
 
 class IrcViewMarkerLine: public QObject, public QTextObjectInterface
 {
@@ -77,13 +74,6 @@ class IRCView : public KTextBrowser
         //! FIXME assumes the IRCView looks at a chatwin
         void setChatWin(ChatWindow* chatWin);
 
-        // Returns the current nick under context menu.
-        const QString& getContextNick() const;
-
-        //!Obtain the context menu popup in order to add things to it
-        KMenu* getPopup() const;
-
-
         bool search(const QString& pattern, bool caseSensitive, bool wholeWords, bool forward, bool fromCursor);
         bool searchNext(bool reversed = false);
 
@@ -92,19 +82,14 @@ class IRCView : public KTextBrowser
 
         void updateAppearance();
 
-        QString currentChannel() { return m_currentChannel; }
-
-        void setNickAndChannelContextMenusEnabled(bool enable);
-
+        void setContextMenuOptions(IrcContextMenus::MenuOptions options, bool on);
 
     signals:
         void gotFocus(); // So we can set focus to input line
         void textToLog(const QString& text); ///< send the to the log file
         void sendFile(); ///< a command for a target to which we can DCC send
-        void extendedPopup(int id); ///< this is for the query/nickname popup
         void autoText(const QString& text); ///< helper for autotext-on-highlight
         void textPasted(bool useSelection); ///< middle button with no m_copyUrlMenu
-        void popupCommand(int); ///< wired to all of the popup menus
         void urlsDropped(const KUrl::List urls);
         void doSearch(); /// Emitted when a search should be started
         void doSearchNext(); /// Emitted when there's a request to go to the next search result.
@@ -209,8 +194,6 @@ class IRCView : public KTextBrowser
     protected:
         void doAppend(const QString& line, bool rtl, bool self=false);
 
-        void updateNickMenuEntries(const QString& nickname);
-
     public slots:
         /// Emits the doSeach signal.
         void findText();
@@ -219,31 +202,18 @@ class IRCView : public KTextBrowser
         /// Emits the doSeachPrevious signal.
         void findPreviousText();
 
-        //! FIXME eh? what is this?
-        void setCurrentChannel(const QString& channel) { m_currentChannel = channel; }
-
         /// Overwritten so the scrollview remains not freaked out
         //virtual void removeSelectedText(int selNum=0);
         //! TODO FIXME meta, derived
         //virtual void scrollToBottom();            // Overwritten for internal reasons
 
-        // Clears context nick
-        //! The name of this method is unclear enough that it needs documentation, but clear enough that the documentation just needs to be a repeat of the name. Thanks for playing, but get some kills next time.
-        void clearContextNick();
-
         // Updates the scrollbar position
         //! Again. Really? Two in a row? Couldn't be more inventive, whoever you are? Come on, show some personality. Let your vocabulary loose! Because right now its looking like you don't know what you're taking about.
         //void updateScrollBarPos();
 
     protected slots:
         void highlightedSlot(const QString& link);
-        void saveLinkAs();
         void anchorClicked(const QUrl& url);
-        void copyUrl();
-        void slotBookmark();
-        void handleContextActions();
-        void handleWebShortcutAction();
-        void configureWebShortcuts();
 
     protected:
         void openLink(const QUrl &url);
@@ -316,12 +286,6 @@ class IRCView : public KTextBrowser
         virtual void keyPressEvent(QKeyEvent* ev);
         virtual void contextMenuEvent(QContextMenuEvent* ev);
 
-        bool contextMenu(QContextMenuEvent* ce);
-
-        void setupNickPopupMenu(bool isQuery);
-        void updateNickMenuEntries(KMenu* popup, const QString& nickname);
-        void setupChannelPopupMenu();
-
         QChar::Direction basicDirection(const QString &string);
 
         /// Returns a formated timestamp if timestamps are enabled else it returns QString::null
@@ -340,7 +304,6 @@ class IRCView : public KTextBrowser
         //used in ::filter
         QColor m_highlightColor;
 
-
         QString m_lastStatusText; //last sent status text to the statusbar. Is empty after clearStatusBarTempText()
 
         bool m_resetScrollbar; ///< decide if we should place the scrollbar at the bottom on show()
@@ -351,30 +314,9 @@ class IRCView : public KTextBrowser
         //TODO FIXME light this on fire and send it sailing down an uncharted river riddled with arrows
         Konversation::TabNotifyType m_tabNotification;
 
-
         //QString m_buffer; ///< our text
         Server* m_server; //! FIXME assumes we have a server
 
-        //// Popup menus
-        void setupContextMenu();
-        KMenu* m_popup; ///< text area context menu
-        QAction* copyUrlMenuSeparator;
-        QAction* m_copyUrlClipBoard;
-        QAction* m_bookmark;
-        QAction* m_saveUrl;
-        KToggleAction* m_ignoreAction;
-        QAction* m_addNotifyAction;
-        bool m_copyUrlMenu; ///<the menu we're popping up, is it for copying URI?
-        KMenu* m_nickPopup; ///<menu to show when context-click on a nickname
-        KMenu* m_channelPopup; ///<menu to show when context-click on a channel
-
-        void updateWebShortcutMenu();
-#if KDE_IS_VERSION(4,5,0)
-        KMenu* m_webShortcutMenu;
-#endif
-
-        QString m_urlToCopy; ///< the URL we might be about to copy
-
         //// RTL hack
         static QChar LRM;
         static QChar RLM;
@@ -384,12 +326,10 @@ class IRCView : public KTextBrowser
         static QChar LRO;
         static QChar PDF;
 
-        //// Nickname colorization
-        uint m_offset;
-        QStringList m_colorList;
-
+        IrcContextMenus::MenuOptions m_contextMenuOptions;
         QString m_currentNick;
         QString m_currentChannel;
+        QString m_urlToCopy; ///< the URL we might be about to copy
         bool m_isOnNick; ///< context menu click hit a nickname
         bool m_isOnChannel; ///< context menu click hit a channel
         bool m_mousePressed; ///< currently processing a mouse press
diff --git a/src/viewer/statuspanel.cpp b/src/viewer/statuspanel.cpp
index f885b44..ad488ee 100644
--- a/src/viewer/statuspanel.cpp
+++ b/src/viewer/statuspanel.cpp
@@ -64,7 +64,6 @@ StatusPanel::StatusPanel(QWidget* parent) : ChatWindow(parent)
     connect(statusInput,SIGNAL (submit()),this,SLOT(statusTextEntered()) );
     connect(statusInput,SIGNAL (textPasted(const QString&)),this,SLOT(textPasted(const QString&)) );
     connect(getTextView(), SIGNAL(textPasted(bool)), statusInput, SLOT(paste(bool)));
-    connect(getTextView(), SIGNAL(popupCommand(int)), this, SLOT(popupCommand(int)));
 
     connect(nicknameCombobox,SIGNAL (activated(int)),this,SLOT(nicknameComboboxChanged()));
     Q_ASSERT(nicknameCombobox->lineEdit());       //it should be editedable.  if we design it so it isn't, remove these lines.
@@ -327,7 +326,6 @@ QString StatusPanel::getChannelEncodingDefaultDesc()
 void StatusPanel::serverOnline(bool online)
 {
     //statusInput->setEnabled(online);
-    getTextView()->setNickAndChannelContextMenusEnabled(online);
     nicknameCombobox->setEnabled(online);
 }
 
@@ -337,20 +335,4 @@ void StatusPanel::setServer(Server* server)
     nicknameCombobox->setModel(m_server->nickListModel());
 }
 
-void StatusPanel::popupCommand(int command)
-{
-    switch(command)
-    {
-        case Konversation::Join:
-            m_server->queue("JOIN " + getTextView()->currentChannel());
-            break;
-        case Konversation::Topic:
-            m_server->requestTopic(getTextView()->currentChannel());
-            break;
-        case Konversation::Names:
-            m_server->queue("NAMES " + getTextView()->currentChannel(), Server::LowPriority);
-            break;
-    }
-}
-
 #include "statuspanel.moc"
diff --git a/src/viewer/statuspanel.h b/src/viewer/statuspanel.h
index 8f0dec4..c37d6f1 100644
--- a/src/viewer/statuspanel.h
+++ b/src/viewer/statuspanel.h
@@ -72,8 +72,6 @@ class StatusPanel : public ChatWindow
         //Used to disable functions when not connected
         virtual void serverOnline(bool online);
 
-        void popupCommand(int command);
-
     protected:
 
         /** Called from ChatWindow adjustFocus */
diff --git a/src/viewer/topiclabel.cpp b/src/viewer/topiclabel.cpp
index e219199..0f516f4 100644
--- a/src/viewer/topiclabel.cpp
+++ b/src/viewer/topiclabel.cpp
@@ -18,22 +18,13 @@
 #include "channel.h"
 
 #include <QClipboard>
-#include <QContextMenuEvent>
 #include <QResizeEvent>
-#include <QMenu>
+#include <QTextCursor>
 #include <QTextDocument>
 
-#include <KBookmarkManager>
-#include <kbookmarkdialog.h>
-#include <KShell>
-#include <KUrl>
-#include <KFileDialog>
-#include <KIO/CopyJob>
-
 
 namespace Konversation
 {
-
     TopicLabel::TopicLabel(QWidget *parent, const char *name)
         : QLabel(parent)
     {
@@ -44,7 +35,6 @@ namespace Konversation
         setTextInteractionFlags(Qt::TextBrowserInteraction);
 
         m_isOnChannel = false;
-        m_copyUrlMenu = false;
         m_server = NULL;
 
         connect(this, SIGNAL(linkActivated(const QString&)), this, SLOT(openLink (const QString&)));
@@ -104,51 +94,62 @@ namespace Konversation
         }
     }
 
-    void TopicLabel::contextMenuEvent(QContextMenuEvent* ev)
+    void TopicLabel::setContextMenuOptions(IrcContextMenus::MenuOptions options, bool on)
     {
-        bool block = contextMenu(ev);
-
-        if(!block)
-        {
-            QLabel::contextMenuEvent(ev);
-        }
+        if (on)
+            m_contextMenuOptions |= options;
+        else
+            m_contextMenuOptions &= ~options;
     }
 
-    bool TopicLabel::contextMenu(QContextMenuEvent* ce)
+    void TopicLabel::contextMenuEvent(QContextMenuEvent* ev)
     {
-        QMenu* menu = new QMenu(this);
-        bool actionsAdded = false;
-
-        if (m_isOnChannel)
+        if (m_isOnChannel && m_server)
         {
+            IrcContextMenus::channelMenu(ev->globalPos(), m_server, m_currentChannel);
+
             m_isOnChannel = false;
 
-            if (!m_currentChannel.isEmpty())
-            {
-                QAction* action = menu->addAction(i18n("&Join Channel..."), this, SLOT(joinChannel()));
-                action->setIcon(KIcon("irc-join-channel"));
-                menu->addAction(i18n("Get &user list"), this, SLOT (getChannelUserList()));
-                menu->addAction(i18n("Get &topic"), this, SLOT(getChannelTopic()));
-                actionsAdded = true;
-            }
+            return;
         }
-        else
+
+#if !(QT_VERSION >= QT_VERSION_CHECK(4, 7, 0))
+        if (m_contextMenuOptions.testFlag(IrcContextMenus::ShowLinkActions))
         {
-            if (m_copyUrlMenu)
-            {
-                menu->addAction(KIcon("edit-copy"), i18n("Copy Link Address"), this, SLOT (copyUrl()));
-                menu->addAction(KIcon("bookmark-new"), i18n("Add to Bookmarks"), this, SLOT (bookmarkUrl()));
-                menu->addAction(KIcon("document-save"), i18n("Save Link As..."), this, SLOT(saveLinkAs()));
-                actionsAdded = true;
-            }
+            IrcContextMenus::linkMenu(ev->globalPos(), m_urlToCopy);
+
+            return;
         }
 
-        if (actionsAdded)
-            menu->exec(ce->globalPos());
+        QLabel::contextMenuEvent(ev);
+#else
+        int contextMenuActionId = IrcContextMenus::textMenu(ev->globalPos(), m_contextMenuOptions,
+            m_server, selectedText(), m_urlToCopy);
+
+        switch (contextMenuActionId)
+        {
+            case -1:
+                break;
+            case IrcContextMenus::TextCopy:
+            {
+                QClipboard* clipboard = qApp->clipboard();
+                clipboard->setText(selectedText(), QClipboard::Clipboard);
+
+                break;
+            }
+            case IrcContextMenus::TextSelectAll:
+            {
+                QTextDocument doc;
+                doc.setHtml(text());
 
-        delete menu;
+                setSelection(0, doc.toPlainText().length());
 
-        return actionsAdded;
+                break;
+            }
+            default:
+                break;
+        }
+#endif
     }
 
     void TopicLabel::setText(const QString& text)
@@ -244,9 +245,9 @@ namespace Konversation
                 emit clearStatusBarTempText();
                 m_lastStatusText.clear();
             }
-        } else {
-            m_lastStatusText = link;
         }
+        else
+            m_lastStatusText = link;
 
         if (!link.startsWith('#'))
         {
@@ -256,14 +257,12 @@ namespace Konversation
                 //link therefore != m_lastStatusText  so emit with this new text
                 emit setStatusBarTempText(link);
             }
-            if (link.isEmpty() && m_copyUrlMenu)
-            {
-                m_copyUrlMenu = false;
-            }
-            else if (!link.isEmpty() && !m_copyUrlMenu)
+            if (link.isEmpty() && m_contextMenuOptions.testFlag(IrcContextMenus::ShowLinkActions))
+                setContextMenuOptions(IrcContextMenus::ShowLinkActions, false);
+            else if (!link.isEmpty() && !m_contextMenuOptions.testFlag(IrcContextMenus::ShowLinkActions))
             {
-                m_copyUrlMenu = true;
                 m_urlToCopy = link;
+                setContextMenuOptions(IrcContextMenus::ShowLinkActions, true);
             }
         }
         else if (link.startsWith(QLatin1String("##")))
@@ -274,65 +273,6 @@ namespace Konversation
         }
     }
 
-    void TopicLabel::copyUrl()
-    {
-        if (m_urlToCopy.isEmpty())
-            return;
-
-        QClipboard *cb = QApplication::clipboard();
-        cb->setText(m_urlToCopy,QClipboard::Selection);
-        cb->setText(m_urlToCopy,QClipboard::Clipboard);
-    }
-
-    void TopicLabel::bookmarkUrl()
-    {
-        if (m_urlToCopy.isEmpty())
-            return;
-
-        KBookmarkManager* bm = KBookmarkManager::userBookmarksManager();
-        KBookmarkDialog* dialog = new KBookmarkDialog(bm, this);
-        dialog->addBookmark(m_urlToCopy, m_urlToCopy);
-        delete dialog;
-    }
-
-    void TopicLabel::joinChannel()
-    {
-        if(m_currentChannel.isEmpty() || !m_server || !m_server->isConnected())
-            return;
-
-        m_server->sendJoinCommand(m_currentChannel);
-    }
-
-    void TopicLabel::getChannelUserList()
-    {
-        if(m_currentChannel.isEmpty() || !m_server || !m_server->isConnected())
-            return;
-
-        m_server->queue("NAMES " + m_currentChannel, Server::LowPriority);
-    }
-
-    void TopicLabel::getChannelTopic()
-    {
-        if(m_currentChannel.isEmpty() || !m_server || !m_server->isConnected())
-            return;
-
-        m_server->requestTopic(m_currentChannel);
-    }
-
-    void TopicLabel::saveLinkAs()
-    {
-        if(m_urlToCopy.isEmpty())
-            return;
-
-        KUrl srcUrl (m_urlToCopy);
-        KUrl saveUrl = KFileDialog::getSaveUrl(srcUrl.fileName(KUrl::ObeyTrailingSlash), QString(), this, i18n("Save link as"));
-
-        if (saveUrl.isEmpty() || !saveUrl.isValid())
-            return;
-
-        KIO::copy(srcUrl, saveUrl);
-    }
-
     QString TopicLabel::tagUrls(const QString& text, const QString& sender)
     {
         QString htmlText(removeIrcMarkup(text));
diff --git a/src/viewer/topiclabel.h b/src/viewer/topiclabel.h
index be6e7d3..eddc622 100644
--- a/src/viewer/topiclabel.h
+++ b/src/viewer/topiclabel.h
@@ -13,6 +13,8 @@
 #ifndef KONVERSATIONTOPICLABEL_H
 #define KONVERSATIONTOPICLABEL_H
 
+#include "irccontextmenus.h"
+
 #include <QLabel>
 
 
@@ -20,7 +22,6 @@ class Server;
 
 namespace Konversation
 {
-
     class TopicLabel : public QLabel
     {
         Q_OBJECT
@@ -34,6 +35,8 @@ namespace Konversation
             void setServer(Server* server);
             void setChannelName(const QString& channel);
 
+            void setContextMenuOptions(IrcContextMenus::MenuOptions options, bool on);
+
         public slots:
             virtual void openLink(const QString& link);
             void setText(const QString& text);
@@ -49,19 +52,10 @@ namespace Konversation
             virtual void leaveEvent (QEvent*);
             virtual void contextMenuEvent(QContextMenuEvent* ev);
             void resizeEvent(QResizeEvent*);
-            bool contextMenu(QContextMenuEvent* ce);
 
         protected slots:
             void highlightedSlot(const QString&);
 
-            void joinChannel();
-            void getChannelUserList();
-            void getChannelTopic();
-
-            void copyUrl();
-            void bookmarkUrl();
-            void saveLinkAs();
-
         private:
             inline QString tagUrls(const QString& text, const QString& sender);
 
@@ -70,11 +64,10 @@ namespace Konversation
 
             QString m_fullText;
             QString m_lastStatusText;
-            QString m_highlightedURL;
+
+            IrcContextMenus::MenuOptions m_contextMenuOptions;
             QString m_currentChannel;
             bool m_isOnChannel;
-            int m_nickPopupId;
-            bool m_copyUrlMenu;
             QString m_urlToCopy;
     };
 
diff --git a/src/viewer/viewcontainer.cpp b/src/viewer/viewcontainer.cpp
index 5c10e9c..b198bbf 100644
--- a/src/viewer/viewcontainer.cpp
+++ b/src/viewer/viewcontainer.cpp
@@ -35,6 +35,7 @@
 #include "joinchanneldialog.h"
 #include "servergroupsettings.h"
 #include "ircviewbox.h"
+#include "irccontextmenus.h"
 
 #include <QList>
 #include <QSplitter>
@@ -93,12 +94,25 @@ ViewContainer::ViewContainer(MainWindow* window):
     m_dccPanel->hide();
     m_dccPanelOpen = false;
     connect(m_dccPanel, SIGNAL(updateTabNotification(ChatWindow*,const Konversation::TabNotifyType&)), this, SLOT(setViewNotification(ChatWindow*,const Konversation::TabNotifyType&)));
+
+    // Pre-construct context menus for better responsiveness when then
+    // user opens them the first time. This is optional; the IrcContext-
+    // Menus API would work fine without doing this here.
+    // IrcContextMenus' setup code calls Application::instance(), and
+    // ViewContainer is constructed in the scope of the Application
+    // constructor, so to avoid a crash we need to queue.
+    QMetaObject::invokeMethod(this, "setupIrcContextMenus", Qt::QueuedConnection);
 }
 
 ViewContainer::~ViewContainer()
 {
 }
 
+void ViewContainer::setupIrcContextMenus()
+{
+    IrcContextMenus::self();
+}
+
 void ViewContainer::showQueueTuner(bool p)
 {
     if (p)
diff --git a/src/viewer/viewcontainer.h b/src/viewer/viewcontainer.h
index 134277c..48b3ee2 100644
--- a/src/viewer/viewcontainer.h
+++ b/src/viewer/viewcontainer.h
@@ -204,6 +204,7 @@ class ViewContainer : public QObject
         void frontServerChanging(Server*);
 
     private slots:
+        void setupIrcContextMenus();
         void viewSwitched(int newIndex);
 
     private:

commit 35dd73eab0e8d3b126fd5e1276204822f7308b00
Author: Eike Hein <hein@kde.org>
Date:   Thu Sep 16 21:56:37 2010 +0200

    Add a missing initialization.
    
    Fixes a crash in DCC Chat when the connection can't be established.

diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 7e3d8b0..7b11d7a 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -103,6 +103,7 @@ IRCView::IRCView(QWidget* parent) : KTextBrowser(parent), m_nextCullIsMarker(fal
     m_isOnNick = false;
     m_isOnChannel = false;
     m_chatWin = 0;
+    m_server = 0;
 
     setAcceptDrops(false);
 

commit a2fca02b06d1d91c0f04aafc24db445b36e5f7a6
Author: Eike Hein <hein@kde.org>
Date:   Thu Sep 16 22:13:38 2010 +0200

    Fix opening irc:// and ircs:// URLs from the URL catcher.
    
    Also reduces code duplication between ircview and topiclabel a bit.

diff --git a/ChangeLog b/ChangeLog
index b75fb64..336802d 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -75,6 +75,8 @@ Changes since 1.3.1:
     file will now ask before overwriting an existing file of the same name.
   - The date and time in the header of a saved list file is now formatted
     according to the user's locale settings.
+  - Fixed a bug causing the opening of caught irc:// and ircs:// URLs not to
+    work.
   - Fixed a bug causing the "Date" column to sort alphabetically rather than
     chronologically.
   - Fixed a bug causing the deletion of list entries not to work.
diff --git a/src/application.cpp b/src/application.cpp
index 7f06750..510e165 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -1153,6 +1153,8 @@ void Application::openUrl(const QString& url)
 {
     if (!Preferences::self()->useCustomBrowser() || url.startsWith(QLatin1String("mailto:")) || url.startsWith(QLatin1String("amarok:")))
     {
+        if (url.startsWith(QLatin1String("irc://")) || url.startsWith(QLatin1String("ircs://")))
+            Application::instance()->getConnectionManager()->connectTo(Konversation::SilentlyReuseConnection, url);
         if (url.startsWith(QLatin1String("mailto:")))
             KToolInvocation::invokeMailer(KUrl(url));
         else if (url.startsWith(QLatin1String("amarok:")))
diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index 7b11d7a..cd342d7 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -1966,15 +1966,7 @@ void IRCView::openLink(const QUrl& url)
     link = link.replace (' ', "%20");
 
     if (!link.isEmpty() && !link.startsWith('#'))
-    {
-        if (link.startsWith(QLatin1String("irc://")) || link.startsWith(QLatin1String("ircs://")))
-        {
-            Application* konvApp = Application::instance();
-            konvApp->getConnectionManager()->connectTo(Konversation::SilentlyReuseConnection, link);
-        }
-        else
-            Application::openUrl(url.toEncoded());
-    }
+        Application::openUrl(url.toEncoded());
     //FIXME: Don't do channel links in DCC Chats to begin with since they don't have a server.
     else if (link.startsWith(QLatin1String("##")) && m_server && m_server->isConnected())
     {
diff --git a/src/viewer/topiclabel.cpp b/src/viewer/topiclabel.cpp
index 0f516f4..5bbd706 100644
--- a/src/viewer/topiclabel.cpp
+++ b/src/viewer/topiclabel.cpp
@@ -77,12 +77,7 @@ namespace Konversation
     {
         if (!link.isEmpty())
         {
-            if (link.startsWith(QLatin1String("irc://")) || link.startsWith(QLatin1String("ircs://")))
-            {
-                Application* konvApp = static_cast<Application*>(kapp);
-                konvApp->getConnectionManager()->connectTo(Konversation::SilentlyReuseConnection, link);
-            }
-            else if (link.startsWith('#') && m_server && m_server->isConnected())
+            if (link.startsWith('#') && m_server && m_server->isConnected())
             {
                 QString channel(link);
                 channel.replace("##","#");

commit 1fa29d246f26514fedc2117590ea155db219dff9
Author: Eike Hein <hein@kde.org>
Date:   Thu Sep 16 23:57:02 2010 +0200

    Add support for the 482 numeric (ERR_CHANOPRIVSNEEDED).

diff --git a/ChangeLog b/ChangeLog
index 336802d..9e573f7 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -251,7 +251,7 @@ Changes since 1.3.1:
   - The code implementing the various actions was in many cases redundantly
     implemented in three different places, for some even in four. This stag-
     gering code duplication has been done away with.
-
+* Added support for the 482 numeric (ERR_CHANOPRIVSNEEDED).
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/irc/inputfilter.cpp b/src/irc/inputfilter.cpp
index 466298b..d057d20 100644
--- a/src/irc/inputfilter.cpp
+++ b/src/irc/inputfilter.cpp
@@ -1297,6 +1297,14 @@ void InputFilter::parseServerCommand(const QString &prefix, const QString &comma
                 }
                 break;
             }
+            case ERR_CHANOPRIVSNEEDED:
+            {
+                if (plHas(2))
+                {
+                    server->appendMessageToFrontmost(i18n("Error"), i18n("You need to be a channel operator in %1 to do that.", parameterList.value(1)));
+                }
+                break;
+            }
             case RPL_YOUREOPER:
             {
                 if (plHas(1))

commit cfe1095d3bd7596978bb27d45c4d18aea4bf5732
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 17 00:01:32 2010 +0200

    Fix /kickban not falling back to the identity's default kick reason.

diff --git a/ChangeLog b/ChangeLog
index 9e573f7..e86bc11 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -252,6 +252,8 @@ Changes since 1.3.1:
     implemented in three different places, for some even in four. This stag-
     gering code duplication has been done away with.
 * Added support for the 482 numeric (ERR_CHANOPRIVSNEEDED).
+* Fixed a bug causing the '/kickban' command not use the default kick reason
+  from the Identity settings if no reason was explicitly specified.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/irc/outputfilter.cpp b/src/irc/outputfilter.cpp
index 3e1d2f2..a12976e 100644
--- a/src/irc/outputfilter.cpp
+++ b/src/irc/outputfilter.cpp
@@ -1386,6 +1386,9 @@ namespace Konversation
 
                         QString reason = parameterList.join(" ");
 
+                        if (reason.isEmpty())
+                            reason = m_server->getIdentity()->getKickReason();
+
                         result.toServer = "KICK " + channel + ' ' + victim + " :" + reason;
 
                         emit banUsers(QStringList(victim), channel, option);

commit ec24e0d83ac2847bf3e297265b41a8211c700bcc
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 17 00:02:57 2010 +0200

    Simplify.

diff --git a/src/viewer/viewcontainer.cpp b/src/viewer/viewcontainer.cpp
index b198bbf..927a8ce 100644
--- a/src/viewer/viewcontainer.cpp
+++ b/src/viewer/viewcontainer.cpp
@@ -2092,13 +2092,10 @@ void ViewContainer::openLogFile()
 {
     if (m_frontView)
     {
-        ChatWindow* view=static_cast<ChatWindow*>(m_frontView);
-        ChatWindow::WindowType viewType=view->getType();
-        if (viewType==ChatWindow::Channel || viewType==ChatWindow::Query ||
-            viewType==ChatWindow::Status || viewType==ChatWindow::DccChat)
-        {
+        ChatWindow* view = static_cast<ChatWindow*>(m_frontView);
+
+        if (!view->logFileName().isEmpty())
             openLogFile(view->getName(), view->logFileName());
-        }
     }
 }
 

commit a5d874391c12714bca7c059167987e12589cf21e
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 17 00:26:08 2010 +0200

    Fix build with KDE <4.5.

diff --git a/src/viewer/irccontextmenus.cpp b/src/viewer/irccontextmenus.cpp
index a26f66d..e76bfb9 100644
--- a/src/viewer/irccontextmenus.cpp
+++ b/src/viewer/irccontextmenus.cpp
@@ -41,11 +41,11 @@
 #include <KMenu>
 #include <KMessageBox>
 #include <KStandardAction>
+#include <KStringHandler>
 #include <KToggleAction>
 
 // For the Web Shortcuts context menu sub-menu.
 #if KDE_IS_VERSION(4, 5, 0)
-#include <KStringHandler>
 #include <KToolInvocation>
 #include <KUriFilter>
 #endif

commit ca28d38a8a22dbf7817f66a0606906d46a702fc5
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 17 00:46:55 2010 +0200

    Unneeded.

diff --git a/src/viewer/irccontextmenus.cpp b/src/viewer/irccontextmenus.cpp
index e76bfb9..e257ec9 100644
--- a/src/viewer/irccontextmenus.cpp
+++ b/src/viewer/irccontextmenus.cpp
@@ -29,7 +29,6 @@
 
 #include <QClipboard>
 
-#include <KAction>
 #include <KActionCollection>
 #include <KAuthorized>
 #include <KBookmarkDialog>

commit 431634dedea4ee764e8c2ca2589b72afbe7db076
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 17 01:00:25 2010 +0200

    Fix ircview ignore confirmation when done from the context menu.

diff --git a/src/irc/outputfilter.cpp b/src/irc/outputfilter.cpp
index a12976e..afc744f 100644
--- a/src/irc/outputfilter.cpp
+++ b/src/irc/outputfilter.cpp
@@ -1583,19 +1583,14 @@ namespace Konversation
             // Print all successful unignores, in case there were any
             if (succeeded.count() >= 1)
             {
-                //FIXME Why is this not just using the OutputFilterResult?
-                m_server->appendMessageToFrontmost(i18n("Ignore"),i18n("Removed %1 from your ignore list.",
-                                                                       succeeded.join(", ")));
+                result.output = i18n("Removed %1 from your ignore list.", succeeded.join(", "));
+                result.typeString = i18n("Ignore");
+                result.type = Program;
             }
 
             // Any failed unignores
             if (failed.count() >= 1)
-            {
-                //FIXME Why is this not just using the OutputFilterResult?
-                m_server->appendMessageToFrontmost(i18n("Error"),i18np("No such ignore: %2",
-                                                                       "No such ignores: %2",
-                                                                       failed.count(), failed.join(", ")));
-            }
+                result = error(i18np("No such ignore: %2", "No such ignores: %2", failed.count(), failed.join(", ")));
         }
 
         return result;
diff --git a/src/viewer/irccontextmenus.cpp b/src/viewer/irccontextmenus.cpp
index e257ec9..f3c1984 100644
--- a/src/viewer/irccontextmenus.cpp
+++ b/src/viewer/irccontextmenus.cpp
@@ -1032,7 +1032,18 @@ int IrcContextMenus::extractActionId(QAction* action)
 
 void IrcContextMenus::commandToServer(Server* server, const QString& command, const QString& destination)
 {
-    server->queue(server->getOutputFilter()->parse("", Preferences::self()->commandChar()+command, destination).toServer);
+    Konversation::OutputFilterResult result = server->getOutputFilter()->parse("", Preferences::self()->commandChar() + command, destination);
+
+    if (!result.toServer.isEmpty())
+        server->queue(result.toServer);
+
+    if (!result.output.isEmpty())
+        server->appendMessageToFrontmost(result.typeString, result.output);
+    else if (!result.outputList.isEmpty())
+    {
+        foreach(const QString& output, result.outputList)
+            server->appendMessageToFrontmost(result.typeString, output);
+    }
 }
 
 void IrcContextMenus::commandToServer(Server* server, const QString& command,

commit a02d2bb6a92959ae88ee4d205c8ecfd76b2c6f3a
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 17 01:02:15 2010 +0200

    Drop inline.

diff --git a/src/viewer/irccontextmenus.h b/src/viewer/irccontextmenus.h
index 4b3765d..5d6e79c 100644
--- a/src/viewer/irccontextmenus.h
+++ b/src/viewer/irccontextmenus.h
@@ -150,7 +150,7 @@ class IrcContextMenus : public QObject
 
         static int extractActionId(QAction* action);
 
-        static inline void commandToServer(Server* server, const QString& command,
+        static void commandToServer(Server* server, const QString& command,
             const QString& destination = QString());
         static inline void commandToServer(Server* server, const QString& command,
             const QStringList& arguments, const QString& destination = QString());

commit dc66897f0b4ce7c4b10b3d51b8fec412432428b3
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 17 01:04:45 2010 +0200

    Queue already checks.

diff --git a/src/viewer/irccontextmenus.cpp b/src/viewer/irccontextmenus.cpp
index f3c1984..22cbfe1 100644
--- a/src/viewer/irccontextmenus.cpp
+++ b/src/viewer/irccontextmenus.cpp
@@ -1034,8 +1034,7 @@ void IrcContextMenus::commandToServer(Server* server, const QString& command, co
 {
     Konversation::OutputFilterResult result = server->getOutputFilter()->parse("", Preferences::self()->commandChar() + command, destination);
 
-    if (!result.toServer.isEmpty())
-        server->queue(result.toServer);
+    server->queue(result.toServer);
 
     if (!result.output.isEmpty())
         server->appendMessageToFrontmost(result.typeString, result.output);

commit b1600e7d35718378b7c84db94797ccc7699dd1d4
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 17 01:33:19 2010 +0200

    Missing dash ... in a comment.

diff --git a/src/viewer/irccontextmenus.cpp b/src/viewer/irccontextmenus.cpp
index 22cbfe1..51ec547 100644
--- a/src/viewer/irccontextmenus.cpp
+++ b/src/viewer/irccontextmenus.cpp
@@ -112,7 +112,7 @@ void IrcContextMenus::setupTextMenu()
 
     m_linkActions << createAction(m_textMenu, LinkCopy, KIcon("edit-copy"), i18n("Copy Link Address"));
     // Not using KStandardAction is intentional here since the Ctrl+B
-    // shortcut it would show in the menu is already used by our IRC
+    // shortcut it would show in the menu is already used by our IRC-
     // wide bookmarking feature.
     m_linkActions << createAction(m_textMenu, LinkBookmark, KIcon("bookmark-new"), i18n("Add to Bookmarks"));
     m_linkActions << createAction(m_textMenu, LinkSaveAs, KIcon("document-save"), i18n("Save Link As..."));

commit 0bff27812e6a4c2ef5c042d3668192dc87a1b8fe
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 17 04:05:35 2010 +0200

    Unneeded.

diff --git a/src/viewer/irccontextmenus.cpp b/src/viewer/irccontextmenus.cpp
index 51ec547..b1bdb97 100644
--- a/src/viewer/irccontextmenus.cpp
+++ b/src/viewer/irccontextmenus.cpp
@@ -34,9 +34,7 @@
 #include <KBookmarkDialog>
 #include <KBookmarkManager>
 #include <KFileDialog>
-#include <KGlobal>
 #include <KIO/CopyJob>
-#include <KLocale>
 #include <KMenu>
 #include <KMessageBox>
 #include <KStandardAction>

commit 34c742f6dc7eabffe7149e82372cd74799b5734d
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 17 04:31:41 2010 +0200

    Remove separator for consistency with the tab context menu.

diff --git a/data/konversationui.rc b/data/konversationui.rc
index 763a23b..171d32a 100644
--- a/data/konversationui.rc
+++ b/data/konversationui.rc
@@ -1,5 +1,5 @@
 <!DOCTYPE kpartgui>
-<kpartgui name="konversation" version="53">
+<kpartgui name="konversation" version="54">
 
   <MenuBar>
     <Menu name="file">
@@ -8,7 +8,6 @@
       <Separator />
       <Action name="disconnect_server" />
       <Action name="reconnect_server" />
-      <Separator />
       <Action name="join_channel" />
       <Separator />
       <Action name="toggle_away" />

commit 5fc0823a53b0bf30c20e416eb4e1220391097984
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 17 05:08:04 2010 +0200

    Include cleanups.

diff --git a/src/application.cpp b/src/application.cpp
index 510e165..343e826 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -30,8 +30,6 @@
 #include "channel.h"
 #include "images.h"
 #include "notificationhandler.h"
-#include "commit.h"
-#include "version.h"
 
 #ifdef HAVE_KIDLETIME
 #include "awaymanagerkidletime.h"
diff --git a/src/application.h b/src/application.h
index 88a7656..c95ca42 100644
--- a/src/application.h
+++ b/src/application.h
@@ -18,9 +18,9 @@
 
 #include "preferences.h"
 #include "mainwindow.h"
+#include "server.h"
 #include "osd.h"
 #include "identity.h"
-#include "nickinfo.h"
 #include "ircqueue.h"
 
 #include <KUniqueApplication>
diff --git a/src/irc/channel.cpp b/src/irc/channel.cpp
index 520a2e2..48c9fd5 100644
--- a/src/irc/channel.cpp
+++ b/src/irc/channel.cpp
@@ -24,16 +24,11 @@
 #include "ircinput.h"
 #include "ircviewbox.h"
 #include "ircview.h"
-#include "common.h"
 #include "topiclabel.h"
 #include "notificationhandler.h"
 #include "viewcontainer.h"
 
-#include <QEvent>
-#include <QSizePolicy>
-#include <QRegExp>
 #include <QSplitter>
-#include <QCheckBox>
 #include <QTimer>
 #include <QToolButton>
 #include <QHeaderView>
@@ -41,7 +36,6 @@
 #include <KLineEdit>
 #include <KInputDialog>
 #include <KPasswordDialog>
-#include <KGlobalSettings>
 #include <KMessageBox>
 #include <KIconLoader>
 #include <KVBox>
diff --git a/src/irc/outputfilter.cpp b/src/irc/outputfilter.cpp
index afc744f..311569e 100644
--- a/src/irc/outputfilter.cpp
+++ b/src/irc/outputfilter.cpp
@@ -16,6 +16,7 @@
 #include "outputfilter.h"
 #include "application.h"
 #include "mainwindow.h"
+#include "channel.h"
 #include "abstractawaymanager.h"
 #include "ignore.h"
 #include "server.h"
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index 388bf76..47799c5 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -25,28 +25,22 @@
 #include "transfermanager.h"
 #include "transfersend.h"
 #include "transferrecv.h"
-#include <chat.h>
+#include "chat.h"
 #include "recipientdialog.h"
 #include "nick.h"
 #include "irccharsets.h"
 #include "viewcontainer.h"
-#include "statuspanel.h"
 #include "rawlog.h"
 #include "channellistpanel.h"
-#include "servergroupsettings.h"
 #include "addressbook.h"
 #include "scriptlauncher.h"
 #include "serverison.h"
-#include "common.h"
 #include "notificationhandler.h"
 #include "abstractawaymanager.h"
 
-#include <QRegExp>
 #include <QTextCodec>
-#include <QDateTime>
 #include <QStringListModel>
 
-#include <KLocale>
 #include <KFileDialog>
 #include <KInputDialog>
 #include <KWindowSystem>
diff --git a/src/irc/server.h b/src/irc/server.h
index 63923ca..c49d2aa 100644
--- a/src/irc/server.h
+++ b/src/irc/server.h
@@ -45,7 +45,6 @@ class QAbstractItemModel;
 class QStringListModel;
 class Channel;
 class Query;
-//class StatusPanel;
 class Identity;
 class RawLog;
 class ChannelListPanel;
diff --git a/src/mainwindow.cpp b/src/mainwindow.cpp
index ec2f5a6..8f21e05 100644
--- a/src/mainwindow.cpp
+++ b/src/mainwindow.cpp
@@ -29,7 +29,6 @@
 #include "abstractawaymanager.h"
 #include "transfermanager.h"
 
-
 #include <QSignalMapper>
 #include <QSplitter>
 
@@ -44,7 +43,6 @@
 #include <kdeversion.h>
 #include <KMenu>
 #include <KWindowSystem>
-#include <KGlobal>
 #include <kabc/addressbook.h>
 #include <kabc/errorhandler.h>
 #include <KShortcutsDialog>
diff --git a/src/mainwindow.h b/src/mainwindow.h
index 8cff7ba..54fa46a 100644
--- a/src/mainwindow.h
+++ b/src/mainwindow.h
@@ -16,11 +16,9 @@
 #ifndef MAINWINDOW_H
 #define MAINWINDOW_H
 
-#include "channel.h"
+#include "common.h"
 #include "preferences.h"
 #include "ssllabel.h"
-#include "nickinfo.h"
-#include "server.h"
 
 #include <QStringList>
 
@@ -30,6 +28,7 @@
 
 class KToggleAction;
 
+class Server;
 class KonviSettingsDialog;
 class ViewContainer;
 
diff --git a/src/viewer/ircinput.cpp b/src/viewer/ircinput.cpp
index 6716d47..05653a8 100644
--- a/src/viewer/ircinput.cpp
+++ b/src/viewer/ircinput.cpp
@@ -14,17 +14,13 @@
 
 #include "ircinput.h"
 #include "application.h"
-#include "chatwindow.h"
-#include "ircview.h"
 #include "pasteeditor.h"
-#include "viewcontainer.h"
 
 #include <QClipboard>
 #include <QKeyEvent>
 
 #include <KMessageBox>
 #include <KCompletionBox>
-#include <KStandardShortcut>
 #include <KActionCollection>
 
 #define MAXHISTORY 100
diff --git a/src/viewer/ircinput.h b/src/viewer/ircinput.h
index 23bcfb6..7526ecb 100644
--- a/src/viewer/ircinput.h
+++ b/src/viewer/ircinput.h
@@ -15,9 +15,7 @@
 #ifndef IRCINPUT_H
 #define IRCINPUT_H
 
-#include <QStringList>
-
-#include <ktextedit.h>
+#include <KTextEdit>
 
 
 class KCompletionBox;
diff --git a/src/viewer/ircview.cpp b/src/viewer/ircview.cpp
index cd342d7..cee7047 100644
--- a/src/viewer/ircview.cpp
+++ b/src/viewer/ircview.cpp
@@ -18,29 +18,15 @@
 #include "channel.h"
 #include "dcc/chatcontainer.h"
 #include "application.h"
-#include "mainwindow.h"
-#include "viewcontainer.h"
-#include "connectionmanager.h"
 #include "highlight.h"
-#include "server.h"
 #include "sound.h"
-#include "common.h"
 #include "emoticons.h"
 #include "notificationhandler.h"
-#include "irccontextmenus.h"
 
-#include <QRegExp>
-#include <QBrush>
-#include <QEvent>
-#include <QColor>
-#include <QMouseEvent>
 #include <QScrollBar>
 #include <QTextBlock>
-#include <QAbstractTextDocumentLayout>
 #include <QPainter>
-#include <QTextObjectInterface>
 #include <QTextDocumentFragment>
-#include <QTextCodec>
 
 #include <KStandardShortcut>
 
diff --git a/src/viewer/statuspanel.cpp b/src/viewer/statuspanel.cpp
index ad488ee..8e3aefa 100644
--- a/src/viewer/statuspanel.cpp
+++ b/src/viewer/statuspanel.cpp
@@ -11,7 +11,6 @@
 */
 
 #include "statuspanel.h"
-#include "channel.h"
 #include "application.h"
 #include "ircinput.h"
 #include "ircview.h"
diff --git a/src/viewer/topiclabel.cpp b/src/viewer/topiclabel.cpp
index 5bbd706..99db3ef 100644
--- a/src/viewer/topiclabel.cpp
+++ b/src/viewer/topiclabel.cpp
@@ -12,10 +12,6 @@
 
 #include "topiclabel.h"
 #include "application.h"
-#include "connectionmanager.h"
-#include "server.h"
-#include "common.h"
-#include "channel.h"
 
 #include <QClipboard>
 #include <QResizeEvent>
diff --git a/src/viewer/viewcontainer.cpp b/src/viewer/viewcontainer.cpp
index 927a8ce..4c82262 100644
--- a/src/viewer/viewcontainer.cpp
+++ b/src/viewer/viewcontainer.cpp
@@ -34,18 +34,13 @@
 #include "irccolorchooser.h"
 #include "joinchanneldialog.h"
 #include "servergroupsettings.h"
-#include "ircviewbox.h"
 #include "irccontextmenus.h"
 
-#include <QList>
 #include <QSplitter>
-#include <QToolButton>
 #include <QTabBar>
 
 #include <KInputDialog>
 #include <KMessageBox>
-#include <KGlobalSettings>
-#include <KVBox>
 #include <KRun>
 #include <KUrl>
 #include <KXMLGUIFactory>
diff --git a/src/viewer/viewcontainer.h b/src/viewer/viewcontainer.h
index 48b3ee2..8eeec6e 100644
--- a/src/viewer/viewcontainer.h
+++ b/src/viewer/viewcontainer.h
@@ -16,10 +16,6 @@
 #include "common.h"
 #include "server.h"
 
-#include <QList>
-#include <QObject>
-#include <QPointer>
-
 #include <KTabWidget>
 
 

commit 76802fda5e0852e48f1ecf775df56ebf1ea81ede
Author: Eike Hein <hein@kde.org>
Date:   Fri Sep 17 05:26:24 2010 +0200

    Fix build with KDE4_ENABLE_FINAL.

diff --git a/src/irc/channel.cpp b/src/irc/channel.cpp
index 48c9fd5..8c10ab8 100644
--- a/src/irc/channel.cpp
+++ b/src/irc/channel.cpp
@@ -11,8 +11,6 @@
   Copyright (C) 2006-2008 Eike Hein <hein@kde.org>
 */
 
-#define QT3_SUPPORT //TODO remove when porting away from Q3*
-
 #include "channel.h"
 #include "channeloptionsdialog.h"
 #include "application.h"
diff --git a/src/viewer/viewtreeitem.cpp b/src/viewer/viewtreeitem.cpp
index 77751f0..16470a9 100644
--- a/src/viewer/viewtreeitem.cpp
+++ b/src/viewer/viewtreeitem.cpp
@@ -172,7 +172,7 @@ QColor ViewTreeItem::getColor() const
         if (Preferences::self()->inputFieldsBackgroundColor())
             return Preferences::self()->color(Preferences::ChannelMessage);
         else
-            return Application::instance()->palette().color(QPalette::Active, QPalette::Text); 
+            return Application::instance()->palette().color(QPalette::Active, QPalette::Text);
     }
 }
 
@@ -342,14 +342,14 @@ void ViewTreeItem::paintCell(QPainter* p, const QColorGroup& /* cg */, int /* co
 
     int iconWidth = pixmap(0) ? LED_ICON_SIZE : 0;
     int textWidth = width - MARGIN - iconWidth - MARGIN - MARGIN;
-    
+
     if (!m_isSeparator)
     {
         if (isSelected() || m_isHighlighted)
         {
 
             bool isFirst = listView()->firstChild() == this ? true : false;
-            
+
             painter.setPen(bgColor);
 
             if (!isFirst)
@@ -358,7 +358,7 @@ void ViewTreeItem::paintCell(QPainter* p, const QColorGroup& /* cg */, int /* co
                 painter.drawPoint(1, 0);
                 painter.drawPoint(0, 1);
             }
-            
+
             painter.drawPoint(0, height() - 1);
             painter.drawPoint(1, height() - 1);
             painter.drawPoint(0, height() - 2);
@@ -370,7 +370,7 @@ void ViewTreeItem::paintCell(QPainter* p, const QColorGroup& /* cg */, int /* co
                 painter.drawPoint(2, 0);
                 painter.drawPoint(0, 2);
             }
-            
+
             painter.drawPoint(2, height() - 1);
             painter.drawPoint(0, height() - 3);
         }
@@ -456,3 +456,6 @@ void ViewTreeItem::paintCell(QPainter* p, const QColorGroup& /* cg */, int /* co
 
     p->drawPixmap(0, 0, buffer);
 }
+
+// The build with KDE4_ENABLE_FINAL breaks otherwise.
+#undef QT3_SUPPORT //TODO remove when porting away from K3ListView

commit 0a5bc983c817c24783b9578b0ed236bc3a9c3645
Author: Eike Hein <hein@kde.org>
Date:   Mon Sep 20 12:35:44 2010 +0200

    Work around bug 217592 (the infamous cursor disappearing act).
    
    The underlying ongoings are that there are two widgets involved,
    the KTextEdit and it's viewport(), both of which KCursor installs
    an event filter on, which on keypress events sets a blank cursor
    on the KTextEdit. On a FocusOut event, such as occurs when the
    paste warning KMessageBox is spawned and assumes focus, KCursor
    then calls unsetCursor() on it. Qt's behavior however seems to
    have changed in such a way that unsetCursor() doesn't affect the
    KTextEdit's viewport(), which QTextEdit originally set the I-Beam
    cursor on. So we do it manually here. But in the end either the
    Qt behavioral change has to be addressed, or KCursor has to be
    equipped to deal with it, since this obviously can happen in all
    KDE apps (and does, as seen in bug 231177).
    CCBUG:217592

diff --git a/src/viewer/ircinput.cpp b/src/viewer/ircinput.cpp
index 05653a8..a282e63 100644
--- a/src/viewer/ircinput.cpp
+++ b/src/viewer/ircinput.cpp
@@ -501,6 +501,9 @@ bool IRCInput::checkPaste(QString& text)
         QString bytesString = i18np("1 byte", "%1 bytes", text.length());
         QString linesString = i18np("1 line", "%1 lines", lines+1);
 
+        // Work around bug 217592.
+        viewport()->setCursor(Qt::IBeamCursor);
+
         doPaste=KMessageBox::warningYesNoCancel
             (this,
             i18nc(

commit 85f09e645941e89cecf4a616f827d81944f05fc2
Author: Eike Hein <hein@kde.org>
Date:   Tue Sep 21 02:39:50 2010 +0200

    Don't fallthrough after catching irc://

diff --git a/src/application.cpp b/src/application.cpp
index 343e826..20f87ed 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -1153,7 +1153,7 @@ void Application::openUrl(const QString& url)
     {
         if (url.startsWith(QLatin1String("irc://")) || url.startsWith(QLatin1String("ircs://")))
             Application::instance()->getConnectionManager()->connectTo(Konversation::SilentlyReuseConnection, url);
-        if (url.startsWith(QLatin1String("mailto:")))
+        else if (url.startsWith(QLatin1String("mailto:")))
             KToolInvocation::invokeMailer(KUrl(url));
         else if (url.startsWith(QLatin1String("amarok:")))
             new KRun(KUrl(url), Application::instance()->getMainWindow());

commit ce03a573bb4f6c0922b65d454624c848330b9594
Author: Eike Hein <hein@kde.org>
Date:   Tue Sep 21 03:06:28 2010 +0200

    Add a sep after Open Query, makes whois easier to hit.

diff --git a/src/viewer/irccontextmenus.cpp b/src/viewer/irccontextmenus.cpp
index b1bdb97..5f1339b 100644
--- a/src/viewer/irccontextmenus.cpp
+++ b/src/viewer/irccontextmenus.cpp
@@ -362,6 +362,8 @@ void IrcContextMenus::setupNickMenu()
     QAction* defaultAction = createAction(m_nickMenu, OpenQuery, i18n("Open Query"));
     m_nickMenu->setDefaultAction(defaultAction);
 
+    m_nickMenu->addSeparator();
+
     foreach(QAction* action, m_sharedBasicNickActions)
         m_nickMenu->addAction(action);
 

commit 56cefb53e74e4bae87400e71891b45f145ec65f0
Author: eli mackenzie <argonel@gmail.com>
Date:   Tue Sep 21 20:07:25 2010 -0400

    use percent encoding in the raw log
    
    each target can have its own encoding, so any encoding setting for the
    raw log is equally likely to be incorrect

diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index 47799c5..f3d7cc4 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -1168,7 +1168,7 @@ void Server::incoming()
 
         //send to raw log before decryption
         if(m_rawLog)
-            m_rawLog->appendRaw("&gt;&gt; " + QString(first).remove(QChar(0xFDD0)).remove(QChar(0xFDD1)).replace('&',"&amp;").replace('<',"&lt;").replace('>',"&gt;").replace(QRegExp("\\s"), "&nbsp;"));
+            m_rawLog->appendRaw("&gt;&gt; " + first.toPercentEncoding(" :()[]{}<>,.?/\\|`!@#$^&*+-='\"").replace('&',"&amp;").replace('<',"&lt;").replace('>',"&gt;").replace(' ', "&nbsp;"));
 
         #ifdef HAVE_QCA2
         QByteArray cKey = getKeyForRecipient(channelKey);
@@ -1374,8 +1374,7 @@ int Server::_send_internal(QString outputLine)
     qint64 sout = m_socket->write(encoded, encoded.length());
 
     if (m_rawLog)
-        m_rawLog->appendRaw("&lt;&lt; " + encoded.replace('&',"&amp;").replace('<',"&lt;").replace('>',"&gt;"));
-
+        m_rawLog->appendRaw("&lt;&lt; " + encoded.toPercentEncoding(" :()[]{}<>,.?/\\|`!@#$^&*+-='\"").replace('&',"&amp;").replace('<',"&lt;").replace('>',"&gt;").replace(' ', "&nbsp;"));
     return sout;
 }
 

commit 4f522c2cf77e1e825ab0a4338daa099683eaf02b
Author: Nicolás Alvarez <nicolas.alvarez@gmail.com>
Date:   Wed Jun 30 01:01:50 2010 -0300

    Fix "what's this" text for nickname combo box.
    
    It mentioned File->Identities menu item,
    but Identities is in Settings now.
    
    Signed-off-by: eli mackenzie <argonel@gmail.com>

diff --git a/src/irc/channel.cpp b/src/irc/channel.cpp
index 8c10ab8..3d1f6ab 100644
--- a/src/irc/channel.cpp
+++ b/src/irc/channel.cpp
@@ -225,7 +225,7 @@ Channel::Channel(QWidget* parent, QString _name) : ChatWindow(parent)
     nicknameCombobox->setSizeAdjustPolicy(KComboBox::AdjustToContents);
     KLineEdit* nicknameComboboxLineEdit = qobject_cast<KLineEdit*>(nicknameCombobox->lineEdit());
     if (nicknameComboboxLineEdit) nicknameComboboxLineEdit->setClearButtonShown(false);
-    nicknameCombobox->setWhatsThis(i18n("<qt><p>This shows your current nick, and any alternatives you have set up.  If you select or type in a different nickname, then a request will be sent to the IRC server to change your nick.  If the server allows it, the new nickname will be selected.  If you type in a new nickname, you need to press 'Enter' at the end.</p><p>You can add change the alternative nicknames from the <em>Identities</em> option in the <em>File</em> menu.</p></qt>"));
+    nicknameCombobox->setWhatsThis(i18n("<qt><p>This shows your current nick, and any alternatives you have set up.  If you select or type in a different nickname, then a request will be sent to the IRC server to change your nick.  If the server allows it, the new nickname will be selected.  If you type in a new nickname, you need to press 'Enter' at the end.</p><p>You can edit the alternative nicknames from the <em>Identities</em> option in the <em>Settings</em> menu.</p></qt>"));
 
     awayLabel = new QLabel(i18n("(away)"), commandLineBox);
     awayLabel->hide();
diff --git a/src/viewer/statuspanel.cpp b/src/viewer/statuspanel.cpp
index 8e3aefa..4284e08 100644
--- a/src/viewer/statuspanel.cpp
+++ b/src/viewer/statuspanel.cpp
@@ -46,7 +46,7 @@ StatusPanel::StatusPanel(QWidget* parent) : ChatWindow(parent)
     nicknameCombobox->setSizeAdjustPolicy(KComboBox::AdjustToContents);
     KLineEdit* nicknameComboboxLineEdit = qobject_cast<KLineEdit*>(nicknameCombobox->lineEdit());
     if (nicknameComboboxLineEdit) nicknameComboboxLineEdit->setClearButtonShown(false);
-    nicknameCombobox->setWhatsThis(i18n("<qt><p>This shows your current nick, and any alternatives you have set up.  If you select or type in a different nickname, then a request will be sent to the IRC server to change your nick.  If the server allows it, the new nickname will be selected.  If you type in a new nickname, you need to press 'Enter' at the end.</p><p>You can add change the alternative nicknames from the <em>Identities</em> option in the <em>File</em> menu.</p></qt>"));
+    nicknameCombobox->setWhatsThis(i18n("<qt><p>This shows your current nick, and any alternatives you have set up.  If you select or type in a different nickname, then a request will be sent to the IRC server to change your nick.  If the server allows it, the new nickname will be selected.  If you type in a new nickname, you need to press 'Enter' at the end.</p><p>You can edit the alternative nicknames from the <em>Identities</em> option in the <em>Settings</em> menu.</p></qt>"));
 
     awayLabel=new QLabel(i18n("(away)"), commandLineBox);
     awayLabel->hide();

commit 7c95bcc5a3c1cc647b6bd2a442ec9c6c3c0135a6
Author: Script Kiddy <scripty@kde.org>
Date:   Sat Sep 25 10:35:02 2010 +0200

    SVN_SILENT made messages (.desktop file)

diff --git a/data/images/nickicons/alternative/index.desktop b/data/images/nickicons/alternative/index.desktop
index 1d76630..e6bfa37 100644
--- a/data/images/nickicons/alternative/index.desktop
+++ b/data/images/nickicons/alternative/index.desktop
@@ -45,7 +45,7 @@ Name[zh_TW]=大圓點
 Comment="Big Bullets" by Dario Abatianni
 Comment[ast]=«Big Bullets» de Dario Abatianni
 Comment[bg]="Големи орнаменти" от Dario Abatianni
-Comment[ca]="Big Bullets" per Dario Abatianni
+Comment[ca]=«Big Bullets» per Dario Abatianni
 Comment[ca@valencia]="Big Bullets" per Dario Abatianni
 Comment[cs]="Velké odrážky" od Daria Abatianniho
 Comment[da]="Big Bullets" af Dario Abatianni
diff --git a/data/images/nickicons/christmas/index.desktop b/data/images/nickicons/christmas/index.desktop
index 2729942..deb1e38 100644
--- a/data/images/nickicons/christmas/index.desktop
+++ b/data/images/nickicons/christmas/index.desktop
@@ -46,7 +46,7 @@ Name[zh_TW]=聖誕節
 Comment="Christmas Theme" by Kenichiro Takahashi
 Comment[ast]=Tema «Christmes» de Kenichiro Takahashi
 Comment[bg]="Коледна тема" от Kenichiro Takahashi
-Comment[ca]="Tema nadalenc" per Kenichiro Takahashi
+Comment[ca]=«Tema nadalenc» per Kenichiro Takahashi
 Comment[ca@valencia]="Tema nadalenc" per Kenichiro Takahashi
 Comment[cs]="Vánoční téma" od Kenichiro Takahashi
 Comment[da]="Juletema" af Kenichiro Takahashi
diff --git a/data/images/nickicons/classic/index.desktop b/data/images/nickicons/classic/index.desktop
index 53f8815..7f6b229 100644
--- a/data/images/nickicons/classic/index.desktop
+++ b/data/images/nickicons/classic/index.desktop
@@ -48,7 +48,7 @@ Name[zh_TW]=傳統
 Comment="LED" by Dario Abatianni
 Comment[ast]=«LED» de Dario Abatianni
 Comment[bg]="LED" от Dario Abatianni
-Comment[ca]="LED" per Dario Abatianni
+Comment[ca]=«LED» per Dario Abatianni
 Comment[ca@valencia]="LED" per Dario Abatianni
 Comment[cs]="LED" od Daria Abatianniho
 Comment[da]="LED" af Dario Abatianni
diff --git a/data/images/nickicons/default/index.desktop b/data/images/nickicons/default/index.desktop
index 2129644..48ee719 100644
--- a/data/images/nickicons/default/index.desktop
+++ b/data/images/nickicons/default/index.desktop
@@ -45,7 +45,7 @@ Name[zh_TW]=預設主題
 Comment="Oxygen" by Nuno Pinheiro
 Comment[ast]=«Oxygen» de Nuno Pinheiro
 Comment[bg]="Oxygen" от Nuno Pinheiro
-Comment[ca]="Oxygen" per Nuno Pinheiro
+Comment[ca]=«Oxygen» per Nuno Pinheiro
 Comment[ca@valencia]="Oxygen" per Nuno Pinheiro
 Comment[cs]="Oxygen" od Nuno Pinheiro
 Comment[da]="Oxygen" af Nuno Pinheiro
diff --git a/data/images/nickicons/simplistic/index.desktop b/data/images/nickicons/simplistic/index.desktop
index 4012d64..db9702a 100644
--- a/data/images/nickicons/simplistic/index.desktop
+++ b/data/images/nickicons/simplistic/index.desktop
@@ -40,7 +40,7 @@ Name[zh_TW]=KDE 3 預設主題
 Comment="Simplistic" by Shintaro Matsuoka
 Comment[ast]=«Simplistic» de Shintaro Matsuoka
 Comment[bg]="Опростена" от Shintaro Matsuoka
-Comment[ca]="Simplista" per Shintaro Matsuoka
+Comment[ca]=«Simplista» per Shintaro Matsuoka
 Comment[ca@valencia]="Simplista" per Shintaro Matsuoka
 Comment[cs]="Jednoduché téma" od Shintara Matsuoky
 Comment[da]="Simplificeret" af Shintaro Matsuoka
diff --git a/data/images/nickicons/smiling/index.desktop b/data/images/nickicons/smiling/index.desktop
index fdec8ba..8039b12 100644
--- a/data/images/nickicons/smiling/index.desktop
+++ b/data/images/nickicons/smiling/index.desktop
@@ -44,7 +44,7 @@ Name[zh_TW]=微笑
 Comment="Smiling" stolen from Kopete by John Tapsell
 Comment[ast]=«Smiling» robáu de Kopete por John Tapsell
 Comment[bg]=Тема "Усмивка" е откраднато от Kopete от John Tapsell
-Comment[ca]="Smiling" robat del Kopete per John Tapsell
+Comment[ca]=«Smiling» robat del Kopete per John Tapsell
 Comment[ca@valencia]="Smiling" robat del Kopete per John Tapsell
 Comment[cs]="Smajlíkové téma" od Johna Tapsella převzato z Kopete
 Comment[da]="Smilende" stjålet fra Kopete af John Tapsell
diff --git a/data/images/nickicons/square/index.desktop b/data/images/nickicons/square/index.desktop
index cb5147b..9dc0ee9 100644
--- a/data/images/nickicons/square/index.desktop
+++ b/data/images/nickicons/square/index.desktop
@@ -43,7 +43,7 @@ Name[zh_TW]=方塊
 Comment="SQUARE" by Kenichiro Takahashi
 Comment[ast]=«SQUARE» de Kenichiro Takahashi
 Comment[bg]=Тема "Квадрат" от Kenichiro Takahashi
-Comment[ca]="SQUARE" per Kenichiro Takahashi
+Comment[ca]=«SQUARE» per Kenichiro Takahashi
 Comment[ca@valencia]="SQUARE" per Kenichiro Takahashi
 Comment[cs]="SQUARE" od Kenichiro Takahashi
 Comment[da]="Firkantet" af Kenichiro Takahashi

commit 76f3d342ae3357713a61565025cfe9ef31eb357f
Author: Eike Hein <hein@kde.org>
Date:   Fri Oct 1 01:04:33 2010 +0200

    Drop workaround for cursor bug.
    
    QTBUG-6185 has been fixed and the fix should hopefully appear in 4.7.1,
    plus distros (e.g. Fedora) have begun backporting it to their 4.7.0
    packages.

diff --git a/src/viewer/ircinput.cpp b/src/viewer/ircinput.cpp
index a282e63..05653a8 100644
--- a/src/viewer/ircinput.cpp
+++ b/src/viewer/ircinput.cpp
@@ -501,9 +501,6 @@ bool IRCInput::checkPaste(QString& text)
         QString bytesString = i18np("1 byte", "%1 bytes", text.length());
         QString linesString = i18np("1 line", "%1 lines", lines+1);
 
-        // Work around bug 217592.
-        viewport()->setCursor(Qt::IBeamCursor);
-
         doPaste=KMessageBox::warningYesNoCancel
             (this,
             i18nc(

commit 386dd789f162e5d0d5abf736850e33a742292310
Author: Eike Hein <hein@kde.org>
Date:   Mon Oct 4 19:28:14 2010 +0200

    Bump for CIA hook test.

diff --git a/src/commit.h b/src/commit.h
index e4f5d97..de7e566 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4077
+#define COMMIT 4078
 #endif

commit 44a6fbd5dd625cb04c17b4fc99dec69015352e19
Author: eli mackenzie <argonel@gmail.com>
Date:   Tue Jun 29 23:52:44 2010 -0400

    add cancel action to two warning dialogs
    
    -hiding menubar
    -closing the main window with systray enabled

diff --git a/src/mainwindow.cpp b/src/mainwindow.cpp
index 8f21e05..653ee68 100644
--- a/src/mainwindow.cpp
+++ b/src/mainwindow.cpp
@@ -587,11 +587,15 @@ bool MainWindow::queryClose()
 
         if (Preferences::self()->showTrayIcon() && !m_closeApp)
         {
-            KMessageBox::information( this,
-                i18n("<p>Closing the main window will keep Konversation running in the system tray. "
-                "Use <b>Quit</b> from the <b>Konversation</b> menu to quit the application.</p>"),
-                i18n( "Docking in System Tray" ),  "HideOnCloseInfo" );
-            hide();
+            bool doit = KMessageBox::warningContinueCancel(this,
+                        i18n("<p>Closing the main window will keep Konversation running in the system tray. "
+                        "Use <b>Quit</b> from the <b>Konversation</b> menu to quit the application.</p>"),
+                        i18n("Docking in System Tray"),
+                        KStandardGuiItem::cont(),
+                        KStandardGuiItem::cancel(),
+                        QLatin1String("HideOnCloseInfo")) == KMessageBox::Continue;
+            if (doit)
+                hide();
 
             return false;
         }
@@ -702,14 +706,19 @@ void MainWindow::toggleMenubar(bool dontShowWarning)
         menuBar()->show();
     else
     {
+        bool doit = true;
         if (!dontShowWarning)
         {
             QString accel = hideMenuBarAction->shortcut().toString();
-            KMessageBox::information(this,
-                i18n("<qt>This will hide the menu bar completely. You can show it again by typing %1.</qt>",accel),
-                "Hide menu bar","HideMenuBarWarning");
+            doit = KMessageBox::warningContinueCancel(this,
+                    i18n("<qt>This will hide the menu bar completely. You can show it again by typing %1.</qt>", accel),
+                    i18n("Hide menu bar"),
+                    KStandardGuiItem::cont(),
+                    KStandardGuiItem::cancel(),
+                    QLatin1String("HideMenuBarWarning")) == KMessageBox::Continue;
         }
-        menuBar()->hide();
+        if (doit)
+            menuBar()->hide();
     }
 
     Preferences::self()->setShowMenuBar(hideMenuBarAction->isChecked());

commit 6da753432d9afcfa5fc65674adb9263c21c598a3
Author: eli mackenzie <argonel@gmail.com>
Date:   Wed Jun 30 01:12:59 2010 -0400

    rewrite Warnings_Config::loadSettings and add the minimize to tray warning

diff --git a/src/config/warnings_config.cpp b/src/config/warnings_config.cpp
index da2fca1..342afb5 100644
--- a/src/config/warnings_config.cpp
+++ b/src/config/warnings_config.cpp
@@ -70,45 +70,45 @@ void Warnings_Config::saveSettings()
     // save state of this item in hasChanged() list
     warningsChecked += checked ? "1" : "0";
 
-    if (warningName == "LargePaste")
-    {
-        if (checked)
+        if (warningName == QLatin1String("LargePaste"))
         {
-            grp.deleteEntry(warningName);
+            if (checked)
+            {
+                grp.deleteEntry(warningName);
+            }
+            else
+            {
+                // Let's keep the old state if we got one.
+                QString state = grp.readEntry(warningName, QString());
+
+                if (!state.isEmpty())
+                    grp.writeEntry(warningName, state);
+                else
+                    grp.writeEntry(warningName, "true");
+            }
         }
-        else
+        else if (warningName == QLatin1String("Invitation"))
         {
-            // Let's keep the old state if we got one.
-            QString state = grp.readEntry(warningName, QString());
-
-            if (!state.isEmpty())
-                grp.writeEntry(warningName, state);
+            if (checked)
+            {
+                grp.writeEntry(warningName, "0");
+            }
             else
-                grp.writeEntry(warningName, "true");
+            {
+                // Let's keep the old state if we got one, or join if
+                // there isn't an old state.
+                QString state = grp.readEntry(warningName, QString());
+
+                if (!state.isEmpty())
+                    grp.writeEntry(warningName, state);
+                else
+                    grp.writeEntry(warningName, "1");
+            }
+        }
+        else
+        {
+            grp.writeEntry(warningName, checked ? "1" : "0");
         }
-    }
-    else if (warningName == "Invitation")
-    {
-	if (checked)
-	{
-	    grp.writeEntry(warningName, "0");
-	}
-	else
-	{
-	    // Let's keep the old state if we got one, or join if
-	    // there isn't an old state.
-	    QString state = grp.readEntry(warningName, QString());
-	    
-	    if (!state.isEmpty())
-		grp.writeEntry(warningName, state);
-	    else
-		grp.writeEntry(warningName, "1");
-	}
-    }
-    else
-    {
-        grp.writeEntry(warningName, checked ? "1" : "0");
-    }
   }
 
   // remember checkbox state for hasChanged()
@@ -117,57 +117,116 @@ void Warnings_Config::saveSettings()
 
 void Warnings_Config::loadSettings()
 {
-  QStringList dialogDefinitions;
-  QString flagNames = "Invitation,SaveLogfileNote,ClearLogfileQuestion,CloseQueryAfterIgnore,ReconnectWithDifferentServer,ReuseExistingConnection,QuitServerTab,QuitChannelTab,QuitQueryTab,QuitDCCChatTab,ChannelListNoServerSelected,HideMenuBarWarning,ChannelListWarning,LargePaste,systemtrayquitKonversation,IgnoreNick,UnignoreNick,QuitWithActiveDccTransfers,WarnEncodingConflict";
-  dialogDefinitions.append(i18n("Show channel invitation dialog"));
-  dialogDefinitions.append(i18n("Notice that saving logfiles will save whole file"));
-  dialogDefinitions.append(i18n("Ask before deleting logfile contents"));
-  dialogDefinitions.append(i18n("Ask about closing queries after ignoring the nickname"));
-  dialogDefinitions.append(i18n("Ask before switching a connection to a network to a different server"));
-  dialogDefinitions.append(i18n("Ask before creating another connection to the same network or server"));
-  dialogDefinitions.append(i18n("Close server tab"));
-  dialogDefinitions.append(i18n("Close channel tab"));
-  dialogDefinitions.append(i18n("Close query tab"));
-  dialogDefinitions.append(i18n("Close DCC Chat tab"));
-  dialogDefinitions.append(i18n("The channel list can only be opened from server-aware tabs"));
-  dialogDefinitions.append(i18n("Warning on hiding the main window menu"));
-  dialogDefinitions.append(i18n("Warning on high traffic with channel list"));
-  dialogDefinitions.append(i18n("Warning on pasting large portions of text"));
-  dialogDefinitions.append(i18n("Warning on quitting Konversation"));
-  dialogDefinitions.append(i18n("Ignore"));
-  dialogDefinitions.append(i18n("Unignore"));
-  dialogDefinitions.append(i18n("Warn before quitting with active DCC file transfers"));
-  dialogDefinitions.append(i18n("Warn when sending characters incompatible with your current encoding"));
-  QTreeWidgetItem *item;
-  dialogListView->clear();
+    // This table is very wide, on purpose, so that the nauseatingly constant context string is
+    // out of the way. The problem is this:
+    // The context string in I18N_NOOP2_NOSTRIP must always be first, and now that it has
+    // semantic markers it is always very long. So, if you want to understand a string
+    // definition, you must repeatedly look at the context string. A macro replacement for it
+    // is not possible as such recent and complicated inventions are not supported by the tools
+    // used to generate the message files.
 
-  KSharedConfigPtr config = KGlobal::config();
-  KConfigGroup grp =  config->group("Notification Messages");
-  QString flagName;
-  for (int i = 0; i < dialogDefinitions.count(); ++i)
-  {
-    item = new QTreeWidgetItem(dialogListView);
-    item->setText(0, dialogDefinitions[i]);
-    item->setFlags(item->flags() | Qt::ItemIsUserCheckable);
-    flagName = flagNames.section(',',i,i);
-    item->setData(0, WarningNameRole, flagName);
-
-    if (flagName == "LargePaste" )
-    {
-        item->setCheckState(0, grp.readEntry(flagName, QString()).isEmpty() ? Qt::Checked : Qt::Unchecked);
-    }
-    else if (flagName == "Invitation")
+    static const struct DefinitionItem
     {
-	item->setCheckState(0, grp.readEntry(flagName, QString()) == "0" ? Qt::Checked : Qt::Unchecked);
-    }
-    else
+        const char *flagName;
+        const char *context;
+        const char *message;
+    } warningDialogDefinitions[] = {
+        { "Invitation",                                                                                 I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... a channel invitation is received"
+        )},
+        { "SaveLogfileNote",                                                                            I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... saving a log file would save only the visible portion"
+        )},
+        { "ClearLogfileQuestion",                                                                       I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... a log file is about to be deleted"
+        )},
+        { "CloseQueryAfterIgnore",                                                                      I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... an open query exists for a nickname that has just been marked as ignored"
+        )},
+        { "ReconnectWithDifferentServer",                                                               I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... before switching servers of an existing connection to a network"
+        )},
+        { "ReuseExistingConnection",                                                                    I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... creating a new connection to an already connected network"
+        )},
+        { "QuitServerTab",                                                                              I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... closing a server tab"
+        )},
+        { "QuitChannelTab",                                                                             I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... closing a channel tab"
+        )},
+        { "QuitQueryTab",                                                                               I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... closing a query tab"
+        )},
+        { "QuitDCCChatTab",                                                                             I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... closing a DCC Chat tab"
+        )},
+        { "ChannelListNoServerSelected",                                                                I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... the channel list cannot be retrieved because the current tab is selected"
+        )},
+        { "HideMenuBarWarning",                                                                         I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... you have chosen to hide the menu bar"
+        )},
+        { "ChannelListWarning",                                                                         I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... a channel listing may cause disconnection due to the download size"
+        )},
+        { "LargePaste",                                                                                 I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... pasting large portions of text"
+        )},
+        { "systemtrayquitKonversation",                                                                 I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... quitting Konversation via the tray icon"
+        )},
+        { "IgnoreNick",                                                                                 I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... you have chosen to ignore a nickname"
+        )},
+        { "UnignoreNick",                                                                               I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... you have chosen to stop ignoring a nickname"
+        )},
+        { "QuitWithActiveDccTransfers",                                                                 I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... quitting Konversation while DCC file transfers are active"
+        )},
+        { "WarnEncodingConflict",                                                                       I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... some characters in a message are incompatible with the active encoding"
+        )},
+        { "HideOnCloseInfo",                                                                            I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
+          "... closing the window will minimize to the system tray"
+        )}
+    };
+    static const int definitionsCount = sizeof(warningDialogDefinitions) / sizeof(warningDialogDefinitions[0]);
+
+    dialogListView->clear();
+
+    KSharedConfigPtr config = KGlobal::config();
+    KConfigGroup grp =  config->group("Notification Messages");
+
+    for (int i = 0; i < definitionsCount; ++i)
     {
-        item->setCheckState(0, grp.readEntry(flagName, true) ? Qt::Checked : Qt::Unchecked);
+        const QLatin1String flagName(warningDialogDefinitions[i].flagName);
+        const QLatin1String message(warningDialogDefinitions[i].message);
+
+        QTreeWidgetItem *item = new QTreeWidgetItem(dialogListView);
+        item->setText(0, message);
+        item->setFlags(item->flags() | Qt::ItemIsUserCheckable);
+        item->setData(0, WarningNameRole, flagName);
+
+        if (flagName == QLatin1String("LargePaste"))
+        {
+            item->setCheckState(0, grp.readEntry(flagName, QString()).isEmpty() ? Qt::Checked : Qt::Unchecked);
+        }
+        else if (flagName == QLatin1String("Invitation"))
+        {
+            item->setCheckState(0, grp.readEntry(flagName, QString()) == "0" ? Qt::Checked : Qt::Unchecked);
+        }
+        else
+        {
+            item->setCheckState(0, grp.readEntry(flagName, true) ? Qt::Checked : Qt::Unchecked);
+        }
     }
-  }
-  dialogListView->sortItems(0, Qt::AscendingOrder);
-  // remember checkbox state for hasChanged()
-  m_oldWarningsChecked=currentWarningsChecked();
+
+    dialogListView->sortItems(0, Qt::AscendingOrder);
+
+    // remember checkbox state for hasChanged()
+    m_oldWarningsChecked=currentWarningsChecked();
 }
 
 // get a list of checked/unchecked items for hasChanged()
diff --git a/src/config/warnings_configui.ui b/src/config/warnings_configui.ui
index f137d7f..84e1c67 100644
--- a/src/config/warnings_configui.ui
+++ b/src/config/warnings_configui.ui
@@ -26,7 +26,7 @@
      </property>
      <column>
       <property name="text" >
-       <string>Warning Dialogs to Show</string>
+       <string>Show a warning dialog when...</string>
       </property>
      </column>
     </widget>

commit 9a62e3fffeea3bc8dcf408bf8af0ffb34bbc8aaf
Author: eli mackenzie <argonel@gmail.com>
Date:   Wed Jun 30 01:14:02 2010 -0400

    re-indent the rest of warnings_config.cpp

diff --git a/src/commit.h b/src/commit.h
index de7e566..d7543e3 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4078
+#define COMMIT 4079
 #endif
diff --git a/src/config/warnings_config.cpp b/src/config/warnings_config.cpp
index 342afb5..d29317a 100644
--- a/src/config/warnings_config.cpp
+++ b/src/config/warnings_config.cpp
@@ -9,6 +9,7 @@
   Copyright (C) 2006 Dario Abatianni <eisfuchs@tigress.com>
   Copyright (C) 2006 John Tapsell <johnflux@gmail.com>
   Copyright (C) 2006-2008 Eike Hein <hein@kde.org>
+  Copyright (C) 2010 Eli Mackenzie <argonel@gmail.com>
 */
 
 
@@ -19,18 +20,18 @@
 
 static const int WarningNameRole = Qt::UserRole + 100;
 
-Warnings_Config::Warnings_Config( QWidget* parent, const char* name, Qt::WFlags fl )
+Warnings_Config::Warnings_Config(QWidget* parent, const char* name, Qt::WFlags fl)
     : QWidget(parent, fl)
 {
-  setObjectName(QString::fromLatin1(name));
-  setupUi(this);
+    setObjectName(QString::fromLatin1(name));
+    setupUi(this);
 
-  dialogListView->header()->setClickable(false);
-  dialogListView->header()->setMovable(false);
+    dialogListView->header()->setClickable(false);
+    dialogListView->header()->setMovable(false);
 
-  loadSettings();
+    loadSettings();
 
-  connect(dialogListView, SIGNAL(itemChanged(QTreeWidgetItem *, int)), this, SIGNAL(modified()));
+    connect(dialogListView, SIGNAL(itemChanged(QTreeWidgetItem *, int)), SIGNAL(modified()));
 }
 
 Warnings_Config::~Warnings_Config()
@@ -39,36 +40,38 @@ Warnings_Config::~Warnings_Config()
 
 void Warnings_Config::restorePageToDefaults()
 {
-  bool changed=false;
-  for (int i = 0; i < dialogListView->topLevelItemCount(); ++i)
-  {
-    QTreeWidgetItem *item = dialogListView->topLevelItem(i);
-    if (item->checkState(0) == Qt::Unchecked) {
-      item->setCheckState(0, Qt::Checked);
-      changed=true;
+    bool changed=false;
+    for (int i = 0; i < dialogListView->topLevelItemCount(); ++i)
+    {
+        QTreeWidgetItem *item = dialogListView->topLevelItem(i);
+        if (item->checkState(0) == Qt::Unchecked)
+        {
+            item->setCheckState(0, Qt::Checked);
+            changed=true;
+        }
+    }
+    if(changed)
+    {
+        emit modified();
     }
-  }
-  if(changed) {
-    emit modified();
-  }
 }
 
 void Warnings_Config::saveSettings()
 {
-  KSharedConfigPtr config = KGlobal::config();
-  KConfigGroup grp = config->group("Notification Messages");
+    KSharedConfigPtr config = KGlobal::config();
+    KConfigGroup grp = config->group("Notification Messages");
 
-  // prepare list
-  QString warningsChecked;
+    // prepare list
+    QString warningsChecked;
 
-  for (int i = 0; i < dialogListView->topLevelItemCount(); ++i)
-  {
-    QTreeWidgetItem *item = dialogListView->topLevelItem(i);
-    const bool checked = item->checkState(0) == Qt::Checked;
-    const QString warningName = item->data(0, WarningNameRole).toString();
+    for (int i = 0; i < dialogListView->topLevelItemCount(); ++i)
+    {
+        QTreeWidgetItem *item = dialogListView->topLevelItem(i);
+        const bool checked = item->checkState(0) == Qt::Checked;
+        const QString warningName = item->data(0, WarningNameRole).toString();
 
-    // save state of this item in hasChanged() list
-    warningsChecked += checked ? "1" : "0";
+        // save state of this item in hasChanged() list
+        warningsChecked += checked ? "1" : "0";
 
         if (warningName == QLatin1String("LargePaste"))
         {
@@ -109,10 +112,10 @@ void Warnings_Config::saveSettings()
         {
             grp.writeEntry(warningName, checked ? "1" : "0");
         }
-  }
+    }
 
-  // remember checkbox state for hasChanged()
-  m_oldWarningsChecked=warningsChecked;
+    // remember checkbox state for hasChanged()
+    m_oldWarningsChecked=warningsChecked;
 }
 
 void Warnings_Config::loadSettings()
@@ -232,30 +235,27 @@ void Warnings_Config::loadSettings()
 // get a list of checked/unchecked items for hasChanged()
 QString Warnings_Config::currentWarningsChecked()
 {
-  // prepare list
-  QString newList;
-
-  // get first checklist item
-  for (int i = 0; i < dialogListView->topLevelItemCount(); ++i)
-  {
-    newList += dialogListView->topLevelItem(i)->checkState(0) == Qt::Checked ? "1" : "0";
-  }
-  // return list
-  return newList;
+    // prepare list
+    QString newList;
+
+    // get first checklist item
+    for (int i = 0; i < dialogListView->topLevelItemCount(); ++i)
+    {
+        newList += dialogListView->topLevelItem(i)->checkState(0) == Qt::Checked ? "1" : "0";
+    }
+    // return list
+    return newList;
 }
 
 bool Warnings_Config::hasChanged()
 {
-  return(m_oldWarningsChecked!=currentWarningsChecked());
+    return(m_oldWarningsChecked!=currentWarningsChecked());
 }
 
-/*
- *  Sets the strings of the subwidgets using the current
- *  language.
- */
+// Sets the strings of the subwidgets using the current language.
 void Warnings_Config::languageChange()
 {
-  loadSettings();
+    loadSettings();
 }
 
 #include "warnings_config.moc"

commit 8281273472e7475ef69b658428d358e96b924e43
Author: Eike Hein <hein@kde.org>
Date:   Tue Oct 5 16:39:00 2010 +0200

    And another CIA test.

diff --git a/src/commit.h b/src/commit.h
index d7543e3..1202616 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4079
+#define COMMIT 4080
 #endif

commit 495671035eea3d8e05fb5ecf605065def2acdd59
Author: Eike Hein <hein@kde.org>
Date:   Tue Oct 5 20:14:59 2010 +0200

    Fix string.

diff --git a/src/config/warnings_config.cpp b/src/config/warnings_config.cpp
index d29317a..eab02ea 100644
--- a/src/config/warnings_config.cpp
+++ b/src/config/warnings_config.cpp
@@ -147,7 +147,7 @@ void Warnings_Config::loadSettings()
           "... an open query exists for a nickname that has just been marked as ignored"
         )},
         { "ReconnectWithDifferentServer",                                                               I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
-          "... before switching servers of an existing connection to a network"
+          "... about to switch a connection to a different server in the same network"
         )},
         { "ReuseExistingConnection",                                                                    I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
           "... creating a new connection to an already connected network"

commit b25f1f5ba6276cc96c219a8b5675af5d343e3aec
Author: Eike Hein <hein@kde.org>
Date:   Tue Oct 5 20:21:11 2010 +0200

    Consistency.

diff --git a/src/config/warnings_config.cpp b/src/config/warnings_config.cpp
index eab02ea..92520b6 100644
--- a/src/config/warnings_config.cpp
+++ b/src/config/warnings_config.cpp
@@ -147,7 +147,7 @@ void Warnings_Config::loadSettings()
           "... an open query exists for a nickname that has just been marked as ignored"
         )},
         { "ReconnectWithDifferentServer",                                                               I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
-          "... about to switch a connection to a different server in the same network"
+          "... switching a connection to a different server in the same network"
         )},
         { "ReuseExistingConnection",                                                                    I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
           "... creating a new connection to an already connected network"

commit 8949462b7f82771f8045bcb9bdf3716fb0bcb38a
Author: eli mackenzie <argonel@gmail.com>
Date:   Tue Oct 5 14:23:34 2010 -0400

    implement own percent encoding method and various raw log cleanups

diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index f3d7cc4..4d8191c 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -1167,8 +1167,8 @@ void Server::incoming()
         // Decrypt if necessary
 
         //send to raw log before decryption
-        if(m_rawLog)
-            m_rawLog->appendRaw("&gt;&gt; " + first.toPercentEncoding(" :()[]{}<>,.?/\\|`!@#$^&*+-='\"").replace('&',"&amp;").replace('<',"&lt;").replace('>',"&gt;").replace(' ', "&nbsp;"));
+        if (m_rawLog)
+            m_rawLog->appendRaw(RawLog::Inbound, first);
 
         #ifdef HAVE_QCA2
         QByteArray cKey = getKeyForRecipient(channelKey);
@@ -1370,11 +1370,13 @@ int Server::_send_internal(QString outputLine)
         }
     }
     #endif
+
+    if (m_rawLog)
+        m_rawLog->appendRaw(RawLog::Outbound, encoded);
+
     encoded += '\n';
     qint64 sout = m_socket->write(encoded, encoded.length());
 
-    if (m_rawLog)
-        m_rawLog->appendRaw("&lt;&lt; " + encoded.toPercentEncoding(" :()[]{}<>,.?/\\|`!@#$^&*+-='\"").replace('&',"&amp;").replace('<',"&lt;").replace('>',"&gt;").replace(' ', "&nbsp;"));
     return sout;
 }
 
diff --git a/src/viewer/rawlog.cpp b/src/viewer/rawlog.cpp
index aa355f0..d99f89e 100644
--- a/src/viewer/rawlog.cpp
+++ b/src/viewer/rawlog.cpp
@@ -54,4 +54,74 @@ bool RawLog::searchView() { return true; }
 
 bool RawLog::log() { return false; }
 
+// The QByteArray implementation of this uses the unintelligent q_strchr for its "exclude" list.
+// Additionally, we need to escape certain values for the IrcView, so rather than letting it loop
+// over dontEncode repeatedly, and then have QString do the replacements afterwards, we'll just
+// reimplement and let QString do its thing as far as memory goes.
+
+static const char tr16[] = "0123456789ABCDEF";
+
+static QString toPercentEncoding(const QByteArray& input, QString output=QString()) // Do NOT 'fix' this for krazy, I want to see the EBN --argonel
+{
+    int len = input.count();
+    const char *inputData = input.constData();
+
+    // skip a few allocations - most of my raw log is more than 200 characters with "&nbsp;" replaced
+    // qAllocMore will do 256-12 if you want more than 116 (128-12) bytes
+    output.reserve(244);
+
+    char hexbuf[4]="%00";
+    QLatin1String l16(hexbuf); // QString does a deep copy on append
+
+    for (int i = 0; i < len; ++i)
+    {
+        unsigned char c = *inputData++;
+        if ((c >= 0x21 && c <= 0x25) || (c >= 0x27 && c <= 0x3B) || (c >= 0x3F && c<= 0x7E))
+            output.append(QLatin1Char(c));
+        else
+        {
+            switch (c)
+            {
+                case 0x20:
+                    output.append(QLatin1String("&nbsp;"));
+                break;
+                case 0x26:
+                    output.append(QLatin1String("&amp;"));
+                break;
+                case 0x3C:
+                    output.append(QLatin1String("&lt;"));
+                break;
+                case 0x3D:
+                    output.append(QLatin1Char('='));
+                break;
+                case 0x3E:
+                    output.append(QLatin1String("&gt;"));
+                break;
+
+                default:
+                    hexbuf[1] = tr16[((c & 0xF0) >> 4)];
+                    hexbuf[2] = tr16[c & 0x0F];
+                    output.append(l16);
+            }
+        }
+    }
+    return output;
+}
+
+void RawLog::appendRaw(RawLog::MessageDirection dir, const QByteArray& message, bool suppressTimestamps)
+{
+    if (!getTextView() || message.isEmpty())
+        return;
+
+    static const QLatin1String in("&gt;&gt; ");
+    static const QLatin1String out("&lt;&lt; ");
+    QString output = toPercentEncoding(message, (dir == RawLog::Inbound? in : out));
+
+    // Whatever the original line inbound ending was is too much effort to conserve, but its nice
+    // to see the actual line endings, so we'll fake it here
+    output.append(QLatin1String("%0A"));
+
+    appendRaw(output, suppressTimestamps);
+}
+
 #include "rawlog.moc"
diff --git a/src/viewer/rawlog.h b/src/viewer/rawlog.h
index cb79292..a12b494 100644
--- a/src/viewer/rawlog.h
+++ b/src/viewer/rawlog.h
@@ -22,7 +22,9 @@ class RawLog : public ChatWindow
 {
     Q_OBJECT
 
-        public:
+    public:
+        enum MessageDirection { Inbound, Outbound };
+
         explicit RawLog(QWidget* parent);
         ~RawLog();
 
@@ -30,6 +32,8 @@ class RawLog : public ChatWindow
         virtual bool closeYourself();
         virtual bool searchView();
         virtual bool log();
+        using ChatWindow::appendRaw;
+        virtual void appendRaw(MessageDirection dir, const QByteArray& message, bool suppressTimestamps=false);
     public slots:
         void morphNotification();
 

commit 526c5d4f80bb314f50422451bc7f8ed3f79bb0da
Author: Eike Hein <hein@kde.org>
Date:   Wed Oct 6 06:36:07 2010 +0200

    Bump

diff --git a/src/commit.h b/src/commit.h
index 1202616..09dcc6e 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4080
+#define COMMIT 4081
 #endif

commit ac80dca2bfa0cf06f5d1fe3a89cf06a5232c6191
Author: Eike Hein <hein@kde.org>
Date:   Wed Oct 6 22:01:43 2010 +0200

    Update.

diff --git a/ChangeLog b/ChangeLog
index e86bc11..84178db 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -254,6 +254,15 @@ Changes since 1.3.1:
 * Added support for the 482 numeric (ERR_CHANOPRIVSNEEDED).
 * Fixed a bug causing the '/kickban' command not use the default kick reason
   from the Identity settings if no reason was explicitly specified.
+* Fixed build with KDE4_ENABLE_FINAL.
+* Raw log tabs (/raw) now use percent-recording to depict non-ASCII charac-
+  ters in raw traffic for much improved usefulness and reliability in the
+  multi-encoding world of IRC.
+* The Warning Dialogs system has been overhauled, with improved wording in
+  the listing in the configuration dialog (which now also contains the pre-
+  viously missing warning when minimizing to the system tray) and further
+  improvements to individual warning dialogs, such as the addition of pre-
+  viously missing Cancel buttons.
 
 
 Changes from 1.3 to 1.3.1:

commit 0a10299495f9102c3210d607d78c421f79f0c4b2
Author: Laurent Montel <montel@kde.org>
Date:   Sun Oct 10 14:57:49 2010 +0200

    Fix forward declaration

diff --git a/src/scriptlauncher.h b/src/scriptlauncher.h
index 631e288..3ec634a 100644
--- a/src/scriptlauncher.h
+++ b/src/scriptlauncher.h
@@ -16,7 +16,6 @@
 #define SCRIPTLAUNCHER_H
 
 
-class Server;
 
 class ScriptLauncher : public QObject
 {
diff --git a/src/viewer/ircviewbox.h b/src/viewer/ircviewbox.h
index b6aabc3..652302d 100644
--- a/src/viewer/ircviewbox.h
+++ b/src/viewer/ircviewbox.h
@@ -16,7 +16,6 @@
 
 class IRCView;
 class SearchBar;
-class Server;
 
 class IRCViewBox : public KVBox
 {

commit f44917ce0862d8317835650203481b4a9254f737
Author: Script Kiddy <scripty@kde.org>
Date:   Tue Oct 12 12:18:56 2010 +0200

    SVN_SILENT made messages (.desktop file)

diff --git a/data/konversation.notifyrc b/data/konversation.notifyrc
index 3131f1a..53a42b6 100644
--- a/data/konversation.notifyrc
+++ b/data/konversation.notifyrc
@@ -777,7 +777,7 @@ Action=None
 Name=Nick left channel
 Name[ast]=Alcuñu que dexa la canal
 Name[bg]=Псевдонимът напусна канала
-Name[ca]=El sobrenom ha abandonat el canal
+Name[ca]=El sobrenom ha deixat el canal
 Name[ca@valencia]=El sobrenom ha abandonat el canal
 Name[cs]=Přezdívka opustila kanál
 Name[da]=Nick forlod kanal

commit 9da5be82888a128a78c4aaff914fdd6048d47bb9
Author: Eike Hein <hein@kde.org>
Date:   Thu Oct 7 21:32:55 2010 +0200

    Bump.

diff --git a/src/commit.h b/src/commit.h
index 09dcc6e..66407f1 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4081
+#define COMMIT 4082
 #endif

commit 8ed6fef1b7e5ec2f3c6efdf1dafbd66e15c16dc7
Author: Eike Hein <hein@kde.org>
Date:   Thu Oct 14 18:10:45 2010 +0200

    Bump for CIA test

diff --git a/src/commit.h b/src/commit.h
index 66407f1..77007c2 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4082
+#define COMMIT 4083
 #endif

commit 831a82224438311f9e1d9abc8a32002afff94c3c
Author: Eike Hein <hein@kde.org>
Date:   Thu Oct 14 18:34:35 2010 +0200

    Another bump for CIA test

diff --git a/src/commit.h b/src/commit.h
index 77007c2..1e892fd 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4083
+#define COMMIT 4084
 #endif

commit 36033779dc1d58afc6d73fd46c678722bd26963c
Author: Eike Hein <hein@kde.org>
Date:   Thu Oct 14 19:09:27 2010 +0200

    And another :-/

diff --git a/src/commit.h b/src/commit.h
index 1e892fd..f37729a 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4084
+#define COMMIT 4085
 #endif

commit 99eebd441aa5179885917f621453977afda42143
Author: Eike Hein <hein@kde.org>
Date:   Thu Oct 14 21:33:40 2010 +0200

    CIA test

diff --git a/src/commit.h b/src/commit.h
index f37729a..6885368 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4085
+#define COMMIT 4086
 #endif

commit 2694fad3030f8ac0a753d3ca17925d9f7dfc2d50
Author: Eike Hein <hein@kde.org>
Date:   Sun Oct 17 07:07:14 2010 +0200

    A bunch of Channel List fixes.
    
    * Avoid /list possibly getting confused about the server context.
    * Fix /list <pattern> closing an existing Channel List rather than
      adjusting the active filter and refreshing the list.
    * Improve invalid context warning string.
    CCMAIL:valorie.zimmerman@gmail.com

diff --git a/ChangeLog b/ChangeLog
index 84178db..310875f 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -263,6 +263,11 @@ Changes since 1.3.1:
   viously missing warning when minimizing to the system tray) and further
   improvements to individual warning dialogs, such as the addition of pre-
   viously missing Cancel buttons.
+* Fixed a bug that could cause the '/list' command to open the Channel List
+  tab for the wrong connection.
+* Fixed a bug causing '/list <search pattern>' to close an existing Channel
+  List tab (the intended behavior for a parameter-less '/list') rather than
+  update the active filter and refresh the list.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/config/warnings_config.cpp b/src/config/warnings_config.cpp
index 92520b6..f0431f4 100644
--- a/src/config/warnings_config.cpp
+++ b/src/config/warnings_config.cpp
@@ -165,7 +165,7 @@ void Warnings_Config::loadSettings()
           "... closing a DCC Chat tab"
         )},
         { "ChannelListNoServerSelected",                                                                I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
-          "... the channel list cannot be retrieved because the current tab is selected"
+          "... when a source for the channel list cannot be determined from the current tab"
         )},
         { "HideMenuBarWarning",                                                                         I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
           "... you have chosen to hide the menu bar"
diff --git a/src/irc/channellistpanel.cpp b/src/irc/channellistpanel.cpp
index 3c3a070..7348058 100644
--- a/src/irc/channellistpanel.cpp
+++ b/src/irc/channellistpanel.cpp
@@ -210,6 +210,9 @@ ChannelListPanel::~ChannelListPanel()
 
 void ChannelListPanel::refreshList()
 {
+    if (!m_refreshList->isEnabled())
+        return;
+
     m_numUsers = 0;
     m_numChannels = 0;
     m_visibleUsers = 0;
@@ -433,12 +436,10 @@ void ChannelListPanel::joinChannelClicked()
 
 void ChannelListPanel::applyFilterClicked()
 {
-    //Don't run if they pressed return when the button was disabled
-    if (!m_refreshList->isEnabled()) return;
-
     if (!m_numChannels)
     {
         refreshList();
+
         return;
     }
 }
diff --git a/src/irc/channellistpanel.h b/src/irc/channellistpanel.h
index beee843..73177e2 100644
--- a/src/irc/channellistpanel.h
+++ b/src/irc/channellistpanel.h
@@ -96,6 +96,7 @@ class ChannelListPanel : public ChatWindow, private Ui::ChannelListWidgetUI
         void joinChannel(const QString& channelName);
 
     public slots:
+        void refreshList();
         void addToChannelList(const QString& channel,int users,const QString& topic);
         void endOfChannelList();
         void applyFilterClicked();
@@ -104,7 +105,6 @@ class ChannelListPanel : public ChatWindow, private Ui::ChannelListWidgetUI
         void setFilter(const QString& filter);
 
     protected slots:
-        void refreshList();
         void saveList();
 
         void filterChanged();
diff --git a/src/irc/outputfilter.cpp b/src/irc/outputfilter.cpp
index 311569e..21b0aad 100644
--- a/src/irc/outputfilter.cpp
+++ b/src/irc/outputfilter.cpp
@@ -1837,7 +1837,7 @@ namespace Konversation
 
     OutputFilterResult OutputFilter::command_list(const OutputFilterInput& input)
     {
-        emit openChannelList(input.parameter, true);
+        emit openChannelList(input.parameter);
 
         return OutputFilterResult();
     }
diff --git a/src/irc/outputfilter.h b/src/irc/outputfilter.h
index 18ef639..71134a9 100644
--- a/src/irc/outputfilter.h
+++ b/src/irc/outputfilter.h
@@ -106,7 +106,7 @@ namespace Konversation
             void openRawLog(bool show);
             void closeRawLog();
             void openKonsolePanel();
-            void openChannelList(const QString& parameter, bool getList);
+            void openChannelList(const QString& parameter);
             void sendToAllChannels(const QString& text);
             void launchScript(int connectionId, const QString& target, const QString& parameter);
             void banUsers(const QStringList& userList,const QString& channel,const QString& option);
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index 4d8191c..3435214 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -322,7 +322,7 @@ void Server::connectSignals()
     connect(this, SIGNAL(resetLag(Server*)), getViewContainer(), SIGNAL(resetStatusBarLagLabel(Server*)));
     connect(getOutputFilter(), SIGNAL(showView(ChatWindow*)), getViewContainer(), SLOT(showView(ChatWindow*)));
     connect(getOutputFilter(), SIGNAL(openKonsolePanel()), getViewContainer(), SLOT(addKonsolePanel()));
-    connect(getOutputFilter(), SIGNAL(openChannelList(const QString&, bool)), getViewContainer(), SLOT(openChannelList(const QString&, bool)));
+    connect(getOutputFilter(), SIGNAL(openChannelList(const QString&)), this, SLOT(requestOpenChannelListPanel(const QString&)));
     connect(getOutputFilter(), SIGNAL(closeDccPanel()), getViewContainer(), SLOT(closeDccPanel()));
     connect(getOutputFilter(), SIGNAL(addDccPanel()), getViewContainer(), SLOT(addDccPanel()));
 
@@ -3508,6 +3508,11 @@ void Server::closeRawLog()
     if (m_rawLog) delete m_rawLog;
 }
 
+void Server::requestOpenChannelListPanel(const QString& filter)
+{
+    getViewContainer()->openChannelList(this, filter, true);
+}
+
 ChannelListPanel* Server::addChannelListPanel()
 {
     if(!m_channelListPanel)
diff --git a/src/irc/server.h b/src/irc/server.h
index c49d2aa..7cc715f 100644
--- a/src/irc/server.h
+++ b/src/irc/server.h
@@ -578,6 +578,8 @@ class Server : public QObject
           */
         void sendChannelNickChangedSignals();
 
+        void requestOpenChannelListPanel(const QString& filter);
+
     private slots:
         void collectStats(int bytes, int encodedBytes);
 
diff --git a/src/viewer/viewcontainer.cpp b/src/viewer/viewcontainer.cpp
index 4c82262..e6eb332 100644
--- a/src/viewer/viewcontainer.cpp
+++ b/src/viewer/viewcontainer.cpp
@@ -2468,59 +2468,71 @@ ChannelListPanel* ViewContainer::addChannelListPanel(Server* server)
     return channelListPanel;
 }
 
-void ViewContainer::openChannelList(const QString& filter, bool getList)
+void ViewContainer::openChannelList(Server* server, const QString& filter, bool getList)
 {
-    if (m_frontServer)
+    if (!server)
+        server = m_frontServer;
+
+    if (!server)
     {
-        ChannelListPanel* panel = m_frontServer->getChannelListPanel();
+        KMessageBox::information(m_window,
+            i18n(
+            "To know which server to display the channel list "
+            "for, the list can only be opened from a "
+            "query, channel or status window."
+            ),
+            i18n("Channel List"),
+            "ChannelListNoServerSelected");
+    }
+
+    ChannelListPanel* panel = server->getChannelListPanel();
 
-        if (panel)
+    if (panel && filter.isEmpty())
+    {
+        closeView(panel);
+
+        if (server == m_frontServer)
         {
-            closeView(panel);
             KToggleAction* action = static_cast<KToggleAction*>(actionCollection()->action("open_channel_list"));
             if (action) action->setChecked(false);
         }
-        else
-        {
-            int ret = KMessageBox::Continue;
 
-            if (filter.isEmpty())
-            {
-                ret = KMessageBox::warningContinueCancel(m_window,i18n("Using this function may result in a lot "
-                      "of network traffic. If your connection is not fast "
-                      "enough, it is possible that your client will be "
-                      "disconnected by the server."),
-                      i18n("Channel List Warning"),
-                      KStandardGuiItem::cont(),
-                      KStandardGuiItem::cancel(),
-                      "ChannelListWarning");
-            }
+        return;
+    }
 
-            if (ret != KMessageBox::Continue)
+    if (!panel)
+    {
+        int ret = KMessageBox::Continue;
+
+        if (filter.isEmpty())
+        {
+            ret = KMessageBox::warningContinueCancel(m_window, i18n("Using this function may result in a lot "
+                    "of network traffic. If your connection is not fast "
+                    "enough, it is possible that your client will be "
+                    "disconnected by the server."),
+                    i18n("Channel List Warning"),
+                    KStandardGuiItem::cont(),
+                    KStandardGuiItem::cancel(),
+                    "ChannelListWarning");
+        }
+
+        if (ret != KMessageBox::Continue)
+        {
+            if (server == m_frontServer)
             {
                 KToggleAction* action = static_cast<KToggleAction*>(actionCollection()->action("open_channel_list"));
                 if (action) action->setChecked(false);
-                return;
             }
 
-            panel = m_frontServer->addChannelListPanel();
-
-            panel->setFilter(filter);
-
-            if(getList) panel->applyFilterClicked();
+            return;
         }
+
+        panel = server->addChannelListPanel();
     }
-    else
-    {
-        KMessageBox::information(m_window,
-            i18n(
-            "To know which server to display the channel list "
-            "for, the list can only be opened from a "
-            "query, channel or status window."
-            ),
-            i18n("Channel List"),
-            "ChannelListNoServerSelected");
-    }
+
+    panel->setFilter(filter);
+
+    if (getList) panel->refreshList();
 }
 
 void ViewContainer::openNicksOnlinePanel()
diff --git a/src/viewer/viewcontainer.h b/src/viewer/viewcontainer.h
index 8eeec6e..8b13796 100644
--- a/src/viewer/viewcontainer.h
+++ b/src/viewer/viewcontainer.h
@@ -173,7 +173,7 @@ class ViewContainer : public QObject
         void closeQueries();
 
         ChannelListPanel* addChannelListPanel(Server* server);
-        void openChannelList(const QString& filter = QString(), bool getList = false);
+        void openChannelList(Server* server = 0, const QString& filter = QString(), bool getList = false);
 
         void openNicksOnlinePanel();
         void closeNicksOnlinePanel();

commit f3dfec0c85cfe6365f2720117bc79f17d248f0f6
Author: Burkhard Lück <lueck@hube-lueck.de>
Date:   Tue Oct 19 19:53:20 2010 +0200

    doc + screenshot update

diff --git a/doc/addchannel.png b/doc/addchannel.png
index 17f9d5b..6160632 100644
Binary files a/doc/addchannel.png and b/doc/addchannel.png differ
diff --git a/doc/addnetwork_co.png b/doc/addnetwork_co.png
index 0054264..8788693 100644
Binary files a/doc/addnetwork_co.png and b/doc/addnetwork_co.png differ
diff --git a/doc/addserver_co.png b/doc/addserver_co.png
index 19c6b22..f2b0b8a 100644
Binary files a/doc/addserver_co.png and b/doc/addserver_co.png differ
diff --git a/doc/channel_screen_co.png b/doc/channel_screen_co.png
deleted file mode 100644
index fbd03b5..0000000
Binary files a/doc/channel_screen_co.png and /dev/null differ
diff --git a/doc/channel_screen_tour_co.png b/doc/channel_screen_tour_co.png
index ea6622a..6a70f81 100644
Binary files a/doc/channel_screen_tour_co.png and b/doc/channel_screen_tour_co.png differ
diff --git a/doc/channellist_screen_co.png b/doc/channellist_screen_co.png
index 79063e0..82680ef 100644
Binary files a/doc/channellist_screen_co.png and b/doc/channellist_screen_co.png differ
diff --git a/doc/checkidentities.png b/doc/checkidentities.png
index 8d8f920..d14023a 100644
Binary files a/doc/checkidentities.png and b/doc/checkidentities.png differ
diff --git a/doc/colorchooser_screen.png b/doc/colorchooser_screen.png
index b99b55a..48b8ce6 100644
Binary files a/doc/colorchooser_screen.png and b/doc/colorchooser_screen.png differ
diff --git a/doc/configure.png b/doc/configure.png
deleted file mode 100644
index ba4bbc6..0000000
Binary files a/doc/configure.png and /dev/null differ
diff --git a/doc/dccstatus_screen_co.png b/doc/dccstatus_screen_co.png
index e3d42fb..d1006d6 100644
Binary files a/doc/dccstatus_screen_co.png and b/doc/dccstatus_screen_co.png differ
diff --git a/doc/editserver_screen_co.png b/doc/editserver_screen_co.png
deleted file mode 100644
index 258cfbd..0000000
Binary files a/doc/editserver_screen_co.png and /dev/null differ
diff --git a/doc/first_channel_co.png b/doc/first_channel_co.png
index 985b02c..96a04b6 100644
Binary files a/doc/first_channel_co.png and b/doc/first_channel_co.png differ
diff --git a/doc/first_serverlist_co.png b/doc/first_serverlist_co.png
index 09f1dec..089d6ee 100644
Binary files a/doc/first_serverlist_co.png and b/doc/first_serverlist_co.png differ
diff --git a/doc/highlighting_screen_co.png b/doc/highlighting_screen_co.png
index 8940d53..7376e51 100644
Binary files a/doc/highlighting_screen_co.png and b/doc/highlighting_screen_co.png differ
diff --git a/doc/identities_adv_co.png b/doc/identities_adv_co.png
index 4b946f2..d45ef0c 100644
Binary files a/doc/identities_adv_co.png and b/doc/identities_adv_co.png differ
diff --git a/doc/identities_away_co.png b/doc/identities_away_co.png
index 68c2434..5ffbc56 100644
Binary files a/doc/identities_away_co.png and b/doc/identities_away_co.png differ
diff --git a/doc/identities_gen_co.png b/doc/identities_gen_co.png
index 35adecb..371d80a 100644
Binary files a/doc/identities_gen_co.png and b/doc/identities_gen_co.png differ
diff --git a/doc/index.docbook b/doc/index.docbook
index 3dbd185..a46481e 100644
--- a/doc/index.docbook
+++ b/doc/index.docbook
@@ -3,7 +3,7 @@
   <!-- Define an entity for your application if it is not part of KDE
        CVS -->
   <!ENTITY kappname "&konversation;">
-  <!ENTITY package "kdeextragear-2">
+  <!ENTITY package "extragear">
   <!ENTITY irc "<acronym>IRC</acronym>">
   <!ENTITY CTCP "<acronym>CTCP</acronym>">
   <!ENTITY nickname "<acronym>nickname</acronym>">
@@ -80,14 +80,14 @@ Please respect the format of the date (YYYY-MM-DD) and of the version
 (V.MM.LL), it could be used by automation scripts.
 Do NOT change these in the translation. -->
 
-<date>2009-09-13</date>
-<releaseinfo>1.2</releaseinfo>
+<date>2010-10-14</date>
+<releaseinfo>1.3</releaseinfo>
 
 <!-- Abstract about this handbook -->
 
 <abstract>
 <para>
-&konversation; is a user-friendly &irc; client for the K Desktop Environment.
+&konversation; is a user-friendly &irc; client built on the &kde; platform.
 </para>
 </abstract>
 
@@ -97,7 +97,7 @@ Please at least include KDE, the KDE package it is in, the name
 
 <keywordset>
 <keyword>KDE</keyword>
-<keyword>kdeextragear-2</keyword>
+<keyword>extragear</keyword>
 <keyword>Konversation</keyword>
 <keyword>irc</keyword>
 <keyword>internet relay chat</keyword>
@@ -164,7 +164,7 @@ problems. Basically a long version of the abstract.  Don't include a
 revision history. (see installation appendix comment) -->
 
 <para>
-&konversation; is an &irc; client for &kde; 3.2 or later.  It offers the following features:
+&konversation; is an &irc; client built on the &kde; platform.  It offers the following features:
 </para>
 
 <para>
@@ -193,12 +193,11 @@ regular expression pattern.</para></listitem>
 
 <para>The &konversation; website is
 <ulink url="&konviwebsite;">&konviwebsite;</ulink>.
- Questions and answers for &konversation; can be discussed on the
- <ulink url="http://lists.sourceforge.net/mailman/listinfo/konversation-users">&konversation;-Users</ulink> mailing list. Please subscribe to learn about new features, bug reports and the like. To stay informed of new releases, you can join our
- <ulink url="http://lists.sourceforge.net/mailman/listinfo/konversation-announce">&konversation;-Announce</ulink> mailing list. This is a low volume mailing list only used to announce new releases or patches.
+Further information like a FAQ and tips and tricks you find in the 
+<ulink url="http://konversation.kde.org/wiki/Main_Page">&konversation; Wiki</ulink>
 </para>
 
-<para>Developers for &konversation; can often be contacted via &irc; at  <ulink url="irc://irc.kde.org/%23konversation">irc.kde.org channel #konversation</ulink>.
+<para>Developers for &konversation; can often be contacted via &irc; at  <ulink url="irc://chat.freenode.net/konversation">irc.freenode.net channel #konversation</ulink>.
 </para>
 
 </chapter>
@@ -277,7 +276,7 @@ default <guilabel>identity</guilabel> is not set up correctly.</para>
 about the current user from the operating system and fills in defaults
 for the Identity.  If the operating system user information is not
 complete, for example, no Full Name is defined, you may see the message
-above.  To correct this problem, click <guibutton>OK</guibutton> and
+above.  To correct this problem, click <guibutton>Edit Identity...</guibutton> and
 see <link linkend="identity">Setting your identity</link> for more
 information.</para>
 </note>
@@ -344,7 +343,7 @@ the Input Line.  (The <userinput>#</userinput> is required.) You may also type <
 	<guisubmenu>Identities</guisubmenu>
 </menuchoice>
  on the main menu.  <action>The <guilabel>Identities</guilabel> screen will appear.  You can also display the <guilabel>Identities</guilabel> screen by clicking the <guibutton>Edit</guibutton> button on the
- <guilabel>Add Network</guilabel> screen.</action>
+ <guilabel>Edit Network</guilabel> or <guilabel>New Network</guilabel> screen.</action>
 </para>
 
 <para>
@@ -379,7 +378,7 @@ the Input Line.  (The <userinput>#</userinput> is required.) You may also type <
 duplicate, rename, or remove an <guilabel>Identity</guilabel>.</para></callout>
 <callout arearefs="pt-identity-gen-3"><para>Enter your real name here.  &irc; is not intended to keep you hidden from your friends or enemies. Keep this in mind if you are tempted to behave maliciously. A fake "real name" can be a good way to mask your gender from all the nerds out there, but the PC you use can always be traced so you will never be truly anonymous.</para></callout>
 <callout arearefs="pt-identity-gen-4"><para>Use these buttons to
-<guibutton>Add</guibutton>, <guilabel>Edit</guilabel>, or <guilabel>Delete</guilabel> a &nickname;.</para></callout>
+<guibutton>Add</guibutton> or <guilabel>Remove</guilabel> a &nickname;.</para></callout>
 <callout arearefs="pt-identity-gen-5"><para>This is your list of &nickname;s.
 A &nickname; is the name that other users will know you by.
 You may use any name you desire.  The first character must be a letter.  Other characters may be letters, numbers, or the special characters <literal>-[]\`_^{}|</literal>.</para>
@@ -438,7 +437,11 @@ If you don't know what this is, leave these boxes blank.</para></callout>
 		</mediaobjectco>
 	</screenshot>
 </para>
-
+<!-- Automatik Away group missing 
+If you check this box, Konversation will automatically set all connections 
+using this Identity away when the screensaver starts or after a period of 
+user inactivity configured below.
+-->
 <para>
 <calloutlist>
 <callout arearefs="pt-identity-away-1"><para>
@@ -497,7 +500,7 @@ Use this option carefully, with consideration for your fellow &irc; users.
 		</mediaobjectco>
 	</screenshot>
 </para>
-
+<!-- Quit reason missing Whenever you leave a server this message is shown to others-->
 <para>
 <calloutlist>
 <callout arearefs="pt-identity-adv-1"><para>You can enter a command
@@ -592,8 +595,8 @@ and the <guilabel>Channels</guilabel> automatically joined when connected.
 If you have specified a group for your networks, networks are listed
 indented under the group.  Click on a network to select it.
 </para></callout>
-<callout arearefs="pt-serverlist-2"><para>Use these buttons to
-<guibutton>Add</guibutton> a new network, <guibutton>Edit</guibutton>
+<callout arearefs="pt-serverlist-2"><para>Use these buttons to add a 
+<guibutton>New</guibutton> network, <guibutton>Edit</guibutton>
 a highlighted network, or <guibutton>Delete</guibutton> a highlighted network.
 </para></callout>
 <callout arearefs="pt-serverlist-3"><para>Click this button to connect
@@ -609,12 +612,12 @@ connect to any networks at this time.</para></callout>
 
 <anchor id="serverlist-addnetwork" />
 
-<para>When you click the <guibutton>Add</guibutton> button,
-the <guilabel>Add Network</guilabel> screen appears.</para>
+<para>When you click the <guibutton>New</guibutton> button,
+the <guilabel>New Network</guilabel> screen appears.</para>
 
 <para>
 <screenshot>
-	<screeninfo>Add Network</screeninfo>
+	<screeninfo>New Network</screeninfo>
 	<mediaobjectco>
 		<imageobjectco>
 			<areaspec units="calspair">
@@ -626,14 +629,13 @@ the <guilabel>Add Network</guilabel> screen appears.</para>
 				<area id="pt-addnetwork-6" coords="1 1"/>
 				<area id="pt-addnetwork-7" coords="1 1"/>
 				<area id="pt-addnetwork-8" coords="1 1"/>
-				<area id="pt-addnetwork-9" coords="1 1"/>
 			</areaspec>
 			<imageobject>
 				<imagedata fileref="addnetwork_co.png" format="PNG"/>
 			</imageobject>
 		</imageobjectco>
 		<textobject>
-			<phrase>Add Network</phrase>
+			<phrase>New Network</phrase>
 		</textobject>
 	</mediaobjectco>
 </screenshot>
@@ -641,44 +643,44 @@ the <guilabel>Add Network</guilabel> screen appears.</para>
 
 <para>
 <calloutlist>
-<callout arearefs="pt-addnetwork-1"><para>Enter the name of the
-<guilabel>Network</guilabel> here.  You may create as many entries
+<callout arearefs="pt-addnetwork-1"><para>Enter the 
+<guilabel>Network name</guilabel> here.  You may create as many entries
 in the <guilabel>Server List</guilabel> screen with the same
 <guilabel>Network</guilabel> as you like.</para></callout>
-<callout arearefs="pt-addnetwork-2"><para>Optional.  If you enter something
+<!--callout arearefs="pt-addnetwork-2"><para>Optional.  If you enter something
 here, all the <guilabel>Network</guilabel>s with the same
 <guilabel>Group</guilabel> will be listed together in the
-<guilabel>Server List</guilabel> screen.</para></callout>
-<callout arearefs="pt-addnetwork-3"><para>Choose an existing
+<guilabel>Server List</guilabel> screen.</para></callout-->
+<callout arearefs="pt-addnetwork-2"><para>Choose an existing
 <guilabel>Identity</guilabel> or click the <guibutton>Edit</guibutton>
 button to add a new Identity or edit an existing one.  The
 <guilabel>Identity</guilabel> will identify you and determine
 your &nickname; when you connect to the network.</para></callout>
-<callout arearefs="pt-addnetwork-4"><para>Optional.  This command will be sent to the server after connecting.  Example: <userinput>/msg NickServ IDENTIFY
+<callout arearefs="pt-addnetwork-3"><para>Optional.  This command will be sent to the server after connecting.  Example: <userinput>/msg NickServ IDENTIFY
 <replaceable>konvirocks</replaceable></userinput>.  This example is for the freenode network, which requires users to register their &nickname;
 with a password and login when connecting.  <userinput><replaceable>konvirocks</replaceable></userinput>
 is the password for the &nickname; given in <guilabel>Identity</guilabel>.
 You may enter more than one command by separating them with semicolons.</para></callout>
-<callout arearefs="pt-addnetwork-5"><para>Check here if you want
+<callout arearefs="pt-addnetwork-4"><para>Check here if you want
 &konversation; to automatically connect to this network whenever
 you open &konversation;.</para></callout>
-<callout arearefs="pt-addnetwork-6"><para>This is a list of &irc;
+<callout arearefs="pt-addnetwork-5"><para>This is a list of &irc;
 <guilabel>Servers</guilabel> in the network.  When connecting to the network,
 &konversation; will
 attempt to connect to the top server first.  If this fails,
 it will attempt the second server.  If this fails, it will attempt
 the third, and so on.  At least one server must be specified.
 Click a server to highlight it.</para></callout>
-<callout arearefs="pt-addnetwork-7"><para>Use these buttons to
+<callout arearefs="pt-addnetwork-6"><para>Use these buttons to
 <guibutton>Add</guibutton> a server, <guibutton>Edit</guibutton> a
 highlighted server, or <guibutton>Delete</guibutton> a highlighted
 server.  You can also adjust the order of the server list and therefore
 the order of connection attempts.</para></callout>
-<callout arearefs="pt-addnetwork-8"><para>Optional.  This is a list of the
+<callout arearefs="pt-addnetwork-7"><para>Optional.  This is a list of the
 channels that will be automatically joined once &konversation;
 has connected to a server.  You may leave this blank if you
 wish to not automatically join any channels.</para></callout>
-<callout arearefs="pt-addnetwork-9"><para>Use these buttons to
+<callout arearefs="pt-addnetwork-8"><para>Use these buttons to
 <guibutton>Add</guibutton> a channel, <guibutton>Edit</guibutton> a
 highlighted channel, or <guibutton>Delete</guibutton> a highlighted
 channel.  You may also change the order the channels are joined.
@@ -804,7 +806,7 @@ a password in order to join, enter it, otherwise leave blank.
 
 <callout arearefs="pt-channellist-1"><para>Enter a filter string here.</para></callout>
 
-<callout arearefs="pt-channellist-2"><para>You can limit the channel list to those channels with a minimum or maximum number of users here. Choosing 0 disables the respective criteria.</para></callout>
+<callout arearefs="pt-channellist-2"><para>You can limit the channel list to those channels with a minimum or maximum number of users here. Choosing <guilabel>No Limit</guilabel> disables the respective criteria.</para></callout>
 
 <callout arearefs="pt-channellist-3"><para>Click here to retrieve the list of channels from the server and apply the filter.</para></callout>
 
@@ -816,12 +818,12 @@ a password in order to join, enter it, otherwise leave blank.
 
 </calloutlist>
 </para>
-
+<!--
 <para>You should avoid clicking the <guibutton>Refresh List</guibutton> button.  Most servers have thousands
 of channels, and performing this puts a high load on the server.  Besides, it can require several minutes to complete,
 depending upon your network bandwidth.  If your client is too slow, the server may even disconnect you.
 </para>
-
+-->
 <para>Sometimes there are "secret" channels on servers.  Such channels are not listed in the <guilabel>Channel List</guilabel>.
 You can still join these channels if you know their name.  In any <interface>Input Line</interface>, type: <userinput><command>/join</command>
 <replaceable>#channelname</replaceable></userinput>.  (The <userinput>#</userinput> is required.)  A new tab is created for the channel.  If you join a channel and the Nick Panel lists only your &nickname;, it means that the channel did not exist before.  The server created the channel and you are the operator.  In this case, you probably want to close the channel by typing: <userinput><command>/part</command></userinput>.
@@ -884,6 +886,7 @@ To send a message to everyone in the channel, type the message here and press &E
 
  <!-- Uncomment when this is implemented.
  &konversation; will automatically split messages that exceed the 510 character RFC limit into multiple messages.
+ I this implemented now?
  -->
 
  <para>
@@ -893,8 +896,8 @@ To send a message to everyone in the channel, type the message here and press &E
 	<guisubmenu>Settings</guisubmenu>
 	<guisubmenu>Configure Konversation</guisubmenu>
 </menuchoice> from the main menu, expand <guilabel>Behavior</guilabel>,
-click on <guilabel>General</guilabel>, and click the
-<guilabel>Completion mode</guilabel> box.
+click on <guilabel>General</guilabel>, and select a 
+<guilabel>Completion mode</guilabel>.
  </para>
 
  <para>
@@ -917,12 +920,15 @@ or use the mouse wheel to cycle through the tabs.
 <menuchoice>
 	<guisubmenu>Settings</guisubmenu>
 	<guisubmenu>Configure Konversation</guisubmenu>
-</menuchoice> from the main menu, expand <guilabel>Behavior</guilabel>,
-click on <guilabel>General</guilabel>.
+</menuchoice> from the main menu, expand <guilabel>Interface</guilabel>,
+click on <guilabel>Tabs</guilabel> or expand <guilabel>Notifications</guilabel> and 
+click on <guilabel>Tabs</guilabel>.
 </para>
 
 </callout>
-
+<!-- 
+Settings->Configure Konversation->Notifications->Tabs->Use colored LEDs needs to be activated
+-->
 <callout arearefs="pt-channeltour-3"><para>These &led;s will blink when there is something you haven't seen in that tab.
 The &led; will blink slower when the only unseen messages are <command>join</command>, <command>part</command>,  <command>quit</command>, or &nickname; changes.  They blink faster if there are unseen regular messages.
   The colors are as follows:
@@ -957,9 +963,8 @@ Channel
 <menuchoice>
 	<guisubmenu>Settings</guisubmenu>
 	<guisubmenu>Configure Konversation</guisubmenu>
-</menuchoice> from the main menu, expand <guilabel>Appearance</guilabel>,
-click on <guilabel>Chat Window</guilabel>, and uncheck the
-<guilabel>Show box to change own nickname</guilabel> box.
+</menuchoice> from the main menu, expand <guilabel>Interface</guilabel>,
+click on <guilabel>Chat Window</guilabel>, and uncheck <guilabel>Show box to change own nickname</guilabel>.
 </para></callout>
 
 <callout arearefs="pt-channeltour-6"><para>The channel topic is displayed here.
@@ -968,7 +973,7 @@ clicking the button to the left of the topic.  To hide channel topics, choose
 <menuchoice>
 	<guisubmenu>Settings</guisubmenu>
 	<guisubmenu>Configure Konversation</guisubmenu>
-</menuchoice> from the main menu, expand <guilabel>Appearance</guilabel>,
+</menuchoice> from the main menu, expand <guilabel>Interface</guilabel>,
 click on <guilabel>Chat Window</guilabel>, and uncheck the
 <guilabel>Show channel topic</guilabel> box.
 </para></callout>
@@ -978,7 +983,7 @@ left of the topic.  To hide channel mode buttons, choose
 <menuchoice>
 	<guisubmenu>Settings</guisubmenu>
 	<guisubmenu>Configure Konversation</guisubmenu>
-</menuchoice> from the main menu, expand <guilabel>Appearance</guilabel>,
+</menuchoice> from the main menu, expand <guilabel>Interface</guilabel>,
 click on <guilabel>Chat Window</guilabel>, and uncheck the
 <guilabel>Show channel mode buttons</guilabel> box.
 </para></callout>
@@ -989,9 +994,8 @@ This is called the <interface>Nick Panel</interface>.  It is displayed whenever
 about the user.  You may change how the icons are displayed next to each &nickname; by changing
 the &nickname; icon theme.  See <link linkend="nickthemes">Configuring &nickname; themes</link>
  for more information.
-The <guilabel>Big Bullets</guilabel> theme, as shown in the screen above, uses the following icons:
+The <guilabel>Default Theme</guilabel>, as shown in the screen above, uses the following icons:
 <itemizedlist>
-
 <listitem>
 <para><inlinemediaobject><imageobject><imagedata fileref="irc_normal.png" format="PNG"  /></imageobject></inlinemediaobject>
 normal user
@@ -1031,7 +1035,7 @@ channel admin <!-- (see TODO) -->
 </itemizedlist>
 </para>
 
-<para>In addition, if a user is away, a small red cross will be drawn in the corner of the icon.
+<para>In addition, if a user is away, a small clock will be drawn in the corner of the icon.
 <inlinemediaobject><imageobject><imagedata fileref="irc_away.png" format="PNG"  /></imageobject></inlinemediaobject></para>
 
 <para>
@@ -1042,8 +1046,8 @@ This is also the place where you can <link linkend="linkaddressbook">associate a
 
 <para>To hide the <interface>Nick Panel</interface>, choose
 <menuchoice>
-	<guisubmenu>Window</guisubmenu>
-	<guisubmenu>Hide Nicklist</guisubmenu>
+	<guisubmenu>Settings</guisubmenu>
+	<guisubmenu>Show Nicklist</guisubmenu>
 </menuchoice> from the main menu.
 </para>
 
@@ -1260,8 +1264,6 @@ To configure notifications, choose
  on the main menu.  <action>The <guilabel>Notification Settings</guilabel> screen will appear.</action>
  </para>
 
-<para>Immediately click the <guibutton>More Options</guibutton> button.</para>
-
 <para>
 <screenshot>
 <screeninfo>The Notification Settings screen.</screeninfo>
@@ -1270,7 +1272,6 @@ To configure notifications, choose
 			<areaspec units="calspair">
 				<area id="pt-notification-1" coords="1 1"/>
 				<area id="pt-notification-2" coords="1 1"/>
-				<area id="pt-notification-3" coords="1 1"/>
 			</areaspec>
 			<imageobject>
 				<imagedata fileref="notification_screen_co.png" format="PNG"/>
@@ -1296,11 +1297,11 @@ To configure notifications, choose
 <para>Repeat by selecting another event and checking the notifications desired.  When you've configured all the desired notifications, click the <guibutton>Apply</guibutton> button.</para>
 
 <para>
-<calloutlist>
-
-<callout arearefs="pt-notification-3"><para>Once you've set up your notifications, you can enable or disable all notification actions here.  For example, you can choose to play a sound whenever your &nickname; is mentioned in a message.  When you are at your workstation, you can disable the sounds, but while you are away from your workstation but nearby, you can enable the sounds in order to get your attention.</para></callout>
-
-</calloutlist>
+Once you've set up your notifications, you can enable or disable all notification using 
+<menuchoice>
+	<guisubmenu>Window</guisubmenu>
+	<guisubmenu>Enable Notifications</guisubmenu>
+</menuchoice> on the main menu.
 </para>
 
 <tip><para>You can also alert yourself when someone mentions your &nickname;
@@ -1383,15 +1384,15 @@ one <userinput><command>WHOIS</command></userinput> command is automatically sen
 to request information for &nickname;s that do not have any information.  This continues until
 all &nickname;s have information.
 </para></callout>
-<callout arearefs="pt-nicksonline-3"><para>Nicknames that are not connected to any
+<!--callout arearefs="pt-nicksonline-3"><para>Nicknames that are not connected to any
 of the &irc; networks you are connected to are listed in the <guilabel>Offline</guilabel>
 part of the listing.
-</para></callout>
-<callout arearefs="pt-nicksonline-4"><para>Nicknames that are associated with
+</para></callout-->
+<!--callout arearefs="pt-nicksonline-4"><para>Nicknames that are associated with
 a contact entry in your address book have this icon
 (<inlinemediaobject><imageobject><imagedata fileref="kaddressbook.png" format="PNG"  /></imageobject></inlinemediaobject>) next to their information.
-</para></callout>
-<callout arearefs="pt-nicksonline-5"><para>Use these buttons to associate a &nickname;
+</para></callout-->
+<callout arearefs="pt-nicksonline-3"><para>Use these buttons to associate a &nickname;
 with a contact in your address book, remove an association, or open the address book
 to edit the contact information.  See the
 <ulink url="help:kaddressbook">&kaddressbook; Handbook</ulink> for additional instructions
@@ -1401,7 +1402,13 @@ on using the &kde; address book.
 </para>
 
 <para>
-To add additional &nickname;s to watch, click the <guilabel>Edit Watch List</guilabel> button.
+To add additional &nickname;s to watch, open the context menu in the <guilabel>Nick List</guilabel> 
+by clicking with the &RMB; on a &nickname; and select <guilabel>Add to Watched Nicks</guilabel> or choose
+<menuchoice>
+	<guisubmenu>Settings</guisubmenu>
+	<guisubmenu>Configure Konversation</guisubmenu>
+</menuchoice> from the main menu, expand <guilabel>Notifications</guilabel> and
+click on <guilabel>Watched Nicknames</guilabel>.
 The <guilabel>Watched Nicknames</guilabel> screen appears.
 </para>
 
@@ -1432,7 +1439,7 @@ The <guilabel>Watched Nicknames</guilabel> screen appears.
 <para>
 <calloutlist>
 
-<callout arearefs="pt-notifylist-1"><para>Check this box to activate the <guilabel>nickname watcher</guilabel> feature.</para></callout>
+<callout arearefs="pt-notifylist-1"><para>Check this box to activate the nickname watcher feature.</para></callout>
 
 <callout arearefs="pt-notifylist-2"><para>If you want the
 <guilabel>Watched Nicks Online</guilabel> screen to automatically display when you
@@ -1478,7 +1485,7 @@ your <guilabel>Watched Nicknames</guilabel> list connects or disconnects from th
 	<guisubmenu>Settings</guisubmenu>
 	<guisubmenu>Configure &konversation;</guisubmenu>
 </menuchoice>
- on the main menu.  <action>The <guilabel>Edit Preferences</guilabel> screen will appear.</action>
+ on the main menu.  <action>The <guilabel>Configure</guilabel> screen will appear.</action>
  </para>
 
 <para>
@@ -1511,17 +1518,17 @@ your <guilabel>Watched Nicknames</guilabel> list connects or disconnects from th
 <para>
 <calloutlist>
 
-<callout arearefs="pt-highlight-1"><para>Click here to select the <guilabel>Highlighting</guilabel> screen.</para></callout>
+<callout arearefs="pt-highlight-1"><para>Click here to select the <guilabel>Highlight</guilabel> screen.</para></callout>
 <callout arearefs="pt-highlight-2"><para>Click here to add a new item
 to the <guilabel>Highlight list</guilabel>.
 When an item in the list is selected, you may edit it in the panel below.</para></callout>
 <callout arearefs="pt-highlight-3"><para>Enter a string pattern here.
 Any message received that matches this pattern, anywhere in the message, will activate
-the highlighting for the message.  If you have the &kde; Regular Expression Editor
+the highlighting for the message. <!-- If you have the &kde; Regular Expression Editor
 utility installed on your system, the button to the right of the pattern will
 be enabled.  Click to display the editor, which will assist you
 in preparing more complex patterns.  (The &kde; Regular Expression Editor
-is part of the <command>kdeutils</command> package.)
+  is part of the <command>kdeutils</command> package.)-->
 </para></callout>
 <callout arearefs="pt-highlight-4"><para>If the pattern is found
 in a message, the entire message will be displayed
@@ -1578,7 +1585,7 @@ minimized in the system tray.</para>
 	<guisubmenu>Settings</guisubmenu>
 	<guisubmenu>Configure &konversation;</guisubmenu>
 </menuchoice>
- on the main menu.  <action>The <guilabel>Edit Preferences</guilabel> screen will appear.</action>
+ on the main menu.  <action>The <guilabel>Configure</guilabel> screen will appear.</action>
  </para>
 
 <para>
@@ -1592,6 +1599,7 @@ minimized in the system tray.</para>
 				<area id="pt-osd-3" coords="1 1"/>
 				<area id="pt-osd-4" coords="1 1"/>
 				<area id="pt-osd-5" coords="1 1"/>
+				<area id="pt-osd-6" coords="1 1"/>
 			</areaspec>
 			<imageobject>
 				<imagedata fileref="osd_screen_co.png" format="PNG"/>
@@ -1615,7 +1623,9 @@ minimized in the system tray.</para>
 
 <callout arearefs="pt-osd-4"><para>Click this button to choose a font for &osd;.  (<emphasis>Note: </emphasis> Not all fonts work.  Luxi Sans 22 and Impact 22 are known to work.)</para></callout>
 
-<callout arearefs="pt-osd-5"><para>Check the boxes here to select the types of messages you'd like to appear on screen, then click the <guibutton>Apply</guibutton> button.</para></callout>
+<callout arearefs="pt-osd-5"><para>Check the boxes here to select the types of messages you'd like to appear on screen.</para></callout>
+
+<callout arearefs="pt-osd-6"><para>Drag the OSD Priview to your desired position, then click the <guibutton>Apply</guibutton> button.</para></callout>
 
 </calloutlist>
 </para>
@@ -1679,9 +1689,9 @@ To change the &nickname; theme, choose
 	<guisubmenu>Settings</guisubmenu>
 	<guisubmenu>Configure Konversation</guisubmenu>
 </menuchoice>
- on the main menu.  <action>The <guilabel>Edit Preferences</guilabel> screen will appear.</action>
- Click <guilabel>Appearance</guilabel> to expand it, then click <guilabel>Themes</guilabel>
- to display the <guilabel>Themes</guilabel> screen.
+ on the main menu.  <action>The <guilabel>Configure</guilabel> screen will appear.</action>
+ Click <guilabel>Interface</guilabel> to expand it, then click <guilabel>Nicklist Themes</guilabel>
+ to display the <guilabel>Nicklist Themes</guilabel> screen.
  </para>
 
 <para>
@@ -1709,7 +1719,7 @@ To change the &nickname; theme, choose
 <para>
 <calloutlist>
 
-<callout arearefs="pt-themes-1"><para>Click to select the nick <guilabel>Themes</guilabel> screen.</para></callout>
+<callout arearefs="pt-themes-1"><para>Click to select the <guilabel>Nicklist Themes</guilabel> screen.</para></callout>
 <callout arearefs="pt-themes-2"><para>Select a theme.</para></callout>
 <callout arearefs="pt-themes-3"><para>Sample icons are displayed here in the chosen theme.</para></callout>
 <callout arearefs="pt-themes-4"><para>If you have downloaded a nick theme
@@ -1730,8 +1740,8 @@ from elsewhere, click to install it.</para></callout>
     <guisubmenu>Settings</guisubmenu>
     <guisubmenu>Configure Konversation</guisubmenu>
 </menuchoice>
-on the main menu.  <action>The <guilabel>Edit Preferences</guilabel> screen will appear.</action>
-Click <guilabel>Appearance</guilabel> to expand it, then click <guilabel>Chat Window</guilabel>.
+on the main menu.  <action>The <guilabel>Configure</guilabel> screen will appear.</action>
+Click <guilabel>Interface</guilabel> to expand it, then click <guilabel>Chat Window</guilabel>.
 Check the <guilabel>Show quick buttons</guilabel> box and click <guibutton>OK</guibutton>.
 </para>
 
@@ -1742,7 +1752,7 @@ To customize the <interface>Quick Buttons</interface>, choose
 	<guisubmenu>Settings</guisubmenu>
 	<guisubmenu>Configure Konversation</guisubmenu>
 </menuchoice>
- on the main menu.  <action>The <guilabel>Edit Preferences</guilabel> screen will appear.</action>
+ on the main menu.  <action>The <guilabel>Configure</guilabel> screen will appear.</action>
  Click <guilabel>Interface</guilabel> to expand it, then click <guilabel>Quick Buttons</guilabel>
  to display the <guilabel>Quick Buttons</guilabel> screen.
  </para>
@@ -1762,8 +1772,9 @@ To customize the <interface>Quick Buttons</interface>, choose
 </para>
 
 <para>
-There are 8 <interface>Quick Button</interface>s.  Click on an entry to change it.
-The <guilabel>Button name</guilabel> column is the name that
+There are 8 default <interface>Quick Button</interface>s.  Click on an entry to change it
+or use the buttons at the right side of the list to add or remove <interface>Quick Button</interface>s.
+The <guilabel>Button Name</guilabel> column is the name that
 will appear on the button in the <link linkend="channel-screen-tour">Main</link> screen.  Keep the names short.
 The <guilabel>Button Action</guilabel> column is the action that will be performed when you click the
 <interface>Quick Button</interface>.  Tips for creating actions are given on the screen.
@@ -1798,10 +1809,6 @@ followed by the chosen &nickname;.  Type a message you want to send to that pers
 &Enter;.  The message will be sent to the user.  Only that user will see the message.
 </para>
 
-<para>
-<emphasis>Note: </emphasis>You cannot add or delete <interface>Quick Buttons</interface>.
-</para>
-
 </sect1>
 
 <!-- =================================================================== -->
@@ -1824,7 +1831,7 @@ Choose
 <menuchoice>
 	<guisubmenu>Send File</guisubmenu>
 </menuchoice>
-<action>A dialog appears for you to choose a file to send.</action>  Next, a new <guilabel>DCC Status</guilabel> tab appears.
+<action>. A dialog appears for you to choose a file to send.</action>  Next, a new <guilabel>DCC Status</guilabel> tab appears.
 </para>
 
 <para>
@@ -1905,10 +1912,10 @@ Choose
 	</varlistentry>
 	<varlistentry>
 		<term>
-			<guilabel>Stalled</guilabel>
+			<guilabel>Pending</guilabel>
 		</term>
 		<listitem>
-			<para>The transfer was started but is not currently progressing.
+			<para>The transfer is waiting for the partner to accept or reject it.
 			</para>
 		</listitem>
 	</varlistentry>
@@ -1968,8 +1975,8 @@ people by choosing
 <menuchoice>
 	<guisubmenu>Settings</guisubmenu>
 	<guisubmenu>Configure Konversation</guisubmenu>
-	<guisubmenu>DCC Settings</guisubmenu>
-</menuchoice> on the main menu.
+</menuchoice> on the main menu. Click <guilabel>Behaviour</guilabel> to expand it, then click <guilabel>DCC</guilabel>
+ to display the <guilabel>DCC</guilabel> screen.
 </para>
 </callout>
 
@@ -2003,12 +2010,12 @@ click with the &RMB; on the &nickname; of the person in the
 to <action>display information to help you determine the user's real name</action>.
 Next, click with the &RMB; on the &nickname; of the person again and choose
 <menuchoice>
-	<guisubmenu>Addressbook associations</guisubmenu>
+	<guisubmenu>Address Book Associations</guisubmenu>
 </menuchoice>.
   <action>A submenu appears</action>.  If the &nickname; is not already associated with a contact,
 choose
 <menuchoice>
-	<guisubmenu>Create new contact</guisubmenu>
+	<guisubmenu>Create New Contact</guisubmenu>
 </menuchoice>.
   <action>The <guilabel>Edit Contact</guilabel> screen appears</action>.
 </para>
@@ -2046,7 +2053,7 @@ If you know the person's real name, replace the &nickname; with the real name.
 </callout>
 
 <callout arearefs="pt-kimproxy-create-3">
-<para>Click here.  The <guilabel>IM Addresses</guilabel> window appears.</para></callout>
+<para>Click here.  The <guilabel>Edit Instanr Messaging Address</guilabel> window appears.</para></callout>
 
 </calloutlist>
 </para>
@@ -2065,9 +2072,9 @@ If you know the person's real name, replace the &nickname; with the real name.
 </screenshot>
 </para>
 
-<para>Notice that &konversation; fills in the &nickname; for you with protocol
+<!--para>Notice that &konversation; fills in the &nickname; for you with protocol
 <guilabel>IRC</guilabel>.
-</para>
+</para-->
 
 <para>See the
 <ulink url="help:kaddressbook">&kaddressbook; Handbook</ulink> for additional instructions
@@ -2186,7 +2193,7 @@ use Mozilla instead.
 	<guisubmenu>Settings</guisubmenu>
 	<guisubmenu>Configure &konversation;</guisubmenu>
 </menuchoice>
- on the main menu.  <action>The <guilabel>Edit Preferences</guilabel> screen will appear.</action>
+ on the main menu.  <action>The <guilabel>Configure</guilabel> screen will appear.</action>
  </para>
 
  <para>
@@ -2213,7 +2220,7 @@ use Mozilla instead.
 <para>
 <calloutlist>
 
-<callout arearefs="pt-webbrowser-1"><para>Click here to display the <guilabel>Web Browser</guilabel> screen.</para></callout>
+<callout arearefs="pt-webbrowser-1"><para>Click here to display the <guilabel>General</guilabel> screen.</para></callout>
 
 <callout arearefs="pt-webbrowser-2"><para>Click here to specify that you want to use a custom web browser.</para></callout>
 
@@ -2240,7 +2247,7 @@ make it executable (<userinput>chmod a+x moz</userinput>).  Then enter <userinpu
 <replaceable>moz '%u'</replaceable></userinput> for the web browser command in the screen above.
 </para>
 
-<para><emphasis>Note: </emphasis>The <guilabel>Web Browser</guilabel> setting does not apply to
+<para><emphasis>Note: </emphasis>The web browser setting does not apply to
 <interface>mailto:</interface> &URL;s.  <interface>mailto:</interface> &URL;s always launch the default
 &kde; mailer.
 </para>
@@ -2261,25 +2268,25 @@ and <link linkend="query">query</link> screens
 to help you quickly locate information.  To do this, choose
 <menuchoice>
 	<guisubmenu>Insert</guisubmenu>
-	<guisubmenu>Remember Line</guisubmenu>
+	<guisubmenu>Marker Line</guisubmenu>
 </menuchoice>
 on the main menu, or press <keycombo action="simul">&Ctrl;<keycap>R</keycap></keycombo>.
   <action>A line will appear at the bottom of the text on the screen.
  The line will scroll with the rest of the text in the screen.</action>
 </para>
 
-<para>To make the <interface>Remember Line</interface>
+<para>To make the <interface>Maker Line</interface>
 be inserted in all channels and queries at once, choose
 <menuchoice>
 	<guisubmenu>Settings</guisubmenu>
 	<guisubmenu>Configure Konversation</guisubmenu>
 </menuchoice> from the main menu, expand <guilabel>Behavior</guilabel>,
 click on <guilabel>Chat Window</guilabel>, and check the
-<guilabel>Show remember line in all channels/queries</guilabel> box.
+<guilabel>Show manually inserted lines in all chat windows</guilabel> box.
 </para>
 
 <para>To make &konversation; automatically insert a
-<interface>Remember Line</interface> whenever you do an
+<interface>Marker Line</interface> whenever you do an
 <userinput><command>/away</command> <replaceable>msg</replaceable></userinput>
 command, see <link linkend="identity-away">Setting your identity</link>.
 </para>
@@ -2997,10 +3004,10 @@ or menu bars. -->
 	<varlistentry>
 		<term><menuchoice>
 			<shortcut>
-				<keycombo action="simul">&Alt; &Ctrl;<keycap>Q</keycap></keycombo>
+				<keycombo action="simul">&Ctrl; &Alt;<keycap>Q</keycap></keycombo>
 			</shortcut>
 			<guimenu>File</guimenu>
-			<guimenuitem>Set Away Globally</guimenuitem>
+			<guimenuitem>Global Away</guimenuitem>
 		</menuchoice></term>
 		<listitem><para><action>Changes your &nickname; status to away in all channels.
 		</action></para></listitem>
@@ -3020,7 +3027,7 @@ or menu bars. -->
 </sect2>
 
 <sect2>
-<title>The <guimenu>Edit</guimenu> Menu</title>
+<title>The Edit Menu</title>
 <para>
 <variablelist>
 	<varlistentry>
@@ -3029,7 +3036,7 @@ or menu bars. -->
 					<keycombo action="simul">&Ctrl;<keycap>F</keycap></keycombo>
 				</shortcut>
 				<guimenu>Edit</guimenu>
-				<guimenuitem>Find</guimenuitem>
+				<guimenuitem>Find Text...</guimenuitem>
 			</menuchoice></term>
 		<listitem><para>
 				<action>Searches for text strings in the current screen.</action>
@@ -3048,6 +3055,10 @@ or menu bars. -->
 				using the previous search string.</action>
 			</para></listitem>
 	</varlistentry>
+<!-- missing
+Find Previous Shift F3
+Clear Marker Lines Ctrl Shift R
+-->
 	<varlistentry>
 		<term><menuchoice>
 				<shortcut>
@@ -3077,7 +3088,7 @@ or menu bars. -->
 </sect2>
 
 <sect2>
-<title>The <guimenu>Insert</guimenu> Menu</title>
+<title>The Insert Menu</title>
 <para>
 <variablelist>
 	<varlistentry>
@@ -3086,7 +3097,7 @@ or menu bars. -->
 				<keycombo action="simul">&Ctrl;<keycap>K</keycap></keycombo>
 			</shortcut>
 			<guimenu>Insert</guimenu>
-			<guimenuitem>&irc; Color</guimenuitem>
+			<guimenuitem>&irc; Color...</guimenuitem>
 		</menuchoice></term>
 		<listitem><para>
 			<action>See <link linkend="color-msgs">Sending colorful messages</link>.</action>
@@ -3098,7 +3109,7 @@ or menu bars. -->
 					<keycombo action="simul">&Ctrl;<keycap>R</keycap></keycombo>
 				</shortcut>
 				<guimenu>Insert</guimenu>
-				<guimenuitem>Remember Line</guimenuitem>
+				<guimenuitem>Marker Line</guimenuitem>
 			</menuchoice></term>
 		<listitem><para>
 				<action>See <link linkend="rememberlines">Marking Channel and Query Logs</link>.</action>
@@ -3110,7 +3121,7 @@ or menu bars. -->
 					<keycombo action="simul">&Alt; &Shift;<keycap>C</keycap></keycombo>
 				</shortcut>
 			<guimenu>Insert</guimenu>
-			<guimenuitem>Special Character</guimenuitem>
+			<guimenuitem>Special Character...</guimenuitem>
 			</menuchoice></term>
 		<listitem><para>
 				<action>Used to enter special characters, such as foreign
@@ -3122,7 +3133,7 @@ or menu bars. -->
 </sect2>
 
 <sect2>
-<title>The <guimenu>Bookmarks</guimenu> Menu</title>
+<title>The Bookmarks Menu</title>
 <para>
 <variablelist>
 	<varlistentry>
@@ -3140,36 +3151,58 @@ or menu bars. -->
 	<varlistentry>
 		<term><menuchoice>
 				<guimenu>Bookmarks</guimenu>
-				<guimenuitem>Edit Bookmarks</guimenuitem>
+				<guimenuitem>Bookmark Tabs as Folder...</guimenuitem>
 			</menuchoice></term>
 		<listitem><para>
-				<action>Opens bookmark editor</action>
+				<action>???</action>
 			</para></listitem>
 	</varlistentry>
 	<varlistentry>
 		<term><menuchoice>
 			<guimenu>Bookmarks</guimenu>
-			<guimenuitem>New Bookmark Folder</guimenuitem>
+			<guimenuitem>New Bookmark Folder...</guimenuitem>
 			</menuchoice></term>
 		<listitem><para>
 				<action>Creates a new bookmark folder</action>
 			</para></listitem>
 	</varlistentry>
+	<varlistentry>
+		<term><menuchoice>
+				<guimenu>Bookmarks</guimenu>
+				<guimenuitem>Edit Bookmarks...</guimenuitem>
+			</menuchoice></term>
+		<listitem><para>
+				<action>Opens bookmark editor</action>
+			</para></listitem>
+	</varlistentry>
 </variablelist>
 </para>
 </sect2>
 
 <sect2>
-<title>The <guimenu>Settings</guimenu> Menu</title>
+<title>The Settings Menu</title>
 <para>
 <variablelist>
 	<varlistentry>
 		<term><menuchoice>
+				<shortcut>
+					<keycombo action="simul">&Ctrl;<keycap>H</keycap></keycombo>
+				</shortcut>
+				<guimenu>Settings</guimenu>
+				<guimenuitem>Show Nicklist</guimenuitem>
+			</menuchoice></term>
+		<listitem><para>
+				<action>Hides (or displays) the panel of &nickname;s in channel tabs.
+				</action>
+			</para></listitem>
+	</varlistentry>
+	<varlistentry>
+		<term><menuchoice>
 			<shortcut>
 				<keycombo action="simul">&Ctrl;<keycap>M</keycap></keycombo>
 			</shortcut>
 			<guimenu>Settings</guimenu>
-			<guimenuitem>Hide Menubar</guimenuitem>
+			<guimenuitem>Show Menubar</guimenuitem>
 		</menuchoice></term>
 		<listitem><para>
 			<action>Hides the main menu.  Hit
@@ -3180,25 +3213,26 @@ or menu bars. -->
 	<varlistentry>
 		<term><menuchoice>
 			<guimenu>Settings</guimenu>
-			<guimenuitem>Hide Toolbar</guimenuitem>
+			<guimenuitem>Show Toolbar</guimenuitem>
 		</menuchoice></term>
 		<listitem><para>
-			<action>Hides the toolbar.</action>
+			<action>Shows or hides the toolbar.</action>
 		</para></listitem>
 	</varlistentry>
 	<varlistentry>
 		<term><menuchoice>
 			<guimenu>Settings</guimenu>
-			<guimenuitem>Hide Statusbar</guimenuitem>
+			<guimenuitem>Show Statusbar</guimenuitem>
 		</menuchoice></term>
 		<listitem><para>
-			<action>Hides the status bar at the bottom of the main screen.</action>
+			<action>Shows or hides the status bar at the bottom of the main screen.</action>
 		</para></listitem>
 	</varlistentry>
 	<varlistentry>
 		<term><menuchoice>
+				<shortcut><keycap>F8</keycap></shortcut>
 				<guimenu>Settings</guimenu>
-				<guimenuitem>Identities</guimenuitem>
+				<guimenuitem>Identities...</guimenuitem>
 			</menuchoice></term>
 		<listitem><para><action>Displays the <link linkend="identity">Identities</link> screen
 		for setting your identification information.
@@ -3237,7 +3271,7 @@ or menu bars. -->
 			<guimenuitem>Configure &konversation;</guimenuitem>
 		</menuchoice></term>
 		<listitem><para>
-			<action>Displays the <guilabel>Edit Preferences</guilabel> screen.</action>
+			<action>Displays the <guilabel>Configure</guilabel> screen.</action>
 		</para></listitem>
 	</varlistentry>
 </variablelist>
@@ -3245,13 +3279,13 @@ or menu bars. -->
 </sect2>
 
 <sect2>
-<title>The <guimenu>Window</guimenu> Menu</title>
+<title>The Window Menu</title>
 <para>
 <variablelist>
 	<varlistentry>
 		<term><menuchoice>
 				<shortcut>
-					<keycombo action="simul">&Ctrl;<keycap>.</keycap></keycombo>
+					<keycombo action="simul">&Ctrl;<keycap>,</keycap></keycombo>
 				</shortcut>
 				<guimenu>Window</guimenu>
 				<guimenuitem>Previous Tab</guimenuitem>
@@ -3263,7 +3297,7 @@ or menu bars. -->
 	<varlistentry>
 		<term><menuchoice>
 				<shortcut>
-					<keycombo action="simul">&Ctrl;<keycap>,</keycap></keycombo>
+					<keycombo action="simul">&Ctrl;<keycap>.</keycap></keycombo>
 				</shortcut>
 				<guimenu>Window</guimenu>
 				<guimenuitem>Next Tab</guimenuitem>
@@ -3272,6 +3306,11 @@ or menu bars. -->
 				<action>Displays the screen corresponding to the next tab.</action>
 			</para></listitem>
 	</varlistentry>
+<!--
+Next Active Tab Ctrl Alt Space
+Move Tab Left Alt Shift Left
+Move Tab Right Alt Shift Right
+  -->
 	<varlistentry>
 		<term><menuchoice>
 				<shortcut>
@@ -3300,19 +3339,10 @@ or menu bars. -->
 				</action>
 			</para></listitem>
 	</varlistentry>
-	<varlistentry>
-		<term><menuchoice>
-				<shortcut>
-					<keycombo action="simul">&Ctrl;<keycap>H</keycap></keycombo>
-				</shortcut>
-				<guimenu>Window</guimenu>
-				<guimenuitem>Hide Nicklist</guimenuitem>
-			</menuchoice></term>
-		<listitem><para>
-				<action>Hides (or displays) the panel of &nickname;s in channel tabs.
-				</action>
-			</para></listitem>
-	</varlistentry>
+<!-- 
+Enable Notifications
+Set Encoding
+  -->
 	<varlistentry>
 		<term><menuchoice>
 				<shortcut>
@@ -3328,25 +3358,25 @@ or menu bars. -->
 	<varlistentry>
 		<term><menuchoice>
 				<shortcut>
-					<keycap>F5</keycap>
+					<keycap>F6</keycap>
 				</shortcut>
 			<guimenu>Window</guimenu>
-			<guimenuitem>Channel List</guimenuitem>
+			<guimenuitem>&url; Catcher</guimenuitem>
 		</menuchoice></term>
 		<listitem><para>
-			<action>Displays a <link linkend="list-channels">list of channels</link> available on the server.</action>
+			<action>Displays the <link linkend="urlcatcher">&url; Catcher</link> screen.</action>
 		</para></listitem>
 	</varlistentry>
 	<varlistentry>
 		<term><menuchoice>
 				<shortcut>
-					<keycap>F6</keycap>
+					<keycap>F9</keycap>
 				</shortcut>
 			<guimenu>Window</guimenu>
-			<guimenuitem>&url; Catcher</guimenuitem>
+			<guimenuitem>DCC Status</guimenuitem>
 		</menuchoice></term>
 		<listitem><para>
-			<action>Displays the <link linkend="urlcatcher">&url; Catcher</link> screen.</action>
+			<action>???</action>
 		</para></listitem>
 	</varlistentry>
 	<varlistentry>
@@ -3361,10 +3391,22 @@ or menu bars. -->
 	<varlistentry>
 		<term><menuchoice>
 				<shortcut>
+					<keycap>F5</keycap>
+				</shortcut>
+			<guimenu>Window</guimenu>
+			<guimenuitem>Channel List for</guimenuitem>
+		</menuchoice></term>
+		<listitem><para>
+			<action>Displays a <link linkend="list-channels">list of channels</link> available on the server.</action>
+		</para></listitem>
+	</varlistentry>
+	<varlistentry>
+		<term><menuchoice>
+				<shortcut>
 					<keycombo action="simul">&Ctrl;<keycap>O</keycap></keycombo>
 				</shortcut>
 			<guimenu>Window</guimenu>
-			<guimenuitem>Open Logfile</guimenuitem>
+			<guimenuitem>Open Logfile for</guimenuitem>
 		</menuchoice></term>
 		<listitem><para>
 			<action>Displays a screen with the log of messages from the current tab.  Only works for
@@ -3379,12 +3421,13 @@ or menu bars. -->
 			</action>
 		</para></listitem>
 	</varlistentry>
+<!-- Channel Settings -->
 </variablelist>
 </para>
 </sect2>
 
 <sect2>
-<title>The <guimenu>Help</guimenu> Menu</title>
+<title>The Help Menu</title>
 
 <!-- Assuming you have a standard help menu (help, what's this, about -->
 <!-- &konversation;, about KDE) then the documentation is already written. -->
@@ -3573,11 +3616,11 @@ Documentation Copyright &copy; 2003-2005 Gary R. Cramblitt <email>garycramblitt@
 part of KDE CVS.  You should remove it if you are releasing your
 application -->
 
-&install.intro.documentation;
+ <!--&install.intro.documentation;-->
 
 <para>
 The latest versions of &konversation;, including source code and build instructions
-can also be obtained from the
+can be obtained from the
 <ulink url="&konviwebsite;">&konviwebsite; website</ulink>.
 </para>
 
@@ -3600,8 +3643,7 @@ information here.
 -->
 
 <para>
-In order to successfully use &konversation;, you need &kde; 3.2 or later and a network connection.
-On earlier &kde; versions some features may be missing.
+In order to successfully use &konversation;, you need &kde; 4 and a network connection.
 If you will be running &konversation; from behind a firewall, see <link linkend="faq">Questions and Answers</link>.  If you wish to use SSL protocol, you may need OpenSSL.
 </para>
 
diff --git a/doc/irc_admin.png b/doc/irc_admin.png
index 794dbfd..3c44456 100644
Binary files a/doc/irc_admin.png and b/doc/irc_admin.png differ
diff --git a/doc/irc_away.png b/doc/irc_away.png
index cb49aaf..8a5bdc7 100644
Binary files a/doc/irc_away.png and b/doc/irc_away.png differ
diff --git a/doc/irc_halfop.png b/doc/irc_halfop.png
index 4aa1dc7..aabae40 100644
Binary files a/doc/irc_halfop.png and b/doc/irc_halfop.png differ
diff --git a/doc/irc_normal.png b/doc/irc_normal.png
index 65f0768..e4adc0c 100644
Binary files a/doc/irc_normal.png and b/doc/irc_normal.png differ
diff --git a/doc/irc_op.png b/doc/irc_op.png
index 193e070..8369066 100644
Binary files a/doc/irc_op.png and b/doc/irc_op.png differ
diff --git a/doc/irc_owner.png b/doc/irc_owner.png
index d0a088d..209d64a 100644
Binary files a/doc/irc_owner.png and b/doc/irc_owner.png differ
diff --git a/doc/irc_voice.png b/doc/irc_voice.png
index d7c55a7..ebeb4af 100644
Binary files a/doc/irc_voice.png and b/doc/irc_voice.png differ
diff --git a/doc/kimproxy_create_screen2.png b/doc/kimproxy_create_screen2.png
index 9e48ffb..d6d6582 100644
Binary files a/doc/kimproxy_create_screen2.png and b/doc/kimproxy_create_screen2.png differ
diff --git a/doc/kimproxy_create_screen_co.png b/doc/kimproxy_create_screen_co.png
index 281460d..92ac211 100644
Binary files a/doc/kimproxy_create_screen_co.png and b/doc/kimproxy_create_screen_co.png differ
diff --git a/doc/led_blue_off.png b/doc/led_blue_off.png
deleted file mode 100644
index 010dfa2..0000000
Binary files a/doc/led_blue_off.png and /dev/null differ
diff --git a/doc/led_blue_on.png b/doc/led_blue_on.png
index c7ee35d..6ef2f13 100644
Binary files a/doc/led_blue_on.png and b/doc/led_blue_on.png differ
diff --git a/doc/led_green_off.png b/doc/led_green_off.png
deleted file mode 100644
index 8dd1c11..0000000
Binary files a/doc/led_green_off.png and /dev/null differ
diff --git a/doc/led_green_on.png b/doc/led_green_on.png
index 5f1de37..209691a 100644
Binary files a/doc/led_green_on.png and b/doc/led_green_on.png differ
diff --git a/doc/led_red_off.png b/doc/led_red_off.png
deleted file mode 100644
index ee0d30b..0000000
Binary files a/doc/led_red_off.png and /dev/null differ
diff --git a/doc/led_red_on.png b/doc/led_red_on.png
index ca7b154..e4dd7a0 100644
Binary files a/doc/led_red_on.png and b/doc/led_red_on.png differ
diff --git a/doc/led_yellow_off.png b/doc/led_yellow_off.png
deleted file mode 100644
index 7f2067a..0000000
Binary files a/doc/led_yellow_off.png and /dev/null differ
diff --git a/doc/led_yellow_on.png b/doc/led_yellow_on.png
index 0a07603..834ad4b 100644
Binary files a/doc/led_yellow_on.png and b/doc/led_yellow_on.png differ
diff --git a/doc/logviewer_co.png b/doc/logviewer_co.png
index b087ffa..5cd67ce 100644
Binary files a/doc/logviewer_co.png and b/doc/logviewer_co.png differ
diff --git a/doc/nicksonline_co.png b/doc/nicksonline_co.png
index c0fa698..df3035b 100644
Binary files a/doc/nicksonline_co.png and b/doc/nicksonline_co.png differ
diff --git a/doc/nickthemes_screen_co.png b/doc/nickthemes_screen_co.png
index c119e13..f328584 100644
Binary files a/doc/nickthemes_screen_co.png and b/doc/nickthemes_screen_co.png differ
diff --git a/doc/notification_screen_co.png b/doc/notification_screen_co.png
index dab987e..846f7aa 100644
Binary files a/doc/notification_screen_co.png and b/doc/notification_screen_co.png differ
diff --git a/doc/notifylist_screen_co.png b/doc/notifylist_screen_co.png
index f3b8fcc..fff673f 100644
Binary files a/doc/notifylist_screen_co.png and b/doc/notifylist_screen_co.png differ
diff --git a/doc/osd_demo.png b/doc/osd_demo.png
index a569f28..fe7d3e2 100644
Binary files a/doc/osd_demo.png and b/doc/osd_demo.png differ
diff --git a/doc/osd_screen_co.png b/doc/osd_screen_co.png
index 5ac2d36..f4669ba 100644
Binary files a/doc/osd_screen_co.png and b/doc/osd_screen_co.png differ
diff --git a/doc/prefs_identity_screen_co.png b/doc/prefs_identity_screen_co.png
deleted file mode 100644
index 71d6c3b..0000000
Binary files a/doc/prefs_identity_screen_co.png and /dev/null differ
diff --git a/doc/quickbuttons_screen.png b/doc/quickbuttons_screen.png
index 0c16178..c2f1274 100644
Binary files a/doc/quickbuttons_screen.png and b/doc/quickbuttons_screen.png differ
diff --git a/doc/quickconnect_screen.png b/doc/quickconnect_screen.png
index 2f91902..a66318d 100644
Binary files a/doc/quickconnect_screen.png and b/doc/quickconnect_screen.png differ
diff --git a/doc/serverlist_co.png b/doc/serverlist_co.png
index f6aa939..290a4a2 100644
Binary files a/doc/serverlist_co.png and b/doc/serverlist_co.png differ
diff --git a/doc/serverlist_screen_co.png b/doc/serverlist_screen_co.png
deleted file mode 100644
index ff196d8..0000000
Binary files a/doc/serverlist_screen_co.png and /dev/null differ
diff --git a/doc/urlcatcher_screen_co.png b/doc/urlcatcher_screen_co.png
index ff76cb4..4ae682a 100644
Binary files a/doc/urlcatcher_screen_co.png and b/doc/urlcatcher_screen_co.png differ
diff --git a/doc/webbrowser_screen_co.png b/doc/webbrowser_screen_co.png
index ae5c188..2d10619 100644
Binary files a/doc/webbrowser_screen_co.png and b/doc/webbrowser_screen_co.png differ

commit 67c98b6a53bac68ad6830d1234f1f8f9762d800e
Author: Eike Hein <hein@kde.org>
Date:   Tue Oct 19 20:37:51 2010 +0200

    Fix "Join on Connect" context menu action screwing with active tab state.
    
    CCMAIL:toma@kde.org

diff --git a/ChangeLog b/ChangeLog
index 310875f..0625a8a 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -268,6 +268,10 @@ Changes since 1.3.1:
 * Fixed a bug causing '/list <search pattern>' to close an existing Channel
   List tab (the intended behavior for a parameter-less '/list') rather than
   update the active filter and refresh the list.
+* Fixed a bug causing actions that are meant to operate on the active tab
+  (e.g. "Close Tab" invoked by the default shortcut Ctrl+W) to operate on a
+  different tab after the "Join on Connect" action in that tab's context
+  menu had been used.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/viewer/viewcontainer.cpp b/src/viewer/viewcontainer.cpp
index e6eb332..0f71db2 100644
--- a/src/viewer/viewcontainer.cpp
+++ b/src/viewer/viewcontainer.cpp
@@ -1192,6 +1192,8 @@ void ViewContainer::toggleAutoJoin()
 
         emit autoJoinToggled(channel->getServer()->getServerGroup());
     }
+
+    m_popupViewIndex = -1;
 }
 
 void ViewContainer::addView(ChatWindow* view, const QString& label, bool weinitiated)
@@ -1472,7 +1474,6 @@ void ViewContainer::goToView(int page)
     if (page >= 0)
         m_tabWidget->setCurrentIndex(page);
 
-
     m_popupViewIndex = -1;
 }
 

commit 6278f037e9e246c7f83166ceb7441b84433834f2
Author: Frederik Schwarzer <schwarzerf@gmail.com>
Date:   Wed Oct 20 17:47:21 2010 +0200

    fix some typos in the documentation

diff --git a/doc/index.docbook b/doc/index.docbook
index a46481e..271ccad 100644
--- a/doc/index.docbook
+++ b/doc/index.docbook
@@ -1297,7 +1297,7 @@ To configure notifications, choose
 <para>Repeat by selecting another event and checking the notifications desired.  When you've configured all the desired notifications, click the <guibutton>Apply</guibutton> button.</para>
 
 <para>
-Once you've set up your notifications, you can enable or disable all notification using 
+Once you've set up your notifications, you can enable or disable all notifications using 
 <menuchoice>
 	<guisubmenu>Window</guisubmenu>
 	<guisubmenu>Enable Notifications</guisubmenu>
@@ -1625,7 +1625,7 @@ minimized in the system tray.</para>
 
 <callout arearefs="pt-osd-5"><para>Check the boxes here to select the types of messages you'd like to appear on screen.</para></callout>
 
-<callout arearefs="pt-osd-6"><para>Drag the OSD Priview to your desired position, then click the <guibutton>Apply</guibutton> button.</para></callout>
+<callout arearefs="pt-osd-6"><para>Drag the OSD Preview to your desired position, then click the <guibutton>Apply</guibutton> button.</para></callout>
 
 </calloutlist>
 </para>
@@ -1933,7 +1933,7 @@ Choose
 			<guilabel>Failed</guilabel>
 		</term>
 		<listitem>
-			<para>An error occurred and the transfer was not successful..
+			<para>An error occurred and the transfer was not successful.
 			</para>
 		</listitem>
 	</varlistentry>
@@ -2053,7 +2053,7 @@ If you know the person's real name, replace the &nickname; with the real name.
 </callout>
 
 <callout arearefs="pt-kimproxy-create-3">
-<para>Click here.  The <guilabel>Edit Instanr Messaging Address</guilabel> window appears.</para></callout>
+<para>Click here.  The <guilabel>Edit Instant Messaging Address</guilabel> window appears.</para></callout>
 
 </calloutlist>
 </para>
@@ -2163,7 +2163,7 @@ The application launched depends upon the &MIME; type of the &URL;.  For example
 <interface>http:</interface> will activate your default web browser and display the web page.  For web pages, you can
 also specify the <link linkend="webbrowser">web browser</link> to use.</para></callout>
 
-<callout arearefs="pt-urlcatcher-3"><para>Click here to copy the selected &URL; to the &kde; clipboard..</para></callout>
+<callout arearefs="pt-urlcatcher-3"><para>Click here to copy the selected &URL; to the &kde; clipboard.</para></callout>
 
 <callout arearefs="pt-urlcatcher-4"><para>Click here to delete the selected  &URL; from the list.</para></callout>
 

commit 7317433f0e57cf6d16cb2ca12dc3ae9ab30cc95f
Author: Burkhard Lück <lueck@hube-lueck.de>
Date:   Thu Oct 21 15:41:03 2010 +0200

    osd screenshot update, replace obsolete colorize.png for IRC Color toolbar button with the new png

diff --git a/doc/colorize.png b/doc/colorize.png
deleted file mode 100644
index 33239e4..0000000
Binary files a/doc/colorize.png and /dev/null differ
diff --git a/doc/format-text-color.png b/doc/format-text-color.png
new file mode 100644
index 0000000..9e86afc
Binary files /dev/null and b/doc/format-text-color.png differ
diff --git a/doc/osd_demo.png b/doc/osd_demo.png
index fe7d3e2..07d3ddd 100644
Binary files a/doc/osd_demo.png and b/doc/osd_demo.png differ

commit ada76fa5e05fc5b16a772a4eef97794771945807
Author: David Faure <faure@kde.org>
Date:   Thu Oct 21 17:44:00 2010 +0200

    Make executable the Type=Application .desktop files we install,
    so that they can be used even from a KDE running in another prefix (http://markmail.org/message/4p3krovtnzwx35zd)

diff --git a/data/CMakeLists.txt b/data/CMakeLists.txt
index 1c25acf..5017d41 100644
--- a/data/CMakeLists.txt
+++ b/data/CMakeLists.txt
@@ -5,7 +5,7 @@ add_subdirectory(scripts)
 
 ########### install files ###############
 
-install(FILES   konversation.desktop DESTINATION ${XDG_APPS_INSTALL_DIR})
+install(PROGRAMS   konversation.desktop DESTINATION ${XDG_APPS_INSTALL_DIR})
 install(FILES   konversationui.rc konversation.notifyrc DESTINATION
 	${DATA_INSTALL_DIR}/konversation)
 install(FILES   updaters/konversation.upd DESTINATION ${DATA_INSTALL_DIR}/kconf_update)

commit 13b84d13e6167bad1b031c2b5fb568d53f4e559c
Author: Burkhard Lück <lueck@hube-lueck.de>
Date:   Thu Oct 21 23:16:11 2010 +0200

    doc update
    BUG:175576
    BUG:131292
    BUG:144232

diff --git a/doc/index.docbook b/doc/index.docbook
index 271ccad..2bec1a5 100644
--- a/doc/index.docbook
+++ b/doc/index.docbook
@@ -1087,7 +1087,7 @@ or <userinput>!</userinput>.  The first character of a channel name determines t
    that all the modes are unset, with the exception of the 't' channel flag which is set.
 </para></listitem>
 </itemizedlist>
-Channel names are up to 50 characters long and may contain any characters except for space, comma, and Ctrl-G.
+Channel names are up to 50 characters long and may contain any characters except for space, comma, and Ctrl-G (^G or ASCII 7).
 </para>
 
 </sect1>
@@ -1223,7 +1223,7 @@ click with the &RMB; on the person's &nickname; in the <guilabel>Nick Panel</gui
 <menuchoice>
 	<guisubmenu>Open Query</guisubmenu>
 </menuchoice>
-<action>A new tab will be created</action>.  Announce yourself by sending a message.
+<action>. A new tab will be created</action>.  Announce yourself by sending a message.
 </para>
 
 <para>
@@ -1294,7 +1294,7 @@ To configure notifications, choose
 </calloutlist>
 </para>
 
-<para>Repeat by selecting another event and checking the notifications desired.  When you've configured all the desired notifications, click the <guibutton>Apply</guibutton> button.</para>
+<para>Repeat by selecting another event and checking the notifications desired.  When you've configured all the desired notifications, click the <guibutton>OK</guibutton> button.</para>
 
 <para>
 Once you've set up your notifications, you can enable or disable all notifications using 
@@ -1379,7 +1379,7 @@ the icons that appear in the <interface>Nick Panel</interface> in the
 </para></callout>
 <callout arearefs="pt-nicksonline-2"><para>The information known about the &nickname;
 is displayed here.  When the <guilabel>Watched Nicks Online</guilabel> screen is first
-displayed, this information is sparse.  Every 8 seconds,
+displayed, this information is sparse.  Every 20 seconds,
 one <userinput><command>WHOIS</command></userinput> command is automatically sent to the server
 to request information for &nickname;s that do not have any information.  This continues until
 all &nickname;s have information.
@@ -1402,8 +1402,9 @@ on using the &kde; address book.
 </para>
 
 <para>
-To add additional &nickname;s to watch, open the context menu in the <guilabel>Nick List</guilabel> 
-by clicking with the &RMB; on a &nickname; and select <guilabel>Add to Watched Nicks</guilabel> or choose
+To add a single &nickname; to watch, open the context menu in the <guilabel>Nick List</guilabel> 
+by clicking with the &RMB; on a &nickname; and select <guilabel>Add to Watched Nicks</guilabel>.
+If you want to add several &nickname;s choose
 <menuchoice>
 	<guisubmenu>Settings</guisubmenu>
 	<guisubmenu>Configure Konversation</guisubmenu>
@@ -1641,13 +1642,13 @@ minimized in the system tray.</para>
 You can add color to the messages you send in any channel.  In the <interface>Input Line</interface> of any channel, start typing your message.  Click the
 <inlinemediaobject>
 	<imageobject>
-		<imagedata fileref="colorize.png" format="PNG" />
+		<imagedata fileref="format-text-color.png" format="PNG" />
 	</imageobject>
 	<textobject>
 		<phrase>Insert &irc; Color Button</phrase>
 	</textobject>
 </inlinemediaobject>
-Insert &irc; Color button or choose
+<guibutton>&irc; Color</guibutton> button or choose
 <menuchoice>
 	<guisubmenu>Insert</guisubmenu>
 	<guisubmenu>&irc; Color</guisubmenu>
@@ -1671,7 +1672,7 @@ Insert &irc; Color button or choose
 
 <para>
 Choose a color and click <guibutton>OK</guibutton>.  Continue typing your message in the <interface>Input Line</interface>.
-To change the color again, click the <guibutton>Insert &irc; Color</guibutton>  button.  Choose a different color
+To change the color again, click the <guibutton>&irc; Color</guibutton>  button.  Choose a different color
 and click <guibutton>OK</guibutton>.
 </para>
 
@@ -1867,10 +1868,11 @@ Choose
 <variablelist>
 	<varlistentry>
 		<term>
-			<guilabel>Offering</guilabel>
+			<guilabel>Preparing</guilabel>
 		</term>
 		<listitem>
-			<para>You are trying to send a file to the recipient.  &konversation; is waiting for the recipient to accept the file.
+			<para>A receiving transfer is checking for resumable files or a sending 
+			  transfer is acquiring the data to send.
 			</para>
 		</listitem>
 	</varlistentry>
@@ -1942,11 +1944,11 @@ Choose
 			<guilabel>Queued</guilabel>
 		</term>
 		<listitem>
-			<para>The transfer has been accepted and will begin when the software on the receiving end acknowledges.
+			<para>Transfer is waiting for you to accept or reject it.
 			</para>
 		</listitem>
 	</varlistentry>
-	<varlistentry>
+	<!--varlistentry>
 		<term>
 			<guilabel>Lookup</guilabel>
 		</term>
@@ -1954,7 +1956,7 @@ Choose
 			<para>&konversation; is trying to get the IP number of the sender.
 			</para>
 		</listitem>
-	</varlistentry>
+	</varlistentry-->
 	<varlistentry>
 		<term>
 			<guilabel>Resuming</guilabel>
@@ -2155,7 +2157,7 @@ again.  &konversation; can keep a convenient list of all &URL;s for you.  To act
 <para>
 <calloutlist>
 
-<callout arearefs="pt-urlcatcher-1"><para>This is the list of &URL;s seen since you started &konversation;.  The <guilabel>Nick</guilabel> column is the &nickname; of the person who posted the &URL;.  If the &nickname; is blank, the &url; appeared in a <interface>Server Messages</interface> tab.  (&URL;s appearing in join and leave messages
+<callout arearefs="pt-urlcatcher-1"><para>This is the list of &URL;s seen since you started &konversation;.  The <guilabel>From</guilabel> column is the &nickname; of the person who posted the &URL; or the name of the channel or server, where the &URL; was posted. (&URL;s appearing in join and leave messages
 are not listed.)  Click on a &URL; to select it.</para></callout>
 
 <callout arearefs="pt-urlcatcher-2"><para>Click here to activate the application associated with the selected &URL;.
@@ -2933,6 +2935,11 @@ CPU: Intel(R) Core 2 Quad  CPU   Q9450  @ 2.66GHz at 2666 MHz (5333 bogomips), H
 </varlistentry>
 
 </variablelist>
+
+<para>All these scripts have predefind command aliases. In &konversation;'s settings dialog
+select <menuchoice><guimenu>Behaviour</guimenu> <guimenuitem>Command Aliases</guimenuitem></menuchoice>
+to view, add, remove or edit command aliases.
+</para> 
 </sect1>
 
 </chapter>
@@ -2979,6 +2986,7 @@ or menu bars. -->
 		<listitem><para><action>Displays the <link linkend="quickconnect">Quick Connect</link> screen for connecting to a server.
 		</action></para></listitem>
 	</varlistentry>
+	<!-- Disconnect -->
 	<varlistentry>
 		<term><menuchoice>
 			<guimenu>File</guimenu>
@@ -3004,7 +3012,7 @@ or menu bars. -->
 	<varlistentry>
 		<term><menuchoice>
 			<shortcut>
-				<keycombo action="simul">&Ctrl; &Alt;<keycap>Q</keycap></keycombo>
+				<keycombo action="simul">&Ctrl; &Shift;<keycap>A</keycap></keycombo>
 			</shortcut>
 			<guimenu>File</guimenu>
 			<guimenuitem>Global Away</guimenuitem>
@@ -3154,7 +3162,7 @@ Clear Marker Lines Ctrl Shift R
 				<guimenuitem>Bookmark Tabs as Folder...</guimenuitem>
 			</menuchoice></term>
 		<listitem><para>
-				<action>???</action>
+			<action>Adds</action> all channels to a new menu item at the end of the bookmarks menu.
 			</para></listitem>
 	</varlistentry>
 	<varlistentry>
@@ -3376,7 +3384,7 @@ Set Encoding
 			<guimenuitem>DCC Status</guimenuitem>
 		</menuchoice></term>
 		<listitem><para>
-			<action>???</action>
+			<action>Displays the <link linkend="dcc">DCC Status</link> tab with information about file transfers.</action>
 		</para></listitem>
 	</varlistentry>
 	<varlistentry>
@@ -3531,6 +3539,29 @@ To make it selectable again go back to a channel tab or the server tab.
 </answer>
 </qandaentry>
 
+<qandaentry>
+<question><para>
+How do I have &konversation; automatically mark me as away after a period of inactivity?
+</para>
+</question>
+<answer><para>
+Auto-away messages are configured on a per-identity basis. To enable auto-away select <menuchoice><guimenu>Settings</guimenu><guimenuitem>Identities</guimenuitem></menuchoice>.
+Choose the identity for which you want to enable auto-away from the drop
+down list at the top of the dialog an go to the <guilabel>Away</guilabel> tab.
+Check the <guilabel>Automatic Away</guilabel> option. 
+</para></answer>
+</qandaentry>
+
+<qandaentry>
+<question>
+<para>How to avoid the <guilabel>Auto Replace</guilabel> feature of the <interface>Input Line</interface>?</para>
+</question>
+<answer><para>Use <keycombo action="simul">&Ctrl;&Enter;</keycombo> instead of just &Enter; to avoid parsing and 
+automatically replacing the text in the <interface>Input Line</interface> according to the options in the settings 
+dialog page <menuchoice><guimenu>Behavior</guimenu> <guimenuitem>Auto Replace</guimenuitem></menuchoice>.
+</para></answer>
+</qandaentry>
+
 </qandaset>
 </chapter>
 

commit ba7ff3e78014c94c9d89191551e555937b8c6748
Merge: 13b84d1 ada76fa
Author: Burkhard Lück <lueck@hube-lueck.de>
Date:   Thu Oct 21 23:18:43 2010 +0200

    Merge branch 'master' of git.kde.org:konversation

commit ecbccfd3c92d4a4e80cfa2f6cdc859bcac8e9fee
Author: Burkhard Lück <lueck@hube-lueck.de>
Date:   Fri Oct 22 17:31:58 2010 +0200

    typo fixes for
    http://gitweb.kde.org/konversation.git/commitdiff/13b84d13e6167bad1b031c2b5fb568d53f4e559c
    (added para about Command Aliases,
    add how to set Auto Away and how to avoid Auto Replace to FAQ)
    BUG: 175576
    BUG: 131292
    BUG: 144232

diff --git a/doc/index.docbook b/doc/index.docbook
index 2bec1a5..f9d3bcd 100644
--- a/doc/index.docbook
+++ b/doc/index.docbook
@@ -1908,7 +1908,7 @@ Choose
 			<guilabel>Done</guilabel>
 		</term>
 		<listitem>
-			<para>The file has been successfully transfered.
+			<para>The file has been successfully transferred.
 			</para>
 		</listitem>
 	</varlistentry>
@@ -1977,7 +1977,7 @@ people by choosing
 <menuchoice>
 	<guisubmenu>Settings</guisubmenu>
 	<guisubmenu>Configure Konversation</guisubmenu>
-</menuchoice> on the main menu. Click <guilabel>Behaviour</guilabel> to expand it, then click <guilabel>DCC</guilabel>
+</menuchoice> on the main menu. Click <guilabel>Behavior</guilabel> to expand it, then click <guilabel>DCC</guilabel>
  to display the <guilabel>DCC</guilabel> screen.
 </para>
 </callout>
@@ -2830,7 +2830,7 @@ privilege, for example <userinput><replaceable>chmod a+x myscript</replaceable><
 <para>This script when run will output a Random Fortune.</para>
 <para>Example: To output a random fortune to your current channel tab.</para>
 <para><userinput><command>/exec </command> <replaceable>fortune</replaceable></userinput></para>
-<para>Sample output: <replaceable>Random Fortune: Never make any mistaeks. -- Anonymous, in a mail discussion about to a
+<para>Sample output: <replaceable>Random Fortune: Never make any mistakes. -- Anonymous, in a mail discussion about to a
 kernel bug report</replaceable></para>
 </listitem>
 </varlistentry>
@@ -2937,7 +2937,7 @@ CPU: Intel(R) Core 2 Quad  CPU   Q9450  @ 2.66GHz at 2666 MHz (5333 bogomips), H
 </variablelist>
 
 <para>All these scripts have predefind command aliases. In &konversation;'s settings dialog
-select <menuchoice><guimenu>Behaviour</guimenu> <guimenuitem>Command Aliases</guimenuitem></menuchoice>
+select <menuchoice><guimenu>Behavior</guimenu> <guimenuitem>Command Aliases</guimenuitem></menuchoice>
 to view, add, remove or edit command aliases.
 </para> 
 </sect1>

commit 6c912e8b55f9e1c759d06fb97c60a2609eaaef44
Author: Eike Hein <hein@kde.org>
Date:   Fri Oct 22 17:59:25 2010 +0200

    Fix tyos.

diff --git a/doc/index.docbook b/doc/index.docbook
index f9d3bcd..2deffe6 100644
--- a/doc/index.docbook
+++ b/doc/index.docbook
@@ -2936,7 +2936,7 @@ CPU: Intel(R) Core 2 Quad  CPU   Q9450  @ 2.66GHz at 2666 MHz (5333 bogomips), H
 
 </variablelist>
 
-<para>All these scripts have predefind command aliases. In &konversation;'s settings dialog
+<para>All these scripts have predefined command aliases. In &konversation;'s settings dialog
 select <menuchoice><guimenu>Behavior</guimenu> <guimenuitem>Command Aliases</guimenuitem></menuchoice>
 to view, add, remove or edit command aliases.
 </para> 
@@ -3547,7 +3547,7 @@ How do I have &konversation; automatically mark me as away after a period of ina
 <answer><para>
 Auto-away messages are configured on a per-identity basis. To enable auto-away select <menuchoice><guimenu>Settings</guimenu><guimenuitem>Identities</guimenuitem></menuchoice>.
 Choose the identity for which you want to enable auto-away from the drop
-down list at the top of the dialog an go to the <guilabel>Away</guilabel> tab.
+down list at the top of the dialog and go to the <guilabel>Away</guilabel> tab.
 Check the <guilabel>Automatic Away</guilabel> option. 
 </para></answer>
 </qandaentry>

commit 2868b37ed422565a97921995f489d194a103a224
Author: Frederik Schwarzer <schwarzerf@gmail.com>
Date:   Sat Oct 23 00:03:50 2010 +0200

    fix string
    
    the "when" already terminates the first part of the message

diff --git a/src/config/warnings_config.cpp b/src/config/warnings_config.cpp
index f0431f4..bb163f5 100644
--- a/src/config/warnings_config.cpp
+++ b/src/config/warnings_config.cpp
@@ -165,7 +165,7 @@ void Warnings_Config::loadSettings()
           "... closing a DCC Chat tab"
         )},
         { "ChannelListNoServerSelected",                                                                I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
-          "... when a source for the channel list cannot be determined from the current tab"
+          "... a source for the channel list cannot be determined from the current tab"
         )},
         { "HideMenuBarWarning",                                                                         I18N_NOOP2_NOSTRIP("@item:inlistbox Checkbox item, determines whether warning dialog is shown; concludes sentence \"Show a warning dialog when...\"",
           "... you have chosen to hide the menu bar"

commit 82ad2748c5a11e98b076e206943cee15e6b91d66
Author: Burkhard Lück <lueck@hube-lueck.de>
Date:   Sun Oct 24 18:25:54 2010 +0200

    revert the wrong spellcheck fix, this is a joke
    thanks to Yuri for spotting it
    CCMAIL:yurchor@ukr.net

diff --git a/doc/index.docbook b/doc/index.docbook
index f9d3bcd..8eb04df 100644
--- a/doc/index.docbook
+++ b/doc/index.docbook
@@ -2830,7 +2830,7 @@ privilege, for example <userinput><replaceable>chmod a+x myscript</replaceable><
 <para>This script when run will output a Random Fortune.</para>
 <para>Example: To output a random fortune to your current channel tab.</para>
 <para><userinput><command>/exec </command> <replaceable>fortune</replaceable></userinput></para>
-<para>Sample output: <replaceable>Random Fortune: Never make any mistakes. -- Anonymous, in a mail discussion about to a
+<para>Sample output: <replaceable>Random Fortune: Never make any mistaeks. -- Anonymous, in a mail discussion about to a
 kernel bug report</replaceable></para>
 </listitem>
 </varlistentry>

commit 092a69734eb8085b670de517f4518d2ec9eb0a58
Merge: 82ad274 2868b37
Author: Burkhard Lück <lueck@hube-lueck.de>
Date:   Sun Oct 24 18:28:37 2010 +0200

    Merge branch 'master' of git.kde.org:konversation

commit a0e709122c95af56913102d111fccdbd9883d0b4
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Fri Oct 29 01:21:24 2010 +0200

    raise kde req. for KCmdLineArgs::allArguments() to 4.5.61
    r1153958 -> kde 4.5.61
    r1152777 -> new KCmdLineArgs::allArguments()
    r1143456 -> kde 4.5.60
    this will hopefully fix the kdewin build error :)

diff --git a/src/application.cpp b/src/application.cpp
index 20f87ed..d2b35d1 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -102,7 +102,7 @@ void Application::implementRestart()
 {
     QStringList argumentList;
 
-#if KDE_IS_VERSION(4,5,60)
+#if KDE_IS_VERSION(4,5,61)
     KCmdLineArgs* args = KCmdLineArgs::parsedArgs();
 
     argumentList = args->allArguments();

commit aae8eb44609a7355c94d0686176027dfb8c77363
Author: Eike Hein <hein@kde.org>
Date:   Sat Oct 23 02:08:41 2010 +0200

    Back to 6667, seems some Freenode servers expect SASL auth on 8001.

diff --git a/src/config/preferences.cpp b/src/config/preferences.cpp
index 5c42b75..59b1cad 100644
--- a/src/config/preferences.cpp
+++ b/src/config/preferences.cpp
@@ -64,7 +64,7 @@ Preferences::Preferences()
     serverGroup->setName("Freenode");
     Konversation::ServerSettings server;
     server.setHost("chat.freenode.net");
-    server.setPort(8001);
+    server.setPort(6667);
     serverGroup->addServer(server);
     serverGroup->setIdentityId(mIdentity->id());
     Konversation::ChannelSettings channel;

commit d59fb9f6dbd82b464ee8e003391d5baacd7b0619
Author: Eike Hein <hein@kde.org>
Date:   Fri Oct 29 11:46:12 2010 +0200

    Add the shared-mime way of registering us for the irc/ircs protocols, too.

diff --git a/data/konversation.desktop b/data/konversation.desktop
index b34b2c4..cd8b399 100644
--- a/data/konversation.desktop
+++ b/data/konversation.desktop
@@ -3,6 +3,7 @@ Type=Application
 Exec=konversation -caption "%c" %i
 Icon=konversation
 X-DocPath=konversation/index.html
+MimeType=x-scheme-handler/irc;x-scheme-handler/ircs
 GenericName=IRC Client
 GenericName[ast]=Veceru IRC
 GenericName[be]=Кліент IRC
@@ -35,7 +36,7 @@ GenericName[pt]=Cliente de IRC
 GenericName[pt_BR]=Cliente IRC
 GenericName[ro]=Client IRC
 GenericName[ru]=Клиент IRC
-GenericName[si]=IRC 
+GenericName[si]=IRC
 GenericName[sr]=ИРЦ клијент
 GenericName[sr@ijekavian]=ИРЦ клијент
 GenericName[sr@ijekavianlatin]=IRC klijent

commit 119767da15b099c6a563d4d6ca893e9b2c9c52de
Author: Eike Hein <hein@kde.org>
Date:   Fri Oct 29 12:58:30 2010 +0200

    Back to 8001.
    
    The SASL requirement is actually raised by Freenode based on the
    connecting source address; they require it for Tor, various anon
    VPN providers and a few dodgy mobile ISPs. Nothing we can affect,
    in other words - other than implementing SASL auth, that is.

diff --git a/src/config/preferences.cpp b/src/config/preferences.cpp
index 59b1cad..5c42b75 100644
--- a/src/config/preferences.cpp
+++ b/src/config/preferences.cpp
@@ -64,7 +64,7 @@ Preferences::Preferences()
     serverGroup->setName("Freenode");
     Konversation::ServerSettings server;
     server.setHost("chat.freenode.net");
-    server.setPort(6667);
+    server.setPort(8001);
     serverGroup->addServer(server);
     serverGroup->setIdentityId(mIdentity->id());
     Konversation::ChannelSettings channel;

commit 36cf71cfe47fb56aa4ca1804c4c7a619dd1c1fdb
Author: Eike Hein <hein@kde.org>
Date:   Fri Oct 29 13:36:09 2010 +0200

    Add missing trailing semicolon.

diff --git a/data/konversation.desktop b/data/konversation.desktop
index cd8b399..04f55d4 100644
--- a/data/konversation.desktop
+++ b/data/konversation.desktop
@@ -3,7 +3,7 @@ Type=Application
 Exec=konversation -caption "%c" %i
 Icon=konversation
 X-DocPath=konversation/index.html
-MimeType=x-scheme-handler/irc;x-scheme-handler/ircs
+MimeType=x-scheme-handler/irc;x-scheme-handler/ircs;
 GenericName=IRC Client
 GenericName[ast]=Veceru IRC
 GenericName[be]=Кліент IRC

commit 884b34730db945fe1fd337c0db5ed2383f3a358f
Author: Eike Hein <hein@kde.org>
Date:   Fri Oct 29 20:20:02 2010 +0200

    Bookmark URL generation improvements.
    
    Check whether QUrl accepts the network name as a hostname before
    using it, otherwise we get into trouble in the KDE bookmarking
    code. Fall back to the server hostname if we have to. Fixes book-
    marking when the network name e.g. contains a space.
    BUG:255543
    
    Also excise the leading # in standard channel names - we handle
    both cases fine, but it's implicit in the IRC url "standard".

diff --git a/src/viewer/chatwindow.cpp b/src/viewer/chatwindow.cpp
index 4133004..6637719 100644
--- a/src/viewer/chatwindow.cpp
+++ b/src/viewer/chatwindow.cpp
@@ -109,13 +109,30 @@ QString ChatWindow::getURI(bool passNetwork)
     QString server;
     QString channel;
 
+    if (getServer()->getUseSSL())
+        protocol = "ircs://";
+    else
+        protocol = "irc://";
 
     if (getType() == Channel)
-        channel = getName();
+        channel = getName().replace(QRegExp("^#"), QString());
 
     if (passNetwork)
+    {
         server = getServer()->getDisplayName();
-    else
+
+        QUrl test(protocol+server);
+
+        // QUrl (ultimately used by the bookmark system, which is the
+        // primary consumer here) doesn't like spaces in hostnames as
+        // well as other things which are possible in user-chosen net-
+        // work names, so let's fall back to the hostname if we can't
+        // get the network name by it.
+        if (!test.isValid())
+            passNetwork = false;
+    }
+
+    if (!passNetwork)
     {
         server = getServer()->getServerName();
         port = ':'+QString::number(getServer()->getPort());
@@ -124,11 +141,6 @@ QString ChatWindow::getURI(bool passNetwork)
     if (server.contains(':')) // IPv6
         server = '['+server+']';
 
-    if (getServer()->getUseSSL())
-        protocol = "ircs://";
-    else
-        protocol = "irc://";
-
     url = protocol+server+port+'/'+channel;
 
     return url;

commit 410c442c4778ed98a5e5a6f4db60d70c6849193b
Author: Script Kiddy <scripty@kde.org>
Date:   Sat Oct 30 10:52:42 2010 +0200

    SVN_SILENT made messages (.desktop file)

diff --git a/data/konversation.desktop b/data/konversation.desktop
index 04f55d4..487bd32 100644
--- a/data/konversation.desktop
+++ b/data/konversation.desktop
@@ -36,7 +36,7 @@ GenericName[pt]=Cliente de IRC
 GenericName[pt_BR]=Cliente IRC
 GenericName[ro]=Client IRC
 GenericName[ru]=Клиент IRC
-GenericName[si]=IRC
+GenericName[si]=IRC 
 GenericName[sr]=ИРЦ клијент
 GenericName[sr@ijekavian]=ИРЦ клијент
 GenericName[sr@ijekavianlatin]=IRC klijent

commit 83dd47d48289d893be9fe9c09b075e834e758605
Author: Peter Simonsson <peter.simonsson@gmail.com>
Date:   Sat Oct 30 16:39:16 2010 +0200

    Remove unused code from Emoticons.

diff --git a/src/viewer/emoticons.cpp b/src/viewer/emoticons.cpp
index 417c9aa..002dd77 100644
--- a/src/viewer/emoticons.cpp
+++ b/src/viewer/emoticons.cpp
@@ -42,26 +42,4 @@ namespace Konversation
             return text;
         }
     }
-
-    QList<KEmoticonsTheme::Token> Emoticons::tokenize(const QString &message, KEmoticonsTheme::ParseMode mode)
-    {
-        // Disable emoticons support until IRCView supports them
-        if (/*Preferences::enableEmotIcons()*/ false)
-        {
-            QList<KEmoticonsTheme::Token> ret = Konversation::Emoticons::self()->theme().tokenize(message, mode);
-
-            if( !ret.size() )
-            {
-                ret.append( KEmoticonsTheme::Token( KEmoticonsTheme::Text, message ) );
-            }
-
-            return ret;
-        }
-        else
-        {
-            QList<KEmoticonsTheme::Token> result;
-            result.append( KEmoticonsTheme::Token( KEmoticonsTheme::Text, message ) );
-            return result;
-        }
-    }
 }
diff --git a/src/viewer/emoticons.h b/src/viewer/emoticons.h
index 1f10359..ea9c5b9 100644
--- a/src/viewer/emoticons.h
+++ b/src/viewer/emoticons.h
@@ -34,10 +34,8 @@ namespace Konversation {
         static KEmoticons *self();
 
         static QString parseEmoticons(const QString &text, KEmoticonsTheme::ParseMode mode = KEmoticonsTheme::DefaultParse, const QStringList &exclude = QStringList());
-        static QList<KEmoticonsTheme::Token> tokenize(const QString &message, KEmoticonsTheme::ParseMode mode = KEmoticonsTheme::DefaultParse);
-
     };
 
-} //END namespace Kopete
+} //END namespace Konversation
 
 #endif

commit ba0570b86f31e3b7fdc3dfe718f9217fb35dd725
Author: Eike Hein <hein@kde.org>
Date:   Mon Nov 1 19:40:19 2010 +0100

    cruft--

diff --git a/src/config/konversation.kcfg b/src/config/konversation.kcfg
index c2b3d23..ddef9b4 100644
--- a/src/config/konversation.kcfg
+++ b/src/config/konversation.kcfg
@@ -280,11 +280,6 @@
       <label></label>
       <whatsthis></whatsthis>
     </entry>
-    <entry key="LogfileReaderGeometry" type="Size" name="LogfileReaderSize">
-      <default code="true">QSize(400, 200)</default>
-      <label></label>
-      <whatsthis></whatsthis>
-    </entry>
     <entry key="MultilineEditGeometry" type="Size" name="MultilineEditSize">
       <default></default>
       <label></label>
diff --git a/src/viewer/logfilereader.cpp b/src/viewer/logfilereader.cpp
index a0625a1..987dc62 100644
--- a/src/viewer/logfilereader.cpp
+++ b/src/viewer/logfilereader.cpp
@@ -62,7 +62,6 @@ LogfileReader::LogfileReader(QWidget* parent, const QString& log) : ChatWindow(p
     getTextView()->setWhatsThis(i18n("The messages in the log file are displayed here. The oldest messages are at the top and the most recent are at the bottom."));
 
     updateView();
-    resize(Preferences::self()->logfileReaderSize());
     ircBox->ircView()->setFocusPolicy(Qt::StrongFocus);
     setFocusPolicy(Qt::StrongFocus);
     setFocusProxy(ircBox->ircView());
@@ -74,7 +73,6 @@ LogfileReader::LogfileReader(QWidget* parent, const QString& log) : ChatWindow(p
 
 LogfileReader::~LogfileReader()
 {
-    Preferences::self()->setLogfileReaderSize(size());
     Preferences::self()->setLogfileBufferSize(sizeSpin->value());
 
     delete toolBar;

commit c79c61887b5da4b5953a49f73e8c35e519c96908
Author: Eike Hein <hein@kde.org>
Date:   Mon Nov 1 19:57:49 2010 +0100

    Update stored buffer size immediately when changed.

diff --git a/src/viewer/logfilereader.cpp b/src/viewer/logfilereader.cpp
index 987dc62..0762169 100644
--- a/src/viewer/logfilereader.cpp
+++ b/src/viewer/logfilereader.cpp
@@ -56,6 +56,7 @@ LogfileReader::LogfileReader(QWidget* parent, const QString& log) : ChatWindow(p
     sizeSpin->setSuffix(i18n(" KB"));
     sizeSpin->installEventFilter(this);
     toolBar->addWidget(sizeSpin);
+    connect(sizeSpin, SIGNAL(valueChanged(int)), this, SLOT(storeBufferSize(int)));
 
     IRCViewBox* ircBox = new IRCViewBox(this);
     setTextView(ircBox->ircView());
@@ -73,8 +74,6 @@ LogfileReader::LogfileReader(QWidget* parent, const QString& log) : ChatWindow(p
 
 LogfileReader::~LogfileReader()
 {
-    Preferences::self()->setLogfileBufferSize(sizeSpin->value());
-
     delete toolBar;
 }
 
@@ -97,6 +96,11 @@ bool LogfileReader::eventFilter(QObject* /* watched */, QEvent* e)
     return false;
 }
 
+void LogfileReader::storeBufferSize(int kb)
+{
+    Preferences::self()->setLogfileBufferSize(kb);
+}
+
 void LogfileReader::updateView()
 {
     // get maximum size of logfile to display
diff --git a/src/viewer/logfilereader.h b/src/viewer/logfilereader.h
index 48a5c65..5b2c6fd 100644
--- a/src/viewer/logfilereader.h
+++ b/src/viewer/logfilereader.h
@@ -41,6 +41,7 @@ class LogfileReader : public ChatWindow
 
     protected slots:
         void updateView();
+        void storeBufferSize(int kb);
         void clearLog();
         void saveLog();
         void closeLog();

commit 95bb206a59f74c277b07feaa5a529591bb895e1a
Author: Eike Hein <hein@kde.org>
Date:   Mon Nov 1 19:58:02 2010 +0100

    cruft--

diff --git a/src/viewer/logfilereader.cpp b/src/viewer/logfilereader.cpp
index 0762169..6a50f9a 100644
--- a/src/viewer/logfilereader.cpp
+++ b/src/viewer/logfilereader.cpp
@@ -74,7 +74,6 @@ LogfileReader::LogfileReader(QWidget* parent, const QString& log) : ChatWindow(p
 
 LogfileReader::~LogfileReader()
 {
-    delete toolBar;
 }
 
 bool LogfileReader::eventFilter(QObject* /* watched */, QEvent* e)

commit 4472465e3b068be10c92bc90e6670cd21f49d461
Author: Eike Hein <hein@kde.org>
Date:   Mon Nov 1 19:59:35 2010 +0100

    Consistent layout spacing.

diff --git a/src/viewer/logfilereader.cpp b/src/viewer/logfilereader.cpp
index 6a50f9a..f1df3fb 100644
--- a/src/viewer/logfilereader.cpp
+++ b/src/viewer/logfilereader.cpp
@@ -39,6 +39,8 @@ LogfileReader::LogfileReader(QWidget* parent, const QString& log) : ChatWindow(p
 
     fileName = log;
 
+    setSpacing(0);
+
     toolBar = new KToolBar(this, true, true);
     toolBar->setObjectName("logfile_toolbar");
     toolBar->addAction(KIcon("document-save-as"), i18n("Save As..."), this, SLOT(saveLog()));

commit 71f37d8f5f3abbd2f361f56a0d13bc2b6a279879
Author: Eike Hein <hein@kde.org>
Date:   Mon Nov 1 20:03:28 2010 +0100

    Yank misleading tooltip; 0 is treated as Unlimited.

diff --git a/src/config/settingsdialog.cpp b/src/config/settingsdialog.cpp
index 169e7ed..c23a60b 100644
--- a/src/config/settingsdialog.cpp
+++ b/src/config/settingsdialog.cpp
@@ -113,8 +113,6 @@ KonviSettingsDialog::KonviSettingsDialog( QWidget *parent) :
   Ui::ChatwindowBehaviour_Config confChatwindowBehaviour;
   w = new QWidget();
   confChatwindowBehaviour.setupUi(w);
-  confChatwindowBehaviour.kcfg_ScrollbackMax->setToolTip(i18np("Maximum scrollback limit: 1 line.",
-      "Maximum scrollback limit: %1 lines.", confChatwindowBehaviour.kcfg_ScrollbackMax->maximum()));
   confChatwindowBehaviour.kcfg_ScrollbackMax->setSuffix(ki18np(" line", " lines"));
   confChatwindowBehaviour.kcfg_AutoWhoNicksLimit->setSuffix(ki18np(" nick", " nicks"));
   confChatwindowBehaviour.kcfg_AutoWhoContinuousInterval->setSuffix(ki18np(" second", " seconds"));

commit 8023a7ecce2f7c391f5dfe9f3fd7c92946954432
Author: Eike Hein <hein@kde.org>
Date:   Mon Nov 1 21:08:15 2010 +0100

    Add a way to set the default fallback away message.

diff --git a/ChangeLog b/ChangeLog
index 0625a8a..2ad038a 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -272,6 +272,10 @@ Changes since 1.3.1:
   (e.g. "Close Tab" invoked by the default shortcut Ctrl+W) to operate on a
   different tab after the "Join on Connect" action in that tab's context
   menu had been used.
+* Added a "Default away reason" field to the "Away" tab in the Identity
+  dialog. The away reason entered there will be used when no away message
+  is entered manually as an argument to the '/away' or '/aaway' commands,
+  so for example when Global Away is enabled using the keyboard shortcut.
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/identity.cpp b/src/identity.cpp
index 19d6cea..a1a2ac1 100644
--- a/src/identity.cpp
+++ b/src/identity.cpp
@@ -63,6 +63,8 @@ void Identity::init()
     setPartReason("Konversation terminated!");
     setKickReason("User terminated!");
 
+    setAwayReason("Gone away for now");
+
     setShowAwayMessage(false);
     setAwayMessage("/me is away: %s");
     setReturnMessage("/me is back.");
@@ -83,6 +85,7 @@ void Identity::copy(const Identity& original)
     setQuitReason(original.getQuitReason());
     setPartReason(original.getPartReason());
     setKickReason(original.getKickReason());
+    setAwayReason(original.getAwayReason());
     setInsertRememberLineOnAway(original.getInsertRememberLineOnAway());
     setShowAwayMessage(original.getShowAwayMessage());
     setAwayMessage(original.getAwayMessage());
@@ -123,6 +126,9 @@ QString Identity::getPartReason() const                 { return partReason; }
 void Identity::setKickReason(const QString& reason)     { kickReason=reason; }
 QString Identity::getKickReason() const                 { return kickReason; }
 
+void Identity::setAwayReason(const QString& reason)     { awayReason=reason; }
+QString Identity::getAwayReason() const                 { return awayReason; }
+
 void Identity::setInsertRememberLineOnAway(bool state) { insertRememberLineOnAway = state; }
 bool Identity::getInsertRememberLineOnAway() const { return insertRememberLineOnAway; }
 void Identity::setShowAwayMessage(bool state)           { showAwayMessages=state; }
diff --git a/src/identity.h b/src/identity.h
index c92f27f..2d5562c 100644
--- a/src/identity.h
+++ b/src/identity.h
@@ -61,6 +61,9 @@ class Identity : public KShared
         void setKickReason(const QString& reason);
         QString getKickReason() const;
 
+        void setAwayReason(const QString& reason);
+        QString getAwayReason() const;
+
         void setInsertRememberLineOnAway(bool state);
         bool getInsertRememberLineOnAway() const;
         void setShowAwayMessage(bool state);
@@ -104,6 +107,7 @@ class Identity : public KShared
         QString partReason;
         QString quitReason;
         QString kickReason;
+        QString awayReason;
 
         bool insertRememberLineOnAway;
         bool showAwayMessages;
diff --git a/src/identitydialog.cpp b/src/identitydialog.cpp
index 9ea60c4..00bfbf3 100644
--- a/src/identitydialog.cpp
+++ b/src/identitydialog.cpp
@@ -89,6 +89,7 @@ namespace Konversation
         m_passwordEdit->setText(m_currentIdentity->getPassword());
 
         m_insertRememberLineOnAwayChBox->setChecked(m_currentIdentity->getInsertRememberLineOnAway());
+        m_awayReasonEdit->setText(m_currentIdentity->getAwayReason());
         m_awayNickEdit->setText(m_currentIdentity->getAwayNick());
         awayMessageGroup->setChecked(m_currentIdentity->getShowAwayMessage());
         m_awayEdit->setText(m_currentIdentity->getAwayMessage());
@@ -136,6 +137,7 @@ namespace Konversation
         m_currentIdentity->setPassword(m_passwordEdit->text());
 
         m_currentIdentity->setInsertRememberLineOnAway(m_insertRememberLineOnAwayChBox->isChecked());
+        m_currentIdentity->setAwayReason(m_awayReasonEdit->text());
         m_currentIdentity->setAwayNick(m_awayNickEdit->text());
         m_currentIdentity->setShowAwayMessage(awayMessageGroup->isChecked());
         m_currentIdentity->setAwayMessage(m_awayEdit->text());
diff --git a/src/identitydialog.ui b/src/identitydialog.ui
index 0660543..dacb056 100644
--- a/src/identitydialog.ui
+++ b/src/identitydialog.ui
@@ -172,7 +172,7 @@
    <item>
     <widget class="KTabWidget" name="tabWidget">
      <property name="currentIndex">
-      <number>0</number>
+      <number>1</number>
      </property>
      <widget class="QWidget" name="generalWidget">
       <attribute name="title">
@@ -261,36 +261,52 @@ Since nicknames must be unique across an entire IRC network, your desired name m
       <attribute name="title">
        <string>Away</string>
       </attribute>
-      <layout class="QVBoxLayout" name="verticalLayout_3">
-       <item>
-        <layout class="QGridLayout" name="gridLayout_4">
-         <item row="0" column="0" colspan="2">
-          <widget class="QCheckBox" name="m_insertRememberLineOnAwayChBox">
-           <property name="whatsThis">
-            <string>If you check this box, whenever you perform an &lt;b&gt;/away&lt;/b&gt; command, a horizontal line will appear in the channel, marking the point where you went away. Other IRC users do not see this horizontal line.</string>
-           </property>
-           <property name="text">
-            <string>Mark the last position in chat windows when going away</string>
-           </property>
-          </widget>
-         </item>
-         <item row="1" column="0">
-          <widget class="QLabel" name="awayNicknameLabel">
-           <property name="text">
-            <string>Away nickname:</string>
-           </property>
-          </widget>
-         </item>
-         <item row="1" column="1">
-          <widget class="KLineEdit" name="m_awayNickEdit">
-           <property name="whatsThis">
-            <string>Enter a nickname that indicates you are away. Whenever you perform an &lt;b&gt;/away msg&lt;/b&gt; command in any channel joined with this Identity, Konversation will automatically change your nickname to the Away nickname. Other users will be able to tell you are away from your computer. Whenever you perform an &lt;b&gt;/away&lt;/b&gt; command in any channel in which you are away, Konversation will automatically change your nickname back to the original. If you do not wish to automatically change your nickname when going away, leave blank.</string>
-           </property>
-          </widget>
-         </item>
-        </layout>
+      <layout class="QFormLayout" name="formLayout_3">
+       <item row="0" column="0" colspan="2">
+        <widget class="QCheckBox" name="m_insertRememberLineOnAwayChBox">
+         <property name="whatsThis">
+          <string>If you check this box, whenever you perform an &lt;b&gt;/away&lt;/b&gt; command, a horizontal line will appear in the channel, marking the point where you went away. Other IRC users do not see this horizontal line.</string>
+         </property>
+         <property name="text">
+          <string>Mark the last position in chat windows when going away</string>
+         </property>
+        </widget>
        </item>
-       <item>
+       <item row="1" column="0">
+        <widget class="QLabel" name="awayReasonLabel">
+         <property name="text">
+          <string>Default away reason:</string>
+         </property>
+         <property name="buddy">
+          <cstring>m_awayReasonEdit</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="1" column="1">
+        <widget class="QLineEdit" name="m_awayReasonEdit">
+         <property name="whatsThis">
+          <string>This away message is used when no away message is entered manually as an argument to /away or /aaway.</string>
+         </property>
+        </widget>
+       </item>
+       <item row="2" column="0">
+        <widget class="QLabel" name="awayNicknameLabel">
+         <property name="text">
+          <string>Away nickname:</string>
+         </property>
+         <property name="buddy">
+          <cstring>m_awayNickEdit</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="2" column="1">
+        <widget class="KLineEdit" name="m_awayNickEdit">
+         <property name="whatsThis">
+          <string>Enter a nickname that indicates you are away. Whenever you perform an &lt;b&gt;/away msg&lt;/b&gt; command in any channel joined with this Identity, Konversation will automatically change your nickname to the Away nickname. Other users will be able to tell you are away from your computer. Whenever you perform an &lt;b&gt;/away&lt;/b&gt; command in any channel in which you are away, Konversation will automatically change your nickname back to the original. If you do not wish to automatically change your nickname when going away, leave blank.</string>
+         </property>
+        </widget>
+       </item>
+       <item row="3" column="0" colspan="2">
         <widget class="QGroupBox" name="automaticAwayGroup">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
@@ -363,7 +379,7 @@ Since nicknames must be unique across an entire IRC network, your desired name m
          </layout>
         </widget>
        </item>
-       <item>
+       <item row="4" column="0" colspan="2">
         <widget class="QGroupBox" name="awayMessageGroup">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
@@ -413,7 +429,7 @@ Since nicknames must be unique across an entire IRC network, your desired name m
          </layout>
         </widget>
        </item>
-       <item>
+       <item row="5" column="0">
         <spacer name="awayWidgetVSpacer">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index 3435214..cdbc515 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -3679,8 +3679,13 @@ void Server::requestAway(const QString& reason)
     QString awayReason = reason;
     IdentityPtr identity = getIdentity();
 
-    if (awayReason.isEmpty() || !identity)
-        awayReason = i18n("Gone away for now");
+    if (awayReason.isEmpty())
+    {
+        if (identity)
+            awayReason = identity->getAwayReason();
+        else
+            awayReason = i18n("Gone away for now");
+    }
 
     setAwayReason(awayReason);
 

commit 51cb6bc278515955b8e6317e5b0b33b688c8511a
Author: Eike Hein <hein@kde.org>
Date:   Mon Nov 1 21:23:04 2010 +0100

    Better string.

diff --git a/src/identitydialog.ui b/src/identitydialog.ui
index dacb056..9c87d9b 100644
--- a/src/identitydialog.ui
+++ b/src/identitydialog.ui
@@ -285,7 +285,7 @@ Since nicknames must be unique across an entire IRC network, your desired name m
        <item row="1" column="1">
         <widget class="QLineEdit" name="m_awayReasonEdit">
          <property name="whatsThis">
-          <string>This away message is used when no away message is entered manually as an argument to /away or /aaway.</string>
+          <string>The text you enter here is used as the away reason when no reason is entered as an argument to the &lt;b&gt;/away&lt;/b&gt; or &lt;b&gt;/aaway&lt;/b&gt; commands, and also when Global Away is toggled from the menu or via the keyboard shortcut.</string>
          </property>
         </widget>
        </item>

commit b5a557ee6152126e8c5403c37a5924bbc4b029f8
Author: Eike Hein <hein@kde.org>
Date:   Mon Nov 1 21:29:36 2010 +0100

    Proper error message when trying to use /me from a non-chat tab.

diff --git a/src/irc/outputfilter.cpp b/src/irc/outputfilter.cpp
index 21b0aad..e0a8bd6 100644
--- a/src/irc/outputfilter.cpp
+++ b/src/irc/outputfilter.cpp
@@ -668,7 +668,9 @@ namespace Konversation
     {
         OutputFilterResult result;
 
-        if (input.destination.isEmpty() || input.parameter.isEmpty())
+        if (input.destination.isEmpty())
+            return error(i18n("%1ME only works from a channel, query or DCC chat tab.", Preferences::self()->commandChar()));
+        else if (input.parameter.isEmpty())
             return usage(i18n("Usage: %1ME text", Preferences::self()->commandChar()));
 
         QString command("PRIVMSGACTION \x01\x01");

commit 5f648831eac98536a1391c0d312036dc4c3d984a
Author: Eike Hein <hein@kde.org>
Date:   Mon Nov 1 21:30:09 2010 +0100

    Redundant.

diff --git a/src/irc/outputfilter.cpp b/src/irc/outputfilter.cpp
index e0a8bd6..8ad6d2a 100644
--- a/src/irc/outputfilter.cpp
+++ b/src/irc/outputfilter.cpp
@@ -737,18 +737,18 @@ namespace Konversation
         bool recipientIsAChannel = false;
 
         if (recipient.isEmpty())
-            return error(i18n("Error: You need to specify a recipient."));
+            return error(i18n("You need to specify a recipient."));
         else
             recipientIsAChannel = m_server->isAChannel(recipient);
 
         if (commandIsQuery && recipientIsAChannel)
-            return error(i18n("Error: You cannot open queries to channels."));
+            return error(i18n("You cannot open queries to channels."));
 
         if (message.trimmed().isEmpty())
         {
             // Empty result - we don't want to send any message to the server.
             if (!commandIsQuery)
-                return error(i18n("Error: You need to specify a message."));
+                return error(i18n("You need to specify a message."));
         }
         else
         {

commit f03c21791ef7c308c7108fd38b78775e34dac9f8
Author: Eike Hein <hein@kde.org>
Date:   Mon Nov 1 21:42:50 2010 +0100

    Fix capitalization.

diff --git a/src/notificationhandler.cpp b/src/notificationhandler.cpp
index def77c9..859254d 100644
--- a/src/notificationhandler.cpp
+++ b/src/notificationhandler.cpp
@@ -254,7 +254,7 @@ namespace Konversation
         if (Preferences::self()->disableNotifyWhileAway() && chatWin->getServer() && chatWin->getServer()->isAway())
             return;
 
-        KNotification::event(QString::fromLatin1("dcc_error"), i18n("An Error has occurred in a DCC transfer: %1",error), QPixmap(), m_mainWindow);
+        KNotification::event(QString::fromLatin1("dcc_error"), i18n("An error has occurred in a DCC transfer: %1",error), QPixmap(), m_mainWindow);
     }
 
     void NotificationHandler::dccTransferDone(ChatWindow* chatWin, const QString& file)
@@ -346,7 +346,7 @@ namespace Konversation
             return;
 
         KNotification *ev=new KNotification("dccChat", m_mainWindow);
-        ev->setText(i18n("%1 started a dcc chat with you", nick));
+        ev->setText(i18n("%1 started a DCC chat with you", nick));
         ev->sendEvent();
 
     }

commit 97a021ad569f9c5c46b3cc2782ce30a220f09362
Author: Eike Hein <hein@kde.org>
Date:   Mon Nov 1 21:44:01 2010 +0100

    Add missing read-in and write-out.

diff --git a/src/application.cpp b/src/application.cpp
index d2b35d1..0106abe 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -425,6 +425,7 @@ void Application::readOptions()
 
             newIdentity->setCodecName(cgIdentity.readEntry("Codec"));
 
+            newIdentity->setAwayReason(cgIdentity.readEntry("AwaYreason"));
             newIdentity->setAwayNick(cgIdentity.readEntry("AwayNick"));
 
             Preferences::addIdentity(newIdentity);
@@ -757,6 +758,7 @@ void Application::saveOptions(bool updateGUI)
         cgIdentity.writeEntry("KickReason",identity->getKickReason());
         cgIdentity.writeEntry("PreShellCommand",identity->getShellCommand());
         cgIdentity.writeEntry("Codec",identity->getCodecName());
+        cgIdentity.writeEntry("AwayReason",identity->getAwayReason());
         cgIdentity.writeEntry("AwayNick", identity->getAwayNick());
         index++;
     } // endfor

commit efd25d253a95a2a132746160fe37b67824e8d218
Author: Burkhard Lück <lueck@hube-lueck.de>
Date:   Mon Nov 1 22:19:36 2010 +0100

    update info about log + scroll size
    remove info about obsolete command prefs

diff --git a/doc/index.docbook b/doc/index.docbook
index 7848572..2bd9994 100644
--- a/doc/index.docbook
+++ b/doc/index.docbook
@@ -2305,8 +2305,6 @@ command, see <link linkend="identity-away">Setting your identity</link>.
 <link linkend="query">Private conversation (query)</link> session.
 Each session is stored in a log file on disk.
 When you open the same session again, &konversation; appends to the log.
-The log grows to a limit you can set (see below).  When the limit is reached, the oldest
-messages are discarded.
 </para>
 
 <para>Whenever you open a session again, approximately the last 1024 characters
@@ -2364,8 +2362,9 @@ display.  Use this button to view the most recent messages.</para></callout>
 <callout arearefs="pt-logviewer-4"><para>Click to erase the log file display
 and the log file on disk.</para></callout>
 <callout arearefs="pt-logviewer-5"><para>Use this box to set the maximum size
-of the log file.  This setting does not take effect until you restart
-&konversation;.  Each log file may have a separate setting.</para></callout>
+of the scroll.  This setting does take effect only for newly opened log tabs.
+The last changed value of the scroll size will be used on &konversation;'s next start.  
+Each log file may have a separate setting.</para></callout>
 </calloutlist>
 </para>
 
@@ -2375,7 +2374,7 @@ of the log file.  This setting does not take effect until you restart
 	<guisubmenu>Configure &konversation;</guisubmenu>
 </menuchoice> on the main menu, then expand <guilabel>Behavior</guilabel> and
 click on <guilabel>Chat Window</guilabel>.  The <guilabel>Scrollback limit</guilabel>
-box appears on this screen.  If you set it to <guilabel>Unlimited</guilabel>,
+box appears on this screen.  If you set it to <guilabel>Unlimited</guilabel> (&ie; zero),
 messages are not discarded from the scroll.
 </para>
 
@@ -2580,31 +2579,6 @@ of watched &nickname;s.</para>
 </varlistentry>
 
 <varlistentry>
-<term><userinput><command>/prefs </command>[<command>list</command>|<replaceable>group</replaceable>]  [<command>list</command>|<replaceable>option</replaceable>]  [<replaceable>value</replaceable>]</userinput></term>
-<listitem><para>Displays or sets &konversation; settings without using the Settings screen.
-If a parameter contains spaces, surround it with quotes.</para>
-
-<para>Examples:</para>
-
-<para><userinput><replaceable>/prefs list</replaceable></userinput></para>
-
-<para>lists the available option groups.</para>
-
-<para><userinput><replaceable>/prefs "General Options" list</replaceable></userinput></para>
-
-<para>lists the options available in group <userinput><replaceable>General Options</replaceable></userinput> along with their current values</para>
-
-<para><userinput><replaceable>/prefs "General Options" ShowTrayIcon</replaceable></userinput></para>
-
-<para>Displays the current value of the setting for displaying the &konversation; icon in the system tray.</para>
-
-<para><userinput><replaceable>/prefs "General Options" ShowTrayIcon false</replaceable></userinput></para>
-
-<para>Turns off the &konversation; icon in the system tray.</para>
-
-</listitem></varlistentry>
-
-<varlistentry>
 <term><userinput><command>/kick </command><replaceable>nick</replaceable> <replaceable>reason</replaceable></userinput></term>
 <listitem><para>When entered in a channel tab, attempts to kick the user with &nickname;
 <userinput><replaceable>nick</replaceable></userinput> from the channel with

commit 76e4326b686495a464144065bf4c6ae4d556319f
Merge: efd25d2 97a021a
Author: Burkhard Lück <lueck@hube-lueck.de>
Date:   Mon Nov 1 22:24:25 2010 +0100

    Merge branch 'master' of git.kde.org:konversation

commit 2c99b125ca31d08599a43ee0d81b3b6f318dc806
Author: Eike Hein <hein@kde.org>
Date:   Mon Nov 1 22:15:25 2010 +0100

    Away Messages -> Away Commands in Identity.
    
    Also removed the examples to make abuse less likely and improved
    the What's This.
    
    The rc file key names are unchanged as-yet, pending an kconf_update
    script to migrate them.
    
    Cleaned out a bunch of related API cruft from Preferences.

diff --git a/src/application.cpp b/src/application.cpp
index 0106abe..eb4b1d8 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -410,9 +410,9 @@ void Application::readOptions()
             newIdentity->setPassword(cgIdentity.readEntry("Password"));
 
             newIdentity->setInsertRememberLineOnAway(cgIdentity.readEntry("InsertRememberLineOnAway", false));
-            newIdentity->setShowAwayMessage(cgIdentity.readEntry("ShowAwayMessage", false));
-            newIdentity->setAwayMessage(cgIdentity.readEntry("AwayMessage"));
-            newIdentity->setReturnMessage(cgIdentity.readEntry("ReturnMessage"));
+            newIdentity->setRunAwayCommands(cgIdentity.readEntry("ShowAwayMessage", false));
+            newIdentity->setAwayCommand(cgIdentity.readEntry("AwayMessage"));
+            newIdentity->setReturnCommand(cgIdentity.readEntry("ReturnMessage"));
             newIdentity->setAutomaticAway(cgIdentity.readEntry("AutomaticAway", false));
             newIdentity->setAwayInactivity(cgIdentity.readEntry("AwayInactivity", 10));
             newIdentity->setAutomaticUnaway(cgIdentity.readEntry("AutomaticUnaway", false));
@@ -747,9 +747,9 @@ void Application::saveOptions(bool updateGUI)
         cgIdentity.writeEntry("Bot",identity->getBot());
         cgIdentity.writeEntry("Password",identity->getPassword());
         cgIdentity.writeEntry("InsertRememberLineOnAway", identity->getInsertRememberLineOnAway());
-        cgIdentity.writeEntry("ShowAwayMessage",identity->getShowAwayMessage());
-        cgIdentity.writeEntry("AwayMessage",identity->getAwayMessage());
-        cgIdentity.writeEntry("ReturnMessage",identity->getReturnMessage());
+        cgIdentity.writeEntry("ShowAwayMessage",identity->getRunAwayCommands());
+        cgIdentity.writeEntry("AwayMessage",identity->getAwayCommand());
+        cgIdentity.writeEntry("ReturnMessage",identity->getReturnCommand());
         cgIdentity.writeEntry("AutomaticAway", identity->getAutomaticAway());
         cgIdentity.writeEntry("AwayInactivity", identity->getAwayInactivity());
         cgIdentity.writeEntry("AutomaticUnaway", identity->getAutomaticUnaway());
diff --git a/src/config/preferences.cpp b/src/config/preferences.cpp
index 5c42b75..0185043 100644
--- a/src/config/preferences.cpp
+++ b/src/config/preferences.cpp
@@ -412,35 +412,9 @@ QStringList Preferences::defaultAliasList()
     return aliasList;
 }
 
-
-const QString Preferences::realName() { return self()->mIdentityList[0]->getRealName(); }
-void Preferences::setRealName(const QString &name) { self()->mIdentityList[0]->setRealName(name); }
-
-const QString Preferences::ident() { return self()->mIdentityList[0]->getIdent(); }
-void Preferences::setIdent(const QString &ident) { self()->mIdentityList[0]->setIdent(ident); }
-
-const QString Preferences::partReason() { return self()->mIdentityList[0]->getPartReason(); }
-void Preferences::setPartReason(const QString &newReason) { self()->mIdentityList[0]->setPartReason(newReason); }
-
-const QString Preferences::kickReason() { return self()->mIdentityList[0]->getKickReason(); }
-void Preferences::setKickReason(const QString &newReason) { self()->mIdentityList[0]->setKickReason(newReason); }
-
-bool Preferences::showAwayMessage() { return self()->mIdentityList[0]->getShowAwayMessage(); }
-void Preferences::setShowAwayMessage(bool state) { self()->mIdentityList[0]->setShowAwayMessage(state); }
-
-const QString Preferences::awayMessage() { return self()->mIdentityList[0]->getAwayMessage(); }
-void Preferences::setAwayMessage(const QString &newMessage) { self()->mIdentityList[0]->setAwayMessage(newMessage); }
-const QString Preferences::unAwayMessage() { return self()->mIdentityList[0]->getReturnMessage(); }
-void Preferences::setUnAwayMessage(const QString &newMessage) { self()->mIdentityList[0]->setReturnMessage(newMessage); }
-
 void Preferences::clearIgnoreList() { qDeleteAll(self()->mIgnoreList); self()->mIgnoreList.clear(); }
 const QList<Ignore*> Preferences::ignoreList() { return self()->mIgnoreList; }
 
-const QString Preferences::nickname(int index) { return self()->mIdentityList[0]->getNickname(index); }
-const QStringList Preferences::nicknameList() { return self()->mIdentityList[0]->getNicknameList(); }
-void Preferences::setNickname(int index,const QString &newName) { self()->mIdentityList[0]->setNickname(index,newName); }
-void Preferences::setNicknameList(const QStringList &newList) { self()->mIdentityList[0]->setNicknameList(newList); }
-
 void Preferences::setShowTrayIcon(bool state)
 {
     self()->PreferencesBase::setShowTrayIcon(state);
diff --git a/src/config/preferences.h b/src/config/preferences.h
index 0d0cc93..8ff1ecc 100644
--- a/src/config/preferences.h
+++ b/src/config/preferences.h
@@ -104,25 +104,7 @@ class Preferences : public PreferencesBase
         static void setIdentityList(const IdentityList& list);
         static const IdentityPtr identityByName(const QString& name);
         static const IdentityPtr identityById(int id);
-        static const QString ident();
-        static void setIdent(const QString &ident);
-        static const QString realName();
-        static void setRealName(const QString &name);
-        static const QString partReason();
-        static void setPartReason(const QString &newReason);
-        static const QString kickReason();
-        static void setKickReason(const QString &newReason);
-        static void setShowAwayMessage(bool state);
-        static /* const */ bool showAwayMessage();
-        static const QString awayMessage();
-        static void setAwayMessage(const QString &newMessage);
-        static const QString unAwayMessage();
-        static void setUnAwayMessage(const QString &newMessage);
         static const QString defaultNicknameSortingOrder();
-        static const QString nickname(int index);
-        static const QStringList nicknameList();
-        static void setNickname(int index,const QString &newName);
-        static void setNicknameList(const QStringList &newList);
 
         static bool dialogFlag(const QString& flagName);
         static void setDialogFlag(const QString& flagName,bool state);
diff --git a/src/dbus.cpp b/src/dbus.cpp
index c87b963..f0dc0aa 100644
--- a/src/dbus.cpp
+++ b/src/dbus.cpp
@@ -335,40 +335,40 @@ QString IdentDBus::getKickReason(const QString &identity)
     return sterilizeUnicode(Preferences::identityByName(sterilizeUnicode(identity))->getKickReason());
 }
 
-void IdentDBus::setShowAwayMessage(const QString &identity, bool state)
+void IdentDBus::setRunAwayCommands(const QString &identity, bool run)
 {
     const Identity *i = Preferences::identityByName(sterilizeUnicode(identity)).data();
-    const_cast<Identity *>(i)->setShowAwayMessage(state);
+    const_cast<Identity *>(i)->setRunAwayCommands(run);
     static_cast<Application *>(kapp)->saveOptions(true);
 }
 
-bool IdentDBus::getShowAwayMessage(const QString &identity)
+bool IdentDBus::getRunAwayCommands(const QString &identity)
 {
-    return Preferences::identityByName(sterilizeUnicode(identity))->getShowAwayMessage();
+    return Preferences::identityByName(sterilizeUnicode(identity))->getRunAwayCommands();
 }
 
-void IdentDBus::setAwayMessage(const QString &identity, const QString& message)
+void IdentDBus::setAwayCommand(const QString &identity, const QString& command)
 {
     const Identity *i = Preferences::identityByName(sterilizeUnicode(identity)).data();
-    const_cast<Identity *>(i)->setAwayMessage(sterilizeUnicode(message));
+    const_cast<Identity *>(i)->setAwayCommand(sterilizeUnicode(command));
     static_cast<Application *>(kapp)->saveOptions(true);
 }
 
-QString IdentDBus::getAwayMessage(const QString &identity)
+QString IdentDBus::getAwayCommand(const QString &identity)
 {
-    return sterilizeUnicode(Preferences::identityByName(identity)->getAwayMessage());
+    return sterilizeUnicode(Preferences::identityByName(identity)->getAwayCommand());
 }
 
-void IdentDBus::setReturnMessage(const QString &identity, const QString& message)
+void IdentDBus::setReturnCommand(const QString &identity, const QString& command)
 {
     const Identity *i = Preferences::identityByName(sterilizeUnicode(identity)).data();
-    const_cast<Identity *>(i)->setReturnMessage(sterilizeUnicode(message));
+    const_cast<Identity *>(i)->setReturnCommand(sterilizeUnicode(command));
     static_cast<Application *>(kapp)->saveOptions(true);
 }
 
-QString IdentDBus::getReturnMessage(const QString &identity)
+QString IdentDBus::getReturnCommand(const QString &identity)
 {
-    return sterilizeUnicode(Preferences::identityByName(sterilizeUnicode(identity))->getReturnMessage());
+    return sterilizeUnicode(Preferences::identityByName(sterilizeUnicode(identity))->getReturnCommand());
 }
 
 #include "dbus.moc"
diff --git a/src/dbus.h b/src/dbus.h
index fc0acf2..bcff786 100644
--- a/src/dbus.h
+++ b/src/dbus.h
@@ -100,13 +100,12 @@ class IdentDBus : public QObject
         void setKickReason(const QString &identity, const QString& reason);
         QString getKickReason(const QString &identity);
 
-        void setShowAwayMessage(const QString &identity, bool state);
-        bool getShowAwayMessage(const QString &identity);
-
-        void setAwayMessage(const QString &identity, const QString& message);
-        QString getAwayMessage(const QString &identity);
-        void setReturnMessage(const QString &identity, const QString& message);
-        QString getReturnMessage(const QString &identity);
+        void setRunAwayCommands(const QString &identity, bool run);
+        bool getRunAwayCommands(const QString &identity);
+        void setAwayCommand(const QString &identity, const QString& command);
+        QString getAwayCommand(const QString &identity);
+        void setReturnCommand(const QString &identity, const QString& command);
+        QString getReturnCommand(const QString &identity);
 
         QStringList listIdentities();
 };
diff --git a/src/identity.cpp b/src/identity.cpp
index a1a2ac1..21540d5 100644
--- a/src/identity.cpp
+++ b/src/identity.cpp
@@ -65,9 +65,7 @@ void Identity::init()
 
     setAwayReason("Gone away for now");
 
-    setShowAwayMessage(false);
-    setAwayMessage("/me is away: %s");
-    setReturnMessage("/me is back.");
+    setRunAwayCommands(false);
 
     setAutomaticAway(false);
     setAwayInactivity(10);
@@ -87,10 +85,10 @@ void Identity::copy(const Identity& original)
     setKickReason(original.getKickReason());
     setAwayReason(original.getAwayReason());
     setInsertRememberLineOnAway(original.getInsertRememberLineOnAway());
-    setShowAwayMessage(original.getShowAwayMessage());
-    setAwayMessage(original.getAwayMessage());
+    setRunAwayCommands(original.getRunAwayCommands());
+    setAwayCommand(original.getAwayCommand());
     setAwayNick(original.getAwayNick());
-    setReturnMessage(original.getReturnMessage());
+    setReturnCommand(original.getReturnCommand());
     setAutomaticAway(original.getAutomaticAway());
     setAwayInactivity(original.getAwayInactivity());
     setAutomaticUnaway(original.getAutomaticUnaway());
@@ -131,13 +129,13 @@ QString Identity::getAwayReason() const                 { return awayReason; }
 
 void Identity::setInsertRememberLineOnAway(bool state) { insertRememberLineOnAway = state; }
 bool Identity::getInsertRememberLineOnAway() const { return insertRememberLineOnAway; }
-void Identity::setShowAwayMessage(bool state)           { showAwayMessages=state; }
-bool Identity::getShowAwayMessage() const               { return showAwayMessages; }
 
-void Identity::setAwayMessage(const QString& message)   { awayMessage=message; }
-QString Identity::getAwayMessage() const                { return awayMessage; }
-void Identity::setReturnMessage(const QString& message) { returnMessage=message; }
-QString Identity::getReturnMessage() const              { return returnMessage; }
+void Identity::setRunAwayCommands(bool run)             { runAwayCommands = run; }
+bool Identity::getRunAwayCommands() const               { return runAwayCommands; }
+void Identity::setAwayCommand(const QString& command)   { awayCommand = command; }
+QString Identity::getAwayCommand() const                { return awayCommand; }
+void Identity::setReturnCommand(const QString& command) { returnCommand = command; }
+QString Identity::getReturnCommand() const              { return returnCommand; }
 
 void Identity::setAutomaticAway(bool automaticAway)     { m_automaticAway = automaticAway; }
 bool Identity::getAutomaticAway() const                 { return m_automaticAway; }
diff --git a/src/identity.h b/src/identity.h
index 2d5562c..33486ab 100644
--- a/src/identity.h
+++ b/src/identity.h
@@ -66,13 +66,13 @@ class Identity : public KShared
 
         void setInsertRememberLineOnAway(bool state);
         bool getInsertRememberLineOnAway() const;
-        void setShowAwayMessage(bool state);
-        bool getShowAwayMessage() const;
 
-        void setAwayMessage(const QString& message);
-        QString getAwayMessage() const;
-        void setReturnMessage(const QString& message);
-        QString getReturnMessage() const;
+        void setRunAwayCommands(bool run);
+        bool getRunAwayCommands() const;
+        void setAwayCommand(const QString& command);
+        QString getAwayCommand() const;
+        void setReturnCommand(const QString& command);
+        QString getReturnCommand() const;
 
         void setAutomaticAway(bool automaticAway);
         bool getAutomaticAway() const;
@@ -110,9 +110,9 @@ class Identity : public KShared
         QString awayReason;
 
         bool insertRememberLineOnAway;
-        bool showAwayMessages;
-        QString awayMessage;
-        QString returnMessage;
+        bool runAwayCommands;
+        QString awayCommand;
+        QString returnCommand;
 
         bool m_automaticAway;
         int m_awayInactivity;
diff --git a/src/identitydialog.cpp b/src/identitydialog.cpp
index 00bfbf3..04279a5 100644
--- a/src/identitydialog.cpp
+++ b/src/identitydialog.cpp
@@ -91,9 +91,9 @@ namespace Konversation
         m_insertRememberLineOnAwayChBox->setChecked(m_currentIdentity->getInsertRememberLineOnAway());
         m_awayReasonEdit->setText(m_currentIdentity->getAwayReason());
         m_awayNickEdit->setText(m_currentIdentity->getAwayNick());
-        awayMessageGroup->setChecked(m_currentIdentity->getShowAwayMessage());
-        m_awayEdit->setText(m_currentIdentity->getAwayMessage());
-        m_unAwayEdit->setText(m_currentIdentity->getReturnMessage());
+        awayCommandsGroup->setChecked(m_currentIdentity->getRunAwayCommands());
+        m_awayEdit->setText(m_currentIdentity->getAwayCommand());
+        m_unAwayEdit->setText(m_currentIdentity->getReturnCommand());
         automaticAwayGroup->setChecked(m_currentIdentity->getAutomaticAway());
         m_awayInactivitySpin->setValue(m_currentIdentity->getAwayInactivity());
         m_automaticUnawayChBox->setChecked(m_currentIdentity->getAutomaticUnaway());
@@ -139,9 +139,9 @@ namespace Konversation
         m_currentIdentity->setInsertRememberLineOnAway(m_insertRememberLineOnAwayChBox->isChecked());
         m_currentIdentity->setAwayReason(m_awayReasonEdit->text());
         m_currentIdentity->setAwayNick(m_awayNickEdit->text());
-        m_currentIdentity->setShowAwayMessage(awayMessageGroup->isChecked());
-        m_currentIdentity->setAwayMessage(m_awayEdit->text());
-        m_currentIdentity->setReturnMessage(m_unAwayEdit->text());
+        m_currentIdentity->setRunAwayCommands(awayCommandsGroup->isChecked());
+        m_currentIdentity->setAwayCommand(m_awayEdit->text());
+        m_currentIdentity->setReturnCommand(m_unAwayEdit->text());
         m_currentIdentity->setAutomaticAway(automaticAwayGroup->isChecked());
         m_currentIdentity->setAwayInactivity(m_awayInactivitySpin->value());
         m_currentIdentity->setAutomaticUnaway(m_automaticUnawayChBox->isChecked());
diff --git a/src/identitydialog.ui b/src/identitydialog.ui
index 9c87d9b..08dc362 100644
--- a/src/identitydialog.ui
+++ b/src/identitydialog.ui
@@ -380,7 +380,7 @@ Since nicknames must be unique across an entire IRC network, your desired name m
         </widget>
        </item>
        <item row="4" column="0" colspan="2">
-        <widget class="QGroupBox" name="awayMessageGroup">
+        <widget class="QGroupBox" name="awayCommandsGroup">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
            <horstretch>0</horstretch>
@@ -388,10 +388,10 @@ Since nicknames must be unique across an entire IRC network, your desired name m
           </sizepolicy>
          </property>
          <property name="whatsThis">
-          <string>If you check this box, Konversation will automatically send the Away message to all channels joined with this Identity. &lt;b&gt;%s&lt;/b&gt; is replaced with &lt;b&gt;msg&lt;/b&gt;. Whenever you perform an &lt;b&gt;/away&lt;/b&gt; command, the Return message will be displayed in all channels joined with this Identity.</string>
+          <string>If you check this box, Konversation will automatically run the away command in all channel tabs using this Identity. &lt;b&gt;%s&lt;/b&gt; in the away command is replaced with the away message. When you return, it will run the return command. &lt;b&gt;%t&lt;/b&gt; in the return command is replaced with the length of time you were away.</string>
          </property>
          <property name="title">
-          <string>Away Messages</string>
+          <string>Away Commands</string>
          </property>
          <property name="checkable">
           <bool>true</bool>
@@ -403,7 +403,7 @@ Since nicknames must be unique across an entire IRC network, your desired name m
           <item row="0" column="0">
            <widget class="QLabel" name="awayLabel">
             <property name="text">
-             <string>Away &amp;message:</string>
+             <string>Away command:</string>
             </property>
             <property name="buddy">
              <cstring>m_awayEdit</cstring>
@@ -416,7 +416,7 @@ Since nicknames must be unique across an entire IRC network, your desired name m
           <item row="1" column="0">
            <widget class="QLabel" name="unAwayLabel">
             <property name="text">
-             <string>Re&amp;turn message:</string>
+             <string>Return command:</string>
             </property>
             <property name="buddy">
              <cstring>m_unAwayEdit</cstring>
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index cdbc515..b8f1b9a 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -3717,9 +3717,9 @@ void Server::setAway(bool away)
 
         appendMessageToFrontmost(i18n("Away"), i18n("You are now marked as being away."));
 
-        if (identity && identity->getShowAwayMessage())
+        if (identity && identity->getRunAwayCommands())
         {
-            QString message = identity->getAwayMessage();
+            QString message = identity->getAwayCommand();
             sendToAllChannels(message.replace(QRegExp("%s", Qt::CaseInsensitive), m_awayReason));
         }
 
@@ -3742,9 +3742,9 @@ void Server::setAway(bool away)
         {
             appendMessageToFrontmost(i18n("Away"), i18n("You are no longer marked as being away."));
 
-            if (identity && identity->getShowAwayMessage())
+            if (identity && identity->getRunAwayCommands())
             {
-                QString message = identity->getReturnMessage();
+                QString message = identity->getReturnCommand();
                 sendToAllChannels(message.replace(QRegExp("%t", Qt::CaseInsensitive), awayTime()));
             }
         }
diff --git a/src/quickconnectdialog.cpp b/src/quickconnectdialog.cpp
index 3ea64df..72785a8 100644
--- a/src/quickconnectdialog.cpp
+++ b/src/quickconnectdialog.cpp
@@ -52,7 +52,7 @@ QuickConnectDialog::QuickConnectDialog(QWidget *parent)
     QLabel* nickLabel = new QLabel(i18n("&Nick:"), page);
     QString nickWT = i18n("The nick you want to use.");
     nickLabel->setWhatsThis(nickWT);
-    nickInput = new KLineEdit(Preferences::nickname(0), page);
+    nickInput = new KLineEdit(Preferences::identityById(0)->getNickname(0), page);
     nickInput->setWhatsThis(nickWT);
     nickLabel->setBuddy(nickInput);
     nickLabel->setAlignment(Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter);

commit d068b46870b383fe98df9a55220f39e1e53281a3
Author: Eike Hein <hein@kde.org>
Date:   Mon Nov 1 22:26:28 2010 +0100

    Now that it's available, use "away message here".
    
    The rc file key name doesn't match to prevent clashes with the
    legacy keys for the away commands until a kconf_update script
    is written, cf. 253f43f.

diff --git a/src/application.cpp b/src/application.cpp
index eb4b1d8..80564d5 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -425,7 +425,7 @@ void Application::readOptions()
 
             newIdentity->setCodecName(cgIdentity.readEntry("Codec"));
 
-            newIdentity->setAwayReason(cgIdentity.readEntry("AwaYreason"));
+            newIdentity->setAwayMessage(cgIdentity.readEntry("AwayReason"));
             newIdentity->setAwayNick(cgIdentity.readEntry("AwayNick"));
 
             Preferences::addIdentity(newIdentity);
@@ -758,7 +758,7 @@ void Application::saveOptions(bool updateGUI)
         cgIdentity.writeEntry("KickReason",identity->getKickReason());
         cgIdentity.writeEntry("PreShellCommand",identity->getShellCommand());
         cgIdentity.writeEntry("Codec",identity->getCodecName());
-        cgIdentity.writeEntry("AwayReason",identity->getAwayReason());
+        cgIdentity.writeEntry("AwayReason",identity->getAwayMessage());
         cgIdentity.writeEntry("AwayNick", identity->getAwayNick());
         index++;
     } // endfor
diff --git a/src/identity.cpp b/src/identity.cpp
index 21540d5..743a948 100644
--- a/src/identity.cpp
+++ b/src/identity.cpp
@@ -63,7 +63,7 @@ void Identity::init()
     setPartReason("Konversation terminated!");
     setKickReason("User terminated!");
 
-    setAwayReason("Gone away for now");
+    setAwayMessage("Gone away for now");
 
     setRunAwayCommands(false);
 
@@ -83,10 +83,10 @@ void Identity::copy(const Identity& original)
     setQuitReason(original.getQuitReason());
     setPartReason(original.getPartReason());
     setKickReason(original.getKickReason());
-    setAwayReason(original.getAwayReason());
     setInsertRememberLineOnAway(original.getInsertRememberLineOnAway());
     setRunAwayCommands(original.getRunAwayCommands());
     setAwayCommand(original.getAwayCommand());
+    setAwayMessage(original.getAwayMessage());
     setAwayNick(original.getAwayNick());
     setReturnCommand(original.getReturnCommand());
     setAutomaticAway(original.getAutomaticAway());
@@ -124,9 +124,6 @@ QString Identity::getPartReason() const                 { return partReason; }
 void Identity::setKickReason(const QString& reason)     { kickReason=reason; }
 QString Identity::getKickReason() const                 { return kickReason; }
 
-void Identity::setAwayReason(const QString& reason)     { awayReason=reason; }
-QString Identity::getAwayReason() const                 { return awayReason; }
-
 void Identity::setInsertRememberLineOnAway(bool state) { insertRememberLineOnAway = state; }
 bool Identity::getInsertRememberLineOnAway() const { return insertRememberLineOnAway; }
 
@@ -171,5 +168,7 @@ void Identity::setCodecName(const QString &newCodecName)
     m_codec=Konversation::IRCCharsets::self()->codecForName(codecName);
 }
 
-QString Identity::getAwayNick() const { return awayNick; }
-void Identity::setAwayNick(const QString& n) { awayNick = n; }
+void Identity::setAwayMessage(const QString& message)   { awayMessage = message; }
+QString Identity::getAwayMessage() const                { return awayMessage; }
+void Identity::setAwayNick(const QString& nick)         { awayNick = nick; }
+QString Identity::getAwayNick() const                   { return awayNick; }
diff --git a/src/identity.h b/src/identity.h
index 33486ab..4445771 100644
--- a/src/identity.h
+++ b/src/identity.h
@@ -61,9 +61,6 @@ class Identity : public KShared
         void setKickReason(const QString& reason);
         QString getKickReason() const;
 
-        void setAwayReason(const QString& reason);
-        QString getAwayReason() const;
-
         void setInsertRememberLineOnAway(bool state);
         bool getInsertRememberLineOnAway() const;
 
@@ -88,8 +85,10 @@ class Identity : public KShared
         QString getCodecName() const;
         QTextCodec* getCodec() const;
 
+        void setAwayMessage(const QString& message);
+        QString getAwayMessage() const;
         QString getAwayNick() const;
-        void setAwayNick(const QString& n);
+        void setAwayNick(const QString& nick);
 
         int id() const { return m_id; }
 
@@ -107,7 +106,6 @@ class Identity : public KShared
         QString partReason;
         QString quitReason;
         QString kickReason;
-        QString awayReason;
 
         bool insertRememberLineOnAway;
         bool runAwayCommands;
@@ -123,6 +121,7 @@ class Identity : public KShared
 
         QString m_shellCommand;
 
+        QString awayMessage;
         QString awayNick;
 
     private:
diff --git a/src/identitydialog.cpp b/src/identitydialog.cpp
index 04279a5..8aa8a8b 100644
--- a/src/identitydialog.cpp
+++ b/src/identitydialog.cpp
@@ -89,7 +89,7 @@ namespace Konversation
         m_passwordEdit->setText(m_currentIdentity->getPassword());
 
         m_insertRememberLineOnAwayChBox->setChecked(m_currentIdentity->getInsertRememberLineOnAway());
-        m_awayReasonEdit->setText(m_currentIdentity->getAwayReason());
+        m_awayMessageEdit->setText(m_currentIdentity->getAwayMessage());
         m_awayNickEdit->setText(m_currentIdentity->getAwayNick());
         awayCommandsGroup->setChecked(m_currentIdentity->getRunAwayCommands());
         m_awayEdit->setText(m_currentIdentity->getAwayCommand());
@@ -137,7 +137,7 @@ namespace Konversation
         m_currentIdentity->setPassword(m_passwordEdit->text());
 
         m_currentIdentity->setInsertRememberLineOnAway(m_insertRememberLineOnAwayChBox->isChecked());
-        m_currentIdentity->setAwayReason(m_awayReasonEdit->text());
+        m_currentIdentity->setAwayMessage(m_awayMessageEdit->text());
         m_currentIdentity->setAwayNick(m_awayNickEdit->text());
         m_currentIdentity->setRunAwayCommands(awayCommandsGroup->isChecked());
         m_currentIdentity->setAwayCommand(m_awayEdit->text());
diff --git a/src/identitydialog.ui b/src/identitydialog.ui
index 08dc362..d8d56cc 100644
--- a/src/identitydialog.ui
+++ b/src/identitydialog.ui
@@ -273,19 +273,19 @@ Since nicknames must be unique across an entire IRC network, your desired name m
         </widget>
        </item>
        <item row="1" column="0">
-        <widget class="QLabel" name="awayReasonLabel">
+        <widget class="QLabel" name="awayMessageLabel">
          <property name="text">
-          <string>Default away reason:</string>
+          <string>Default away message:</string>
          </property>
          <property name="buddy">
-          <cstring>m_awayReasonEdit</cstring>
+          <cstring>m_awayMessageEdit</cstring>
          </property>
         </widget>
        </item>
        <item row="1" column="1">
-        <widget class="QLineEdit" name="m_awayReasonEdit">
+        <widget class="QLineEdit" name="m_awayMessageEdit">
          <property name="whatsThis">
-          <string>The text you enter here is used as the away reason when no reason is entered as an argument to the &lt;b&gt;/away&lt;/b&gt; or &lt;b&gt;/aaway&lt;/b&gt; commands, and also when Global Away is toggled from the menu or via the keyboard shortcut.</string>
+          <string>The text you enter here is used as the away message when no message is entered as an argument to the &lt;b&gt;/away&lt;/b&gt; or &lt;b&gt;/aaway&lt;/b&gt; commands, and also when Global Away is toggled from the menu or via the keyboard shortcut.</string>
          </property>
         </widget>
        </item>
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index b8f1b9a..f276501 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -3682,7 +3682,7 @@ void Server::requestAway(const QString& reason)
     if (awayReason.isEmpty())
     {
         if (identity)
-            awayReason = identity->getAwayReason();
+            awayReason = identity->getAwayMessage();
         else
             awayReason = i18n("Gone away for now");
     }

commit 067e4f8edb63dba600918d6bc605a3cee999ee99
Author: Eike Hein <hein@kde.org>
Date:   Mon Nov 1 22:43:31 2010 +0100

    Add missing D-Bus API bits and fix some inconistencies.

diff --git a/src/application.cpp b/src/application.cpp
index 80564d5..59d6ba0 100644
--- a/src/application.cpp
+++ b/src/application.cpp
@@ -426,7 +426,7 @@ void Application::readOptions()
             newIdentity->setCodecName(cgIdentity.readEntry("Codec"));
 
             newIdentity->setAwayMessage(cgIdentity.readEntry("AwayReason"));
-            newIdentity->setAwayNick(cgIdentity.readEntry("AwayNick"));
+            newIdentity->setAwayNickname(cgIdentity.readEntry("AwayNick"));
 
             Preferences::addIdentity(newIdentity);
 
@@ -759,7 +759,7 @@ void Application::saveOptions(bool updateGUI)
         cgIdentity.writeEntry("PreShellCommand",identity->getShellCommand());
         cgIdentity.writeEntry("Codec",identity->getCodecName());
         cgIdentity.writeEntry("AwayReason",identity->getAwayMessage());
-        cgIdentity.writeEntry("AwayNick", identity->getAwayNick());
+        cgIdentity.writeEntry("AwayNick", identity->getAwayNickname());
         index++;
     } // endfor
 
diff --git a/src/dbus.cpp b/src/dbus.cpp
index f0dc0aa..9d03234 100644
--- a/src/dbus.cpp
+++ b/src/dbus.cpp
@@ -371,4 +371,28 @@ QString IdentDBus::getReturnCommand(const QString &identity)
     return sterilizeUnicode(Preferences::identityByName(sterilizeUnicode(identity))->getReturnCommand());
 }
 
+void IdentDBus::setAwayMessage(const QString &identity, const QString& message)
+{
+    const Identity *i = Preferences::identityByName(sterilizeUnicode(identity)).data();
+    const_cast<Identity *>(i)->setAwayMessage(sterilizeUnicode(message));
+    static_cast<Application *>(kapp)->saveOptions(true);
+}
+
+QString IdentDBus::getAwayMessage(const QString &identity)
+{
+    return sterilizeUnicode(Preferences::identityByName(sterilizeUnicode(identity))->getAwayMessage());
+}
+
+void IdentDBus::setAwayNickname(const QString &identity, const QString& nickname)
+{
+    const Identity *i = Preferences::identityByName(sterilizeUnicode(identity)).data();
+    const_cast<Identity *>(i)->setAwayNickname(sterilizeUnicode(nickname));
+    static_cast<Application *>(kapp)->saveOptions(true);
+}
+
+QString IdentDBus::getAwayNickname(const QString &identity)
+{
+    return sterilizeUnicode(Preferences::identityByName(sterilizeUnicode(identity))->getAwayNickname());
+}
+
 #include "dbus.moc"
diff --git a/src/dbus.h b/src/dbus.h
index bcff786..f9de1d3 100644
--- a/src/dbus.h
+++ b/src/dbus.h
@@ -107,6 +107,12 @@ class IdentDBus : public QObject
         void setReturnCommand(const QString &identity, const QString& command);
         QString getReturnCommand(const QString &identity);
 
+        void setAwayNickname(const QString& identity, const QString& nickname);
+        QString getAwayNickname(const QString& identity);
+
+        void setAwayMessage(const QString& identity, const QString& message);
+        QString getAwayMessage(const QString& identity);
+
         QStringList listIdentities();
 };
 
diff --git a/src/identity.cpp b/src/identity.cpp
index 743a948..b8dbb55 100644
--- a/src/identity.cpp
+++ b/src/identity.cpp
@@ -87,7 +87,7 @@ void Identity::copy(const Identity& original)
     setRunAwayCommands(original.getRunAwayCommands());
     setAwayCommand(original.getAwayCommand());
     setAwayMessage(original.getAwayMessage());
-    setAwayNick(original.getAwayNick());
+    setAwayNickname(original.getAwayNickname());
     setReturnCommand(original.getReturnCommand());
     setAutomaticAway(original.getAutomaticAway());
     setAwayInactivity(original.getAwayInactivity());
@@ -170,5 +170,6 @@ void Identity::setCodecName(const QString &newCodecName)
 
 void Identity::setAwayMessage(const QString& message)   { awayMessage = message; }
 QString Identity::getAwayMessage() const                { return awayMessage; }
-void Identity::setAwayNick(const QString& nick)         { awayNick = nick; }
-QString Identity::getAwayNick() const                   { return awayNick; }
+
+void Identity::setAwayNickname(const QString& nickname) { awayNickname = nickname; }
+QString Identity::getAwayNickname() const               { return awayNickname; }
diff --git a/src/identity.h b/src/identity.h
index 4445771..69a6ca8 100644
--- a/src/identity.h
+++ b/src/identity.h
@@ -43,7 +43,7 @@ class Identity : public KShared
         void setIdent(const QString& ident);
         QString getIdent() const;
 
-        void setNickname(uint index,const QString& nick);
+        void setNickname(uint index,const QString& nickname);
         QString getNickname(int index) const;
 
         void setBot(const QString& bot);
@@ -87,8 +87,9 @@ class Identity : public KShared
 
         void setAwayMessage(const QString& message);
         QString getAwayMessage() const;
-        QString getAwayNick() const;
-        void setAwayNick(const QString& nick);
+
+        void setAwayNickname(const QString& nickname);
+        QString getAwayNickname() const;
 
         int id() const { return m_id; }
 
@@ -122,7 +123,7 @@ class Identity : public KShared
         QString m_shellCommand;
 
         QString awayMessage;
-        QString awayNick;
+        QString awayNickname;
 
     private:
         int m_id;
diff --git a/src/identitydialog.cpp b/src/identitydialog.cpp
index 8aa8a8b..cdd8130 100644
--- a/src/identitydialog.cpp
+++ b/src/identitydialog.cpp
@@ -90,7 +90,7 @@ namespace Konversation
 
         m_insertRememberLineOnAwayChBox->setChecked(m_currentIdentity->getInsertRememberLineOnAway());
         m_awayMessageEdit->setText(m_currentIdentity->getAwayMessage());
-        m_awayNickEdit->setText(m_currentIdentity->getAwayNick());
+        m_awayNickEdit->setText(m_currentIdentity->getAwayNickname());
         awayCommandsGroup->setChecked(m_currentIdentity->getRunAwayCommands());
         m_awayEdit->setText(m_currentIdentity->getAwayCommand());
         m_unAwayEdit->setText(m_currentIdentity->getReturnCommand());
@@ -138,7 +138,7 @@ namespace Konversation
 
         m_currentIdentity->setInsertRememberLineOnAway(m_insertRememberLineOnAwayChBox->isChecked());
         m_currentIdentity->setAwayMessage(m_awayMessageEdit->text());
-        m_currentIdentity->setAwayNick(m_awayNickEdit->text());
+        m_currentIdentity->setAwayNickname(m_awayNickEdit->text());
         m_currentIdentity->setRunAwayCommands(awayCommandsGroup->isChecked());
         m_currentIdentity->setAwayCommand(m_awayEdit->text());
         m_currentIdentity->setReturnCommand(m_unAwayEdit->text());
diff --git a/src/irc/server.cpp b/src/irc/server.cpp
index f276501..77af7ba 100644
--- a/src/irc/server.cpp
+++ b/src/irc/server.cpp
@@ -3709,10 +3709,10 @@ void Server::setAway(bool away)
 
         emit awayState(true);
 
-        if (identity && !identity->getAwayNick().isEmpty() && identity->getAwayNick() != getNickname())
+        if (identity && !identity->getAwayNickname().isEmpty() && identity->getAwayNickname() != getNickname())
         {
             m_nonAwayNick = getNickname();
-            queue("NICK " + getIdentity()->getAwayNick());
+            queue("NICK " + getIdentity()->getAwayNickname());
         }
 
         appendMessageToFrontmost(i18n("Away"), i18n("You are now marked as being away."));
@@ -3732,10 +3732,10 @@ void Server::setAway(bool away)
 
         emit awayState(false);
 
-        if (!identity->getAwayNick().isEmpty() && !m_nonAwayNick.isEmpty())
+        if (!identity->getAwayNickname().isEmpty() && !m_nonAwayNick.isEmpty())
         {
             queue("NICK " + m_nonAwayNick);
-            m_nonAwayNick = "";
+            m_nonAwayNick.clear();
         }
 
         if (m_away)

commit 73393ef3ca15bd1044a629e8f866331b2a171238
Author: Eike Hein <hein@kde.org>
Date:   Mon Nov 1 22:44:24 2010 +0100

    Update and bump.

diff --git a/ChangeLog b/ChangeLog
index 2ad038a..1173c60 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -272,10 +272,12 @@ Changes since 1.3.1:
   (e.g. "Close Tab" invoked by the default shortcut Ctrl+W) to operate on a
   different tab after the "Join on Connect" action in that tab's context
   menu had been used.
-* Added a "Default away reason" field to the "Away" tab in the Identity
+* Added a "Default away reason" field to the "Away" tab in the Identities
   dialog. The away reason entered there will be used when no away message
   is entered manually as an argument to the '/away' or '/aaway' commands,
   so for example when Global Away is enabled using the keyboard shortcut.
+* "Away Messages" on the "Away" tab of the Identities dialog has been re-
+  named to "Away Commands".
 
 
 Changes from 1.3 to 1.3.1:
diff --git a/src/commit.h b/src/commit.h
index 6885368..3e4f8f2 100644
--- a/src/commit.h
+++ b/src/commit.h
@@ -1,4 +1,4 @@
 // This COMMIT number is added to version string to be used as "patch level"
 #ifndef COMMIT
-#define COMMIT 4086
+#define COMMIT 4087
 #endif

commit b3314a1fa7b6ea7b9fed7b8a3290ae532fa8a14c
Author: Bernd Buschinski <b.buschinski@web.de>
Date:   Wed Nov 3 22:59:53 2010 +0100

    QLineEdit -> KLineEdit, fixes krazy designer qclasses test

diff --git a/src/identitydialog.ui b/src/identitydialog.ui
index d8d56cc..e4f8f38 100644
--- a/src/identitydialog.ui
+++ b/src/identitydialog.ui
@@ -283,7 +283,7 @@ Since nicknames must be unique across an entire IRC network, your desired name m
         </widget>
        </item>
        <item row="1" column="1">
-        <widget class="QLineEdit" name="m_awayMessageEdit">
+        <widget class="KLineEdit" name="m_awayMessageEdit">
          <property name="whatsThis">
           <string>The text you enter here is used as the away message when no message is entered as an argument to the &lt;b&gt;/away&lt;/b&gt; or &lt;b&gt;/aaway&lt;/b&gt; commands, and also when Global Away is toggled from the menu or via the keyboard shortcut.</string>
          </property>

commit ec5e6d703f85c97b04a3da373f91816ae52e7223
Author: eli mackenzie <argonel@gmail.com>
Date:   Sun Nov 7 01:59:01 2010 -0500

    make use of the translated strings from warningDialogDefinitions

diff --git a/src/config/warnings_config.cpp b/src/config/warnings_config.cpp
index bb163f5..0e5c3c3 100644
--- a/src/config/warnings_config.cpp
+++ b/src/config/warnings_config.cpp
@@ -205,10 +205,11 @@ void Warnings_Config::loadSettings()
     for (int i = 0; i < definitionsCount; ++i)
     {
         const QLatin1String flagName(warningDialogDefinitions[i].flagName);
-        const QLatin1String message(warningDialogDefinitions[i].message);
+        const char * const message(warningDialogDefinitions[i].message);
+        const char * const ctx(warningDialogDefinitions[i].context);
 
         QTreeWidgetItem *item = new QTreeWidgetItem(dialogListView);
-        item->setText(0, message);
+        item->setText(0, i18nc(ctx, message));
         item->setFlags(item->flags() | Qt::ItemIsUserCheckable);
         item->setData(0, WarningNameRole, flagName);
 

commit 59c3d312451f52bf1fe42946bef32caa8df1b9e8
Author: Script Kiddy <scripty@kde.org>
Date:   Thu Nov 11 11:05:40 2010 +0100

    SVN_SILENT made messages (.desktop file)

diff --git a/data/konversation.notifyrc b/data/konversation.notifyrc
index 53a42b6..d215e07 100644
--- a/data/konversation.notifyrc
+++ b/data/konversation.notifyrc
@@ -1033,7 +1033,7 @@ Name[ca]=Conversa
 Name[ca@valencia]=Conversa
 Name[cs]=Dotaz
 Name[da]=Forespørgsel
-Name[de]=Gespräch
+Name[de]=Gespräch (Query)
 Name[el]=Ερώτηση
 Name[en_GB]=Query
 Name[es]=Consulta
@@ -1076,7 +1076,7 @@ Comment[ca]=Algú ha iniciat una conversa (query) amb vós
 Comment[ca@valencia]=Algú ha iniciat una conversa (query) amb vós
 Comment[cs]=Někdo s vámi zahájil rozhovor (dotaz)
 Comment[da]=Nogen startede en samtale (forespørgsel) med dig
-Comment[de]=Jemand hat ein Gespräch (query) mit Ihnen begonnen
+Comment[de]=Jemand hat ein Gespräch (Query) mit Ihnen begonnen
 Comment[el]=Κάποιος ξεκίνησε μια συζήτηση (ερώτηση) μαζί σας
 Comment[en_GB]=Someone started a conversation (query) with you
 Comment[es]=Alguien empezó una conversación (consulta) con usted
