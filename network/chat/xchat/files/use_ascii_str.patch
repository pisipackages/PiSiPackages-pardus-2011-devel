diff -ur xchat-2.8.8.orig/intl/l10nflist.c xchat-2.8.8/intl/l10nflist.c
--- xchat-2.8.8.orig/intl/l10nflist.c	2010-05-30 09:30:19.000000000 +0300
+++ xchat-2.8.8/intl/l10nflist.c	2010-07-25 16:50:46.558202087 +0300
@@ -372,7 +372,7 @@
 
       for (cnt = 0; cnt < name_len; ++cnt)
 	if (isalpha ((unsigned char) codeset[cnt]))
-	  *wp++ = tolower ((unsigned char) codeset[cnt]);
+	  *wp++ = g_ascii_tolower ((unsigned char) codeset[cnt]);
 	else if (isdigit ((unsigned char) codeset[cnt]))
 	  *wp++ = codeset[cnt];
 
diff -ur xchat-2.8.8.orig/intl/localealias.c xchat-2.8.8/intl/localealias.c
--- xchat-2.8.8.orig/intl/localealias.c	2010-05-30 09:30:19.000000000 +0300
+++ xchat-2.8.8/intl/localealias.c	2010-07-25 16:50:46.576202077 +0300
@@ -74,7 +74,7 @@
 /* Rename the non ANSI C functions.  This is required by the standard
    because some ANSI C functions will require linking with this object
    file and the name space must not be polluted.  */
-# define strcasecmp __strcasecmp
+# define g_ascii_strcasecmp __g_ascii_strcasecmp
 
 # ifndef mempcpy
 #  define mempcpy __mempcpy
@@ -412,7 +412,7 @@
 alias_compare (const struct alias_map *map1, const struct alias_map *map2)
 {
 #if defined _LIBC || defined HAVE_STRCASECMP
-  return strcasecmp (map1->alias, map2->alias);
+  return g_ascii_strcasecmp (map1->alias, map2->alias);
 #else
   const unsigned char *p1 = (const unsigned char *) map1->alias;
   const unsigned char *p2 = (const unsigned char *) map2->alias;
@@ -423,10 +423,10 @@
 
   do
     {
-      /* I know this seems to be odd but the tolower() function in
+      /* I know this seems to be odd but the g_ascii_tolower() function in
 	 some systems libc cannot handle nonalpha characters.  */
-      c1 = isupper (*p1) ? tolower (*p1) : *p1;
-      c2 = isupper (*p2) ? tolower (*p2) : *p2;
+      c1 = isupper (*p1) ? g_ascii_tolower (*p1) : *p1;
+      c2 = isupper (*p2) ? g_ascii_tolower (*p2) : *p2;
       if (c1 == '\0')
 	break;
       ++p1;
diff -ur xchat-2.8.8.orig/plugins/perl/perl.c xchat-2.8.8/plugins/perl/perl.c
--- xchat-2.8.8.orig/plugins/perl/perl.c	2010-04-13 11:48:24.000000000 +0300
+++ xchat-2.8.8/plugins/perl/perl.c	2010-07-25 16:50:46.467201942 +0300
@@ -71,7 +71,7 @@
 	if (dir) {
 		while ((ent = readdir (dir))) {
 			int len = strlen (ent->d_name);
-			if (len > 3 && strcasecmp (".pl", ent->d_name + len - 3) == 0) {
+			if (len > 3 && g_ascii_strcasecmp (".pl", ent->d_name + len - 3) == 0) {
 				char *file = malloc (len + strlen (path) + 2);
 				sprintf (file, "%s/%s", path, ent->d_name);
 				perl_load_file (file);
@@ -201,7 +201,7 @@
 
 	len = strlen (file);
 
-	if (len > 3 && strncasecmp (".pl", file + len - 3, 3) == 0) {
+	if (len > 3 && g_ascii_strncasecmp (".pl", file + len - 3, 3) == 0) {
 		return file;
 	}
 
diff -ur xchat-2.8.8.orig/plugins/python/python.c xchat-2.8.8/plugins/python/python.c
--- xchat-2.8.8.orig/plugins/python/python.c	2010-05-16 07:28:18.000000000 +0300
+++ xchat-2.8.8/plugins/python/python.c	2010-07-25 16:50:46.479202005 +0300
@@ -1239,9 +1239,9 @@
 		basename = g_path_get_basename(plugin->filename);
 		if (basename == NULL)
 			break;
-		if (strcasecmp(plugin->name, str) == 0 ||
-		    strcasecmp(plugin->filename, str) == 0 ||
-		    strcasecmp(basename, str) == 0) {
+		if (g_ascii_strcasecmp(plugin->name, str) == 0 ||
+		    g_ascii_strcasecmp(plugin->filename, str) == 0 ||
+		    g_ascii_strcasecmp(basename, str) == 0) {
 			g_free(basename);
 			return plugin;
 		}
@@ -2028,33 +2028,33 @@
 {
 	char *cmd = word[2];
 	int ok = 0;
-	if (strcasecmp(cmd, "LIST") == 0) {
+	if (g_ascii_strcasecmp(cmd, "LIST") == 0) {
 		ok = 1;
 		Command_PyList();
-	} else if (strcasecmp(cmd, "EXEC") == 0) {
+	} else if (g_ascii_strcasecmp(cmd, "EXEC") == 0) {
 		if (word[3][0]) {
 			ok = 1;
 			IInterp_Exec(word_eol[3]);
 		}
-	} else if (strcasecmp(cmd, "LOAD") == 0) {
+	} else if (g_ascii_strcasecmp(cmd, "LOAD") == 0) {
 		if (word[3][0]) {
 			ok = 1;
 			Command_PyLoad(word[3]);
 		}
-	} else if (strcasecmp(cmd, "UNLOAD") == 0) {
+	} else if (g_ascii_strcasecmp(cmd, "UNLOAD") == 0) {
 		if (word[3][0]) {
 			ok = 1;
 			Command_PyUnload(word[3]);
 		}
-	} else if (strcasecmp(cmd, "RELOAD") == 0) {
+	} else if (g_ascii_strcasecmp(cmd, "RELOAD") == 0) {
 		if (word[3][0]) {
 			ok = 1;
 			Command_PyReload(word[3]);
 		}
-	} else if (strcasecmp(cmd, "CONSOLE") == 0) {
+	} else if (g_ascii_strcasecmp(cmd, "CONSOLE") == 0) {
 		ok = 1;
 		xchat_command(ph, "QUERY >>python<<");
-	} else if (strcasecmp(cmd, "ABOUT") == 0) {
+	} else if (g_ascii_strcasecmp(cmd, "ABOUT") == 0) {
 		ok = 1;
 		Command_PyAbout();
 	}
@@ -2067,7 +2067,7 @@
 Command_Load(char *word[], char *word_eol[], void *userdata)
 {
 	int len = strlen(word[2]);
-	if (len > 3 && strcasecmp(".py", word[2]+len-3) == 0) {
+	if (len > 3 && g_ascii_strcasecmp(".py", word[2]+len-3) == 0) {
 		Command_PyLoad(word[2]);
 		return XCHAT_EAT_XCHAT;
 	}
@@ -2078,7 +2078,7 @@
 Command_Unload(char *word[], char *word_eol[], void *userdata)
 {
 	int len = strlen(word[2]);
-	if (len > 3 && strcasecmp(".py", word[2]+len-3) == 0) {
+	if (len > 3 && g_ascii_strcasecmp(".py", word[2]+len-3) == 0) {
 		Command_PyUnload(word[2]);
 		return XCHAT_EAT_XCHAT;
 	}
diff -ur xchat-2.8.8.orig/plugins/tcl/tclplugin.c xchat-2.8.8/plugins/tcl/tclplugin.c
--- xchat-2.8.8.orig/plugins/tcl/tclplugin.c	2010-04-13 11:48:24.000000000 +0300
+++ xchat-2.8.8/plugins/tcl/tclplugin.c	2010-07-25 16:50:46.457202065 +0300
@@ -300,19 +300,19 @@
                     s = xchat_list_str(ph, list, "server");
 
                     if (xchat_list_int(ph, list, "type") == 1) {
-                        if (strcasecmp(arg1, s) == 0) {
+                        if (g_ascii_strcasecmp(arg1, s) == 0) {
                             result = ctx;
                             break;
                         }
                         n = xchat_list_str(ph, list, "network");
                         if (n) {
-                            if (strcasecmp(arg1, n) == 0) {
+                            if (g_ascii_strcasecmp(arg1, n) == 0) {
                                 result = ctx;
                                 break;
                             }
                         }
                     } else {
-                        if ((strcasecmp(server, s) == 0) && (strcasecmp(arg1, xchat_list_str(ph, list, "channel")) == 0)) {
+                        if ((g_ascii_strcasecmp(server, s) == 0) && (g_ascii_strcasecmp(arg1, xchat_list_str(ph, list, "channel")) == 0)) {
                             result = ctx;
                             break;
                         }
@@ -476,16 +476,16 @@
 
     if (rest[0] == 0x01) {
         rest++;
-        if (strcasecmp("PRIVMSG", cmd) == 0) {
-            if (strncasecmp(rest, "ACTION ", 7) == 0) {
+        if (g_ascii_strcasecmp("PRIVMSG", cmd) == 0) {
+            if (g_ascii_strncasecmp(rest, "ACTION ", 7) == 0) {
                 cmd = "ACTION";
                 rest += 7;
             } else
                 cmd = "CTCP";
-        } else if (!strcasecmp("NOTICE", cmd))
+        } else if (!g_ascii_strcasecmp("NOTICE", cmd))
             cmd = "CTCR";
         ctcp = 1;
-    } else if (!strcasecmp("NOTICE", cmd) && (strchr(src, '!') == NULL)) {
+    } else if (!g_ascii_strcasecmp("NOTICE", cmd) && (strchr(src, '!') == NULL)) {
         cmd = "SNOTICE";
     } else if (rest[0] == '!') {
         chancmd = word[4] + 1;
@@ -732,9 +732,9 @@
     BADARGS(3, 6, " ?-repeat? ?-count times? seconds {script | procname ?args?}");
 
     while (argc--) {
-        if (strcasecmp(argv[first], "-repeat") == 0) {
+        if (g_ascii_strcasecmp(argv[first], "-repeat") == 0) {
             repeat++;
-        } else if (strcasecmp(argv[first], "-count") == 0) {
+        } else if (g_ascii_strcasecmp(argv[first], "-count") == 0) {
             if (Tcl_GetInt(irp, argv[++first], &count) != TCL_OK)
                 return TCL_ERROR;
         } else {
@@ -983,13 +983,13 @@
 
     if (argc == 2) {
         if (Tcl_GetInt(irp, argv[1], &complete[complete_level].result) != TCL_OK) {
-            if (strcasecmp("EAT_NONE", argv[1]) == 0)
+            if (g_ascii_strcasecmp("EAT_NONE", argv[1]) == 0)
                 complete[complete_level].result = XCHAT_EAT_NONE;
-            else if (strcasecmp("EAT_XCHAT", argv[1]) == 0)
+            else if (g_ascii_strcasecmp("EAT_XCHAT", argv[1]) == 0)
                 complete[complete_level].result = XCHAT_EAT_XCHAT;
-            else if (strcasecmp("EAT_PLUGIN", argv[1]) == 0)
+            else if (g_ascii_strcasecmp("EAT_PLUGIN", argv[1]) == 0)
                 complete[complete_level].result = XCHAT_EAT_PLUGIN;
-            else if (strcasecmp("EAT_ALL", argv[1]) == 0)
+            else if (g_ascii_strcasecmp("EAT_ALL", argv[1]) == 0)
                 complete[complete_level].result = XCHAT_EAT_ALL;
             else
                 BADARGS(1, 2, " ?EAT_NONE|EAT_XCHAT|EAT_PLUGIN|EAT_ALL?");
@@ -1452,7 +1452,7 @@
         while (xchat_list_next(ph, list)) {
             if (xchat_list_int(ph, list, "type") != 2)
                 continue;
-            if (strcasecmp(server, xchat_list_str(ph, list, "server")) != 0)
+            if (g_ascii_strcasecmp(server, xchat_list_str(ph, list, "server")) != 0)
                 continue;
             channel = xchat_list_str(ph, list, "channel");
             Tcl_DStringAppendElement(&ds, channel);
@@ -1526,7 +1526,7 @@
         while (xchat_list_next(ph, list)) {
             if (xchat_list_int(ph, list, "type") != 3)
                 continue;
-            if (strcasecmp(server, xchat_list_str(ph, list, "server")) != 0)
+            if (g_ascii_strcasecmp(server, xchat_list_str(ph, list, "server")) != 0)
                 continue;
             channel = xchat_list_str(ph, list, "channel");
             Tcl_DStringAppendElement(&ds, channel);
@@ -2026,7 +2026,7 @@
 
     len = strlen(word[2]);
 
-    if (len > 4 && strcasecmp(".tcl", word[2] + len - 4) == 0) {
+    if (len > 4 && g_ascii_strcasecmp(".tcl", word[2] + len - 4) == 0) {
 
         xchatdir = xchat_get_info(ph, "xchatdir");
 
diff -ur xchat-2.8.8.orig/plugins/xdcc/xdcc.c xchat-2.8.8/plugins/xdcc/xdcc.c
--- xchat-2.8.8.orig/plugins/xdcc/xdcc.c	2009-08-16 12:40:14.000000000 +0300
+++ xchat-2.8.8/plugins/xdcc/xdcc.c	2010-07-25 16:50:46.459202110 +0300
@@ -88,7 +88,7 @@
 	while(list)
 	{
 		offer = (fileoffer *) list->data;
-		if(strcasecmp(name, offer->file) == 0)
+		if(g_ascii_strcasecmp(name, offer->file) == 0)
 		{
 			file_list = g_slist_remove(file_list, offer);
 			xchat_printf(ph, "%s [%s] removed.\n", offer->file, offer->fullpath);
@@ -140,7 +140,7 @@
 
 static int xdcc_command(char *word[], char *word_eol[], void *userdata)
 {
-	if(strcasecmp(word[2], "ADD") == 0)
+	if(g_ascii_strcasecmp(word[2], "ADD") == 0)
 	{
 		if(!word_eol[5][0])
 			xchat_print(ph, "Syntax: /XDCC ADD <name> <path> <description>\n");
@@ -157,13 +157,13 @@
 		return XCHAT_EAT_XCHAT;
 	}
 
-	if(strcasecmp(word[2], "DEL") == 0)
+	if(g_ascii_strcasecmp(word[2], "DEL") == 0)
 	{
 		xdcc_del(word[3]);
 		return XCHAT_EAT_XCHAT;
 	}
 
-	if(strcasecmp(word[2], "SLOTS") == 0)
+	if(g_ascii_strcasecmp(word[2], "SLOTS") == 0)
 	{
 		if(word[3][0])
 		{
@@ -176,20 +176,20 @@
 		return XCHAT_EAT_XCHAT;
 	}
 
-	if(strcasecmp(word[2], "ON") == 0)
+	if(g_ascii_strcasecmp(word[2], "ON") == 0)
 	{
 		xdcc_on = TRUE;
 		xchat_print(ph, "XDCC now ON\n");
 		return XCHAT_EAT_XCHAT;
 	}
 
-	if(strcasecmp(word[2], "LIST") == 0)
+	if(g_ascii_strcasecmp(word[2], "LIST") == 0)
 	{
 		xdcc_list("", "", "", "echo");
 		return XCHAT_EAT_XCHAT;
 	}
 
-	if(strcasecmp(word[2], "OFF") == 0)
+	if(g_ascii_strcasecmp(word[2], "OFF") == 0)
 	{
 		xdcc_on = FALSE;
 		xchat_print(ph, "XDCC now OFF\n");
@@ -223,9 +223,9 @@
 		return;
 	}
 
-	if(strncasecmp(msg, "LIST", 4) == 0)
+	if(g_ascii_strncasecmp(msg, "LIST", 4) == 0)
 		xdcc_list(nick, host, msg + 4, "quote notice");
-	else if(strncasecmp(msg, "GET ", 4) == 0)
+	else if(g_ascii_strncasecmp(msg, "GET ", 4) == 0)
 		xdcc_get(nick, host, msg + 4);
 	else
 		xchat_commandf(ph, "notice %s Unknown XDCC command!", from);
@@ -236,7 +236,7 @@
   	char *msg = word[1];
 	char *from = word[2];
 
-	if(strncasecmp(msg, "XDCC ", 5) == 0)
+	if(g_ascii_strncasecmp(msg, "XDCC ", 5) == 0)
 		xdcc_remote(from, msg + 5);
 
 	return XCHAT_EAT_NONE;
diff -ur xchat-2.8.8.orig/src/common/cfgfiles.c xchat-2.8.8/src/common/cfgfiles.c
--- xchat-2.8.8.orig/src/common/cfgfiles.c	2009-08-16 12:40:16.000000000 +0300
+++ xchat-2.8.8/src/common/cfgfiles.c	2010-07-25 16:50:46.220202028 +0300
@@ -82,11 +82,11 @@
 	{
 		if (*buf != '#')
 		{
-			if (!strncasecmp (buf, "NAME ", 5))
+			if (!g_ascii_strncasecmp (buf, "NAME ", 5))
 			{
 				safe_strcpy (name, buf + 5, sizeof (name));
 			}
-			else if (!strncasecmp (buf, "CMD ", 4))
+			else if (!g_ascii_strncasecmp (buf, "CMD ", 4))
 			{
 				safe_strcpy (cmd, buf + 4, sizeof (cmd));
 				if (*name)
@@ -152,7 +152,7 @@
 	while (alist)
 	{
 		pop = (struct popup *) alist->data;
-		if (!strcasecmp (name, pop->name))
+		if (!g_ascii_strcasecmp (name, pop->name))
 		{
 			*list = g_slist_remove (*list, pop);
 			free (pop);
@@ -168,7 +168,7 @@
 {
 	while (1)
 	{
-		if (!strncasecmp (var, cfg, strlen (var)))
+		if (!g_ascii_strncasecmp (var, cfg, strlen (var)))
 		{
 			char *value, t;
 			cfg += strlen (var);
@@ -940,7 +940,7 @@
 
 	do
 	{
-		if (!strcasecmp (var, vars[i].name))
+		if (!g_ascii_strcasecmp (var, vars[i].name))
 		{
 			return *((int *) &prefs + vars[i].offset);
 		}
@@ -963,27 +963,27 @@
 	int idx = 2;
 	char *var, *val;
 
-	if (strcasecmp (word[2], "-e") == 0)
+	if (g_ascii_strcasecmp (word[2], "-e") == 0)
 	{
 		idx++;
 		erase = TRUE;
 	}
 
 	/* turn a bit OFF */
-	if (strcasecmp (word[idx], "-off") == 0)
+	if (g_ascii_strcasecmp (word[idx], "-off") == 0)
 	{
 		idx++;
 		off = TRUE;
 	}
 
 	/* turn a bit ON */
-	if (strcasecmp (word[idx], "-or") == 0 || strcasecmp (word[idx], "-on") == 0)
+	if (g_ascii_strcasecmp (word[idx], "-or") == 0 || g_ascii_strcasecmp (word[idx], "-on") == 0)
 	{
 		idx++;
 		or = TRUE;
 	}
 
-	if (strcasecmp (word[idx], "-quiet") == 0)
+	if (g_ascii_strcasecmp (word[idx], "-quiet") == 0)
 	{
 		idx++;
 		quiet = TRUE;
@@ -1009,7 +1009,7 @@
 		if (wild)
 			found = !match (var, vars[i].name);
 		else
-			found = strcasecmp (var, vars[i].name);
+			found = g_ascii_strcasecmp (var, vars[i].name);
 
 		if (found == 0)
 		{
@@ -1038,9 +1038,9 @@
 							*((int *) &prefs + vars[i].offset) = 1;
 						else
 							*((int *) &prefs + vars[i].offset) = 0;
-						if (!strcasecmp (val, "YES") || !strcasecmp (val, "ON"))
+						if (!g_ascii_strcasecmp (val, "YES") || !g_ascii_strcasecmp (val, "ON"))
 							*((int *) &prefs + vars[i].offset) = 1;
-						if (!strcasecmp (val, "NO") || !strcasecmp (val, "OFF"))
+						if (!g_ascii_strcasecmp (val, "NO") || !g_ascii_strcasecmp (val, "OFF"))
 							*((int *) &prefs + vars[i].offset) = 0;
 					} else
 					{
diff -ur xchat-2.8.8.orig/src/common/chanopt.c xchat-2.8.8/src/common/chanopt.c
--- xchat-2.8.8.orig/src/common/chanopt.c	2009-08-16 12:40:16.000000000 +0300
+++ xchat-2.8.8/src/common/chanopt.c	2010-07-25 16:50:46.222202213 +0300
@@ -81,9 +81,9 @@
 
 	if (word[offset][0])
 	{
-		if (!strcasecmp (word[offset], "ON"))
+		if (!g_ascii_strcasecmp (word[offset], "ON"))
 			newval = 1;
-		else if (!strcasecmp (word[offset], "OFF"))
+		else if (!g_ascii_strcasecmp (word[offset], "OFF"))
 			newval = 0;
 		else if (word[offset][0] == 'u')
 			newval = SET_DEFAULT;
@@ -183,8 +183,8 @@
 	for (list = chanopt_list; list; list = list->next)
 	{
 		co = list->data;
-		if (!strcasecmp (co->channel, channel) &&
-			 !strcasecmp (co->network, network))
+		if (!g_ascii_strcasecmp (co->channel, channel) &&
+			 !g_ascii_strcasecmp (co->network, network))
 			return co;
 	}
 
diff -ur xchat-2.8.8.orig/src/common/ctcp.c xchat-2.8.8/src/common/ctcp.c
--- xchat-2.8.8.orig/src/common/ctcp.c	2010-05-30 05:14:41.000000000 +0300
+++ xchat-2.8.8/src/common/ctcp.c	2010-07-25 16:50:46.207202187 +0300
@@ -70,7 +70,7 @@
 	while (list)
 	{
 		pop = (struct popup *) list->data;
-		if (!strcasecmp (ctcp, pop->name))
+		if (!g_ascii_strcasecmp (ctcp, pop->name))
 		{
 			ctcp_reply (sess, nick, word, word_eol, pop->cmd);
 			ret = 1;
@@ -94,7 +94,7 @@
 			ctcp_offset = 3;
 
 	/* consider DCC to be different from other CTCPs */
-	if (!strncasecmp (msg, "DCC", 3))
+	if (!g_ascii_strncasecmp (msg, "DCC", 3))
 	{
 		/* but still let CTCP replies override it */
 		if (!ctcp_check (sess, nick, word, word_eol, word[4] + ctcp_offset))
@@ -107,7 +107,7 @@
 
 	/* consider ACTION to be different from other CTCPs. Check
       ignore as if it was a PRIV/CHAN. */
-	if (!strncasecmp (msg, "ACTION ", 7))
+	if (!g_ascii_strncasecmp (msg, "ACTION ", 7))
 	{
 		if (is_channel (serv, to))
 		{
@@ -132,7 +132,7 @@
 	if (ignore_check (word[1], IG_CTCP))
 		return;
 
-	if (!strcasecmp (msg, "VERSION") && !prefs.hidever)
+	if (!g_ascii_strcasecmp (msg, "VERSION") && !prefs.hidever)
 	{
 		snprintf (outbuf, sizeof (outbuf), "VERSION xchat "PACKAGE_VERSION" %s",
 					 get_cpu_str ());
@@ -141,7 +141,7 @@
 
 	if (!ctcp_check (sess, nick, word, word_eol, word[4] + ctcp_offset))
 	{
-		if (!strncasecmp (msg, "SOUND", 5))
+		if (!g_ascii_strncasecmp (msg, "SOUND", 5))
 		{
 			po = strchr (word[5], '\001');
 			if (po)
diff -ur xchat-2.8.8.orig/src/common/dcc.c xchat-2.8.8/src/common/dcc.c
--- xchat-2.8.8.orig/src/common/dcc.c	2010-05-30 05:14:41.000000000 +0300
+++ xchat-2.8.8/src/common/dcc.c	2010-07-25 16:50:46.195201984 +0300
@@ -568,7 +568,7 @@
 
 	url_check_line (line, len);
 
-	if (line[0] == 1 && !strncasecmp (line + 1, "ACTION", 6))
+	if (line[0] == 1 && !g_ascii_strncasecmp (line + 1, "ACTION", 6))
 	{
 		po = strchr (line + 8, '\001');
 		if (po)
@@ -1936,9 +1936,9 @@
 			{
 				if (!file[0])
 					return dcc;
-				if (!strcasecmp (file, file_part (dcc->file)))
+				if (!g_ascii_strcasecmp (file, file_part (dcc->file)))
 					return dcc;
-				if (!strcasecmp (file, dcc->file))
+				if (!g_ascii_strcasecmp (file, dcc->file))
 					return dcc;
 			}
 		}
@@ -2402,7 +2402,7 @@
 	DCC_SIZE size;
 	int psend = 0;
 
-	if (!strcasecmp (type, "CHAT"))
+	if (!g_ascii_strcasecmp (type, "CHAT"))
 	{
 		port = atoi (word[8]);
 		addr = strtoul (word[7], NULL, 10);
@@ -2449,7 +2449,7 @@
 		return;
 	}
 
-	if (!strcasecmp (type, "Resume"))
+	if (!g_ascii_strcasecmp (type, "Resume"))
 	{
 		port = atoi (word[7]);
 
@@ -2493,7 +2493,7 @@
 		}
 		return;
 	}
-	if (!strcasecmp (type, "Accept"))
+	if (!g_ascii_strcasecmp (type, "Accept"))
 	{
 		port = atoi (word[7]);
 		dcc = find_dcc_from_port (port, TYPE_RECV);
@@ -2503,7 +2503,7 @@
 		}
 		return;
 	}
-	if (!strcasecmp (type, "SEND"))
+	if (!g_ascii_strcasecmp (type, "SEND"))
 	{
 		char *file = file_part (word[6]);
 
diff -ur xchat-2.8.8.orig/src/common/inbound.c xchat-2.8.8/src/common/inbound.c
--- xchat-2.8.8.orig/src/common/inbound.c	2010-05-30 05:14:41.000000000 +0300
+++ xchat-2.8.8/src/common/inbound.c	2010-07-25 16:50:46.214202031 +0300
@@ -881,7 +881,7 @@
 			if (msg[0] == '[' && (!serv->have_idmsg || id))
 			{
 				/* guess where chanserv meant to post this -sigh- */
-				if (!strcasecmp (nick, "ChanServ") && !find_dialog (serv, nick))
+				if (!g_ascii_strcasecmp (nick, "ChanServ") && !find_dialog (serv, nick))
 				{
 					char *dest = strdup (msg + 1);
 					char *end = strchr (dest, ']');
diff -ur xchat-2.8.8.orig/src/common/modes.c xchat-2.8.8/src/common/modes.c
--- xchat-2.8.8.orig/src/common/modes.c	2010-05-30 04:52:18.000000000 +0300
+++ xchat-2.8.8/src/common/modes.c	2010-07-25 16:50:46.229201988 +0300
@@ -789,20 +789,20 @@
 			}
 
 			/* use /NICKSERV */
-			if (strcasecmp (word[w] + 8, "RusNet") == 0)
+			if (g_ascii_strcasecmp (word[w] + 8, "RusNet") == 0)
 				serv->nickservtype = 1;
-			else if (strcasecmp (word[w] + 8, "UniBG") == 0)
+			else if (g_ascii_strcasecmp (word[w] + 8, "UniBG") == 0)
 				serv->nickservtype = 3;
-			else if (strcasecmp (word[w] + 8, "QuakeNet") == 0)
+			else if (g_ascii_strcasecmp (word[w] + 8, "QuakeNet") == 0)
 				serv->nickservtype = 4;
 
 		} else if (strncmp (word[w], "CASEMAPPING=", 12) == 0)
 		{
 			if (strcmp (word[w] + 12, "ascii") == 0)	/* bahamut */
-				serv->p_cmp = (void *)strcasecmp;
+				serv->p_cmp = (void *)g_ascii_strcasecmp;
 		} else if (strncmp (word[w], "CHARSET=", 8) == 0)
 		{
-			if (strcasecmp (word[w] + 8, "UTF-8") == 0)
+			if (g_ascii_strcasecmp (word[w] + 8, "UTF-8") == 0)
 			{
 				server_set_encoding (serv, "UTF-8");
 			}
diff -ur xchat-2.8.8.orig/src/common/outbound.c xchat-2.8.8/src/common/outbound.c
--- xchat-2.8.8.orig/src/common/outbound.c	2010-05-30 05:14:41.000000000 +0300
+++ xchat-2.8.8/src/common/outbound.c	2010-07-25 16:50:46.258202052 +0300
@@ -617,13 +617,13 @@
 	GSList *list = sess_list;
 	char *reason = word_eol[2];
 
-	if (strcasecmp (reason, "HISTORY") == 0)
+	if (g_ascii_strcasecmp (reason, "HISTORY") == 0)
 	{
 		history_free (&sess->history);
 		return TRUE;
 	}
 
-	if (strncasecmp (reason, "all", 3) == 0)
+	if (g_ascii_strncasecmp (reason, "all", 3) == 0)
 	{
 		while (list)
 		{
@@ -686,7 +686,7 @@
 					break;
 				mbl = g_utf8_skip[*cmd];
 				if (mbl == 1)
-					*cmd = toupper (*cmd);
+					*cmd = g_ascii_toupper (*cmd);
 				cmd += mbl;
 			}
 
@@ -750,26 +750,26 @@
 	char *type = word[2];
 	if (*type)
 	{
-		if (!strcasecmp (type, "HELP"))
+		if (!g_ascii_strcasecmp (type, "HELP"))
 			return FALSE;
-		if (!strcasecmp (type, "CLOSE"))
+		if (!g_ascii_strcasecmp (type, "CLOSE"))
 		{
 			if (*word[3] && *word[4])
 			{
 				goodtype = 0;
-				if (!strcasecmp (word[3], "SEND"))
+				if (!g_ascii_strcasecmp (word[3], "SEND"))
 				{
 					dcc = find_dcc (word[4], word[5], TYPE_SEND);
 					dcc_abort (sess, dcc);
 					goodtype = TRUE;
 				}
-				if (!strcasecmp (word[3], "GET"))
+				if (!g_ascii_strcasecmp (word[3], "GET"))
 				{
 					dcc = find_dcc (word[4], word[5], TYPE_RECV);
 					dcc_abort (sess, dcc);
 					goodtype = TRUE;
 				}
-				if (!strcasecmp (word[3], "CHAT"))
+				if (!g_ascii_strcasecmp (word[3], "CHAT"))
 				{
 					dcc = find_dcc (word[4], "", TYPE_CHATRECV);
 					if (!dcc)
@@ -789,20 +789,20 @@
 			}
 			return FALSE;
 		}
-		if ((!strcasecmp (type, "CHAT")) || (!strcasecmp (type, "PCHAT")))
+		if ((!g_ascii_strcasecmp (type, "CHAT")) || (!g_ascii_strcasecmp (type, "PCHAT")))
 		{
 			char *nick = word[3];
-			int passive = (!strcasecmp(type, "PCHAT")) ? 1 : 0;
+			int passive = (!g_ascii_strcasecmp(type, "PCHAT")) ? 1 : 0;
 			if (*nick)
 				dcc_chat (sess, nick, passive);
 			return TRUE;
 		}
-		if (!strcasecmp (type, "LIST"))
+		if (!g_ascii_strcasecmp (type, "LIST"))
 		{
 			dcc_show_list (sess);
 			return TRUE;
 		}
-		if (!strcasecmp (type, "GET"))
+		if (!g_ascii_strcasecmp (type, "GET"))
 		{
 			char *nick = word[3];
 			char *file = word[4];
@@ -820,18 +820,18 @@
 			}
 			return TRUE;
 		}
-		if ((!strcasecmp (type, "SEND")) || (!strcasecmp (type, "PSEND")))
+		if ((!g_ascii_strcasecmp (type, "SEND")) || (!g_ascii_strcasecmp (type, "PSEND")))
 		{
 			int i = 3, maxcps;
 			char *nick, *file;
-			int passive = (!strcasecmp(type, "PSEND")) ? 1 : 0;
+			int passive = (!g_ascii_strcasecmp(type, "PSEND")) ? 1 : 0;
 
 			nick = word[i];
 			if (!*nick)
 				return FALSE;
 
 			maxcps = prefs.dcc_max_send_cps;
-			if (!strncasecmp(nick, "-maxcps=", 8))
+			if (!g_ascii_strncasecmp(nick, "-maxcps=", 8))
 			{
 				maxcps = atoi(nick + 8);
 				i++;
@@ -1312,7 +1312,7 @@
 				*p = '/';
 	}
 
-	if (!strcasecmp (word[idx], "ADD"))
+	if (!g_ascii_strcasecmp (word[idx], "ADD"))
 	{
 		if (toggle)
 		{
@@ -1327,7 +1327,7 @@
 		return TRUE;
 	}
 
-	if (!strcasecmp (word[idx], "DEL"))
+	if (!g_ascii_strcasecmp (word[idx], "DEL"))
 	{
 		menu_del (tbuf, label);
 		return TRUE;
@@ -2045,7 +2045,7 @@
 	case 0xc0851aaa: fe_message (word[3], FE_MSG_INFO|FE_MSG_MARKUP); break; /* MSGBOX */
 	case 0x0035dafd: fe_ctrl_gui (sess, 1, 0); break; /* SHOW */
 	case 0x0033155f: /* MENU */
-		if (!strcasecmp (word[3], "TOGGLE"))
+		if (!g_ascii_strcasecmp (word[3], "TOGGLE"))
 			fe_ctrl_gui (sess, 6, 0);
 		else
 			return FALSE;
@@ -2087,7 +2087,7 @@
 	p = name;
 	while (*p)
 	{
-		hl->buf[len] = toupper ((unsigned char) *p);
+		hl->buf[len] = g_ascii_toupper ((unsigned char) *p);
 		len++;
 		p++;
 	}
@@ -2247,25 +2247,25 @@
 			}
 			return TRUE;
 		}
-		if (!strcasecmp (word[i], "UNIGNORE"))
+		if (!g_ascii_strcasecmp (word[i], "UNIGNORE"))
 			type |= IG_UNIG;
-		else if (!strcasecmp (word[i], "ALL"))
+		else if (!g_ascii_strcasecmp (word[i], "ALL"))
 			type |= IG_PRIV | IG_NOTI | IG_CHAN | IG_CTCP | IG_INVI | IG_DCC;
-		else if (!strcasecmp (word[i], "PRIV"))
+		else if (!g_ascii_strcasecmp (word[i], "PRIV"))
 			type |= IG_PRIV;
-		else if (!strcasecmp (word[i], "NOTI"))
+		else if (!g_ascii_strcasecmp (word[i], "NOTI"))
 			type |= IG_NOTI;
-		else if (!strcasecmp (word[i], "CHAN"))
+		else if (!g_ascii_strcasecmp (word[i], "CHAN"))
 			type |= IG_CHAN;
-		else if (!strcasecmp (word[i], "CTCP"))
+		else if (!g_ascii_strcasecmp (word[i], "CTCP"))
 			type |= IG_CTCP;
-		else if (!strcasecmp (word[i], "INVI"))
+		else if (!g_ascii_strcasecmp (word[i], "INVI"))
 			type |= IG_INVI;
-		else if (!strcasecmp (word[i], "QUIET"))
+		else if (!g_ascii_strcasecmp (word[i], "QUIET"))
 			quiet = 1;
-		else if (!strcasecmp (word[i], "NOSAVE"))
+		else if (!g_ascii_strcasecmp (word[i], "NOSAVE"))
 			type |= IG_NOSAVE;
-		else if (!strcasecmp (word[i], "DCC"))
+		else if (!g_ascii_strcasecmp (word[i], "DCC"))
 			type |= IG_DCC;
 		else
 		{
@@ -2456,12 +2456,12 @@
 #ifdef USE_PLUGIN
 	len = strlen (word[2]);
 #ifdef WIN32
-	if (len > 4 && strcasecmp (".dll", word[2] + len - 4) == 0)
+	if (len > 4 && g_ascii_strcasecmp (".dll", word[2] + len - 4) == 0)
 #else
 #if defined(__hpux)
-	if (len > 3 && strcasecmp (".sl", word[2] + len - 3) == 0)
+	if (len > 3 && g_ascii_strcasecmp (".sl", word[2] + len - 3) == 0)
 #else
-	if (len > 3 && strcasecmp (".so", word[2] + len - 3) == 0)
+	if (len > 3 && g_ascii_strcasecmp (".so", word[2] + len - 3) == 0)
 #endif
 #endif
 	{
@@ -2613,8 +2613,8 @@
 			else
 			{
 				/* mask out passwords */
-				if (strcasecmp (nick, "nickserv") == 0 &&
-					 strncasecmp (msg, "identify ", 9) == 0)
+				if (g_ascii_strcasecmp (nick, "nickserv") == 0 &&
+					 g_ascii_strncasecmp (msg, "identify ", 9) == 0)
 					msg = "identify ****";
 				EMIT_SIGNAL (XP_TE_MSGSEND, sess, nick, msg, NULL, NULL, 0);
 			}
@@ -2825,7 +2825,7 @@
 
 	prefs.recon_delay = 0;
 
-	if (!strcasecmp (word[2], "ALL"))
+	if (!g_ascii_strcasecmp (word[2], "ALL"))
 	{
 		list = serv_list;
 		while (list)
@@ -2980,7 +2980,7 @@
 {
 	char *co;
 #ifdef USE_OPENSSL
-	if (strncasecmp ("ircs://", url, 7) == 0)
+	if (g_ascii_strncasecmp ("ircs://", url, 7) == 0)
 	{
 		*use_ssl = TRUE;
 		*server_name = url + 7;
@@ -2988,7 +2988,7 @@
 	}
 #endif
 
-	if (strncasecmp ("irc://", url, 6) == 0)
+	if (g_ascii_strncasecmp ("irc://", url, 6) == 0)
 	{
 		*server_name = url + 6;
 #ifdef USE_OPENSSL
@@ -3059,7 +3059,7 @@
 	sess->server->network = NULL;
 
 	/* dont clear it for /servchan */
-	if (strncasecmp (word_eol[1], "SERVCHAN ", 9))
+	if (g_ascii_strncasecmp (word_eol[1], "SERVCHAN ", 9))
 		sess->willjoinchannel[0] = 0;
 
 	if (channel)
@@ -3189,7 +3189,7 @@
 	{
 		if (ignore_del (mask, NULL))
 		{
-			if (strcasecmp (arg, "QUIET"))
+			if (g_ascii_strcasecmp (arg, "QUIET"))
 				EMIT_SIGNAL (XP_TE_IGNOREREMOVE, sess, mask, NULL, NULL, NULL, 0);
 		}
 		return TRUE;
@@ -3205,12 +3205,12 @@
 
 	len = strlen (word[2]);
 #ifdef WIN32
-	if (len > 4 && strcasecmp (word[2] + len - 4, ".dll") == 0)
+	if (len > 4 && g_ascii_strcasecmp (word[2] + len - 4, ".dll") == 0)
 #else
 #if defined(__hpux)
-	if (len > 3 && strcasecmp (word[2] + len - 3, ".sl") == 0)
+	if (len > 3 && g_ascii_strcasecmp (word[2] + len - 3, ".sl") == 0)
 #else
-	if (len > 3 && strcasecmp (word[2] + len - 3, ".so") == 0)
+	if (len > 3 && g_ascii_strcasecmp (word[2] + len - 3, ".so") == 0)
 #endif
 #endif
 		by_file = TRUE;
@@ -3240,7 +3240,7 @@
 	while (list)
 	{
 		serv = list->data;
-		if (!strcasecmp (hostname, serv->hostname) && serv->connected)
+		if (!g_ascii_strcasecmp (hostname, serv->hostname) && serv->connected)
 			return serv;
 		list = list->next;
 	}
@@ -3293,7 +3293,7 @@
 			/* maybe we're already connected to this net */
 
 			/* check for "FreeNode" */
-			net = servlist_net_find (server_name, NULL, strcasecmp);
+			net = servlist_net_find (server_name, NULL, g_ascii_strcasecmp);
 			/* check for "irc.eu.freenode.net" */
 			if (!net)
 				net = servlist_net_find_from_server (server_name);
@@ -3685,7 +3685,7 @@
 static int
 command_compare (const void *a, const void *b)
 {
-	return strcasecmp (a, ((struct commands *)b)->name);
+	return g_ascii_strcasecmp (a, ((struct commands *)b)->name);
 }
 
 static struct commands *
@@ -4257,7 +4257,7 @@
 	while (list)
 	{
 		pop = (struct popup *) list->data;
-		if (!strcasecmp (pop->name, word[1]))
+		if (!g_ascii_strcasecmp (pop->name, word[1]))
 		{
 			user_command (sess, tbuf, pop->cmd, word, word_eol);
 			user_cmd = TRUE;
diff -ur xchat-2.8.8.orig/src/common/plugin.c xchat-2.8.8/src/common/plugin.c
--- xchat-2.8.8.orig/src/common/plugin.c	2009-08-16 12:40:16.000000000 +0300
+++ xchat-2.8.8/src/common/plugin.c	2010-07-25 16:50:46.180202517 +0300
@@ -295,9 +295,9 @@
 	{
 		pl = list->data;
 		/* static-plugins (plugin-timer.c) have a NULL filename */
-		if ((by_filename && pl->filename && strcasecmp (name, pl->filename) == 0) ||
-			 (by_filename && pl->filename && strcasecmp (name, file_part (pl->filename)) == 0) ||
-			(!by_filename && strcasecmp (name, pl->name) == 0))
+		if ((by_filename && pl->filename && g_ascii_strcasecmp (name, pl->filename) == 0) ||
+			 (by_filename && pl->filename && g_ascii_strcasecmp (name, file_part (pl->filename)) == 0) ||
+			(!by_filename && g_ascii_strcasecmp (name, pl->name) == 0))
 		{
 			/* statically linked plugins have a NULL filename */
 			if (pl->filename != NULL && !pl->fake)
@@ -458,12 +458,12 @@
 		hook = list->data;
 		if (hook->type == type)
 		{
-			if (strcasecmp (hook->name, name) == 0)
+			if (g_ascii_strcasecmp (hook->name, name) == 0)
 				return list;
 
 			if (type == HOOK_SERVER)
 			{
-				if (strcasecmp (hook->name, "RAW LINE") == 0)
+				if (g_ascii_strcasecmp (hook->name, "RAW LINE") == 0)
 					return list;
 			}
 		}
@@ -933,8 +933,8 @@
 
 		if (servname == NULL ||
 			 rfc_casecmp (servname, serv->servername) == 0 ||
-			 strcasecmp (servname, serv->hostname) == 0 ||
-			 strcasecmp (servname, netname) == 0)
+			 g_ascii_strcasecmp (servname, serv->hostname) == 0 ||
+			 g_ascii_strcasecmp (servname, netname) == 0)
 		{
 			if (channel == NULL)
 				return serv->front_session;
@@ -1097,7 +1097,7 @@
 	
 	do
 	{
-		if (!strcasecmp (name, vars[i].name))
+		if (!g_ascii_strcasecmp (name, vars[i].name))
 		{
 			switch (vars[i].type)
 			{
diff -ur xchat-2.8.8.orig/src/common/plugin-timer.c xchat-2.8.8/src/common/plugin-timer.c
--- xchat-2.8.8.orig/src/common/plugin-timer.c	2009-08-16 12:40:16.000000000 +0300
+++ xchat-2.8.8/src/common/plugin-timer.c	2010-07-25 16:50:46.141202295 +0300
@@ -4,7 +4,7 @@
 #include "xchat-plugin.h"
 
 #ifdef WIN32
-#define strcasecmp stricmp
+#define g_ascii_strcasecmp stricmp
 #endif
 
 static xchat_plugin *ph;	/* plugin handle */
@@ -151,25 +151,25 @@
 		return XCHAT_EAT_XCHAT;
 	}
 
-	if (strcasecmp (word[2], "-quiet") == 0)
+	if (g_ascii_strcasecmp (word[2], "-quiet") == 0)
 	{
 		quiet = TRUE;
 		offset++;
 	}
 
-	if (strcasecmp (word[2 + offset], "-delete") == 0)
+	if (g_ascii_strcasecmp (word[2 + offset], "-delete") == 0)
 	{
 		timer_del_ref (atoi (word[3 + offset]), quiet);
 		return XCHAT_EAT_XCHAT;
 	}
 
-	if (strcasecmp (word[2 + offset], "-refnum") == 0)
+	if (g_ascii_strcasecmp (word[2 + offset], "-refnum") == 0)
 	{
 		ref = atoi (word[3 + offset]);
 		offset += 2;
 	}
 
-	if (strcasecmp (word[2 + offset], "-repeat") == 0)
+	if (g_ascii_strcasecmp (word[2 + offset], "-repeat") == 0)
 	{
 		repeat = atoi (word[3 + offset]);
 		offset += 2;
diff -ur xchat-2.8.8.orig/src/common/proto-irc.c xchat-2.8.8/src/common/proto-irc.c
--- xchat-2.8.8.orig/src/common/proto-irc.c	2010-05-30 05:14:41.000000000 +0300
+++ xchat-2.8.8/src/common/proto-irc.c	2010-07-25 16:50:46.235202124 +0300
@@ -472,12 +472,12 @@
 		}
 
 		/* use /NICKSERV */
-		if (strcasecmp (word[7], "DALnet") == 0 ||
-			 strcasecmp (word[7], "BRASnet") == 0)
+		if (g_ascii_strcasecmp (word[7], "DALnet") == 0 ||
+			 g_ascii_strcasecmp (word[7], "BRASnet") == 0)
 			serv->nickservtype = 1;
 
 		/* use /NS */
-		else if (strcasecmp (word[7], "FreeNode") == 0)
+		else if (g_ascii_strcasecmp (word[7], "FreeNode") == 0)
 			serv->nickservtype = 2;
 
 		goto def;
@@ -1072,9 +1072,9 @@
 					{
 						text[len - 1] = 0;
 						text++;
-						if (strncasecmp (text, "ACTION", 6) != 0)
+						if (g_ascii_strncasecmp (text, "ACTION", 6) != 0)
 							flood_check (nick, ip, serv, sess, 0);
-						if (strncasecmp (text, "DCC ", 4) == 0)
+						if (g_ascii_strncasecmp (text, "DCC ", 4) == 0)
 							/* redo this with handle_quotes TRUE */
 							process_data_init (word[1], word_eol[1], word, word_eol, TRUE, FALSE);
 						ctcp_handle (sess, to, nick, ip, text, word, word_eol, id);
diff -ur xchat-2.8.8.orig/src/common/server.c xchat-2.8.8/src/common/server.c
--- xchat-2.8.8.orig/src/common/server.c	2010-05-30 05:14:41.000000000 +0300
+++ xchat-2.8.8/src/common/server.c	2010-07-25 16:50:46.138202401 +0300
@@ -231,17 +231,17 @@
 	dbuf[len + 1] = 0;
 
 	/* privmsg and notice get a lower priority */
-	if (strncasecmp (dbuf + 1, "PRIVMSG", 7) == 0 ||
-		 strncasecmp (dbuf + 1, "NOTICE", 6) == 0)
+	if (g_ascii_strncasecmp (dbuf + 1, "PRIVMSG", 7) == 0 ||
+		 g_ascii_strncasecmp (dbuf + 1, "NOTICE", 6) == 0)
 	{
 		dbuf[0] = 1;
 	}
 	else
 	{
 		/* WHO/MODE get the lowest priority */
-		if (strncasecmp (dbuf + 1, "WHO ", 4) == 0 ||
+		if (g_ascii_strncasecmp (dbuf + 1, "WHO ", 4) == 0 ||
 		/* but only MODE queries, not changes */
-			(strncasecmp (dbuf + 1, "MODE", 4) == 0 &&
+			(g_ascii_strncasecmp (dbuf + 1, "MODE", 4) == 0 &&
 			 strchr (dbuf, '-') == NULL &&
 			 strchr (dbuf, '+') == NULL))
 			dbuf[0] = 0;
@@ -307,8 +307,8 @@
 	if (serv->using_irc ||				/* 1. using CP1252/UTF-8 Hybrid */
 		(serv->encoding == NULL && prefs.utf8_locale) || /* OR 2. using system default->UTF-8 */
 	    (serv->encoding != NULL &&				/* OR 3. explicitly set to UTF-8 */
-		 (strcasecmp (serv->encoding, "UTF8") == 0 ||
-		  strcasecmp (serv->encoding, "UTF-8") == 0)))
+		 (g_ascii_strcasecmp (serv->encoding, "UTF8") == 0 ||
+		  g_ascii_strcasecmp (serv->encoding, "UTF-8") == 0)))
 	{
 		/* The user has the UTF-8 charset set, either via /charset
 		command or from his UTF-8 locale. Thus, we first try the
@@ -1778,10 +1778,10 @@
 			space[0] = 0;
 
 		/* server_inline() uses these flags */
-		if (!strcasecmp (serv->encoding, "CP1255") ||
-			 !strcasecmp (serv->encoding, "WINDOWS-1255"))
+		if (!g_ascii_strcasecmp (serv->encoding, "CP1255") ||
+			 !g_ascii_strcasecmp (serv->encoding, "WINDOWS-1255"))
 			serv->using_cp1255 = TRUE;
-		else if (!strcasecmp (serv->encoding, "IRC"))
+		else if (!g_ascii_strcasecmp (serv->encoding, "IRC"))
 			serv->using_irc = TRUE;
 	}
 }
diff -ur xchat-2.8.8.orig/src/common/servlist.c xchat-2.8.8/src/common/servlist.c
--- xchat-2.8.8.orig/src/common/servlist.c	2010-05-16 10:24:26.000000000 +0300
+++ xchat-2.8.8/src/common/servlist.c	2010-07-25 16:50:46.153202078 +0300
@@ -604,7 +604,7 @@
 	{
 		net = list->data;
 
-		if (strcasecmp (net->name, network) == 0)
+		if (g_ascii_strcasecmp (net->name, network) == 0)
 		{
 			servlist_connect (sess, net, join);
 			return 1;
@@ -749,7 +749,7 @@
 		while (slist)
 		{
 			serv = slist->data;
-			if (strcasecmp (serv->hostname, server_name) == 0)
+			if (g_ascii_strcasecmp (serv->hostname, server_name) == 0)
 				return net;
 			slist = slist->next;
 		}
@@ -1034,7 +1034,7 @@
 	if (c)
 		c[0] = 0;
 
-	if (!strcasecmp (charset, "IRC")) /* special case */
+	if (!g_ascii_strcasecmp (charset, "IRC")) /* special case */
 	{
 		if (c)
 			c[0] = ' ';
@@ -1109,8 +1109,8 @@
 			fprintf (fp, "J=%s\n", net->autojoin);
 		if (net->nickserv)
 			fprintf (fp, "B=%s\n", net->nickserv);
-		if (net->encoding && strcasecmp (net->encoding, "System") &&
-			 strcasecmp (net->encoding, "System default"))
+		if (net->encoding && g_ascii_strcasecmp (net->encoding, "System") &&
+			 g_ascii_strcasecmp (net->encoding, "System default"))
 		{
 			fprintf (fp, "E=%s\n", net->encoding);
 			if (!servlist_check_encoding (net->encoding))
diff -ur xchat-2.8.8.orig/src/common/url.c xchat-2.8.8/src/common/url.c
--- xchat-2.8.8.orig/src/common/url.c	2009-08-16 12:40:16.000000000 +0300
+++ xchat-2.8.8/src/common/url.c	2010-07-25 16:50:46.182202353 +0300
@@ -81,7 +81,7 @@
 {
 	int pos;
 
-	if (tree_find (url_tree, urltext, (tree_cmp_func *)strcasecmp, NULL, &pos))
+	if (tree_find (url_tree, urltext, (tree_cmp_func *)g_ascii_strcasecmp, NULL, &pos))
 		return 1;
 	return 0;
 }
@@ -110,7 +110,7 @@
 	}
 
 	if (!url_tree)
-		url_tree = tree_new ((tree_cmp_func *)strcasecmp, NULL);
+		url_tree = tree_new ((tree_cmp_func *)g_ascii_strcasecmp, NULL);
 
 	tree_insert (url_tree, data);
 	fe_url_add (data);
@@ -168,11 +168,11 @@
 		{
 			int j;
 
-			/* This is pretty much strncasecmp(). */
+			/* This is pretty much g_ascii_strncasecmp(). */
 			for (j = 0; j < l; j++)
 			{
 				unsigned char c = word[j];
-				if (tolower(c) != prefix[i].s[j])
+				if (g_ascii_tolower(c) != prefix[i].s[j])
 					break;
 			}
 			if (j == l)
@@ -220,10 +220,10 @@
 				const unsigned char *p = &word[len - l];
 				int j;
 
-				/* This is pretty much strncasecmp(). */
+				/* This is pretty much g_ascii_strncasecmp(). */
 				for (j = 0; j < l; j++)
 				{
-					if (tolower(p[j]) != suffix[i].s[j])
+					if (g_ascii_tolower(p[j]) != suffix[i].s[j])
 						break;
 				}
 				if (j == l)
diff -ur xchat-2.8.8.orig/src/common/util.c xchat-2.8.8/src/common/util.c
--- xchat-2.8.8.orig/src/common/util.c	2009-08-16 12:40:16.000000000 +0300
+++ xchat-2.8.8/src/common/util.c	2010-07-25 16:50:46.162202108 +0300
@@ -280,7 +280,7 @@
 
 	if (len == 0)
 		return (char *)s;
-	while (rfc_tolower(*s) != rfc_tolower(*wanted) || strncasecmp (s, wanted, len))
+	while (rfc_tolower(*s) != rfc_tolower(*wanted) || g_ascii_strncasecmp (s, wanted, len))
 		if (*s++ == '\0')
 			return (char *)NULL;
 	return (char *)s;
@@ -840,7 +840,7 @@
 static int
 country_compare (const void *a, const void *b)
 {
-	return strcasecmp (a, ((domain_t *)b)->code);
+	return g_ascii_strcasecmp (a, ((domain_t *)b)->code);
 }
 
 static const domain_t domain[] =
@@ -1396,7 +1396,7 @@
 	0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff
 };
 
-/*static unsigned char touppertab[] =
+/*static unsigned char g_ascii_touppertab[] =
 	{ 0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa,
 	0xb, 0xc, 0xd, 0xe, 0xf, 0x10, 0x11, 0x12, 0x13, 0x14,
 	0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d,
diff -ur xchat-2.8.8.orig/src/fe-gtk/fkeys.c xchat-2.8.8/src/fe-gtk/fkeys.c
--- xchat-2.8.8.orig/src/fe-gtk/fkeys.c	2009-08-16 12:40:18.000000000 +0300
+++ xchat-2.8.8/src/fe-gtk/fkeys.c	2010-07-25 16:50:46.286201989 +0300
@@ -1257,11 +1257,11 @@
 
 	if (d1)
 	{
-		if (!strcasecmp (d1, "up"))
+		if (!g_ascii_strcasecmp (d1, "up"))
 			type = PAGE_UP;
-		else if (!strcasecmp (d1, "+1"))
+		else if (!g_ascii_strcasecmp (d1, "+1"))
 			type = LINE_DOWN;
-		else if (!strcasecmp (d1, "-1"))
+		else if (!g_ascii_strcasecmp (d1, "-1"))
 			type = LINE_UP;
 	}
 
diff -ur xchat-2.8.8.orig/src/fe-gtk/maingui.c xchat-2.8.8/src/fe-gtk/maingui.c
--- xchat-2.8.8.orig/src/fe-gtk/maingui.c	2010-05-16 06:15:55.000000000 +0300
+++ xchat-2.8.8/src/fe-gtk/maingui.c	2010-07-25 16:50:46.440201993 +0300
@@ -1712,7 +1712,7 @@
 	while (*p)
 	{
 		next = strchr (p, '\r');
-		if (strncasecmp ("file:", p, 5) == 0)
+		if (g_ascii_strncasecmp ("file:", p, 5) == 0)
 		{
 			if (next)
 				*next = 0;
@@ -2045,7 +2045,7 @@
 		return;
 
 	sess = current_sess;
-	mode = tolower ((unsigned char) flag[0]);
+	mode = g_ascii_tolower ((unsigned char) flag[0]);
 
 	switch (mode)
 	{
@@ -2927,7 +2927,7 @@
 	if (a->type != SESS_CHANNEL && b->type == SESS_CHANNEL)
 		return 1;
 
-	return strcasecmp (a->channel, b->channel);
+	return g_ascii_strcasecmp (a->channel, b->channel);
 }
 
 static void
diff -ur xchat-2.8.8.orig/src/fe-gtk/menu.c xchat-2.8.8/src/fe-gtk/menu.c
--- xchat-2.8.8.orig/src/fe-gtk/menu.c	2010-05-16 07:22:21.000000000 +0300
+++ xchat-2.8.8/src/fe-gtk/menu.c	2010-07-25 16:50:46.397201960 +0300
@@ -483,18 +483,18 @@
 	{
 		pop = (struct popup *) list->data;
 
-		if (!strncasecmp (pop->name, "SUB", 3))
+		if (!g_ascii_strncasecmp (pop->name, "SUB", 3))
 		{
 			childcount = 0;
 			tempmenu = menu_quick_sub (pop->cmd, tempmenu, &subitem, XCMENU_DOLIST|XCMENU_MNEMONIC, -1);
 
-		} else if (!strncasecmp (pop->name, "TOGGLE", 6))
+		} else if (!g_ascii_strncasecmp (pop->name, "TOGGLE", 6))
 		{
 			childcount++;
 			menu_toggle_item (pop->name + 7, tempmenu, toggle_cb, pop->cmd,
 									cfg_get_bool (pop->cmd));
 
-		} else if (!strncasecmp (pop->name, "ENDSUB", 6))
+		} else if (!g_ascii_strncasecmp (pop->name, "ENDSUB", 6))
 		{
 			/* empty sub menu due to no programs in PATH? */
 			if (check_path && childcount < 1)
@@ -505,7 +505,7 @@
 				tempmenu = menu_quick_endsub ();
 			/* If we get here and tempmenu equals menu that means we havent got any submenus to exit from */
 
-		} else if (!strncasecmp (pop->name, "SEP", 3))
+		} else if (!g_ascii_strncasecmp (pop->name, "SEP", 3))
 		{
 			menu_quick_item (0, 0, tempmenu, XCMENU_SHADED, 0, 0);
 
@@ -2120,7 +2120,7 @@
 		g_object_get (settings, "gtk-key-theme-name", &key_theme, NULL);
 		if (key_theme)
 		{
-			if (!strcasecmp (key_theme, "Emacs"))
+			if (!g_ascii_strcasecmp (key_theme, "Emacs"))
 			{
 				close_mask = GDK_SHIFT_MASK | GDK_CONTROL_MASK;
 				mymenu[SEARCH_OFFSET].key = 0;
diff -ur xchat-2.8.8.orig/src/fe-gtk/notifygui.c xchat-2.8.8/src/fe-gtk/notifygui.c
--- xchat-2.8.8.orig/src/fe-gtk/notifygui.c	2010-05-16 06:16:05.000000000 +0300
+++ xchat-2.8.8/src/fe-gtk/notifygui.c	2010-07-25 16:50:46.379201971 +0300
@@ -321,7 +321,7 @@
 	if (text[0] && response == GTK_RESPONSE_ACCEPT)
 	{
 		networks = GTK_ENTRY (g_object_get_data (G_OBJECT (entry), "net"))->text;
-		if (strcasecmp (networks, "ALL") == 0 || networks[0] == 0)
+		if (g_ascii_strcasecmp (networks, "ALL") == 0 || networks[0] == 0)
 			notify_adduser (text, NULL);
 		else
 			notify_adduser (text, networks);
diff -ur xchat-2.8.8.orig/src/fe-gtk/plugingui.c xchat-2.8.8/src/fe-gtk/plugingui.c
--- xchat-2.8.8.orig/src/fe-gtk/plugingui.c	2010-05-16 06:16:21.000000000 +0300
+++ xchat-2.8.8/src/fe-gtk/plugingui.c	2010-07-25 16:50:46.287202257 +0300
@@ -171,12 +171,12 @@
 
 	len = strlen (file);
 #ifdef WIN32
-	if (len > 4 && strcasecmp (file + len - 4, ".dll") == 0)
+	if (len > 4 && g_ascii_strcasecmp (file + len - 4, ".dll") == 0)
 #else
 #if defined(__hpux)
-	if (len > 3 && strcasecmp (file + len - 3, ".sl") == 0)
+	if (len > 3 && g_ascii_strcasecmp (file + len - 3, ".sl") == 0)
 #else
-	if (len > 3 && strcasecmp (file + len - 3, ".so") == 0)
+	if (len > 3 && g_ascii_strcasecmp (file + len - 3, ".so") == 0)
 #endif
 #endif
 	{
diff -ur xchat-2.8.8.orig/src/fe-gtk/servlistgui.c xchat-2.8.8/src/fe-gtk/servlistgui.c
--- xchat-2.8.8.orig/src/fe-gtk/servlistgui.c	2009-08-16 12:40:18.000000000 +0300
+++ xchat-2.8.8/src/fe-gtk/servlistgui.c	2010-07-25 16:50:46.321202051 +0300
@@ -360,7 +360,7 @@
 	if (evt->keyval > 0x7a || evt->keyval < 0x41)
 		return FALSE;
 
-	c = toupper (evt->keyval);
+	c = g_ascii_toupper (evt->keyval);
 
 	/* scroll to a network that starts with the letter pressed */
 	if (gtk_tree_model_get_iter_first (model, &iter))
@@ -370,7 +370,7 @@
 			gtk_tree_model_get (model, &iter, 0, &net_name, -1);
 			if (net_name)
 			{
-				if (toupper (net_name[0]) == c)
+				if (g_ascii_toupper (net_name[0]) == c)
 				{
 					servlist_select_and_show (tree, &iter, GTK_LIST_STORE (model));
 					g_free (net_name);
diff -ur xchat-2.8.8.orig/src/fe-gtk/sexy-spell-entry.c xchat-2.8.8/src/fe-gtk/sexy-spell-entry.c
--- xchat-2.8.8.orig/src/fe-gtk/sexy-spell-entry.c	2009-08-16 12:40:18.000000000 +0300
+++ xchat-2.8.8/src/fe-gtk/sexy-spell-entry.c	2010-07-25 16:50:46.334201962 +0300
@@ -941,7 +941,7 @@
 	enchant_langs = sexy_spell_entry_get_languages(entry);
 
 	for (i = 0; langs[i]; i++) {
-		if ((g_strncasecmp(langs[i], "C", 1) != 0) &&
+		if ((g_g_ascii_strncasecmp(langs[i], "C", 1) != 0) &&
 		    (strlen(langs[i]) >= 2) &&
 		    enchant_has_lang(langs[i], enchant_langs)) {
 			if ((lastprefix == NULL) || (g_str_has_prefix(langs[i], lastprefix) == FALSE))
@@ -969,7 +969,7 @@
 	lang = (gchar *) g_getenv("LANG");
 
 	if (lang != NULL) {
-		if (g_strncasecmp(lang, "C", 1) == 0)
+		if (g_g_ascii_strncasecmp(lang, "C", 1) == 0)
 			lang = NULL;
 		else if (lang[0] == '\0')
 			lang = NULL;
diff -ur xchat-2.8.8.orig/src/fe-gtk/xtext.c xchat-2.8.8/src/fe-gtk/xtext.c
--- xchat-2.8.8.orig/src/fe-gtk/xtext.c	2009-08-16 12:40:18.000000000 +0300
+++ xchat-2.8.8/src/fe-gtk/xtext.c	2010-07-25 16:50:46.376202077 +0300
@@ -161,7 +161,7 @@
 
    if (len == 0)
      return (char *)s;
-   while (toupper(*s) != toupper(*tofind) || strncasecmp (s, tofind, len))
+   while (g_ascii_toupper(*s) != g_ascii_toupper(*tofind) || g_ascii_strncasecmp (s, tofind, len))
      if (*s++ == '\0')
        return (char *)NULL;
    return (char *)s;   
diff -ur xchat-2.8.8.orig/src/fe-text/fe-text.c xchat-2.8.8/src/fe-text/fe-text.c
--- xchat-2.8.8.orig/src/fe-text/fe-text.c	2009-08-16 12:40:16.000000000 +0300
+++ xchat-2.8.8/src/fe-text/fe-text.c	2010-07-25 16:50:46.276202112 +0300
@@ -391,7 +391,7 @@
 {
 	if (argc > 1)
 	{
-		if (!strcasecmp (argv[1], "--version") || !strcasecmp (argv[1], "-v"))
+		if (!g_ascii_strcasecmp (argv[1], "--version") || !g_ascii_strcasecmp (argv[1], "-v"))
 		{
 			puts (PACKAGE_VERSION);
 			return 0;
