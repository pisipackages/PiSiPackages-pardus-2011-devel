From 66c8f0f5242bb8b456f7234200d42382708cb32d Mon Sep 17 00:00:00 2001
From: Stefan Metzmacher <metze@samba.org>
Date: Tue, 9 Feb 2010 16:31:50 +0100
Subject: [PATCH 07/12] config/13.per_ip_routing: use a global flock for the events which need to do something

We call ourself recursively with the same args under the lock.

This hopefully prevents races where we endup with an empty
routing table for an ip.

metze
---
 config/events.d/13.per_ip_routing |   36 ++++++++++++++++++++++++------------
 1 files changed, 24 insertions(+), 12 deletions(-)

diff --git a/config/events.d/13.per_ip_routing b/config/events.d/13.per_ip_routing
index d12d3f8..feba75f 100755
--- a/config/events.d/13.per_ip_routing
+++ b/config/events.d/13.per_ip_routing
@@ -103,6 +103,27 @@ unlock_file() {
 	fi
 }
 
+runwith_lock() {
+	local lockfile="$INTERNAL_CTDB_PER_IP_ROUTING_LOCK_FILE"
+	[ ! -d "$CTDB_PER_IP_ROUTING_STATE" ] && {
+		echo "$0: $1 No state directory found, waiting for startup."
+		exit 0;
+	}
+	test x"$lockfile" = x"" && {
+		lockfile="$CTDB_PER_IP_ROUTING_STATE/flock"
+		INTERNAL_CTDB_PER_IP_ROUTING_LOCK_FILE="$lockfile"
+		export INTERNAL_CTDB_PER_IP_ROUTING_LOCK_FILE
+
+		test -f $lockfile || {
+			touch $lockfile
+		}
+
+		flock --timeout 30 $lockfile $0 $@
+		exit $?
+	}
+	echo "$0: called under $lockfile with $@"
+}
+
 generate_table_id () {
 	local _ip=$1
 	local _ipsdir="$CTDB_PER_IP_ROUTING_STATE/ips"
@@ -349,10 +370,7 @@ case "$1" in
 		exit 0;
 	}
 
-	[ ! -d "$CTDB_PER_IP_ROUTING_STATE" ] && {
-		echo "$0: $1 No state directory found, waiting for startup."
-		exit 0;
-	}
+	runwith_lock $@
 
 	generate_per_ip_routing $ip $maskbits $iface "no" || {
 		echo "$0: $1: generate_per_ip_routing $ip $maskbits $iface no - failed"
@@ -392,10 +410,7 @@ case "$1" in
 		exit 0;
 	}
 
-	[ ! -d "$CTDB_PER_IP_ROUTING_STATE" ] && {
-		echo "$0: $1 No state directory found, waiting for startup."
-		exit 0;
-	}
+	runwith_lock $@
 
 	generate_per_ip_routing $ip $maskbits $niface "no" || {
 		echo "$0: $1: generate_per_ip_routing $ip $maskbits $niface no - failed"
@@ -437,10 +452,7 @@ case "$1" in
 		exit 0;
 	}
 
-	[ ! -d "$CTDB_PER_IP_ROUTING_STATE" ] && {
-		echo "$0: $1 No state directory found, waiting for startup."
-		exit 0;
-	}
+	runwith_lock $@
 
 	generate_per_ip_routing $ip $maskbits $iface "yes" || {
 		echo "$0: $1: generate_per_ip_routing $ip $maskbits $iface yes - failed"
-- 
1.7.4

