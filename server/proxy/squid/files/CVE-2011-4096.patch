=== modified file 'lib/rfc1035.c'
--- lib/rfc1035.c	2010-01-16 03:19:24 +0000
+++ lib/rfc1035.c	2011-10-11 02:08:18 +0000
@@ -479,11 +479,11 @@
 void
 rfc1035RRDestroy(rfc1035_rr ** rr, int n)
 {
-    if (*rr == NULL || n < 1) {
+    if (*rr == NULL) {
         return;
     }
 
-    while (n--) {
+    while (n-- > 0) {
         if ((*rr)[n].rdata)
             xfree((*rr)[n].rdata);
     }

=== modified file 'src/dns_internal.cc'
--- src/dns_internal.cc	2011-07-13 09:25:23 +0000
+++ src/dns_internal.cc	2011-10-11 02:08:18 +0000
@@ -1126,16 +1126,17 @@
         /* free the RR object without freeing its child strings (they are now taken by the copy above) */
         safe_free(message->answer);
 
+        n += q->initial_AAAA.count;
+        q->initial_AAAA.count = 0;
         message->answer = result;
-        message->ancount += q->initial_AAAA.count;
-        n += q->initial_AAAA.count;
-        q->initial_AAAA.count=0;
+        message->ancount = n;
     } else if (q->initial_AAAA.count > 0 && n <= 0) {
         /* initial of dual queries was the only result set. */
         debugs(78, 6, HERE << "Merging DNS results " << q->name << " AAAA has " << q->initial_AAAA.count << " RR, A has " << n << " RR");
         rfc1035RRDestroy(&(message->answer), n);
         message->answer = q->initial_AAAA.answers;
         n = q->initial_AAAA.count;
+        message->ancount = n;
     }
     /* else initial results were empty. just use the final set as authoritative */
 

