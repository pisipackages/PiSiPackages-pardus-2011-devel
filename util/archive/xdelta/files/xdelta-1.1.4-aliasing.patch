--- libedsio/edsiotest.c	2001-06-12 05:16:41.000000000 +0200
+++ libedsio/edsiotest.c	2004-09-06 08:34:29.000000000 +0200
@@ -48,6 +48,7 @@
   const char* str = "hello there";
   const char* str2;
   guint32 str2_len;
+  const char ** str2_ptr = &str2;
 
   PropTest *pt = g_new0 (PropTest, 1);
 
@@ -63,12 +64,12 @@
 
   g_assert (proptest_isset_bytes (pt, prop));
 
-  g_assert (proptest_get_bytes (pt, prop, (const guint8**) & str2, & str2_len) && str2_len == (strlen (str) + 1) && strcmp (str, str2) == 0);
+  g_assert (proptest_get_bytes (pt, prop, (const guint8**) str2_ptr, & str2_len) && str2_len == (strlen (str) + 1) && strcmp (str, str2) == 0);
 
   /* kill the cache, to test persistence. */
   pt->_edsio_property_table = NULL;
 
-  g_assert (proptest_get_bytes (pt, prop, (const guint8**) & str2, & str2_len) && str2_len == (strlen (str) + 1) && strcmp (str, str2) == 0);
+  g_assert (proptest_get_bytes (pt, prop, (const guint8**) str2_ptr, & str2_len) && str2_len == (strlen (str) + 1) && strcmp (str, str2) == 0);
 
   g_assert (proptest_unset_bytes (pt, prop));
 
--- xdelta.c	2001-09-24 08:59:17.000000000 +0200
+++ xdelta.c	2004-09-06 08:34:29.000000000 +0200
@@ -1416,12 +1416,13 @@
 {
   SerialSource* src = handle_source (cont_in);
   XdeltaControl* cont;
+  XdeltaControl** cont_ptr = &cont;
   SerialType type;
 
   if (! src)
     return NULL;
 
   /* TODO: free src */
 
-  if (! serializeio_unserialize_generic_acceptable (src, ST_XdeltaControl | ST_Version0Control, & type, (void**) & cont))
+  if (! serializeio_unserialize_generic_acceptable (src, ST_XdeltaControl | ST_Version0Control, & type, (void **) cont_ptr))
     return NULL;
 
   if (type == ST_Version0Control)
