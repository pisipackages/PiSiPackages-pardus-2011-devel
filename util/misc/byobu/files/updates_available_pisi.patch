--- usr/lib/byobu/updates_available.orig	2010-06-24 20:04:06.000000000 +0300
+++ usr/lib/byobu/updates_available	2010-08-05 17:35:05.162530765 +0300
@@ -23,10 +23,10 @@
 if [ "$1" = "--detail" -o "$1" = "--short" ]; then
 	if which apt-get >/dev/null; then
 		detail=`apt-get -s -o Debug::NoLocking=true upgrade`
-		if [ "$1" = "--detail" ]; then
-			printf "$detail"
+		if which pisi >/dev/null; then
+		detail=`python -c "import pisi; print pisi.api.list_upgradable()"`
 		else
-			short=`printf "$detail" | grep -c ^Inst`
+			short=`python -c "import pisi; print len(pisi.api.list_upgradable())"`
 			printf "$short"
 		fi
 	fi
@@ -71,6 +71,9 @@
 		# If yum exists, use it
 		# TODO: We need a better way of counting updates available from a RH expert
 		yum list updates -q | grep -vc "Updated Packages" > $mycache &
+	elif which pisi >/dev/null; then
+		# If pisi exists, use it
+		python -c "import pisi; print len(pisi.api.list_upgradable())" > $mycache &
 	fi
 }
 
@@ -87,7 +90,7 @@
 [ -r $mycache ] && print_updates `grep "^[0-9]" $mycache | sed "s/ .*$//"`
 
 # Update the cache if necessary
-if [ ! -e "$mycache" ] || [ "/var/lib/apt" -nt "$mycache" ] || [ "/var/lib/apt/lists" -nt "$mycache" ]; then
+if [ ! -e "$mycache" ] || [ "/var/lib/pisi" -nt "$mycache" ] || [ "/var/cache/pisi/packagedb.cache" -nt "$mycache" ]; then
 	# If apt is newer than mycache, background an update now
 	update_cache "$mycache"
 fi
