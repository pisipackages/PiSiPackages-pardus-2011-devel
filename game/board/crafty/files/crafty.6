." Man page for crafty
."
." Created 2003 by John MacPhail.  Copyright assigned to Robert Hyatt.
."
.TH crafty 6 "December 22, 2003" "Crafty 19.8" ""
.SH NAME
crafty - chess engine
.RE


\fB
.SH SYNOPSIS
.nf
.fam C

\fBcrafty\fP [\fBbookpath=\fP<\fIdirectory\fP>] [\fBlogpath=\fP<\fIdirectory\fP>]
[\fBtbpath=\fP<\fIdirectory-list\fP>]
.RE
.PP

.fam T
.fi
.SH DESCRIPTION

\fBCrafty\fP is a chess "engine".  That is, the program concerns
itself with playing chess and not with providing a graphic user
interface.  Thus \fBCrafty\fP is commonly invoked indirectly via
\fBXBoard\fP, and current versions of these programs generally work
very well together.  Some noteworthy features of \fBCrafty\fP are:
.IP * 3
Source code, provided, is unusually deserving of study.  The author has
sought to provide a starting point for others writing chess-playing
programs, leading to clean and portable code.  Another objective has
been to maintain a state-of-the-art chess engine, with the result that
some parts of the source code may be challenging to understand.
.IP * 3
Flexible and powerful command-line interface.  About the only thing
that can \fInot\fP be done within the CLI is changing various paths
determining where \fBCrafty\fP reads and writes various files.  This
manual page focuses on explaining these paths.
.IP * 3
Easy graphic user interface via \fBxboard\fP(6).  
.IP * 3
Informative log files.  Writes "game.nnn" file storing current game in
PGN format, and also writes "log.nnn" file recording what the engine was
"thinking".
.IP * 3
Intelligent opening play.  \fBCrafty\fP learns from experience, and
makes appropriate modifications to its opening book.  The "book"
command allows generation of an opening book (from PGN data), and
customization of how it is used.  The learning facilities synthesize
several different approaches, and allow various ways for the user to
customize and follow what is being learned. Additional commands allow
easy creation of files to customize how \fBCrafty\fP plays the opening
against humans and against other computer programs.
.IP * 3
Uses endgame tablebases.  Precompiled tablebases in the appropriate
format are freely downloadable from ftp://ftp.cis.uab.edu/hyatt/TB.
.IP * 3
Polished and powerful facilities for Internet play (for which the
program continues to be extensively used).  Note that the licencing
forbids concealing Crafty under another name, or unauthorized entry of
it in a tournament in which other computer programs have been invited
to compete.
.IP * 3
Annotation.  Generates either PGN or HTML files, in a manner made
very flexible by choosing appropriate aptions to the "annotate |
annotateh" command.
.RE
.PP

.SH OPTIONS

In the command line arguments, <\fIdirectory-spec\fP> is a path to a
directory, whereas <\fIdirectory-list\fP> is a non-empty
sequence of paths to directories.  For portability, several different
characters are taken as path separators: the colon (:), the semicolon
(;), and the comma (,).

.PP
There are actually four of these: \fBbookpath\fP is where Crafty seeks its
opening books and writes learned knowledge; \fBlogpath\fP is where Crafty
normally writes a pair of files "game.nnn" and "log.nnn" for each game
it plays; \fBrcpath\fP is where Crafty looks for a run control file to be
read only; and \fBtbpath\fP is where Crafty looks for endgame tablebase
files to be read only.

.PP
The four path specifications have a number of things in common:  each
has a default value set when \fBCrafty\fP is compiled, which can then
be modified by the appropriate environment variable, and can then
again be modified by an invocation argument, but can \fInot\fP be
modified after the engine has been initialized (thus, in particular,
it is not possible to modify the paths by editing a run control file).
Possibly the best procedure is to avoid the invocation options,
experiment with the environment variables, and then perhaps recompile
the program with different defaults.  Note that if the program is
compiled "out of the box" then all four values default to "./" (the
directory in which \fBCrafty\fP has been launched).

.PP
Crafty can be invoked with other arguments (such as "xboard" to
indicate that Crafty is being invoked through \fBxboard\fP(6)) which would
not usually be used directly.
.RE
.PP


.SH COMMANDS

\fBCrafty\fP's extensive command-line interface is defined in
"option.c", discussed in "crafty.doc", and briefly described by the
command "help".
.RE
.PP

.SH FILES

.SS  Run control

Crafty tries to read a run control file \fBrcpath\fP/.craftyrc.
(On a non-Unix system, ".craftyrc" changes to "crafty.rc".)  Such a
file should contain a sequence of valid Crafty commands, terminated by
the command "exit" to restore standard input to the keyboard.  See
\fBcrafty.rc\fP(5) for a skeletal example.
.RE
.PP

.SS  Logging

When a game is played, Crafty normally writes
"\fBlogpath\fP/game.<nnn>" and "\fBlogpath\fP/log.<nnn>". Details of
what is written are modifiable by the `log' command. Because
$CRAFTY_LOG_DIR defaults to "./" (the directory in which Crafty is
launched), trouble can occur if the program is launched in a directory
to which it is unable to write.  Note that the "log.<nnn>" file
normally contains all output that would be visible if \fBCrafty\fP
were run from the command line but is usually hidden when it is run
from a GUI.
.RE
.PP

.SS  Opening books

Crafty is designed to maintain its chess opening knowledge in a file
"book.bin", and to modify this file as it learns from its mistakes.
Refer to the documentation for the "book" command for information on
generating and customizing usage of "book.bin".
.PP
Further, files "books.bin" and "bookc.bin" allow easy customization of
Crafty's opening play (against humans and computer, respectively).
See the documentation for the "books" command.
.PP
Finally, there are several files "*.lrn" for synopses of what Crafty
has been learning.  See the documentation for the "learn" command.
.RE
.PP

.SS  Endgame tablebases

When normally configured, Crafty reads late endgame knowledge from
"*.emd" files, which are distance-to-mate tablebases.  See the
documentation for the "egtb" command.
.RE
.PP


.SH ENVIRONMENT VARIABLES

.SS CRAFTY_BOOK_PATH

If \fB$CRAFTY_BOOK_PATH\fP is set, it overrides the compiled value of
\fBbookpath\fP, the path to directory containing "book.bin" and
friends.  Unless learning has been disabled, Crafty will be writing in
this directory.
.RE
.PP


.SS CRAFTY_LOG_PATH

If \fB$CRAFTY_LOG_PATH\fP is set, it overrides the compiled value of
\fBlogpath\fP, the path to directory for writing, but not reading, the
log files.
.RE
.PP

.SS CRAFTY_RC_PATH

If \fB$CRAFTY_RC_PATH\fP is set, it overrides the compiled value of
\fBrcpath\fP, the path to directory for reading, but not writing, a
run control file (".craftyrc" or "crafty.rc").
.RE
.PP

.SS CRAFTY_TB_PATH

If \fB$CRAFTY_TB_PATH\fP is set, it overrides the compiled value of
\fBtbpath\fP, the sequence of paths to directories for reading, but
not writing, endgame tablebase files.
.RE
.PP


.SH SEE ALSO
\fBcrafty.rc\fP(5), \fBxboard\fP(6), /usr/share/doc/crafty
.RE
.PP

.SH HISTORY

\fBCrafty\fP is the son of \fBCray Blitz\fP, also written by Bob
Hyatt.  The subsequent history of \fBCrafty\fP is detailed in the
source file "main.c".  Opening books appeared in version 1.9. log
files in 1.11, endgame tablebases in 8.24, run control files in 9.22,
and environment variables in 16.5.
.RE
.PP

.SH BUGS

In the interests of portability, \fBCrafty\fP deals with files in a
simple manner, at the cost of robustness.  Very long or incorrect
paths may result in a "segmentation fault" when a file writing
operation fails.

This manual page itself will probably always be flagrantly incomplete
in that many essential, powerful, and interesting aspects of
\fBCrafty\fP are not even mentioned.


.SH AUTHOR

Robert Hyatt (hyatt@cis.uab.edu).
.RE
.PP
