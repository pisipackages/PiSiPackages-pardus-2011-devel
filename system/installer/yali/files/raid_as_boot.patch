diff --git a/yali/storage/bootloader.py b/yali/storage/bootloader.py
index b5a5f74..a6a15ca 100644
--- a/yali/storage/bootloader.py
+++ b/yali/storage/bootloader.py
@@ -139,9 +139,9 @@ def get_physical_devices(storage, device):
 
     for _device in _devices:
         if _device in storage.disks or _device.type == "partition":
-            _physicalDevices.append(device)
+            _physicalDevices.append(_device)
         else:
-            ctx.logger.error("Ignoring %s" % device.name)
+            ctx.logger.error("Ignoring %s" % _device.name)
 
     return _physicalDevices
 
@@ -233,16 +233,21 @@ class BootLoader(object):
         self.writeDeviceMap(usedDevices)
 
     def writeGrubConf(self):
-        bootDevices = get_physical_devices(self.storage, self.storage.storageset.bootDevice)
+        device_uuid = None
+        if self.storage.storageset.bootDevice.type == "mdarray":
+            device_uuid = self.storage.storageset.bootDevice.uuid
+        else:
+            bootDevices = get_physical_devices(self.storage, self.storage.storageset.bootDevice)
+            device_uuid = bootDevices[0].fstabSpec.split("=")[1].lower()
         (release, kernel, initramfs ) = get_configs(ctx.consts.target_dir)
-        s = grub_conf % {"uuid": bootDevices[0].fstabSpec.split("=")[1].lower(),
+        s = grub_conf % {"uuid": device_uuid,
                          "bootpath" : self.path,
                          "release": release,
                          "kernel": kernel,
                          "commands": get_commands(self.storage),
                          "initramfs": initramfs}
-        ctx.logger.debug("uuid:%s -  bootpath:%s - release:%s - kernel:%s -commands:%s - initramfs:%s" %
-                        (bootDevices[0].fstabSpec.split("=")[1].lower(), self.path, release, kernel,
+        ctx.logger.debug("uuid:%s - bootpath:%s - release:%s - kernel:%s -commands:%s - initramfs:%s" %
+                        (device_uuid, self.path, release, kernel,
                          get_commands(self.storage), initramfs))
         ctx.logger.debug("conf:%s" % os.path.join(ctx.consts.target_dir, self._conf))
         with open(os.path.join(ctx.consts.target_dir, self._conf), "w") as grubConfFile:
