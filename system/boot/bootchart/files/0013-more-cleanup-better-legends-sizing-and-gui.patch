From e6e19dc7b98b544a9e2ccecfaef49d0df9bedfbd Mon Sep 17 00:00:00 2001
From: Michael Meeks <michael.meeks@novell.com>
Date: Tue, 2 Nov 2010 21:49:57 +0000
Subject: [PATCH 13/34] more cleanup, better legends, sizing, and gui

---
 pybootchartgui/draw.py |   24 ++++++++++++++----------
 pybootchartgui/gui.py  |   21 +++++++++++----------
 2 files changed, 25 insertions(+), 20 deletions(-)

diff --git a/pybootchartgui/draw.py b/pybootchartgui/draw.py
index 180234d..422d26f 100644
--- a/pybootchartgui/draw.py
+++ b/pybootchartgui/draw.py
@@ -169,15 +169,14 @@ def draw_label_in_box(ctx, color, label, x, y, w, maxx):
             label_x = x - label_w - 5
 	draw_text(ctx, label, color, label_x, y)
 
-def draw_5sec_labels(ctx, rect, sec_w):
+def draw_sec_labels(ctx, rect, sec_w, nsecs):
         ctx.set_font_size(AXIS_FONT_SIZE)
 	for i in range(0, rect[2] + 1, sec_w):
-		if ((i / sec_w) % 5 == 0) :
+		if ((i / sec_w) % nsecs == 0) :
 			label = "%ds" % (i / sec_w)
 			label_w = ctx.text_extents(label)[2]
 			draw_text(ctx, label, TEXT_COLOR, rect[0] + i - label_w/2, rect[1] - 2)
 
-
 def draw_box_ticks(ctx, rect, sec_w):
 	draw_rect(ctx, BORDER_COLOR, tuple(rect))
 
@@ -287,7 +286,6 @@ def clip_visible(clip, rect):
 	return (xmin > xmax and ymin > ymax)
 
 def render_charts(ctx, options, clip, trace, curr_y, w, h, sec_w):
-
 	proc_tree = options.proc_tree(trace)
 
 	# render bar legend
@@ -398,7 +396,7 @@ def render(ctx, options, xscale, trace):
 	if not options.kernel_only:
 		curr_y = draw_header (ctx, trace.headers, duration)
 	else:
-		curr_y = 0;
+		curr_y = off_y;
 
 	if options.charts:
 		curr_y = render_charts (ctx, options, clip, trace, curr_y, w, h, sec_w)
@@ -408,8 +406,8 @@ def render(ctx, options, xscale, trace):
 	if proc_tree.taskstats and options.cumulative:
 		proc_height -= CUML_HEIGHT
 
-	draw_process_bar_chart(ctx, clip, options, proc_tree,
-			       trace.times, curr_y, w, proc_height, sec_w)
+	draw_process_bar_chart(ctx, clip, options, proc_tree, trace.times,
+			       curr_y, w, proc_height, sec_w)
 
 	curr_y = proc_height
 	ctx.set_font_size(SIG_FONT_SIZE)
@@ -422,7 +420,7 @@ def render(ctx, options, xscale, trace):
 			draw_cuml_graph(ctx, proc_tree, cuml_rect, duration, sec_w)
 
 def draw_process_bar_chart(ctx, clip, options, proc_tree, times, curr_y, w, h, sec_w):
-
+	header_size = 0
 	if not options.kernel_only:
 		draw_legend_box (ctx, "Running (%cpu)",
 				 PROC_COLOR_R, off_x    , curr_y + 45, leg_s)
@@ -432,12 +430,18 @@ def draw_process_bar_chart(ctx, clip, options, proc_tree, times, curr_y, w, h, s
 				 PROC_COLOR_S, off_x+240, curr_y + 45, leg_s)
 		draw_legend_box (ctx, "Zombie",
 				 PROC_COLOR_Z, off_x+360, curr_y + 45, leg_s)
+		header_size = 45
 
-	chart_rect = [off_x, curr_y+60, w, h - 2 * off_y - (curr_y+60) + proc_h]
+	chart_rect = [off_x, curr_y + header_size + 15,
+		      w, h - 2 * off_y - (curr_y + header_size + 15) + proc_h]
 	ctx.set_font_size (PROC_TEXT_FONT_SIZE)
 
 	draw_box_ticks (ctx, chart_rect, sec_w)
-	draw_5sec_labels (ctx, chart_rect, sec_w)
+	if sec_w > 100:
+		nsec = 1
+	else:
+		nsec = 5
+	draw_sec_labels (ctx, chart_rect, sec_w, nsec)
 	draw_annotations (ctx, proc_tree, times, chart_rect)
 
 	y = curr_y + 60
diff --git a/pybootchartgui/gui.py b/pybootchartgui/gui.py
index 378ff41..195c331 100644
--- a/pybootchartgui/gui.py
+++ b/pybootchartgui/gui.py
@@ -28,7 +28,7 @@ class PyBootchartWidget(gtk.DrawingArea):
 		'set-scroll-adjustments' : (gobject.SIGNAL_RUN_LAST, gobject.TYPE_NONE, (gtk.Adjustment, gtk.Adjustment))
 	}
 
-	def __init__(self, trace, options):
+	def __init__(self, trace, options, xscale):
 		gtk.DrawingArea.__init__(self)
 
 		self.trace = trace
@@ -49,7 +49,7 @@ class PyBootchartWidget(gtk.DrawingArea):
 		self.connect("position-changed", self.on_position_changed)
 
 		self.zoom_ratio = 1.0
-		self.xscale = 1.0
+		self.xscale = xscale
                 self.x, self.y = 0.0, 0.0
 
 		self.chart_width, self.chart_height = draw.extents(self.options, self.xscale, self.trace)
@@ -255,10 +255,10 @@ class PyBootchartShell(gtk.VBox):
 		</toolbar>
 	</ui>
 	'''
-	def __init__(self, window, trace, options):
+	def __init__(self, window, trace, options, xscale):
 		gtk.VBox.__init__(self)
 
-		self.widget = PyBootchartWidget(trace, options)
+		self.widget = PyBootchartWidget(trace, options, xscale)
 
 		# Create a UIManager instance
 		uimanager = self.uimanager = gtk.UIManager()
@@ -298,10 +298,11 @@ class PyBootchartShell(gtk.VBox):
 		toolbar = uimanager.get_widget('/ToolBar')
 		hbox.pack_start(toolbar, True, True)
 
-		# Misc. options
-		button = gtk.CheckButton("Show more")
-		button.connect ('toggled', self.widget.show_toggled)
-		hbox.pack_start (button, False, True)
+		if not options.kernel_only:
+			# Misc. options
+			button = gtk.CheckButton("Show more")
+			button.connect ('toggled', self.widget.show_toggled)
+			hbox.pack_start (button, False, True)
 
 		self.pack_start(hbox, False)
 		self.pack_start(scrolled)
@@ -325,7 +326,7 @@ class PyBootchartWindow(gtk.Window):
 		window.add(tab_page)
 
 		full_opts = RenderOptions(app_options)
-		full_tree = PyBootchartShell(window, trace, full_opts)
+		full_tree = PyBootchartShell(window, trace, full_opts, 1.0)
 		tab_page.append_page (full_tree, gtk.Label("Full tree"))
 
 		if len (trace.kernel) > 2:
@@ -333,7 +334,7 @@ class PyBootchartWindow(gtk.Window):
 			kernel_opts.cumulative = False
 			kernel_opts.charts = False
 			kernel_opts.kernel_only = True
-			kernel_tree = PyBootchartShell(window, trace, kernel_opts)
+			kernel_tree = PyBootchartShell(window, trace, kernel_opts, 5.0)
 			tab_page.append_page (kernel_tree, gtk.Label("Kernel boot"))
 
 		full_tree.grab_focus(self)
-- 
1.7.3.1

