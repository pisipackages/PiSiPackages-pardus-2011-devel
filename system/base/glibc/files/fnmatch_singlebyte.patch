diff -Nur glibc-2.12-26-g9a98163-old//posix/fnmatch.c glibc-2.12-26-g9a98163/posix/fnmatch.c
--- glibc-2.12-26-g9a98163-old//posix/fnmatch.c	2011-04-26 12:44:33.341000032 +0300
+++ glibc-2.12-26-g9a98163/posix/fnmatch.c	2011-04-26 13:56:38.377000414 +0300
@@ -333,6 +333,7 @@
 # if HANDLE_MULTIBYTE
   if (__builtin_expect (MB_CUR_MAX, 1) != 1)
     {
+      const char *orig_pattern = pattern;
       mbstate_t ps;
       size_t n;
       const char *p;
@@ -356,10 +357,8 @@
 						 alloca_used);
 	  n = mbsrtowcs (wpattern, &p, n + 1, &ps);
 	  if (__builtin_expect (n == (size_t) -1, 0))
-	    /* Something wrong.
-	       XXX Do we have to set `errno' to something which mbsrtows hasn't
-	       already done?  */
-	    return -1;
+	    /* Something wrong.  Fall back to single byte matching.  */
+	    goto try_singlebyte;
 	  if (p)
 	    {
 	      memset (&ps, '\0', sizeof (ps));
@@ -371,10 +370,8 @@
 	prepare_wpattern:
 	  n = mbsrtowcs (NULL, &pattern, 0, &ps);
 	  if (__builtin_expect (n == (size_t) -1, 0))
-	    /* Something wrong.
-	       XXX Do we have to set `errno' to something which mbsrtows hasn't
-	       already done?  */
-	    return -1;
+	    /* Something wrong.  Fall back to single byte matching.  */
+	    goto try_singlebyte;
 	  if (__builtin_expect (n >= (size_t) -1 / sizeof (wchar_t), 0))
 	    {
 	      __set_errno (ENOMEM);
@@ -450,6 +447,9 @@
       free (wpattern_malloc);
 
       return res;
+
+    try_singlebyte:
+      pattern = orig_pattern;
     }
 # endif  /* mbstate_t and mbsrtowcs or _LIBC.  */
 
