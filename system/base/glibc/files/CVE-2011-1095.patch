
Backported From 026373745eab50a683536d950cb7e17dc98c4259 Mon Sep 17 00:00:00 2001
From: Andreas Schwab <schwab@redhat.com>
Date: Thu, 12 Aug 2010 09:05:50 -0700
Subject: [PATCH] Properly quote output of locale


diff -Nur glibc-2.12-26-g9a98163-old//locale/programs/locale.c glibc-2.12-26-g9a98163/locale/programs/locale.c
--- glibc-2.12-26-g9a98163-old//locale/programs/locale.c	2011-04-26 11:55:46.436999729 +0300
+++ glibc-2.12-26-g9a98163/locale/programs/locale.c	2011-04-26 11:58:56.046000014 +0300
@@ -762,6 +762,29 @@
   twalk (all_data, print_names);
 }
 
+/* Print a properly quoted assignment of NAME with VAL, using double
+   quotes iff DQUOTE is true.  */
+static void
+print_assignment (const char *name, const char *val, bool dquote)
+{
+  printf ("%s=", name);
+  if (dquote)
+    putchar ('"');
+  while (*val != '\0')
+    {
+      size_t segment
+	= strcspn (val, dquote ? "$`\"\\" : "~|&;<>()$`\\\"' \t\n");
+      printf ("%.*s", (int) segment, val);
+      val += segment;
+      if (*val == '\0')
+	break;
+      putchar ('\\');
+      putchar (*val++);
+    }
+  if (dquote)
+    putchar ('"');
+  putchar ('\n');
+}
 
 /* We have to show the contents of the environments determining the
    locale.  */
@@ -769,8 +792,8 @@
 show_locale_vars (void)
 {
   size_t cat_no;
-  const char *lcall = getenv ("LC_ALL");
-  const char *language = getenv ("LANGUAGE");
+  const char *lcall = getenv ("LC_ALL") ? : "";
+  const char *language = getenv ("LANGUAGE") ? : "";
   const char *lang = getenv ("LANG") ? : "";
 
   auto void get_source (const char *name);
@@ -779,18 +802,18 @@
     {
       char *val = getenv (name);
 
-      if ((lcall ?: "")[0] != '\0' || val == NULL)
-	printf ("%s=\"%s\"\n", name,
-		(lcall ?: "")[0] ? lcall : (lang ?: "")[0] ? lang : "POSIX");
+      if (lcall[0] != '\0' || val == NULL)
+	print_assignment (name, lcall[0] ? lcall : lang[0] ? lang : "POSIX",
+			  true);
       else
-	printf ("%s=%s\n", name, val);
+	print_assignment (name, val, false);
     }
 
   /* LANG has to be the first value.  */
-  printf ("LANG=%s\n", lang);
+  print_assignment ("LANG", lang, false);
 
   if (language != NULL && getenv ("POSIXLY_CORRECT") == NULL)
-    printf ("LANGUAGE=%s\n", language);
+    print_assignment ("LANGUAGE", language, false);
 
   /* Now all categories in an unspecified order.  */
   for (cat_no = 0; cat_no < NCATEGORIES; ++cat_no)
@@ -798,7 +821,7 @@
       get_source (category[cat_no].name);
 
   /* The last is the LC_ALL value.  */
-  printf ("LC_ALL=%s\n", lcall ? : "");
+  print_assignment ("LC_ALL", lcall, false);
 }
 
 
