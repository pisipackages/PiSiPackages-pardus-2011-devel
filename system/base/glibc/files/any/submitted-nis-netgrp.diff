This assertion breaks applications if they redefine malloc/free functions,
malloc_usable_size may then report wrong values.  This is true for instance
with bash, whereas bash-static works fine because it does not use its own
wrapper functions.  See #322011 and merged bugs.

# DP: Dpatch author: Denis Barbier
# DP: Patch author: Denis Barbier
# DP: Upstream status: BZ692
# DP: Date: 2006-01-12


---
 nis/nss_nis/nis-netgrp.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

--- a/nis/nss_nis/nis-netgrp.c
+++ b/nis/nss_nis/nis-netgrp.c
@@ -72,7 +72,10 @@
 	 and the last byte is filled with NUL.  So we can simply
 	 use that buffer.  */
       assert (len >= 0);
-      assert (malloc_usable_size (netgrp->data) >= len + 1);
+      /* Call to malloc_usable_size disabled, this breaks if applications
+         redefine malloc/free with a different implementation.
+         This assert is always true, see yp_match.  */
+      /* assert (malloc_usable_size (netgrp->data) >= len + 1); */
       assert (netgrp->data[len] == '\0');
 
       netgrp->data_size = len;
