--- Makefile.am	2009-07-06 00:33:13.000000000 +0200
+++ Makefile.am.new	2010-03-09 00:47:48.000000000 +0100
@@ -9,7 +9,7 @@
 
 
 # "tests" is the gnulib unit test dir.
-SUBDIRS = gnulib tests build-aux lib find xargs locate doc po m4
+SUBDIRS = gnulib tests build-aux lib find xargs doc po m4
 
 ACLOCAL_AMFLAGS = -I gnulib/m4 -I m4
 
--- Makefile.in	2009-07-07 00:12:25.000000000 +0200
+++ Makefile.in.new	2010-03-09 00:48:35.000000000 +0100
@@ -736,7 +736,7 @@
 DISTCLEANFILES = tool-versions.txt
 
 # "tests" is the gnulib unit test dir.
-SUBDIRS = gnulib tests build-aux lib find xargs locate doc po m4
+SUBDIRS = gnulib tests build-aux lib find xargs doc po m4
 ACLOCAL_AMFLAGS = -I gnulib/m4 -I m4
 TESTFILE_SUFFIXES = .exp .xo .xe .xi
 all: config.h
--- doc/find.texi	2010-04-28 09:20:09.000000000 +0200
+++ doc/find.texi	2010-04-28 09:20:11.000000000 +0200
@@ -7,7 +7,6 @@
 @c %**end of header
 
 @include version.texi
-@include ../locate/dblocation.texi
 
 @iftex
 @finalout
@@ -570,8 +569,7 @@
 entries.
 
 Here is how to select which file name databases @code{locate}
-searches.  The default is system-dependent.  At the time this document
-was generated, the default was @file{@value{LOCATE_DB}}.
+searches.  The default is system-dependent.
 
 @table @code
 @item --database=@var{path}
@@ -2728,13 +2726,9 @@
 directories are indexed by each database file.
 
 The default location for the locate database depends on how findutils
-is built, but the findutils installation accompanying this manual uses
-the default location @file{@value{LOCATE_DB}}.
-
-If no database exists at @file{@value{LOCATE_DB}} but the user did not
-specify where to look (by using @samp{-d} or setting
-@code{LOCATE_PATH}), then @code{locate} will also check for a
-``secure'' database in @file{/var/lib/slocate/slocate.db}.
+is built.  If user did not specify where to look (by using @samp{-d}
+or setting @code{LOCATE_PATH}), then @code{locate} will also check for
+a ``secure'' database in @file{/var/lib/slocate/slocate.db}.
 
 @node Database Formats
 @section Database Formats
@@ -3213,8 +3207,7 @@
 
 @item --database=@var{path}
 @itemx -d @var{path}
-Instead of searching the default @code{locate} database
-@file{@value{LOCATE_DB}}, @code{locate} searches the file
+@code{locate} searches the file
 name databases in @var{path}, which is a colon-separated list of
 database file names.  You can also use the environment variable
 @code{LOCATE_PATH} to set the list of database files to search.  The
@@ -3399,8 +3392,7 @@
 is @file{nfs NFS proc}.
 
 @item --output=@var{dbfile}
-The database file to build.  The default is system-dependent, but
-when this document was formatted it was @file{@value{LOCATE_DB}}.
+The database file to build.
 
 @item --localuser=@var{user}
 The user to search the non-network directories as, using @code{su}.
@@ -5359,7 +5351,7 @@
 @section Error Messages From @code{locate}
 
 @table @samp
-@item warning: database @file{@value{LOCATE_DB}} is more than 8 days old
+@item warning: database @file{LOCATE_DB} is more than 8 days old
 The @code{locate} program relies on a database which is periodically
 built by the @code{updatedb} program.  That hasn't happened in a long
 time.  To fix this problem, run @code{updatedb} manually.  This can
@@ -5367,7 +5359,7 @@
 periodic ``cron'' task which normally does this doesn't get a chance
 to run.
 
-@item locate database @file{@value{LOCATE_DB}} is corrupt or invalid
+@item locate database @file{LOCATE_DB} is corrupt or invalid
 This should not happen.  Re-run @code{updatedb}.  If that works, but
 @code{locate} still produces this error, run @code{locate --version}
 and @code{updatedb --version}.  These should produce the same output.
