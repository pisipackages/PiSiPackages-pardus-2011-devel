Index: chkconfig-1.3.47/alternatives.c
===================================================================
--- chkconfig-1.3.47.orig/alternatives.c
+++ chkconfig-1.3.47/alternatives.c
@@ -43,7 +43,6 @@ struct alternative {
     int priority;
     struct linkSet master;
     struct linkSet * slaves;
-    char *initscript;
     int numSlaves;
 };
 
@@ -63,7 +62,6 @@ static int usage(int rc) {
     printf(_("alternatives version %s - Copyright (C) 2001 Red Hat, Inc.\n"), VERSION);
     printf(_("This may be freely redistributed under the terms of the GNU Public License.\n\n"));
     printf(_("usage: alternatives --install <link> <name> <path> <priority>\n"));
-    printf(_("                    [--initscript <service>]\n"));
     printf(_("                    [--slave <link> <name> <path>]*\n"));
     printf(_("       alternatives --remove <name> <path>\n"));
     printf(_("       alternatives --auto <name>\n"));
@@ -266,24 +264,11 @@ static int readConfig(struct alternative
 	line = parseLine(&buf);
 	set->alts[set->numAlts].priority = -1;
 	set->alts[set->numAlts].priority = strtol(line, &end, 0);
-	set->alts[set->numAlts].initscript = NULL;
 	if (!end || (end == line)) {
 	    fprintf(stderr, _("numeric priority expected in %s\n"), path);
 	    fprintf(stderr, _("unexpected line in %s: %s\n"), path, line);
 	    return 1;
 	}
-	if (end) {
-		char tmppath[500];
-		struct stat sbuf;
-		
-		while (*end && isspace(*end)) end++;
-		if (strlen(end)) {
-			snprintf(tmppath, 500, "/etc/init.d/%s", end);
-			if (!stat(tmppath, &sbuf)) {
-				set->alts[set->numAlts].initscript = strdup(end);
-			}
-		}
-	}
 
 	if (set->alts[set->numAlts].priority > set->alts[set->best].priority)
 	    set->best = set->numAlts;
@@ -463,9 +448,6 @@ static int writeState(struct alternative
 
     for (i = 0; i < set->numAlts; i++) {
 	fprintf(f, "%s\n", set->alts[i].master.target);
-	if (set->alts[i].initscript)
-		    fprintf(f, "%d %s\n", set->alts[i].priority, set->alts[i].initscript);
-	else
 		    fprintf(f, "%d\n", set->alts[i].priority);
 
 	for (j = 0; j < set->alts[i].numSlaves; j++) {
@@ -499,26 +481,6 @@ static int writeState(struct alternative
 	}
     }
 
-    if (!FL_TEST(flags)) {
-	    if (alt->initscript) {
-		    path = alloca(strlen("/sbin/chkconfig --add ") + strlen(alt->initscript) + 1);
-		    sprintf(path, "/sbin/chkconfig --add %s", alt->initscript);
-		    if (FL_VERBOSE(flags))
-			    printf(_("running %s\n"), path);
-		    system(path);
-	    }
-	    for (i = 0; i < set->numAlts ; i++) {
-		    struct alternative * tmpalt = set->alts + i;
-		    if (tmpalt != alt && tmpalt->initscript) {
-			    path = alloca(strlen("/sbin/chkconfig --del ") + strlen(tmpalt->initscript) + 1);
-			    sprintf(path, "/sbin/chkconfig --del %s", tmpalt->initscript);
-			    if (FL_VERBOSE(flags))
-				    printf(_("running %s\n"), path);
-			    system(path);
-		    }
-	    }
-    }
-
     return rc;
 }
 
@@ -864,13 +826,6 @@ int main(int argc, const char ** argv) {
 			     sizeof(*newAlt.slaves) * (newAlt.numSlaves + 1));
 	    setupLinkSet(newAlt.slaves + newAlt.numSlaves, &nextArg);
 	    newAlt.numSlaves++;
-	} else if (!strcmp(*nextArg, "--initscript")) {
-	    if (mode != MODE_UNKNOWN && mode != MODE_INSTALL) usage(2);
-	    nextArg++;
-	    
-	    if (!*nextArg) usage(2);
-	    newAlt.initscript = strdup(*nextArg);
-	    nextArg++;
 	} else if (!strcmp(*nextArg, "--remove")) {
 	    setupDoubleArg(&mode, &nextArg, MODE_REMOVE, &title, &target);
 	} else if (!strcmp(*nextArg, "--set")) {
