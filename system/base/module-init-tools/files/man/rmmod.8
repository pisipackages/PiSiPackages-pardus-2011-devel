.\\" auto-generated by docbook2man-spec $Revision: 1.2 $
.TH "RMMOD" "8" "2010-03-01" "" ""
.SH NAME
rmmod \- simple program to remove a module from the Linux Kernel
.SH SYNOPSIS
.sp
\fBrmmod\fR [ \fB-f\fR ]  [ \fB-w\fR ]  [ \fB-s\fR ]  [ \fB-v\fR ]  [ \fB\fImodulename\fB\fR ] 
.SH "DESCRIPTION"
.PP
\fBrmmod\fR is a trivial program to remove a
module (when module unloading support is provided) from the kernel.
Most users will want to use
\fBmodprobe\fR(8) with the \fB-r\fR option instead.
.SH "OPTIONS"
.TP
\fB-v --verbose\fR
Print messages about what the program is doing.
Usually \fBrmmod\fR prints messages
only if something goes wrong.
.TP
\fB-f --force\fR
This option can be extremely dangerous: it has no effect unless
CONFIG_MODULE_FORCE_UNLOAD was set when the kernel was
compiled. With this option, you can remove modules which are
being used, or which are not designed to be removed, or have
been marked as unsafe (see \fBlsmod\fR(8)).
.TP
\fB-w --wait\fR
Normally, \fBrmmod\fR will refuse to
unload modules which are in use. With this option,
\fBrmmod\fR will isolate the module, and
wait until the module is no longer used. Nothing new
will be able to use the module, but it's up to you to
make sure the current users eventually finish with it.
See \fBlsmod\fR(8)) for information on usage counts.
.TP
\fB-s --syslog\fR
Send errors to syslog instead of standard error.
.TP
\fB-V --version\fR
Show version of program and exit.
.SH "COPYRIGHT"
.PP
This manual page originally Copyright 2002, Rusty Russell, IBM
Corporation. Maintained by Jon Masters and others.
.SH "SEE ALSO"
.PP
\fBmodprobe\fR(8),
\fBinsmod\fR(8),
\fBlsmod\fR(8)
\fBmodinfo\fR(8)
