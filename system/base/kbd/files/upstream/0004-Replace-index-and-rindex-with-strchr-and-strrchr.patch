From d8a1fd94e11d7637465844c242e3583b9d5d68b9 Mon Sep 17 00:00:00 2001
From: Maarten ter Huurne <maarten@treewalker.org>
Date: Sun, 25 Jul 2010 17:06:42 +0400
Subject: [PATCH 4/6] Replace index() and rindex() with strchr() and strrchr()

Hi Alexey,

Attached is a patch for kbd-1.15.2. It replaces index() and rindex() with
strchr() and strrchr().

The man page of rindex says:
4.3BSD; marked as LEGACY in POSIX.1-2001. POSIX.1-2008 removes the
specifications of index() and rindex(), recommending strchr(3) and
strrchr(3) instead.

I tried to compile kbd for a uClibc based embedded system. First I got
compile errors about missing prototypes for index() and rindex(), which were
fixed by adding an include of <strings.h> (not <string.h> which was already
included). However, this only lead to a link error on index and rindex. It
seems uClibc, depending on some #defines, can either have no definition for
(r)index, a prototype (extern) declaration or a macro definition
substituting (r)index by str(r)chr.

I figured it was simpler to just replace index() and rindex() with strchr()
and strrchr() in the source code than to figure out what #defines are needed
to make it work. Most likely it is also more future proof. If you agree,
please apply the attached patch.

Signed-off-by: Maarten ter Huurne <maarten@treewalker.org>
Signed-off-by: Alexey Gladkov <gladkov.alexey@gmail.com>
---
 src/findfile.c   |    4 ++--
 src/loadkeys.c   |    6 +++---
 src/loadkeys.y   |    6 +++---
 src/resizecons.c |    2 +-
 src/version.h    |    2 +-
 5 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/src/findfile.c b/src/findfile.c
index 8f9b327..c050bd8 100644
--- a/src/findfile.c
+++ b/src/findfile.c
@@ -58,7 +58,7 @@ maybe_pipe_open(void) {
 	struct decompressor *dc;
 
 	if ((fp = fopen(pathname, "r")) != NULL) {
-	    t = rindex(pathname, '.');
+	    t = strrchr(pathname, '.');
 	    if (t) {
 		for (dc = &decompressors[0]; dc->cmd; dc++)
 		    if (strcmp(t, dc->ext) == 0) {
@@ -86,7 +86,7 @@ findfile_in_dir(char *fnam, char *dir, int recdepth, char **suf) {
 
 	ispipe = 0;
 
-	ff = index(fnam, '/');
+	ff = strchr(fnam, '/');
 	if (ff) {
 		fdir = xstrdup(fnam);
 		fdir[ff-fnam] = 0; 	/* caller guarantees fdir != "" */
diff --git a/src/loadkeys.c b/src/loadkeys.c
index 1d3d849..7c403d6 100644
--- a/src/loadkeys.c
+++ b/src/loadkeys.c
@@ -2345,7 +2345,7 @@ FILE *find_incl_file_near_fn(char *s, char *fn) {
 		return NULL;
 
 	t = xstrdup(fn);
-	te = rindex(t, '/');
+	te = strrchr(t, '/');
 	if (te) {
 		te[1] = 0;
 		include_dirpath2[0] = t;
@@ -2383,7 +2383,7 @@ FILE *find_standard_incl_file(char *s) {
 		     else if (strlen(filename) + n < sizeof(path)) {
 			  strcpy(path, filename);
 			  path[sizeof(path)-1] = 0;
-			  ptr = rindex(path, '/');
+			  ptr = strrchr(path, '/');
 			  if (ptr)
 			       ptr[1] = 0;
 			  strcat(path, buf);
@@ -2409,7 +2409,7 @@ FILE *find_incl_file(char *s) {
 		/* try user-specified path */
 		char *user_dir[2] = { 0, 0 };
 		while(ev) {
-			char *t = index(ev, ':');
+			char *t = strchr(ev, ':');
 			char sv = 0;
 			if (t) {
 				sv = *t;
diff --git a/src/loadkeys.y b/src/loadkeys.y
index 6f94a09..c8bb7cc 100644
--- a/src/loadkeys.y
+++ b/src/loadkeys.y
@@ -556,7 +556,7 @@ FILE *find_incl_file_near_fn(char *s, char *fn) {
 		return NULL;
 
 	t = xstrdup(fn);
-	te = rindex(t, '/');
+	te = strrchr(t, '/');
 	if (te) {
 		te[1] = 0;
 		include_dirpath2[0] = t;
@@ -594,7 +594,7 @@ FILE *find_standard_incl_file(char *s) {
 		     else if (strlen(filename) + n < sizeof(path)) {
 			  strcpy(path, filename);
 			  path[sizeof(path)-1] = 0;
-			  ptr = rindex(path, '/');
+			  ptr = strrchr(path, '/');
 			  if (ptr)
 			       ptr[1] = 0;
 			  strcat(path, buf);
@@ -620,7 +620,7 @@ FILE *find_incl_file(char *s) {
 		/* try user-specified path */
 		char *user_dir[2] = { 0, 0 };
 		while(ev) {
-			char *t = index(ev, ':');
+			char *t = strchr(ev, ':');
 			char sv = 0;
 			if (t) {
 				sv = *t;
diff --git a/src/resizecons.c b/src/resizecons.c
index e55894b..c0f85a5 100644
--- a/src/resizecons.c
+++ b/src/resizecons.c
@@ -140,7 +140,7 @@ main(int argc, char **argv) {
     	rr = atoi(argv[2]);
     }
     else
-    if (argc == 2 && (p = index(argv[1], 'x')) != 0)
+    if (argc == 2 && (p = strchr(argv[1], 'x')) != 0)
       rr = atoi(p+1);
     else if(argc == 3)
       rr = atoi(argv[2]);
diff --git a/src/version.h b/src/version.h
index 4fa6d29..7d10978 100644
--- a/src/version.h
+++ b/src/version.h
@@ -12,7 +12,7 @@ static inline void
 set_progname(char *name) {
 	char *p;
 
-	p = rindex(name, '/');
+	p = strrchr(name, '/');
 	progname = (p ? p+1 : name);
 }
 
-- 
1.7.3.4

